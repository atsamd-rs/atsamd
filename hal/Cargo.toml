[package]
name = "atsamd-hal"
version = "0.10.1"
authors = [
    "Wez Furlong <wez@wezfurlong.org>",
    "Paul Sajna <sajattack@gmail.com>",
    "Michael van Niekerk <mvniekerk@gmail.com>",
    "Jesse Braham <jesse@beta7.io>",
]
description = "HAL and Peripheral access API for ATSAMD11, ATSAMD21, ATSAMD51, ATSAME51, ATSAME53 and ATSAME54 microcontrollers"
keywords = ["no-std", "arm", "cortex-m", "embedded-hal"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/atsamd-rs/atsamd"
readme = "README.md"
documentation = "https://docs.rs/crate/atsamd-hal/"
edition = "2018"

[package.metadata.docs.rs]
features = ["samd21g", "samd21g-rt", "unproven", "usb"]

[dependencies]
bitfield = "0.13"
cortex-m = "0.6"
embedded-hal = "0.2"
nb = "0.1"
paste = "0.1"
rand_core = "0.5"
vcell = "0.1"
embedded-time = {git = "https://github.com/FluenTech/embedded-time"}

[dependencies.jlink_rtt]
optional = true
version = "0.2"

[dependencies.usb-device]
version = "0.2"
optional = true

[dependencies.void]
default-features = false
version = "1.0"

# Each of the supported chips is listed as an optional dependency here.
# This makes it available when the corresponding feature name is referenced.
# We use a feature named "samdFOO" to pull in the dependency named "atsamdFOO"
[dependencies.atsamd11c]
path = "../pac/atsamd11c"
version = "0.8"
optional = true

[dependencies.atsamd21e]
path = "../pac/atsamd21e"
version = "0.8"
optional = true

[dependencies.atsamd21g]
path = "../pac/atsamd21g"
version = "0.8"
optional = true

[dependencies.atsamd21j]
path = "../pac/atsamd21j"
version = "0.8"
optional = true

[dependencies.atsamd51g]
path = "../pac/atsamd51g"
version = "0.8"
optional = true

[dependencies.atsamd51j]
path = "../pac/atsamd51j"
version = "0.8"
optional = true

[dependencies.atsamd51n]
path = "../pac/atsamd51n"
version = "0.8"
optional = true

[dependencies.atsamd51p]
path = "../pac/atsamd51p"
version = "0.8"
optional = true

[dependencies.atsame51g]
path = "../pac/atsame51g"
version = "0.8"
optional = true

[dependencies.atsame51j]
path = "../pac/atsame51j"
version = "0.8"
optional = true

[dependencies.atsame51n]
path = "../pac/atsame51n"
version = "0.8"
optional = true

[dependencies.atsame53j]
path = "../pac/atsame53j"
version = "0.8"
optional = true

[dependencies.atsame53n]
path = "../pac/atsame53n"
version = "0.8"
optional = true

[dependencies.atsame54n]
path = "../pac/atsame54n"
version = "0.8"
optional = true

[dependencies.atsame54p]
path = "../pac/atsame54p"
version = "0.8"
optional = true

[features]
# This section lists our feature name to dependency mapping.  This are separated
# out so that the board support crates can reference a single feature name to
# select the appropriate chip, and to keep that separate from the dependency name
# for the `rt` feature below, which has to list out all possible optional deps.
# If we simply used feature names that matched the dependency names, enabling the
# rt feature would link all possible parts in and cause a linker error due to
# the high degree of similar symbols present in the various parts.
samd11 = [] # Convenience feature for shared configuration of samd11 chips.
samd11c = ["atsamd11c", "samd11"]
samd11c-rt = ["samd11c", "atsamd11c/rt"]
samd21 = [] # Convenience feature for shared configuration of samd21 chips.
samd21e = ["atsamd21e", "samd21"]
samd21e-rt = ["samd21e", "atsamd21e/rt"]
samd21g = ["atsamd21g", "samd21", "min-samd21g"]
samd21g-rt = ["samd21g", "atsamd21g/rt"]
samd21j = ["atsamd21j", "samd21", "min-samd21j"]
samd21j-rt = ["samd21j", "atsamd21j/rt"]
samd51 = [] # Convenience feature for shared configuration of samd51 chips.
samd51g = ["atsamd51g", "samd51"]
samd51g-rt = ["samd51g", "atsamd51g/rt"]
samd51j = ["atsamd51j", "samd51", "min-samd51j"]
samd51j-rt = ["samd51j", "atsamd51j/rt"]
samd51n = ["atsamd51n", "samd51", "min-samd51n"]
samd51n-rt = ["samd51n", "atsamd51n/rt"]
samd51p = ["atsamd51p", "samd51", "min-samd51p"]
samd51p-rt = ["samd51p", "atsamd51p/rt"]
same51 = [] # Convenience feature for shared configuration of same51 chips
same51g = ["atsame51g", "same51", "min-samd51p"]
same51g-rt = ["same51g", "atsame51g/rt"]
same51j = ["atsame51j", "same51", "min-samd51p"]
same51j-rt = ["same51j", "atsame51j/rt"]
same51n = ["atsame51n", "same51", "min-samd51p"]
same51n-rt = ["same51n", "atsame51n/rt"]
same53 = [] # Convenience feature for shared configuration of same53 chips
same53j = ["atsame53j", "same53", "min-samd51p"]
same53j-rt = ["same53j", "atsame53j/rt"]
same53n = ["atsame53n", "same53", "min-samd51p"]
same53n-rt = ["same53n", "atsame53n/rt"]
same54 = [] # Convenience feature for shared configuration of same54 chips
same54n = ["atsame54n", "same54", "min-samd51p"]
same54n-rt = ["same54n", "atsame54n/rt"]
same54p = ["atsame54p", "same54", "min-samd51p"]
same54p-rt = ["same54p", "atsame54p/rt"]
min-samd21g = []
min-samd21j = ["min-samd21g"]
min-samd51j = []
min-samd51n = ["min-samd51j"]
min-samd51p = ["min-samd51n"]
unproven = ["embedded-hal/unproven"]
use_rtt = ["jlink_rtt"]
use_uart_debug = []
usb = ["usb-device"]
