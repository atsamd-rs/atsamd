searchState.loadedDescShard("atsamd21g", 1, "Field <code>OVR8</code> writer - Channel 8 Overrun Interrupt Enable\nField <code>OVR9</code> reader - Channel 9 Overrun Interrupt Enable\nField <code>OVR9</code> writer - Channel 9 Overrun Interrupt Enable\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nBit 8 - Channel 0 Event Detection Interrupt Enable\nBit 8 - Channel 0 Event Detection Interrupt Enable\nBit 9 - Channel 1 Event Detection Interrupt Enable\nBit 9 - Channel 1 Event Detection Interrupt Enable\nBit 26 - Channel 10 Event Detection Interrupt Enable\nBit 26 - Channel 10 Event Detection Interrupt Enable\nBit 27 - Channel 11 Event Detection Interrupt Enable\nBit 27 - Channel 11 Event Detection Interrupt Enable\nBit 10 - Channel 2 Event Detection Interrupt Enable\nBit 10 - Channel 2 Event Detection Interrupt Enable\nBit 11 - Channel 3 Event Detection Interrupt Enable\nBit 11 - Channel 3 Event Detection Interrupt Enable\nBit 12 - Channel 4 Event Detection Interrupt Enable\nBit 12 - Channel 4 Event Detection Interrupt Enable\nBit 13 - Channel 5 Event Detection Interrupt Enable\nBit 13 - Channel 5 Event Detection Interrupt Enable\nBit 14 - Channel 6 Event Detection Interrupt Enable\nBit 14 - Channel 6 Event Detection Interrupt Enable\nBit 15 - Channel 7 Event Detection Interrupt Enable\nBit 15 - Channel 7 Event Detection Interrupt Enable\nBit 24 - Channel 8 Event Detection Interrupt Enable\nBit 24 - Channel 8 Event Detection Interrupt Enable\nBit 25 - Channel 9 Event Detection Interrupt Enable\nBit 25 - Channel 9 Event Detection Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel 0 Overrun Interrupt Enable\nBit 0 - Channel 0 Overrun Interrupt Enable\nBit 1 - Channel 1 Overrun Interrupt Enable\nBit 1 - Channel 1 Overrun Interrupt Enable\nBit 18 - Channel 10 Overrun Interrupt Enable\nBit 18 - Channel 10 Overrun Interrupt Enable\nBit 19 - Channel 11 Overrun Interrupt Enable\nBit 19 - Channel 11 Overrun Interrupt Enable\nBit 2 - Channel 2 Overrun Interrupt Enable\nBit 2 - Channel 2 Overrun Interrupt Enable\nBit 3 - Channel 3 Overrun Interrupt Enable\nBit 3 - Channel 3 Overrun Interrupt Enable\nBit 4 - Channel 4 Overrun Interrupt Enable\nBit 4 - Channel 4 Overrun Interrupt Enable\nBit 5 - Channel 5 Overrun Interrupt Enable\nBit 5 - Channel 5 Overrun Interrupt Enable\nBit 6 - Channel 6 Overrun Interrupt Enable\nBit 6 - Channel 6 Overrun Interrupt Enable\nBit 7 - Channel 7 Overrun Interrupt Enable\nBit 7 - Channel 7 Overrun Interrupt Enable\nBit 16 - Channel 8 Overrun Interrupt Enable\nBit 16 - Channel 8 Overrun Interrupt Enable\nBit 17 - Channel 9 Overrun Interrupt Enable\nBit 17 - Channel 9 Overrun Interrupt Enable\nField <code>EVD0</code> reader - Channel 0 Event Detection\nField <code>EVD0</code> writer - Channel 0 Event Detection\nField <code>EVD10</code> reader - Channel 10 Event Detection\nField <code>EVD10</code> writer - Channel 10 Event Detection\nField <code>EVD11</code> reader - Channel 11 Event Detection\nField <code>EVD11</code> writer - Channel 11 Event Detection\nField <code>EVD1</code> reader - Channel 1 Event Detection\nField <code>EVD1</code> writer - Channel 1 Event Detection\nField <code>EVD2</code> reader - Channel 2 Event Detection\nField <code>EVD2</code> writer - Channel 2 Event Detection\nField <code>EVD3</code> reader - Channel 3 Event Detection\nField <code>EVD3</code> writer - Channel 3 Event Detection\nField <code>EVD4</code> reader - Channel 4 Event Detection\nField <code>EVD4</code> writer - Channel 4 Event Detection\nField <code>EVD5</code> reader - Channel 5 Event Detection\nField <code>EVD5</code> writer - Channel 5 Event Detection\nField <code>EVD6</code> reader - Channel 6 Event Detection\nField <code>EVD6</code> writer - Channel 6 Event Detection\nField <code>EVD7</code> reader - Channel 7 Event Detection\nField <code>EVD7</code> writer - Channel 7 Event Detection\nField <code>EVD8</code> reader - Channel 8 Event Detection\nField <code>EVD8</code> writer - Channel 8 Event Detection\nField <code>EVD9</code> reader - Channel 9 Event Detection\nField <code>EVD9</code> writer - Channel 9 Event Detection\nInterrupt Flag Status and Clear\nField <code>OVR0</code> reader - Channel 0 Overrun\nField <code>OVR0</code> writer - Channel 0 Overrun\nField <code>OVR10</code> reader - Channel 10 Overrun\nField <code>OVR10</code> writer - Channel 10 Overrun\nField <code>OVR11</code> reader - Channel 11 Overrun\nField <code>OVR11</code> writer - Channel 11 Overrun\nField <code>OVR1</code> reader - Channel 1 Overrun\nField <code>OVR1</code> writer - Channel 1 Overrun\nField <code>OVR2</code> reader - Channel 2 Overrun\nField <code>OVR2</code> writer - Channel 2 Overrun\nField <code>OVR3</code> reader - Channel 3 Overrun\nField <code>OVR3</code> writer - Channel 3 Overrun\nField <code>OVR4</code> reader - Channel 4 Overrun\nField <code>OVR4</code> writer - Channel 4 Overrun\nField <code>OVR5</code> reader - Channel 5 Overrun\nField <code>OVR5</code> writer - Channel 5 Overrun\nField <code>OVR6</code> reader - Channel 6 Overrun\nField <code>OVR6</code> writer - Channel 6 Overrun\nField <code>OVR7</code> reader - Channel 7 Overrun\nField <code>OVR7</code> writer - Channel 7 Overrun\nField <code>OVR8</code> reader - Channel 8 Overrun\nField <code>OVR8</code> writer - Channel 8 Overrun\nField <code>OVR9</code> reader - Channel 9 Overrun\nField <code>OVR9</code> writer - Channel 9 Overrun\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nBit 8 - Channel 0 Event Detection\nBit 8 - Channel 0 Event Detection\nBit 9 - Channel 1 Event Detection\nBit 9 - Channel 1 Event Detection\nBit 26 - Channel 10 Event Detection\nBit 26 - Channel 10 Event Detection\nBit 27 - Channel 11 Event Detection\nBit 27 - Channel 11 Event Detection\nBit 10 - Channel 2 Event Detection\nBit 10 - Channel 2 Event Detection\nBit 11 - Channel 3 Event Detection\nBit 11 - Channel 3 Event Detection\nBit 12 - Channel 4 Event Detection\nBit 12 - Channel 4 Event Detection\nBit 13 - Channel 5 Event Detection\nBit 13 - Channel 5 Event Detection\nBit 14 - Channel 6 Event Detection\nBit 14 - Channel 6 Event Detection\nBit 15 - Channel 7 Event Detection\nBit 15 - Channel 7 Event Detection\nBit 24 - Channel 8 Event Detection\nBit 24 - Channel 8 Event Detection\nBit 25 - Channel 9 Event Detection\nBit 25 - Channel 9 Event Detection\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel 0 Overrun\nBit 0 - Channel 0 Overrun\nBit 1 - Channel 1 Overrun\nBit 1 - Channel 1 Overrun\nBit 18 - Channel 10 Overrun\nBit 18 - Channel 10 Overrun\nBit 19 - Channel 11 Overrun\nBit 19 - Channel 11 Overrun\nBit 2 - Channel 2 Overrun\nBit 2 - Channel 2 Overrun\nBit 3 - Channel 3 Overrun\nBit 3 - Channel 3 Overrun\nBit 4 - Channel 4 Overrun\nBit 4 - Channel 4 Overrun\nBit 5 - Channel 5 Overrun\nBit 5 - Channel 5 Overrun\nBit 6 - Channel 6 Overrun\nBit 6 - Channel 6 Overrun\nBit 7 - Channel 7 Overrun\nBit 7 - Channel 7 Overrun\nBit 16 - Channel 8 Overrun\nBit 16 - Channel 8 Overrun\nBit 17 - Channel 9 Overrun\nBit 17 - Channel 9 Overrun\nField <code>CHANNEL</code> reader - Channel Event Selection\nField <code>CHANNEL</code> writer - Channel Event Selection\nChannel Event Selection\nRegister <code>USER</code> reader\nField <code>USER</code> reader - User Multiplexer Selection\nUser Multiplexer\nField <code>USER</code> writer - User Multiplexer Selection\nRegister <code>USER</code> writer\nNo Channel Output Selected\n0: No Channel Output Selected\nBits 8:12 - Channel Event Selection\nBits 8:12 - Channel Event Selection\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo Channel Output Selected\nBits 0:4 - User Multiplexer Selection\nBits 0:4 - User Multiplexer Selection\nGet enumerated values variant\nCLKCTRL (rw) register accessor: Generic Clock Control\nCTRL (rw) register accessor: Control\nGENCTRL (rw) register accessor: Generic Clock Generator …\nGENDIV (rw) register accessor: Generic Clock Generator …\nRegister block\nSTATUS (r) register accessor: Status\nGeneric Clock Control\n0x02 - Generic Clock Control\nControl\n0x00 - Control\nReturns the argument unchanged.\nGeneric Clock Generator Control\n0x04 - Generic Clock Generator Control\nGeneric Clock Generator Division\n0x08 - Generic Clock Generator Division\nCalls <code>U::from(self)</code>.\nStatus\n0x01 - Status\n32: AC_ANA\n31: AC_DIG\n30: ADC\nGeneric Clock Control\nField <code>CLKEN</code> reader - Clock Enable\nField <code>CLKEN</code> writer - Clock Enable\n33: DAC\n0: DFLL48\n5: EIC\n7: EVSYS_0\n8: EVSYS_1\n17: EVSYS_10\n18: EVSYS_11\n9: EVSYS_2\n10: EVSYS_3\n11: EVSYS_4\n12: EVSYS_5\n13: EVSYS_6\n14: EVSYS_7\n15: EVSYS_8\n16: EVSYS_9\n1: FDPLL\n2: FDPLL32K\n0: Generic clock generator 0\n1: Generic clock generator 1\n2: Generic clock generator 2\n3: Generic clock generator 3\n4: Generic clock generator 4\n5: Generic clock generator 5\n6: Generic clock generator 6\n7: Generic clock generator 7\n8: Generic clock generator 8\nField <code>GEN</code> reader - Generic Clock Generator\nField <code>GEN</code> writer - Generic Clock Generator\nGeneric Clock Generator\n35: I2S_0\n36: I2S_1\nField <code>ID</code> reader - Generic Clock Selection ID\nField <code>ID</code> writer - Generic Clock Selection ID\nGeneric Clock Selection ID\nRegister <code>CLKCTRL</code> reader\n4: RTC\n20: SERCOM0_CORE\n21: SERCOM1_CORE\n22: SERCOM2_CORE\n23: SERCOM3_CORE\n24: SERCOM4_CORE\n25: SERCOM5_CORE\n19: SERCOMX_SLOW\n28: TC4_TC5\n29: TC6_TC7\n26: TCC0_TCC1\n27: TCC2_TC3\n6: USB\nRegister <code>CLKCTRL</code> writer\n3: WDT\nField <code>WRTLOCK</code> reader - Write Lock\nField <code>WRTLOCK</code> writer - Write Lock\nAC_ANA\nAC_DIG\nADC\nBit 14 - Clock Enable\nBit 14 - Clock Enable\nDAC\nDFLL48\nEIC\nEVSYS_0\nEVSYS_1\nEVSYS_10\nEVSYS_11\nEVSYS_2\nEVSYS_3\nEVSYS_4\nEVSYS_5\nEVSYS_6\nEVSYS_7\nEVSYS_8\nEVSYS_9\nFDPLL\nFDPLL32K\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGeneric clock generator 0\nGeneric clock generator 1\nGeneric clock generator 2\nGeneric clock generator 3\nGeneric clock generator 4\nGeneric clock generator 5\nGeneric clock generator 6\nGeneric clock generator 7\nGeneric clock generator 8\nBits 8:11 - Generic Clock Generator\nBits 8:11 - Generic Clock Generator\nI2S_0\nI2S_1\nBits 0:5 - Generic Clock Selection ID\nBits 0:5 - Generic Clock Selection ID\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAC_ANA\nAC_DIG\nADC\nDAC\nDFLL48\nEIC\nEVSYS_0\nEVSYS_1\nEVSYS_10\nEVSYS_11\nEVSYS_2\nEVSYS_3\nEVSYS_4\nEVSYS_5\nEVSYS_6\nEVSYS_7\nEVSYS_8\nEVSYS_9\nFDPLL\nFDPLL32K\nGeneric clock generator 0\nGeneric clock generator 1\nGeneric clock generator 2\nGeneric clock generator 3\nGeneric clock generator 4\nGeneric clock generator 5\nGeneric clock generator 6\nGeneric clock generator 7\nGeneric clock generator 8\nI2S_0\nI2S_1\nRTC\nSERCOM0_CORE\nSERCOM1_CORE\nSERCOM2_CORE\nSERCOM3_CORE\nSERCOM4_CORE\nSERCOM5_CORE\nSERCOMX_SLOW\nTC4_TC5\nTC6_TC7\nTCC0_TCC1\nTCC2_TC3\nUSB\nWDT\nRTC\nSERCOM0_CORE\nSERCOM1_CORE\nSERCOM2_CORE\nSERCOM3_CORE\nSERCOM4_CORE\nSERCOM5_CORE\nSERCOMX_SLOW\nTC4_TC5\nTC6_TC7\nTCC0_TCC1\nTCC2_TC3\nUSB\nGet enumerated values variant\nGet enumerated values variant\nWDT\nBit 15 - Write Lock\nBit 15 - Write Lock\nControl\nRegister <code>CTRL</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset\nBit 0 - Software Reset\n7: DFLL48M output\nField <code>DIVSEL</code> reader - Divide Selection\nField <code>DIVSEL</code> writer - Divide Selection\n8: DPLL96M output\n2: Generic clock generator 1 output\n1: Generator input pad\nGeneric Clock Generator Control\nField <code>GENEN</code> reader - Generic Clock Generator Enable\nField <code>GENEN</code> writer - Generic Clock Generator Enable\nField <code>ID</code> reader - Generic Clock Generator Selection\nField <code>ID</code> writer - Generic Clock Generator Selection\nField <code>IDC</code> reader - Improve Duty Cycle\nField <code>IDC</code> writer - Improve Duty Cycle\nField <code>OE</code> reader - Output Enable\nField <code>OE</code> writer - Output Enable\nField <code>OOV</code> reader - Output Off Value\nField <code>OOV</code> writer - Output Off Value\n4: OSC32K oscillator output\n6: OSC8M oscillator output\n3: OSCULP32K oscillator output\nRegister <code>GENCTRL</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SRC</code> reader - Source Select\nField <code>SRC</code> writer - Source Select\nSource Select\nRegister <code>GENCTRL</code> writer\n0: XOSC oscillator output\n5: XOSC32K oscillator output\nDFLL48M output\nBit 20 - Divide Selection\nBit 20 - Divide Selection\nDPLL96M output\nReturns the argument unchanged.\nReturns the argument unchanged.\nGeneric clock generator 1 output\nGenerator input pad\nBit 16 - Generic Clock Generator Enable\nBit 16 - Generic Clock Generator Enable\nBits 0:3 - Generic Clock Generator Selection\nBits 0:3 - Generic Clock Generator Selection\nBit 17 - Improve Duty Cycle\nBit 17 - Improve Duty Cycle\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDFLL48M output\nDPLL96M output\nGeneric clock generator 1 output\nGenerator input pad\nOSC32K oscillator output\nOSC8M oscillator output\nOSCULP32K oscillator output\nXOSC oscillator output\nXOSC32K oscillator output\nBit 19 - Output Enable\nBit 19 - Output Enable\nBit 18 - Output Off Value\nBit 18 - Output Off Value\nOSC32K oscillator output\nOSC8M oscillator output\nOSCULP32K oscillator output\nBit 21 - Run in Standby\nBit 21 - Run in Standby\nBits 8:12 - Source Select\nBits 8:12 - Source Select\nGet enumerated values variant\nXOSC oscillator output\nXOSC32K oscillator output\nField <code>DIV</code> reader - Division Factor\nField <code>DIV</code> writer - Division Factor\nGeneric Clock Generator Division\nField <code>ID</code> reader - Generic Clock Generator Selection\nField <code>ID</code> writer - Generic Clock Generator Selection\nRegister <code>GENDIV</code> reader\nRegister <code>GENDIV</code> writer\nBits 8:23 - Division Factor\nBits 8:23 - Division Factor\nReturns the argument unchanged.\nBits 0:3 - Generic Clock Generator Selection\nBits 0:3 - Generic Clock Generator Selection\nCalls <code>U::from(self)</code>.\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy Status\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy Status\nBit-wise field reader\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nField reader.\nRaw field type\nWrite field Proxy\nMarker for fields with fixed values\nSpecifies the register bits that are not changed if you …\nRegister reader.\nReset value of the register.\nMarker for field writers are safe to write in specified …\nMarker for field writers are safe to write in specified …\nMarker for field writers are safe to write in specified …\nRaw register type (<code>u8</code>, <code>u16</code>, <code>u32</code>, …)\nTrait implemented by readable registers to enable the <code>read</code> …\nThis structure provides volatile access to registers.\nRaw register type\nReset value of the register.\nMarker for register/field writers which can take any value …\nIs it safe to write any bits to register\nYou should check that value is allowed to pass to …\nRaw register type (<code>u8</code>, <code>u16</code>, <code>u32</code>, …).\nRaw field type (<code>u8</code>, <code>u16</code>, <code>u32</code>, …).\nRegister writer.\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nTrait implemented by writeable registers.\nSpecifies the register bits that are not changed if you …\nReturns the underlying memory address of register.\nValue of the field as raw bits.\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nReturns <code>true</code> if the bit is clear (0).\nReturns <code>true</code> if the bit is set (1).\nReads raw bits from register.\nWrites raw bits to the register.\nReads raw bits from field.\nWrites raw bits to the field\nClears the field bit\nClears the field bit\nClears the field bit by passing one\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMask for bits of width <code>WI</code>\nModifies the contents of the register by reading and then …\nField offset\nField offset\nField offset\nField offset\nField offset\nField offset\nField offset\nField offset\nMask for bits of width 1\nReads the contents of a <code>Readable</code> register.\nWrites the reset value to <code>Writable</code> register.\nReset value of the register.\nWrites raw bits to the register.\nWrites raw bits to the field\nWrites raw bits to the field\nWrites raw bits to the field\nWrites raw bits to the field\nSets the field bit\nSets the field bit\nSets the field bit by passing zero\nToggle the field bit by passing one\nToggle the field bit by passing zero\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nWrites bits to a <code>Writable</code> register.\nWrites 0 to a <code>Writable</code> register.\nPRAS (rw) register accessor: Priority A for Slave\nPRBS (rw) register accessor: Priority B for Slave\nRegister block\nSFR (rw) register accessor: Special Function\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPriority A for Slave\n0x80..0xc0 - Priority A for Slave\nIterator for array of: 0x80..0xc0 - Priority A for Slave\nPriority B for Slave\n0x84..0xc4 - Priority B for Slave\nIterator for array of: 0x84..0xc4 - Priority B for Slave\nSpecial Function\n0x110..0x150 - Special Function\nIterator for array of: 0x110..0x150 - Special Function\nPriority A for Slave\nRegister <code>PRAS%s</code> reader\nRegister <code>PRAS%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPriority B for Slave\nRegister <code>PRBS%s</code> reader\nRegister <code>PRBS%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>SFR%s</code> reader\nField <code>SFR</code> reader - Special Function Register\nSpecial Function\nField <code>SFR</code> writer - Special Function Register\nRegister <code>SFR%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Special Function Register\nBits 0:31 - Special Function Register\nCLKCTRL (rw) register accessor: Clock Unit n Control\nCTRLA (rw) register accessor: Control A\nDATA (rw) register accessor: Data n\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRegister block\nSERCTRL (rw) register accessor: Serializer n Control\nSYNCBUSY (r) register accessor: Synchronization Status\nClock Unit n Control\n0x04..0x0c - Clock Unit n Control\nIterator for array of: 0x04..0x0c - Clock Unit n Control\nControl A\n0x00 - Control A\nData n\n0x30..0x38 - Data n\nIterator for array of: 0x30..0x38 - Data n\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x0c - Interrupt Enable Clear\nInterrupt Enable Set\n0x10 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x14 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nSerializer n Control\n0x20..0x28 - Serializer n Control\nIterator for array of: 0x20..0x28 - Serializer n Control\nSynchronization Status\n0x18 - Synchronization Status\n2: Frame Sync Pulse is 1 Bit wide\nField <code>BITDELAY</code> reader - Data Delay from Frame Sync\nField <code>BITDELAY</code> writer - Data Delay from Frame Sync\nData Delay from Frame Sync\n3: Clock Unit n operates in Burst mode, with a 1-bit wide …\nClock Unit n Control\nField <code>FSINV</code> reader - Frame Sync Invert\nField <code>FSINV</code> writer - Frame Sync Invert\nField <code>FSOUTINV</code> reader - Frame Sync Output Invert\nField <code>FSOUTINV</code> writer - Frame Sync Output Invert\n1: FSn input pin is used as Frame Sync n source\nField <code>FSSEL</code> reader - Frame Sync Select\nField <code>FSSEL</code> writer - Frame Sync Select\nFrame Sync Select\nField <code>FSWIDTH</code> reader - Frame Sync Width\nField <code>FSWIDTH</code> writer - Frame Sync Width\nFrame Sync Width\n0: GCLK_I2S_n is used as Master Clock n source\n1: Frame Sync Pulse is half a Frame wide\n1: I2S (1 Bit Delay)\n0: Left Justified (0 Bit Delay)\n0: Divided Master Clock n is used as Serial Clock n source\nField <code>MCKDIV</code> reader - Master Clock Division Factor\nField <code>MCKDIV</code> writer - Master Clock Division Factor\nField <code>MCKEN</code> reader - Master Clock Enable\nField <code>MCKEN</code> writer - Master Clock Enable\nField <code>MCKOUTDIV</code> reader - Master Clock Output Division …\nField <code>MCKOUTDIV</code> writer - Master Clock Output Division …\nField <code>MCKOUTINV</code> reader - Master Clock Output Invert\nField <code>MCKOUTINV</code> writer - Master Clock Output Invert\n1: MCKn input pin is used as Master Clock n source\nField <code>MCKSEL</code> reader - Master Clock Select\nField <code>MCKSEL</code> writer - Master Clock Select\nMaster Clock Select\nField <code>NBSLOTS</code> reader - Number of Slots in Frame\nField <code>NBSLOTS</code> writer - Number of Slots in Frame\nRegister <code>CLKCTRL%s</code> reader\n0: Divided Serial Clock n is used as Frame Sync n source\nField <code>SCKOUTINV</code> reader - Serial Clock Output Invert\nField <code>SCKOUTINV</code> writer - Serial Clock Output Invert\n1: SCKn input pin is used as Serial Clock n source\nField <code>SCKSEL</code> reader - Serial Clock Select\nField <code>SCKSEL</code> writer - Serial Clock Select\nSerial Clock Select\n0: Frame Sync Pulse is 1 Slot wide (default for I2S …\nField <code>SLOTSIZE</code> reader - Slot Size\nField <code>SLOTSIZE</code> writer - Slot Size\nSlot Size\nRegister <code>CLKCTRL%s</code> writer\n16-bit Slot for Clock Unit n\n1: 16-bit Slot for Clock Unit n\n24-bit Slot for Clock Unit n\n2: 24-bit Slot for Clock Unit n\n32-bit Slot for Clock Unit n\n3: 32-bit Slot for Clock Unit n\n8-bit Slot for Clock Unit n\n0: 8-bit Slot for Clock Unit n\nFrame Sync Pulse is 1 Bit wide\nBit 7 - Data Delay from Frame Sync\nBit 7 - Data Delay from Frame Sync\nClock Unit n operates in Burst mode, with a 1-bit wide …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 11 - Frame Sync Invert\nBit 11 - Frame Sync Invert\nBit 29 - Frame Sync Output Invert\nBit 29 - Frame Sync Output Invert\nFSn input pin is used as Frame Sync n source\nBit 8 - Frame Sync Select\nBit 8 - Frame Sync Select\nBits 5:6 - Frame Sync Width\nBits 5:6 - Frame Sync Width\nGCLK_I2S_n is used as Master Clock n source\nFrame Sync Pulse is half a Frame wide\nI2S (1 Bit Delay)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n16-bit Slot for Clock Unit n\n24-bit Slot for Clock Unit n\n32-bit Slot for Clock Unit n\n8-bit Slot for Clock Unit n\nFrame Sync Pulse is 1 Bit wide\nClock Unit n operates in Burst mode, with a 1-bit wide …\nFSn input pin is used as Frame Sync n source\nGCLK_I2S_n is used as Master Clock n source\nFrame Sync Pulse is half a Frame wide\nI2S (1 Bit Delay)\nLeft Justified (0 Bit Delay)\nDivided Master Clock n is used as Serial Clock n source\nMCKn input pin is used as Master Clock n source\nDivided Serial Clock n is used as Frame Sync n source\nSCKn input pin is used as Serial Clock n source\nFrame Sync Pulse is 1 Slot wide (default for I2S protocol)\nLeft Justified (0 Bit Delay)\nBits 19:23 - Master Clock Division Factor\nBits 19:23 - Master Clock Division Factor\nDivided Master Clock n is used as Serial Clock n source\nBit 18 - Master Clock Enable\nBit 18 - Master Clock Enable\nBits 24:28 - Master Clock Output Division Factor\nBits 24:28 - Master Clock Output Division Factor\nBit 31 - Master Clock Output Invert\nBit 31 - Master Clock Output Invert\nMCKn input pin is used as Master Clock n source\nBit 16 - Master Clock Select\nBit 16 - Master Clock Select\nBits 2:4 - Number of Slots in Frame\nBits 2:4 - Number of Slots in Frame\nDivided Serial Clock n is used as Frame Sync n source\nBit 30 - Serial Clock Output Invert\nBit 30 - Serial Clock Output Invert\nSCKn input pin is used as Serial Clock n source\nBit 12 - Serial Clock Select\nBit 12 - Serial Clock Select\nFrame Sync Pulse is 1 Slot wide (default for I2S protocol)\nBits 0:1 - Slot Size\nBits 0:1 - Slot Size\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>CKEN0</code> reader - Clock Unit 0 Enable\nField <code>CKEN0</code> writer - Clock Unit 0 Enable\nField <code>CKEN1</code> reader - Clock Unit 1 Enable\nField <code>CKEN1</code> writer - Clock Unit 1 Enable\nControl A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nRegister <code>CTRLA</code> reader\nField <code>SEREN0</code> reader - Serializer 0 Enable\nField <code>SEREN0</code> writer - Serializer 0 Enable\nField <code>SEREN1</code> reader - Serializer 1 Enable\nField <code>SEREN1</code> writer - Serializer 1 Enable\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 2 - Clock Unit 0 Enable\nBit 2 - Clock Unit 0 Enable\nBit 3 - Clock Unit 1 Enable\nBit 3 - Clock Unit 1 Enable\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Serializer 0 Enable\nBit 4 - Serializer 0 Enable\nBit 5 - Serializer 1 Enable\nBit 5 - Serializer 1 Enable\nBit 0 - Software Reset\nBit 0 - Software Reset\nField <code>DATA</code> reader - Sample Data\nData n\nField <code>DATA</code> writer - Sample Data\nRegister <code>DATA%s</code> reader\nRegister <code>DATA%s</code> writer\nBits 0:31 - Sample Data\nBits 0:31 - Sample Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>RXOR0</code> reader - Receive Overrun 0 Interrupt Enable\nField <code>RXOR0</code> writer - Receive Overrun 0 Interrupt Enable\nField <code>RXOR1</code> reader - Receive Overrun 1 Interrupt Enable\nField <code>RXOR1</code> writer - Receive Overrun 1 Interrupt Enable\nField <code>RXRDY0</code> reader - Receive Ready 0 Interrupt Enable\nField <code>RXRDY0</code> writer - Receive Ready 0 Interrupt Enable\nField <code>RXRDY1</code> reader - Receive Ready 1 Interrupt Enable\nField <code>RXRDY1</code> writer - Receive Ready 1 Interrupt Enable\nField <code>TXRDY0</code> reader - Transmit Ready 0 Interrupt Enable\nField <code>TXRDY0</code> writer - Transmit Ready 0 Interrupt Enable\nField <code>TXRDY1</code> reader - Transmit Ready 1 Interrupt Enable\nField <code>TXRDY1</code> writer - Transmit Ready 1 Interrupt Enable\nField <code>TXUR0</code> reader - Transmit Underrun 0 Interrupt Enable\nField <code>TXUR0</code> writer - Transmit Underrun 0 Interrupt Enable\nField <code>TXUR1</code> reader - Transmit Underrun 1 Interrupt Enable\nField <code>TXUR1</code> writer - Transmit Underrun 1 Interrupt Enable\nRegister <code>INTENCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Receive Overrun 0 Interrupt Enable\nBit 4 - Receive Overrun 0 Interrupt Enable\nBit 5 - Receive Overrun 1 Interrupt Enable\nBit 5 - Receive Overrun 1 Interrupt Enable\nBit 0 - Receive Ready 0 Interrupt Enable\nBit 0 - Receive Ready 0 Interrupt Enable\nBit 1 - Receive Ready 1 Interrupt Enable\nBit 1 - Receive Ready 1 Interrupt Enable\nBit 8 - Transmit Ready 0 Interrupt Enable\nBit 8 - Transmit Ready 0 Interrupt Enable\nBit 9 - Transmit Ready 1 Interrupt Enable\nBit 9 - Transmit Ready 1 Interrupt Enable\nBit 12 - Transmit Underrun 0 Interrupt Enable\nBit 12 - Transmit Underrun 0 Interrupt Enable\nBit 13 - Transmit Underrun 1 Interrupt Enable\nBit 13 - Transmit Underrun 1 Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>RXOR0</code> reader - Receive Overrun 0 Interrupt Enable\nField <code>RXOR0</code> writer - Receive Overrun 0 Interrupt Enable\nField <code>RXOR1</code> reader - Receive Overrun 1 Interrupt Enable\nField <code>RXOR1</code> writer - Receive Overrun 1 Interrupt Enable\nField <code>RXRDY0</code> reader - Receive Ready 0 Interrupt Enable\nField <code>RXRDY0</code> writer - Receive Ready 0 Interrupt Enable\nField <code>RXRDY1</code> reader - Receive Ready 1 Interrupt Enable\nField <code>RXRDY1</code> writer - Receive Ready 1 Interrupt Enable\nField <code>TXRDY0</code> reader - Transmit Ready 0 Interrupt Enable\nField <code>TXRDY0</code> writer - Transmit Ready 0 Interrupt Enable\nField <code>TXRDY1</code> reader - Transmit Ready 1 Interrupt Enable\nField <code>TXRDY1</code> writer - Transmit Ready 1 Interrupt Enable\nField <code>TXUR0</code> reader - Transmit Underrun 0 Interrupt Enable\nField <code>TXUR0</code> writer - Transmit Underrun 0 Interrupt Enable\nField <code>TXUR1</code> reader - Transmit Underrun 1 Interrupt Enable\nField <code>TXUR1</code> writer - Transmit Underrun 1 Interrupt Enable\nRegister <code>INTENSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Receive Overrun 0 Interrupt Enable\nBit 4 - Receive Overrun 0 Interrupt Enable\nBit 5 - Receive Overrun 1 Interrupt Enable\nBit 5 - Receive Overrun 1 Interrupt Enable\nBit 0 - Receive Ready 0 Interrupt Enable\nBit 0 - Receive Ready 0 Interrupt Enable\nBit 1 - Receive Ready 1 Interrupt Enable\nBit 1 - Receive Ready 1 Interrupt Enable\nBit 8 - Transmit Ready 0 Interrupt Enable\nBit 8 - Transmit Ready 0 Interrupt Enable\nBit 9 - Transmit Ready 1 Interrupt Enable\nBit 9 - Transmit Ready 1 Interrupt Enable\nBit 12 - Transmit Underrun 0 Interrupt Enable\nBit 12 - Transmit Underrun 0 Interrupt Enable\nBit 13 - Transmit Underrun 1 Interrupt Enable\nBit 13 - Transmit Underrun 1 Interrupt Enable\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>RXOR0</code> reader - Receive Overrun 0\nField <code>RXOR0</code> writer - Receive Overrun 0\nField <code>RXOR1</code> reader - Receive Overrun 1\nField <code>RXOR1</code> writer - Receive Overrun 1\nField <code>RXRDY0</code> reader - Receive Ready 0\nField <code>RXRDY0</code> writer - Receive Ready 0\nField <code>RXRDY1</code> reader - Receive Ready 1\nField <code>RXRDY1</code> writer - Receive Ready 1\nField <code>TXRDY0</code> reader - Transmit Ready 0\nField <code>TXRDY0</code> writer - Transmit Ready 0\nField <code>TXRDY1</code> reader - Transmit Ready 1\nField <code>TXRDY1</code> writer - Transmit Ready 1\nField <code>TXUR0</code> reader - Transmit Underrun 0\nField <code>TXUR0</code> writer - Transmit Underrun 0\nField <code>TXUR1</code> reader - Transmit Underrun 1\nField <code>TXUR1</code> writer - Transmit Underrun 1\nRegister <code>INTFLAG</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Receive Overrun 0\nBit 4 - Receive Overrun 0\nBit 5 - Receive Overrun 1\nBit 5 - Receive Overrun 1\nBit 0 - Receive Ready 0\nBit 0 - Receive Ready 0\nBit 1 - Receive Ready 1\nBit 1 - Receive Ready 1\nBit 8 - Transmit Ready 0\nBit 8 - Transmit Ready 0\nBit 9 - Transmit Ready 1\nBit 9 - Transmit Ready 1\nBit 12 - Transmit Underrun 0\nBit 12 - Transmit Underrun 0\nBit 13 - Transmit Underrun 1\nBit 13 - Transmit Underrun 1\nField <code>BITREV</code> reader - Data Formatting Bit Reverse\nField <code>BITREV</code> writer - Data Formatting Bit Reverse\nData Formatting Bit Reverse\n0: Use Clock Unit 0\n1: Use Clock Unit 1\nField <code>CLKSEL</code> reader - Clock Unit Selection\nField <code>CLKSEL</code> writer - Clock Unit Selection\nClock Unit Selection\nField <code>DATASIZE</code> reader - Data Word Size\nField <code>DATASIZE</code> writer - Data Word Size\nData Word Size\nField <code>DMA</code> reader - Single or Multiple DMA Channels\nField <code>DMA</code> writer - Single or Multiple DMA Channels\nSingle or Multiple DMA Channels\nField <code>EXTEND</code> reader - Data Formatting Bit Extension\nField <code>EXTEND</code> writer - Data Formatting Bit Extension\nData Formatting Bit Extension\n3: Output Default Value is high impedance\n1: Data is left adjusted in slot\n1: Data is left adjusted in word\n3: Extend with Least Significant Bit\n1: Transfer Data Least Significant Bit (LSB) first\n1: Left channel data is duplicated to right channel\nField <code>MONO</code> reader - Mono Mode\nField <code>MONO</code> writer - Mono Mode\nMono Mode\n2: Extend with Most Significant Bit\n0: Transfer Data Most Significant Bit (MSB) first (default …\n1: One DMA channel per data channel\n1: Output Default Value is 1\n1: Extend with ones\n2: Receive one PDM data on each serial clock edge\nRegister <code>SERCTRL%s</code> reader\n0: Data is right adjusted in slot\n0: Data is right adjusted in word\n0: Receive\nField <code>RXLOOP</code> reader - Loop-back Test Mode\nField <code>RXLOOP</code> writer - Loop-back Test Mode\n1: Last data transmitted in case of underrun\nSerializer n Control\nField <code>SERMODE</code> reader - Serializer Mode\nField <code>SERMODE</code> writer - Serializer Mode\nSerializer Mode\n0: Single DMA channel\nField <code>SLOTADJ</code> reader - Data Slot Formatting Adjust\nField <code>SLOTADJ</code> writer - Data Slot Formatting Adjust\nData Slot Formatting Adjust\nField <code>SLOTDIS0</code> reader - Slot 0 Disabled for this Serializer\nField <code>SLOTDIS0</code> writer - Slot 0 Disabled for this Serializer\nField <code>SLOTDIS1</code> reader - Slot 1 Disabled for this Serializer\nField <code>SLOTDIS1</code> writer - Slot 1 Disabled for this Serializer\nField <code>SLOTDIS2</code> reader - Slot 2 Disabled for this Serializer\nField <code>SLOTDIS2</code> writer - Slot 2 Disabled for this Serializer\nField <code>SLOTDIS3</code> reader - Slot 3 Disabled for this Serializer\nField <code>SLOTDIS3</code> writer - Slot 3 Disabled for this Serializer\nField <code>SLOTDIS4</code> reader - Slot 4 Disabled for this Serializer\nField <code>SLOTDIS4</code> writer - Slot 4 Disabled for this Serializer\nField <code>SLOTDIS5</code> reader - Slot 5 Disabled for this Serializer\nField <code>SLOTDIS5</code> writer - Slot 5 Disabled for this Serializer\nField <code>SLOTDIS6</code> reader - Slot 6 Disabled for this Serializer\nField <code>SLOTDIS6</code> writer - Slot 6 Disabled for this Serializer\nField <code>SLOTDIS7</code> reader - Slot 7 Disabled for this Serializer\nField <code>SLOTDIS7</code> writer - Slot 7 Disabled for this Serializer\n0: Normal mode\n1: Transmit\nField <code>TXDEFAULT</code> reader - Line Default Line when Slot …\nField <code>TXDEFAULT</code> writer - Line Default Line when Slot …\nLine Default Line when Slot Disabled\nField <code>TXSAME</code> reader - Transmit Data when Underrun\nField <code>TXSAME</code> writer - Transmit Data when Underrun\nTransmit Data when Underrun\nRegister <code>SERCTRL%s</code> writer\nField <code>WORDADJ</code> reader - Data Word Formatting Adjust\nField <code>WORDADJ</code> writer - Data Word Formatting Adjust\nData Word Formatting Adjust\n0: Output Default Value is 0\n0: Zero data transmitted in case of underrun\n0: Extend with zeroes\n16 bits\n4: 16 bits\n16 bits compact stereo\n5: 16 bits compact stereo\n18 bits\n3: 18 bits\n20 bits\n2: 20 bits\n24 bits\n1: 24 bits\n32 bits\n0: 32 bits\n8 bits\n6: 8 bits\n8 bits compact stereo\n7: 8 bits compact stereo\nBit 15 - Data Formatting Bit Reverse\nBit 15 - Data Formatting Bit Reverse\nUse Clock Unit 0\nUse Clock Unit 1\nBit 5 - Clock Unit Selection\nBit 5 - Clock Unit Selection\nBits 8:10 - Data Word Size\nBits 8:10 - Data Word Size\nBit 25 - Single or Multiple DMA Channels\nBit 25 - Single or Multiple DMA Channels\nBits 13:14 - Data Formatting Bit Extension\nBits 13:14 - Data Formatting Bit Extension\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOutput Default Value is high impedance\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n16 bits\n16 bits compact stereo\n18 bits\n20 bits\n24 bits\n32 bits\n8 bits\n8 bits compact stereo\nUse Clock Unit 0\nUse Clock Unit 1\nOutput Default Value is high impedance\nData is left adjusted in slot\nData is left adjusted in word\nExtend with Least Significant Bit\nTransfer Data Least Significant Bit (LSB) first\nLeft channel data is duplicated to right channel\nExtend with Most Significant Bit\nTransfer Data Most Significant Bit (MSB) first (default …\nOne DMA channel per data channel\nOutput Default Value is 1\nExtend with ones\nReceive one PDM data on each serial clock edge\nData is right adjusted in slot\nData is right adjusted in word\nReceive\nLast data transmitted in case of underrun\nSingle DMA channel\nNormal mode\nTransmit\nOutput Default Value is 0\nZero data transmitted in case of underrun\nExtend with zeroes\nData is left adjusted in slot\nData is left adjusted in word\nExtend with Least Significant Bit\nTransfer Data Least Significant Bit (LSB) first\nBit 24 - Mono Mode\nBit 24 - Mono Mode\nLeft channel data is duplicated to right channel\nExtend with Most Significant Bit\nTransfer Data Most Significant Bit (MSB) first (default …\nOne DMA channel per data channel\nOutput Default Value is 1\nExtend with ones\nReceive one PDM data on each serial clock edge\nData is right adjusted in slot\nData is right adjusted in word\nReceive\nBit 26 - Loop-back Test Mode\nBit 26 - Loop-back Test Mode\nLast data transmitted in case of underrun\nBits 0:1 - Serializer Mode\nBits 0:1 - Serializer Mode\nSingle DMA channel\nBit 7 - Data Slot Formatting Adjust\nBit 7 - Data Slot Formatting Adjust\nBit 16 - Slot 0 Disabled for this Serializer\nBit 16 - Slot 0 Disabled for this Serializer\nBit 17 - Slot 1 Disabled for this Serializer\nBit 17 - Slot 1 Disabled for this Serializer\nBit 18 - Slot 2 Disabled for this Serializer\nBit 18 - Slot 2 Disabled for this Serializer\nBit 19 - Slot 3 Disabled for this Serializer\nBit 19 - Slot 3 Disabled for this Serializer\nBit 20 - Slot 4 Disabled for this Serializer\nBit 20 - Slot 4 Disabled for this Serializer\nBit 21 - Slot 5 Disabled for this Serializer\nBit 21 - Slot 5 Disabled for this Serializer\nBit 22 - Slot 6 Disabled for this Serializer\nBit 22 - Slot 6 Disabled for this Serializer\nBit 23 - Slot 7 Disabled for this Serializer\nBit 23 - Slot 7 Disabled for this Serializer\nNormal mode\nTransmit\nBits 2:3 - Line Default Line when Slot Disabled\nBits 2:3 - Line Default Line when Slot Disabled\nBit 4 - Transmit Data when Underrun\nBit 4 - Transmit Data when Underrun\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBit 12 - Data Word Formatting Adjust\nBit 12 - Data Word Formatting Adjust\nOutput Default Value is 0\nZero data transmitted in case of underrun\nExtend with zeroes\nField <code>CKEN0</code> reader - Clock Unit 0 Enable Synchronization …\nField <code>CKEN1</code> reader - Clock Unit 1 Enable Synchronization …\nField <code>DATA0</code> reader - Data 0 Synchronization Status\nField <code>DATA1</code> reader - Data 1 Synchronization Status\nField <code>ENABLE</code> reader - Enable Synchronization Status\nRegister <code>SYNCBUSY</code> reader\nField <code>SEREN0</code> reader - Serializer 0 Enable Synchronization …\nField <code>SEREN1</code> reader - Serializer 1 Enable Synchronization …\nField <code>SWRST</code> reader - Software Reset Synchronization Status\nSynchronization Status\nBit 2 - Clock Unit 0 Enable Synchronization Status\nBit 3 - Clock Unit 1 Enable Synchronization Status\nBit 8 - Data 0 Synchronization Status\nBit 9 - Data 1 Synchronization Status\nBit 1 - Enable Synchronization Status\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Serializer 0 Enable Synchronization Status\nBit 5 - Serializer 1 Enable Synchronization Status\nBit 0 - Software Reset Synchronization Status\nAUTHSTATUS (r) register accessor: MTB Authentication Status\nBASE (r) register accessor: MTB Base\nCID0 (r) register accessor: CoreSight\nCID1 (r) register accessor: CoreSight\nCID2 (r) register accessor: CoreSight\nCID3 (r) register accessor: CoreSight\nCLAIMCLR (rw) register accessor: MTB Claim Clear\nCLAIMSET (rw) register accessor: MTB Claim Set\nDEVARCH (r) register accessor: MTB Device Architecture\nDEVID (r) register accessor: MTB Device Configuration\nDEVTYPE (r) register accessor: MTB Device Type\nFLOW (rw) register accessor: MTB Flow\nITCTRL (rw) register accessor: MTB Integration Mode Control\nLOCKACCESS (rw) register accessor: MTB Lock Access\nLOCKSTATUS (r) register accessor: MTB Lock Status\nMASTER (rw) register accessor: MTB Master\nPID0 (r) register accessor: CoreSight\nPID1 (r) register accessor: CoreSight\nPID2 (r) register accessor: CoreSight\nPID3 (r) register accessor: CoreSight\nPID4 (r) register accessor: CoreSight\nPID5 (r) register accessor: CoreSight\nPID6 (r) register accessor: CoreSight\nPID7 (r) register accessor: CoreSight\nPOSITION (rw) register accessor: MTB Position\nRegister block\nMTB Authentication Status\n0xfb8 - MTB Authentication Status\nMTB Base\n0x0c - MTB Base\nCoreSight\n0xff0 - CoreSight\nCoreSight\n0xff4 - CoreSight\nCoreSight\n0xff8 - CoreSight\nCoreSight\n0xffc - CoreSight\nMTB Claim Clear\n0xfa4 - MTB Claim Clear\nMTB Claim Set\n0xfa0 - MTB Claim Set\nMTB Device Architecture\n0xfbc - MTB Device Architecture\nMTB Device Configuration\n0xfc8 - MTB Device Configuration\nMTB Device Type\n0xfcc - MTB Device Type\nMTB Flow\n0x08 - MTB Flow\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Integration Mode Control\n0xf00 - MTB Integration Mode Control\nMTB Lock Access\n0xfb0 - MTB Lock Access\nMTB Lock Status\n0xfb4 - MTB Lock Status\nMTB Master\n0x04 - MTB Master\nCoreSight\n0xfe0 - CoreSight\nCoreSight\n0xfe4 - CoreSight\nCoreSight\n0xfe8 - CoreSight\nCoreSight\n0xfec - CoreSight\nCoreSight\n0xfd0 - CoreSight\nCoreSight\n0xfd4 - CoreSight\nCoreSight\n0xfd8 - CoreSight\nCoreSight\n0xfdc - CoreSight\nMTB Position\n0x00 - MTB Position\nMTB Authentication Status\nRegister <code>AUTHSTATUS</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Base\nRegister <code>BASE</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>CID0</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>CID1</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>CID2</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>CID3</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Claim Clear\nRegister <code>CLAIMCLR</code> reader\nRegister <code>CLAIMCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Claim Set\nRegister <code>CLAIMSET</code> reader\nRegister <code>CLAIMSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Device Architecture\nRegister <code>DEVARCH</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Device Configuration\nRegister <code>DEVID</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Device Type\nRegister <code>DEVTYPE</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>AUTOHALT</code> reader - Auto Halt Request\nField <code>AUTOHALT</code> writer - Auto Halt Request\nField <code>AUTOSTOP</code> reader - Auto Stop Tracing\nField <code>AUTOSTOP</code> writer - Auto Stop Tracing\nMTB Flow\nRegister <code>FLOW</code> reader\nRegister <code>FLOW</code> writer\nField <code>WATERMARK</code> reader - Watermark value\nField <code>WATERMARK</code> writer - Watermark value\nBit 1 - Auto Halt Request\nBit 1 - Auto Halt Request\nBit 0 - Auto Stop Tracing\nBit 0 - Auto Stop Tracing\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 3:31 - Watermark value\nBits 3:31 - Watermark value\nMTB Integration Mode Control\nRegister <code>ITCTRL</code> reader\nRegister <code>ITCTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Lock Access\nRegister <code>LOCKACCESS</code> reader\nRegister <code>LOCKACCESS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Lock Status\nRegister <code>LOCKSTATUS</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EN</code> reader - Main Trace Enable\nField <code>EN</code> writer - Main Trace Enable\nField <code>HALTREQ</code> reader - Halt Request\nField <code>HALTREQ</code> writer - Halt Request\nField <code>MASK</code> reader - Maximum Value of the Trace Buffer in …\nField <code>MASK</code> writer - Maximum Value of the Trace Buffer in …\nMTB Master\nRegister <code>MASTER</code> reader\nField <code>RAMPRIV</code> reader - SRAM Privilege\nField <code>RAMPRIV</code> writer - SRAM Privilege\nField <code>SFRWPRIV</code> reader - Special Function Register Write …\nField <code>SFRWPRIV</code> writer - Special Function Register Write …\nField <code>TSTARTEN</code> reader - Trace Start Input Enable\nField <code>TSTARTEN</code> writer - Trace Start Input Enable\nField <code>TSTOPEN</code> reader - Trace Stop Input Enable\nField <code>TSTOPEN</code> writer - Trace Stop Input Enable\nRegister <code>MASTER</code> writer\nBit 31 - Main Trace Enable\nBit 31 - Main Trace Enable\nReturns the argument unchanged.\nBit 9 - Halt Request\nBit 9 - Halt Request\nCalls <code>U::from(self)</code>.\nBits 0:4 - Maximum Value of the Trace Buffer in SRAM\nBits 0:4 - Maximum Value of the Trace Buffer in SRAM\nBit 8 - SRAM Privilege\nBit 8 - SRAM Privilege\nBit 7 - Special Function Register Write Privilege\nBit 7 - Special Function Register Write Privilege\nBit 5 - Trace Start Input Enable\nBit 5 - Trace Start Input Enable\nBit 6 - Trace Stop Input Enable\nBit 6 - Trace Stop Input Enable\nCoreSight\nRegister <code>PID0</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID1</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID2</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID3</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID4</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID5</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID6</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID7</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>POINTER</code> reader - Trace Packet Location Pointer\nField <code>POINTER</code> writer - Trace Packet Location Pointer\nMTB Position\nRegister <code>POSITION</code> reader\nRegister <code>POSITION</code> writer\nField <code>WRAP</code> reader - Pointer Value Wraps\nField <code>WRAP</code> writer - Pointer Value Wraps\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 3:31 - Trace Packet Location Pointer\nBits 3:31 - Trace Packet Location Pointer\nBit 2 - Pointer Value Wraps\nBit 2 - Pointer Value Wraps\nADDR (rw) register accessor: Address\nCTRLA (rw) register accessor: Control A\nCTRLB (rw) register accessor: Control B\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nLOCK (rw) register accessor: Lock Section\nPARAM (rw) register accessor: NVM Parameter\nRegister block\nSTATUS (rw) register accessor: Status\nAddress\n0x1c - Address\nControl A\n0x00 - Control A\nControl B\n0x04 - Control B\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x0c - Interrupt Enable Clear\nInterrupt Enable Set\n0x10 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x14 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nLock Section\n0x20 - Lock Section\nNVM Parameter\n0x08 - NVM Parameter\nStatus\n0x18 - Status\nField <code>ADDR</code> reader - NVM Address\nAddress\nField <code>ADDR</code> writer - NVM Address\nRegister <code>ADDR</code> reader\nRegister <code>ADDR</code> writer\nBits 0:21 - NVM Address\nBits 0:21 - NVM Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMD</code> reader - Command\nField <code>CMD</code> writer - Command\nField <code>CMDEX</code> reader - Command Execution\nField <code>CMDEX</code> writer - Command Execution\nCommand Execution\nCommand\n67: Clears the power reduction mode.\nControl A\n5: Erase Auxiliary Row - Erases the auxiliary row …\n2: Erase Row - Erases the row addressed by the ADDR …\n70: Invalidates all cache lines.\n165: Execution Key\n64: Lock Region - Locks the region containing the address …\n68: Page Buffer Clear - Clears the page buffer.\nRegister <code>CTRLA</code> reader\n10: Security Flow Command\n66: Sets the power reduction mode.\n69: Set Security Bit - Sets the security bit by writing …\n65: Unlock Region - Unlocks the region containing the …\nRegister <code>CTRLA</code> writer\n6: Write Auxiliary Page - Writes the contents of the page …\n15: Write lockbits\n4: Write Page - Writes the contents of the page buffer to …\nBits 0:6 - Command\nBits 0:6 - Command\nBits 8:15 - Command Execution\nBits 8:15 - Command Execution\nClears the power reduction mode.\nErase Auxiliary Row - Erases the auxiliary row addressed …\nErase Row - Erases the row addressed by the ADDR register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvalidates all cache lines.\nClears the power reduction mode.\nErase Auxiliary Row - Erases the auxiliary row addressed …\nErase Row - Erases the row addressed by the ADDR register.\nInvalidates all cache lines.\nExecution Key\nLock Region - Locks the region containing the address …\nPage Buffer Clear - Clears the page buffer.\nSecurity Flow Command\nSets the power reduction mode.\nSet Security Bit - Sets the security bit by writing 0x00 …\nUnlock Region - Unlocks the region containing the address …\nWrite Auxiliary Page - Writes the contents of the page …\nWrite lockbits\nWrite Page - Writes the contents of the page buffer to the …\nExecution Key\nLock Region - Locks the region containing the address …\nPage Buffer Clear - Clears the page buffer.\nSecurity Flow Command\nSets the power reduction mode.\nSet Security Bit - Sets the security bit by writing 0x00 …\nUnlock Region - Unlocks the region containing the address …\nGet enumerated values variant\nGet enumerated values variant\nWrite Auxiliary Page - Writes the contents of the page …\nWrite lockbits\nWrite Page - Writes the contents of the page buffer to the …\nField <code>CACHEDIS</code> reader - Cache Disable\nField <code>CACHEDIS</code> writer - Cache Disable\nControl B\n2: The cache system ensures that a cache hit or miss takes …\n3: Auto power reduction disabled.\n2: Dual Auto Wait State\n1: Half Auto Wait State\n1: Reduces power consumption of the cache system, but …\nField <code>MANW</code> reader - Manual Write\nField <code>MANW</code> writer - Manual Write\n0: The NVM Controller (cache system) does not insert wait …\nRegister <code>CTRLB</code> reader\nField <code>READMODE</code> reader - NVMCTRL Read Mode\nField <code>READMODE</code> writer - NVMCTRL Read Mode\nNVMCTRL Read Mode\nField <code>RWS</code> reader - NVM Read Wait States\nField <code>RWS</code> writer - NVM Read Wait States\nNVM Read Wait States\n0: Single Auto Wait State\nField <code>SLEEPPRM</code> reader - Power Reduction Mode during Sleep\nField <code>SLEEPPRM</code> writer - Power Reduction Mode during Sleep\nPower Reduction Mode during Sleep\nRegister <code>CTRLB</code> writer\n0: NVM block enters low-power mode when entering sleep.NVM …\n1: NVM block enters low-power mode when entering sleep.NVM …\nBit 18 - Cache Disable\nBit 18 - Cache Disable\nThe cache system ensures that a cache hit or miss takes …\nAuto power reduction disabled.\nDual Auto Wait State\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHalf Auto Wait State\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe cache system ensures that a cache hit or miss takes …\nAuto power reduction disabled.\nDual Auto Wait State\nHalf Auto Wait State\nReduces power consumption of the cache system, but inserts …\nThe NVM Controller (cache system) does not insert wait …\nSingle Auto Wait State\nNVM block enters low-power mode when entering sleep.NVM …\nNVM block enters low-power mode when entering sleep.NVM …\nReduces power consumption of the cache system, but inserts …\nBit 7 - Manual Write\nBit 7 - Manual Write\nThe NVM Controller (cache system) does not insert wait …\nBits 16:17 - NVMCTRL Read Mode\nBits 16:17 - NVMCTRL Read Mode\nBits 1:4 - NVM Read Wait States\nBits 1:4 - NVM Read Wait States\nSingle Auto Wait State\nBits 8:9 - Power Reduction Mode during Sleep\nBits 8:9 - Power Reduction Mode during Sleep\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nNVM block enters low-power mode when entering sleep.NVM …\nNVM block enters low-power mode when entering sleep.NVM …\nField <code>ERROR</code> reader - Error Interrupt Enable\nField <code>ERROR</code> writer - Error Interrupt Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>READY</code> reader - NVM Ready Interrupt Enable\nField <code>READY</code> writer - NVM Ready Interrupt Enable\nRegister <code>INTENCLR</code> writer\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - NVM Ready Interrupt Enable\nBit 0 - NVM Ready Interrupt Enable\nField <code>ERROR</code> reader - Error Interrupt Enable\nField <code>ERROR</code> writer - Error Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>READY</code> reader - NVM Ready Interrupt Enable\nField <code>READY</code> writer - NVM Ready Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - NVM Ready Interrupt Enable\nBit 0 - NVM Ready Interrupt Enable\nField <code>ERROR</code> reader - Error\nField <code>ERROR</code> writer - Error\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>READY</code> reader - NVM Ready\nRegister <code>INTFLAG</code> writer\nBit 1 - Error\nBit 1 - Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - NVM Ready\nField <code>LOCK</code> reader - Region Lock Bits\nLock Section\nRegister <code>LOCK</code> reader\nRegister <code>LOCK</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Region Lock Bits\nField <code>NVMP</code> reader - NVM Pages\nNVM Parameter\nField <code>PSZ</code> reader - Page Size\nPage Size\nRegister <code>PARAM</code> reader\nRegister <code>PARAM</code> writer\n7: 1024 bytes\n4: 128 bytes\n1: 16 bytes\n5: 256 bytes\n2: 32 bytes\n6: 512 bytes\n3: 64 bytes\n0: 8 bytes\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1024 bytes\n128 bytes\n16 bytes\n256 bytes\n32 bytes\n512 bytes\n64 bytes\n8 bytes\nBits 0:15 - NVM Pages\nBits 16:18 - Page Size\nGet enumerated values variant\nField <code>LOAD</code> reader - NVM Page Buffer Active Loading\nField <code>LOAD</code> writer - NVM Page Buffer Active Loading\nField <code>LOCKE</code> reader - Lock Error Status\nField <code>LOCKE</code> writer - Lock Error Status\nField <code>NVME</code> reader - NVM Error\nField <code>NVME</code> writer - NVM Error\nField <code>PRM</code> reader - Power Reduction Mode\nField <code>PROGE</code> reader - Programming Error Status\nField <code>PROGE</code> writer - Programming Error Status\nRegister <code>STATUS</code> reader\nField <code>SB</code> reader - Security Bit Status\nStatus\nRegister <code>STATUS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - NVM Page Buffer Active Loading\nBit 1 - NVM Page Buffer Active Loading\nBit 3 - Lock Error Status\nBit 3 - Lock Error Status\nBit 4 - NVM Error\nBit 4 - NVM Error\nBit 0 - Power Reduction Mode\nBit 2 - Programming Error Status\nBit 2 - Programming Error Status\nBit 8 - Security Bit Status\nRegister block\nWPCLR (rw) register accessor: Write Protection Clear\nWPSET (rw) register accessor: Write Protection Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWrite Protection Clear\n0x00 - Write Protection Clear\nWrite Protection Set\n0x04 - Write Protection Set\nRegister <code>WPCLR</code> reader\nRegister <code>WPCLR</code> writer\nField <code>WP</code> reader - Write Protection Clear\nField <code>WP</code> writer - Write Protection Clear\nWrite Protection Clear\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 1:31 - Write Protection Clear\nBits 1:31 - Write Protection Clear\nRegister <code>WPSET</code> reader\nRegister <code>WPSET</code> writer\nField <code>WP</code> reader - Write Protection Set\nField <code>WP</code> writer - Write Protection Set\nWrite Protection Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 1:31 - Write Protection Set\nBits 1:31 - Write Protection Set\nAHBMASK (rw) register accessor: AHB Mask\nAPBAMASK (rw) register accessor: APBA Mask\nAPBASEL (rw) register accessor: APBA Clock Select\nAPBBMASK (rw) register accessor: APBB Mask\nAPBBSEL (rw) register accessor: APBB Clock Select\nAPBCMASK (rw) register accessor: APBC Mask\nAPBCSEL (rw) register accessor: APBC Clock Select\nCPUSEL (rw) register accessor: CPU Clock Select\nCTRL (rw) register accessor: Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRCAUSE (r) register accessor: Reset Cause\nRegister block\nSLEEP (rw) register accessor: Sleep Mode\nAHB Mask\n0x14 - AHB Mask\nAPBA Mask\n0x18 - APBA Mask\nAPBA Clock Select\n0x09 - APBA Clock Select\nAPBB Mask\n0x1c - APBB Mask\nAPBB Clock Select\n0x0a - APBB Clock Select\nAPBC Mask\n0x20 - APBC Mask\nAPBC Clock Select\n0x0b - APBC Clock Select\nCPU Clock Select\n0x08 - CPU Clock Select\nControl\n0x00 - Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x34 - Interrupt Enable Clear\nInterrupt Enable Set\n0x35 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x36 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nReset Cause\n0x38 - Reset Cause\nSleep Mode\n0x01 - Sleep Mode\nAHB Mask\nField <code>DMAC_</code> reader - DMAC AHB Clock Mask\nField <code>DMAC_</code> writer - DMAC AHB Clock Mask\nField <code>DSU_</code> reader - DSU AHB Clock Mask\nField <code>DSU_</code> writer - DSU AHB Clock Mask\nField <code>HPB0_</code> reader - HPB0 AHB Clock Mask\nField <code>HPB0_</code> writer - HPB0 AHB Clock Mask\nField <code>HPB1_</code> reader - HPB1 AHB Clock Mask\nField <code>HPB1_</code> writer - HPB1 AHB Clock Mask\nField <code>HPB2_</code> reader - HPB2 AHB Clock Mask\nField <code>HPB2_</code> writer - HPB2 AHB Clock Mask\nField <code>NVMCTRL_</code> reader - NVMCTRL AHB Clock Mask\nField <code>NVMCTRL_</code> writer - NVMCTRL AHB Clock Mask\nRegister <code>AHBMASK</code> reader\nField <code>USB_</code> reader - USB AHB Clock Mask\nField <code>USB_</code> writer - USB AHB Clock Mask\nRegister <code>AHBMASK</code> writer\nBit 5 - DMAC AHB Clock Mask\nBit 5 - DMAC AHB Clock Mask\nBit 3 - DSU AHB Clock Mask\nBit 3 - DSU AHB Clock Mask\nReturns the argument unchanged.\nBit 0 - HPB0 AHB Clock Mask\nBit 0 - HPB0 AHB Clock Mask\nBit 1 - HPB1 AHB Clock Mask\nBit 1 - HPB1 AHB Clock Mask\nBit 2 - HPB2 AHB Clock Mask\nBit 2 - HPB2 AHB Clock Mask\nCalls <code>U::from(self)</code>.\nBit 4 - NVMCTRL AHB Clock Mask\nBit 4 - NVMCTRL AHB Clock Mask\nBit 6 - USB AHB Clock Mask\nBit 6 - USB AHB Clock Mask\nAPBA Mask\nField <code>EIC_</code> reader - EIC APB Clock Enable\nField <code>EIC_</code> writer - EIC APB Clock Enable\nField <code>GCLK_</code> reader - GCLK APB Clock Enable\nField <code>GCLK_</code> writer - GCLK APB Clock Enable\nField <code>PAC0_</code> reader - PAC0 APB Clock Enable\nField <code>PAC0_</code> writer - PAC0 APB Clock Enable\nField <code>PM_</code> reader - PM APB Clock Enable\nField <code>PM_</code> writer - PM APB Clock Enable\nRegister <code>APBAMASK</code> reader\nField <code>RTC_</code> reader - RTC APB Clock Enable\nField <code>RTC_</code> writer - RTC APB Clock Enable\nField <code>SYSCTRL_</code> reader - SYSCTRL APB Clock Enable\nField <code>SYSCTRL_</code> writer - SYSCTRL APB Clock Enable\nRegister <code>APBAMASK</code> writer\nField <code>WDT_</code> reader - WDT APB Clock Enable\nField <code>WDT_</code> writer - WDT APB Clock Enable\nBit 6 - EIC APB Clock Enable\nBit 6 - EIC APB Clock Enable\nReturns the argument unchanged.\nBit 3 - GCLK APB Clock Enable\nBit 3 - GCLK APB Clock Enable\nCalls <code>U::from(self)</code>.\nBit 0 - PAC0 APB Clock Enable\nBit 0 - PAC0 APB Clock Enable\nBit 1 - PM APB Clock Enable\nBit 1 - PM APB Clock Enable\nBit 5 - RTC APB Clock Enable\nBit 5 - RTC APB Clock Enable\nBit 2 - SYSCTRL APB Clock Enable\nBit 2 - SYSCTRL APB Clock Enable\nBit 4 - WDT APB Clock Enable\nBit 4 - WDT APB Clock Enable\nField <code>APBADIV</code> reader - APBA Prescaler Selection\nField <code>APBADIV</code> writer - APBA Prescaler Selection\nAPBA Prescaler Selection\nAPBA Clock Select\n0: Divide by 1\n7: Divide by 128\n4: Divide by 16\n1: Divide by 2\n5: Divide by 32\n2: Divide by 4\n6: Divide by 64\n3: Divide by 8\nRegister <code>APBASEL</code> reader\nRegister <code>APBASEL</code> writer\nBits 0:2 - APBA Prescaler Selection\nBits 0:2 - APBA Prescaler Selection\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nGet enumerated values variant\nAPBB Mask\nField <code>DMAC_</code> reader - DMAC APB Clock Enable\nField <code>DMAC_</code> writer - DMAC APB Clock Enable\nField <code>DSU_</code> reader - DSU APB Clock Enable\nField <code>DSU_</code> writer - DSU APB Clock Enable\nField <code>HMATRIX_</code> reader - HMATRIX APB Clock Enable\nField <code>HMATRIX_</code> writer - HMATRIX APB Clock Enable\nField <code>NVMCTRL_</code> reader - NVMCTRL APB Clock Enable\nField <code>NVMCTRL_</code> writer - NVMCTRL APB Clock Enable\nField <code>PAC1_</code> reader - PAC1 APB Clock Enable\nField <code>PAC1_</code> writer - PAC1 APB Clock Enable\nField <code>PORT_</code> reader - PORT APB Clock Enable\nField <code>PORT_</code> writer - PORT APB Clock Enable\nRegister <code>APBBMASK</code> reader\nField <code>USB_</code> reader - USB APB Clock Enable\nField <code>USB_</code> writer - USB APB Clock Enable\nRegister <code>APBBMASK</code> writer\nBit 4 - DMAC APB Clock Enable\nBit 4 - DMAC APB Clock Enable\nBit 1 - DSU APB Clock Enable\nBit 1 - DSU APB Clock Enable\nReturns the argument unchanged.\nBit 6 - HMATRIX APB Clock Enable\nBit 6 - HMATRIX APB Clock Enable\nCalls <code>U::from(self)</code>.\nBit 2 - NVMCTRL APB Clock Enable\nBit 2 - NVMCTRL APB Clock Enable\nBit 0 - PAC1 APB Clock Enable\nBit 0 - PAC1 APB Clock Enable\nBit 3 - PORT APB Clock Enable\nBit 3 - PORT APB Clock Enable\nBit 5 - USB APB Clock Enable\nBit 5 - USB APB Clock Enable\nField <code>APBBDIV</code> reader - APBB Prescaler Selection\nField <code>APBBDIV</code> writer - APBB Prescaler Selection\nAPBB Prescaler Selection\nAPBB Clock Select\n0: Divide by 1\n7: Divide by 128\n4: Divide by 16\n1: Divide by 2\n5: Divide by 32\n2: Divide by 4\n6: Divide by 64\n3: Divide by 8\nRegister <code>APBBSEL</code> reader\nRegister <code>APBBSEL</code> writer\nBits 0:2 - APBB Prescaler Selection\nBits 0:2 - APBB Prescaler Selection\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nGet enumerated values variant\nField <code>AC_</code> reader - AC APB Clock Enable\nField <code>AC_</code> writer - AC APB Clock Enable\nField <code>ADC_</code> reader - ADC APB Clock Enable\nField <code>ADC_</code> writer - ADC APB Clock Enable\nAPBC Mask\nField <code>DAC_</code> reader - DAC APB Clock Enable\nField <code>DAC_</code> writer - DAC APB Clock Enable\nField <code>EVSYS_</code> reader - EVSYS APB Clock Enable\nField <code>EVSYS_</code> writer - EVSYS APB Clock Enable\nField <code>I2S_</code> reader - I2S APB Clock Enable\nField <code>I2S_</code> writer - I2S APB Clock Enable\nField <code>PAC2_</code> reader - PAC2 APB Clock Enable\nField <code>PAC2_</code> writer - PAC2 APB Clock Enable\nField <code>PTC_</code> reader - PTC APB Clock Enable\nField <code>PTC_</code> writer - PTC APB Clock Enable\nRegister <code>APBCMASK</code> reader\nField <code>SERCOM0_</code> reader - SERCOM0 APB Clock Enable\nField <code>SERCOM0_</code> writer - SERCOM0 APB Clock Enable\nField <code>SERCOM1_</code> reader - SERCOM1 APB Clock Enable\nField <code>SERCOM1_</code> writer - SERCOM1 APB Clock Enable\nField <code>SERCOM2_</code> reader - SERCOM2 APB Clock Enable\nField <code>SERCOM2_</code> writer - SERCOM2 APB Clock Enable\nField <code>SERCOM3_</code> reader - SERCOM3 APB Clock Enable\nField <code>SERCOM3_</code> writer - SERCOM3 APB Clock Enable\nField <code>SERCOM4_</code> reader - SERCOM4 APB Clock Enable\nField <code>SERCOM4_</code> writer - SERCOM4 APB Clock Enable\nField <code>SERCOM5_</code> reader - SERCOM5 APB Clock Enable\nField <code>SERCOM5_</code> writer - SERCOM5 APB Clock Enable\nField <code>TC3_</code> reader - TC3 APB Clock Enable\nField <code>TC3_</code> writer - TC3 APB Clock Enable\nField <code>TC4_</code> reader - TC4 APB Clock Enable\nField <code>TC4_</code> writer - TC4 APB Clock Enable\nField <code>TC5_</code> reader - TC5 APB Clock Enable\nField <code>TC5_</code> writer - TC5 APB Clock Enable\nField <code>TCC0_</code> reader - TCC0 APB Clock Enable\nField <code>TCC0_</code> writer - TCC0 APB Clock Enable\nField <code>TCC1_</code> reader - TCC1 APB Clock Enable\nField <code>TCC1_</code> writer - TCC1 APB Clock Enable\nField <code>TCC2_</code> reader - TCC2 APB Clock Enable\nField <code>TCC2_</code> writer - TCC2 APB Clock Enable\nRegister <code>APBCMASK</code> writer\nBit 17 - AC APB Clock Enable\nBit 17 - AC APB Clock Enable\nBit 16 - ADC APB Clock Enable\nBit 16 - ADC APB Clock Enable\nBit 18 - DAC APB Clock Enable\nBit 18 - DAC APB Clock Enable\nBit 1 - EVSYS APB Clock Enable\nBit 1 - EVSYS APB Clock Enable\nReturns the argument unchanged.\nBit 20 - I2S APB Clock Enable\nBit 20 - I2S APB Clock Enable\nCalls <code>U::from(self)</code>.\nBit 0 - PAC2 APB Clock Enable\nBit 0 - PAC2 APB Clock Enable\nBit 19 - PTC APB Clock Enable\nBit 19 - PTC APB Clock Enable\nBit 2 - SERCOM0 APB Clock Enable\nBit 2 - SERCOM0 APB Clock Enable\nBit 3 - SERCOM1 APB Clock Enable\nBit 3 - SERCOM1 APB Clock Enable\nBit 4 - SERCOM2 APB Clock Enable\nBit 4 - SERCOM2 APB Clock Enable\nBit 5 - SERCOM3 APB Clock Enable\nBit 5 - SERCOM3 APB Clock Enable\nBit 6 - SERCOM4 APB Clock Enable\nBit 6 - SERCOM4 APB Clock Enable\nBit 7 - SERCOM5 APB Clock Enable\nBit 7 - SERCOM5 APB Clock Enable\nBit 11 - TC3 APB Clock Enable\nBit 11 - TC3 APB Clock Enable\nBit 12 - TC4 APB Clock Enable\nBit 12 - TC4 APB Clock Enable\nBit 13 - TC5 APB Clock Enable\nBit 13 - TC5 APB Clock Enable\nBit 8 - TCC0 APB Clock Enable\nBit 8 - TCC0 APB Clock Enable\nBit 9 - TCC1 APB Clock Enable\nBit 9 - TCC1 APB Clock Enable\nBit 10 - TCC2 APB Clock Enable\nBit 10 - TCC2 APB Clock Enable\nField <code>APBCDIV</code> reader - APBC Prescaler Selection\nField <code>APBCDIV</code> writer - APBC Prescaler Selection\nAPBC Prescaler Selection\nAPBC Clock Select\n0: Divide by 1\n7: Divide by 128\n4: Divide by 16\n1: Divide by 2\n5: Divide by 32\n2: Divide by 4\n6: Divide by 64\n3: Divide by 8\nRegister <code>APBCSEL</code> reader\nRegister <code>APBCSEL</code> writer\nBits 0:2 - APBC Prescaler Selection\nBits 0:2 - APBC Prescaler Selection\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nGet enumerated values variant\nField <code>CPUDIV</code> reader - CPU Prescaler Selection\nField <code>CPUDIV</code> writer - CPU Prescaler Selection\nCPU Prescaler Selection\nCPU Clock Select\n0: Divide by 1\n7: Divide by 128\n4: Divide by 16\n1: Divide by 2\n5: Divide by 32\n2: Divide by 4\n6: Divide by 64\n3: Divide by 8\nRegister <code>CPUSEL</code> reader\nRegister <code>CPUSEL</code> writer\nBits 0:2 - CPU Prescaler Selection\nBits 0:2 - CPU Prescaler Selection\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nGet enumerated values variant\nControl\nRegister <code>CTRL</code> reader\nRegister <code>CTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CKRDY</code> reader - Clock Ready Interrupt Enable\nField <code>CKRDY</code> writer - Clock Ready Interrupt Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nBit 0 - Clock Ready Interrupt Enable\nBit 0 - Clock Ready Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CKRDY</code> reader - Clock Ready Interrupt Enable\nField <code>CKRDY</code> writer - Clock Ready Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nBit 0 - Clock Ready Interrupt Enable\nBit 0 - Clock Ready Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CKRDY</code> reader - Clock Ready\nField <code>CKRDY</code> writer - Clock Ready\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nBit 0 - Clock Ready\nBit 0 - Clock Ready\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BOD12</code> reader - Brown Out 12 Detector Reset\nField <code>BOD33</code> reader - Brown Out 33 Detector Reset\nField <code>EXT</code> reader - External Reset\nField <code>POR</code> reader - Power On Reset\nRegister <code>RCAUSE</code> reader\nReset Cause\nField <code>SYST</code> reader - System Reset Request\nField <code>WDT</code> reader - Watchdog Reset\nBit 1 - Brown Out 12 Detector Reset\nBit 2 - Brown Out 33 Detector Reset\nBit 4 - External Reset\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Power On Reset\nBit 6 - System Reset Request\nBit 5 - Watchdog Reset\n1: The CPU and AHB clock domains are stopped\n2: The CPU, AHB and APB clock domains are stopped\n0: The CPU clock domain is stopped\nField <code>IDLE</code> reader - Idle Mode Configuration\nField <code>IDLE</code> writer - Idle Mode Configuration\nIdle Mode Configuration\nRegister <code>SLEEP</code> reader\nSleep Mode\nRegister <code>SLEEP</code> writer\nThe CPU and AHB clock domains are stopped\nThe CPU, AHB and APB clock domains are stopped\nThe CPU clock domain is stopped\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:1 - Idle Mode Configuration\nBits 0:1 - Idle Mode Configuration\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe CPU and AHB clock domains are stopped\nThe CPU, AHB and APB clock domains are stopped\nThe CPU clock domain is stopped\nGet enumerated values variant\nCTRL (rw) register accessor: Control\nDIR (rw) register accessor: Data Direction\nDIRCLR (rw) register accessor: Data Direction Clear\nDIRSET (rw) register accessor: Data Direction Set\nDIRTGL (rw) register accessor: Data Direction Toggle\nIN (r) register accessor: Data Input Value\nOUT (rw) register accessor: Data Output Value\nOUTCLR (rw) register accessor: Data Output Value Clear\nOUTSET (rw) register accessor: Data Output Value Set\nOUTTGL (rw) register accessor: Data Output Value Toggle\nPINCFG0_ (rw) register accessor: Pin Configuration n - …\nPMUX0_ (rw) register accessor: Peripheral Multiplexing n - …\nRegister block\nWRCONFIG (w) register accessor: Write Configuration\nControl\n0x24..0x2c - Control\nIterator for array of: 0x24..0x2c - Control\nData Direction\n0x00..0x08 - Data Direction\nIterator for array of: 0x00..0x08 - Data Direction\nData Direction Clear\n0x04..0x0c - Data Direction Clear\nIterator for array of: 0x04..0x0c - Data Direction Clear\nData Direction Set\n0x08..0x10 - Data Direction Set\nIterator for array of: 0x08..0x10 - Data Direction Set\nData Direction Toggle\n0x0c..0x14 - Data Direction Toggle\nIterator for array of: 0x0c..0x14 - Data Direction Toggle\nReturns the argument unchanged.\nData Input Value\n0x20..0x28 - Data Input Value\nIterator for array of: 0x20..0x28 - Data Input Value\nCalls <code>U::from(self)</code>.\nData Output Value\n0x10..0x18 - Data Output Value\nIterator for array of: 0x10..0x18 - Data Output Value\nData Output Value Clear\n0x14..0x1c - Data Output Value Clear\nIterator for array of: 0x14..0x1c - Data Output Value Clear\nData Output Value Set\n0x18..0x20 - Data Output Value Set\nIterator for array of: 0x18..0x20 - Data Output Value Set\nData Output Value Toggle\n0x1c..0x24 - Data Output Value Toggle\nIterator for array of: 0x1c..0x24 - Data Output Value …\nPin Configuration n - Group 0\n0x40..0x60 - Pin Configuration n - Group 0\nIterator for array of: 0x40..0x60 - Pin Configuration n - …\n0xc0..0xe0 - Pin Configuration n - Group 1\nIterator for array of: 0xc0..0xe0 - Pin Configuration n - …\nPeripheral Multiplexing n - Group 0\n0x30..0x40 - Peripheral Multiplexing n - Group 0\nIterator for array of: 0x30..0x40 - Peripheral …\n0xb0..0xc0 - Peripheral Multiplexing n - Group 1\nIterator for array of: 0xb0..0xc0 - Peripheral …\nWrite Configuration\n0x28..0x30 - Write Configuration\nIterator for array of: 0x28..0x30 - Write Configuration\nControl\nRegister <code>CTRL%s</code> reader\nField <code>SAMPLING</code> writer - Input Sampling Mode\nRegister <code>CTRL%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Input Sampling Mode\nField <code>DIR</code> reader - Port Data Direction\nData Direction\nField <code>DIR</code> writer - Port Data Direction\nRegister <code>DIR%s</code> reader\nRegister <code>DIR%s</code> writer\nBits 0:31 - Port Data Direction\nBits 0:31 - Port Data Direction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRCLR</code> reader - Port Data Direction Clear\nData Direction Clear\nField <code>DIRCLR</code> writer - Port Data Direction Clear\nRegister <code>DIRCLR%s</code> reader\nRegister <code>DIRCLR%s</code> writer\nBits 0:31 - Port Data Direction Clear\nBits 0:31 - Port Data Direction Clear\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRSET</code> reader - Port Data Direction Set\nData Direction Set\nField <code>DIRSET</code> writer - Port Data Direction Set\nRegister <code>DIRSET%s</code> reader\nRegister <code>DIRSET%s</code> writer\nBits 0:31 - Port Data Direction Set\nBits 0:31 - Port Data Direction Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRTGL</code> reader - Port Data Direction Toggle\nData Direction Toggle\nField <code>DIRTGL</code> writer - Port Data Direction Toggle\nRegister <code>DIRTGL%s</code> reader\nRegister <code>DIRTGL%s</code> writer\nBits 0:31 - Port Data Direction Toggle\nBits 0:31 - Port Data Direction Toggle\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>IN</code> reader - Port Data Input Value\nData Input Value\nRegister <code>IN%s</code> reader\nReturns the argument unchanged.\nBits 0:31 - Port Data Input Value\nCalls <code>U::from(self)</code>.\nField <code>OUT</code> reader - Port Data Output Value\nData Output Value\nField <code>OUT</code> writer - Port Data Output Value\nRegister <code>OUT%s</code> reader\nRegister <code>OUT%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Port Data Output Value\nBits 0:31 - Port Data Output Value\nField <code>OUTCLR</code> reader - Port Data Output Value Clear\nData Output Value Clear\nField <code>OUTCLR</code> writer - Port Data Output Value Clear\nRegister <code>OUTCLR%s</code> reader\nRegister <code>OUTCLR%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Port Data Output Value Clear\nBits 0:31 - Port Data Output Value Clear\nField <code>OUTSET</code> reader - Port Data Output Value Set\nData Output Value Set\nField <code>OUTSET</code> writer - Port Data Output Value Set\nRegister <code>OUTSET%s</code> reader\nRegister <code>OUTSET%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Port Data Output Value Set\nBits 0:31 - Port Data Output Value Set\nField <code>OUTTGL</code> reader - Port Data Output Value Toggle\nData Output Value Toggle\nField <code>OUTTGL</code> writer - Port Data Output Value Toggle\nRegister <code>OUTTGL%s</code> reader\nRegister <code>OUTTGL%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Port Data Output Value Toggle\nBits 0:31 - Port Data Output Value Toggle\nField <code>DRVSTR</code> reader - Output Driver Strength Selection\nField <code>DRVSTR</code> writer - Output Driver Strength Selection\nField <code>INEN</code> reader - Input Enable\nField <code>INEN</code> writer - Input Enable\nPin Configuration n - Group 0\nField <code>PMUXEN</code> reader - Peripheral Multiplexer Enable\nField <code>PMUXEN</code> writer - Peripheral Multiplexer Enable\nField <code>PULLEN</code> reader - Pull Enable\nField <code>PULLEN</code> writer - Pull Enable\nRegister <code>PINCFG0_%s</code> reader\nRegister <code>PINCFG0_%s</code> writer\nBit 6 - Output Driver Strength Selection\nBit 6 - Output Driver Strength Selection\nReturns the argument unchanged.\nBit 1 - Input Enable\nBit 1 - Input Enable\nCalls <code>U::from(self)</code>.\nBit 0 - Peripheral Multiplexer Enable\nBit 0 - Peripheral Multiplexer Enable\nBit 2 - Pull Enable\nBit 2 - Pull Enable\n0: Peripheral function A selected\n0: Peripheral function A selected\n1: Peripheral function B selected\n1: Peripheral function B selected\n2: Peripheral function C selected\n2: Peripheral function C selected\n3: Peripheral function D selected\n3: Peripheral function D selected\n4: Peripheral function E selected\n4: Peripheral function E selected\n5: Peripheral function F selected\n5: Peripheral function F selected\n6: Peripheral function G selected\n6: Peripheral function G selected\n7: Peripheral function H selected\n7: Peripheral function H selected\nPeripheral Multiplexing n - Group 0\nField <code>PMUXE</code> reader - Peripheral Multiplexing Even\nField <code>PMUXE</code> writer - Peripheral Multiplexing Even\nPeripheral Multiplexing Even\nField <code>PMUXO</code> reader - Peripheral Multiplexing Odd\nField <code>PMUXO</code> writer - Peripheral Multiplexing Odd\nPeripheral Multiplexing Odd\nRegister <code>PMUX0_%s</code> reader\nRegister <code>PMUX0_%s</code> writer\nPeripheral function A selected\nPeripheral function A selected\nPeripheral function B selected\nPeripheral function B selected\nPeripheral function C selected\nPeripheral function C selected\nPeripheral function D selected\nPeripheral function D selected\nPeripheral function E selected\nPeripheral function E selected\nPeripheral function F selected\nPeripheral function F selected\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPeripheral function G selected\nPeripheral function G selected\nPeripheral function H selected\nPeripheral function H selected\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPeripheral function A selected\nPeripheral function A selected\nPeripheral function B selected\nPeripheral function B selected\nPeripheral function C selected\nPeripheral function C selected\nPeripheral function D selected\nPeripheral function D selected\nPeripheral function E selected\nPeripheral function E selected\nPeripheral function F selected\nPeripheral function F selected\nPeripheral function G selected\nPeripheral function G selected\nPeripheral function H selected\nPeripheral function H selected\nBits 0:3 - Peripheral Multiplexing Even\nBits 0:3 - Peripheral Multiplexing Even\nBits 4:7 - Peripheral Multiplexing Odd\nBits 4:7 - Peripheral Multiplexing Odd\nGet enumerated values variant\nGet enumerated values variant\nField <code>DRVSTR</code> writer - Output Driver Strength Selection\nField <code>HWSEL</code> writer - Half-Word Select\nField <code>INEN</code> writer - Input Enable\nField <code>PINMASK</code> writer - Pin Mask for Multiple Pin …\nField <code>PMUX</code> writer - Peripheral Multiplexing\nField <code>PMUXEN</code> writer - Peripheral Multiplexer Enable\nField <code>PULLEN</code> writer - Pull Enable\nRegister <code>WRCONFIG%s</code> writer\nWrite Configuration\nField <code>WRPINCFG</code> writer - Write PINCFG\nField <code>WRPMUX</code> writer - Write PMUX\nBit 22 - Output Driver Strength Selection\nReturns the argument unchanged.\nBit 31 - Half-Word Select\nBit 17 - Input Enable\nCalls <code>U::from(self)</code>.\nBits 0:15 - Pin Mask for Multiple Pin Configuration\nBits 24:27 - Peripheral Multiplexing\nBit 16 - Peripheral Multiplexer Enable\nBit 18 - Pull Enable\nBit 30 - Write PINCFG\nBit 28 - Write PMUX\n32-bit Counter with Single 32-bit Compare\n16-bit Counter with Two 16-bit Compares\nClock/Calendar with Alarm\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCluster 32-bit Counter with Single 32-bit Compare\n0x00..0x1c - 32-bit Counter with Single 32-bit Compare\nCluster 16-bit Counter with Two 16-bit Compares\n0x00..0x1c - 16-bit Counter with Two 16-bit Compares\nCluster Clock/Calendar with Alarm\n0x00..0x1d - Clock/Calendar with Alarm\nCOMP (rw) register accessor: MODE0 Compare n Value\nCOUNT (rw) register accessor: MODE0 Counter Value\nCTRL (rw) register accessor: MODE0 Control\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE0 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nINTENCLR (rw) register accessor: MODE0 Interrupt Enable …\nINTENSET (rw) register accessor: MODE0 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE0 Interrupt Flag …\n32-bit Counter with Single 32-bit Compare\nREADREQ (rw) register accessor: Read Request\nSTATUS (rw) register accessor: Status\nMODE0 Compare n Value\n0x18 - MODE0 Compare n Value\nIterator for array of: 0x18 - MODE0 Compare n Value\nMODE0 Counter Value\n0x10 - MODE0 Counter Value\nMODE0 Control\n0x00 - MODE0 Control\nDebug Control\n0x0b - Debug Control\nMODE0 Event Control\n0x04 - MODE0 Event Control\nFrequency Correction\n0x0c - Frequency Correction\nReturns the argument unchanged.\nMODE0 Interrupt Enable Clear\n0x06 - MODE0 Interrupt Enable Clear\nMODE0 Interrupt Enable Set\n0x07 - MODE0 Interrupt Enable Set\nMODE0 Interrupt Flag Status and Clear\n0x08 - MODE0 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nRead Request\n0x02 - Read Request\nStatus\n0x0a - Status\nField <code>COMP</code> reader - Compare Value\nMODE0 Compare n Value\nField <code>COMP</code> writer - Compare Value\nRegister <code>COMP%s</code> reader\nRegister <code>COMP%s</code> writer\nBits 0:31 - Compare Value\nBits 0:31 - Compare Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nMODE0 Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:31 - Counter Value\nBits 0:31 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Mode 2: Clock/Calendar\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nMODE0 Control\n0: CLK_RTC_CNT = GCLK_RTC/1\n10: CLK_RTC_CNT = GCLK_RTC/1024\n7: CLK_RTC_CNT = GCLK_RTC/128\n4: CLK_RTC_CNT = GCLK_RTC/16\n1: CLK_RTC_CNT = GCLK_RTC/2\n8: CLK_RTC_CNT = GCLK_RTC/256\n5: CLK_RTC_CNT = GCLK_RTC/32\n2: CLK_RTC_CNT = GCLK_RTC/4\n9: CLK_RTC_CNT = GCLK_RTC/512\n6: CLK_RTC_CNT = GCLK_RTC/64\n3: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>MATCHCLR</code> reader - Clear on Match\nField <code>MATCHCLR</code> writer - Clear on Match\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRL</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 7 - Clear on Match\nBit 7 - Clear on Match\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMPEO0</code> reader - Compare 0 Event Output Enable\nField <code>CMPEO0</code> writer - Compare 0 Event Output Enable\nMODE0 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBit 8 - Compare 0 Event Output Enable\nBit 8 - Compare 0 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nMODE0 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 0 - Compare 0 Interrupt Enable\nBit 0 - Compare 0 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nMODE0 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENSET</code> writer\nBit 0 - Compare 0 Interrupt Enable\nBit 0 - Compare 0 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>CMP0</code> reader - Compare 0\nField <code>CMP0</code> writer - Compare 0\nMODE0 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nRegister <code>INTFLAG</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nRegister <code>INTFLAG</code> writer\nBit 0 - Compare 0\nBit 0 - Compare 0\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow\nBit 7 - Overflow\nBit 6 - Synchronization Ready\nBit 6 - Synchronization Ready\nField <code>ADDR</code> reader - Address\nRegister <code>READREQ</code> reader\nField <code>RCONT</code> reader - Read Continuously\nField <code>RCONT</code> writer - Read Continuously\nRead Request\nField <code>RREQ</code> writer - Read Request\nRegister <code>READREQ</code> writer\nBits 0:5 - Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 14 - Read Continuously\nBit 14 - Read Continuously\nBit 15 - Read Request\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nRegister <code>STATUS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy\nCOMP (rw) register accessor: MODE1 Compare n Value\nCOUNT (rw) register accessor: MODE1 Counter Value\nCTRL (rw) register accessor: MODE1 Control\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE1 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nINTENCLR (rw) register accessor: MODE1 Interrupt Enable …\nINTENSET (rw) register accessor: MODE1 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE1 Interrupt Flag …\n16-bit Counter with Two 16-bit Compares\nPER (rw) register accessor: MODE1 Counter Period\nREADREQ (rw) register accessor: Read Request\nSTATUS (rw) register accessor: Status\nMODE1 Compare n Value\n0x18 - MODE1 Compare n Value\nIterator for array of: 0x18 - MODE1 Compare n Value\nMODE1 Counter Value\n0x10 - MODE1 Counter Value\nMODE1 Control\n0x00 - MODE1 Control\nDebug Control\n0x0b - Debug Control\nMODE1 Event Control\n0x04 - MODE1 Event Control\nFrequency Correction\n0x0c - Frequency Correction\nReturns the argument unchanged.\nMODE1 Interrupt Enable Clear\n0x06 - MODE1 Interrupt Enable Clear\nMODE1 Interrupt Enable Set\n0x07 - MODE1 Interrupt Enable Set\nMODE1 Interrupt Flag Status and Clear\n0x08 - MODE1 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nMODE1 Counter Period\n0x14 - MODE1 Counter Period\nRead Request\n0x02 - Read Request\nStatus\n0x0a - Status\nField <code>COMP</code> reader - Compare Value\nMODE1 Compare n Value\nField <code>COMP</code> writer - Compare Value\nRegister <code>COMP%s</code> reader\nRegister <code>COMP%s</code> writer\nBits 0:15 - Compare Value\nBits 0:15 - Compare Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nMODE1 Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:15 - Counter Value\nBits 0:15 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Mode 2: Clock/Calendar\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nMODE1 Control\n0: CLK_RTC_CNT = GCLK_RTC/1\n10: CLK_RTC_CNT = GCLK_RTC/1024\n7: CLK_RTC_CNT = GCLK_RTC/128\n4: CLK_RTC_CNT = GCLK_RTC/16\n1: CLK_RTC_CNT = GCLK_RTC/2\n8: CLK_RTC_CNT = GCLK_RTC/256\n5: CLK_RTC_CNT = GCLK_RTC/32\n2: CLK_RTC_CNT = GCLK_RTC/4\n9: CLK_RTC_CNT = GCLK_RTC/512\n6: CLK_RTC_CNT = GCLK_RTC/64\n3: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRL</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMPEO0</code> reader - Compare 0 Event Output Enable\nField <code>CMPEO0</code> writer - Compare 0 Event Output Enable\nField <code>CMPEO1</code> reader - Compare 1 Event Output Enable\nField <code>CMPEO1</code> writer - Compare 1 Event Output Enable\nMODE1 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBit 8 - Compare 0 Event Output Enable\nBit 8 - Compare 0 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nMODE1 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 0 - Compare 0 Interrupt Enable\nBit 0 - Compare 0 Interrupt Enable\nBit 1 - Compare 1 Interrupt Enable\nBit 1 - Compare 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nMODE1 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENSET</code> writer\nBit 0 - Compare 0 Interrupt Enable\nBit 0 - Compare 0 Interrupt Enable\nBit 1 - Compare 1 Interrupt Enable\nBit 1 - Compare 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>CMP0</code> reader - Compare 0\nField <code>CMP0</code> writer - Compare 0\nField <code>CMP1</code> reader - Compare 1\nField <code>CMP1</code> writer - Compare 1\nMODE1 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nRegister <code>INTFLAG</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nRegister <code>INTFLAG</code> writer\nBit 0 - Compare 0\nBit 0 - Compare 0\nBit 1 - Compare 1\nBit 1 - Compare 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow\nBit 7 - Overflow\nBit 6 - Synchronization Ready\nBit 6 - Synchronization Ready\nField <code>PER</code> reader - Counter Period\nMODE1 Counter Period\nField <code>PER</code> writer - Counter Period\nRegister <code>PER</code> reader\nRegister <code>PER</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Counter Period\nBits 0:15 - Counter Period\nField <code>ADDR</code> reader - Address\nRegister <code>READREQ</code> reader\nField <code>RCONT</code> reader - Read Continuously\nField <code>RCONT</code> writer - Read Continuously\nRead Request\nField <code>RREQ</code> writer - Read Request\nRegister <code>READREQ</code> writer\nBits 0:5 - Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 14 - Read Continuously\nBit 14 - Read Continuously\nBit 15 - Read Request\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nRegister <code>STATUS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy\nALARM (rw) register accessor: MODE2 Alarm n Value\nCLOCK (rw) register accessor: MODE2 Clock Value\nCTRL (rw) register accessor: MODE2 Control\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE2 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nINTENCLR (rw) register accessor: MODE2 Interrupt Enable …\nINTENSET (rw) register accessor: MODE2 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE2 Interrupt Flag …\nMASK (rw) register accessor: MODE2 Alarm n Mask\nClock/Calendar with Alarm\nREADREQ (rw) register accessor: Read Request\nSTATUS (rw) register accessor: Status\nMODE2 Alarm n Value\n0x18 - MODE2 Alarm n Value\nIterator for array of: 0x18 - MODE2 Alarm n Value\nMODE2 Clock Value\n0x10 - MODE2 Clock Value\nMODE2 Control\n0x00 - MODE2 Control\nDebug Control\n0x0b - Debug Control\nMODE2 Event Control\n0x04 - MODE2 Event Control\nFrequency Correction\n0x0c - Frequency Correction\nReturns the argument unchanged.\nMODE2 Interrupt Enable Clear\n0x06 - MODE2 Interrupt Enable Clear\nMODE2 Interrupt Enable Set\n0x07 - MODE2 Interrupt Enable Set\nMODE2 Interrupt Flag Status and Clear\n0x08 - MODE2 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nMODE2 Alarm n Mask\n0x1c - MODE2 Alarm n Mask\nIterator for array of: 0x1c - MODE2 Alarm n Mask\nRead Request\n0x02 - Read Request\nStatus\n0x0a - Status\nMODE2 Alarm n Value\n0: Morning hour\nField <code>DAY</code> reader - Day\nField <code>DAY</code> writer - Day\nField <code>HOUR</code> reader - Hour\nField <code>HOUR</code> writer - Hour\nHour\nField <code>MINUTE</code> reader - Minute\nField <code>MINUTE</code> writer - Minute\nField <code>MONTH</code> reader - Month\nField <code>MONTH</code> writer - Month\n16: Afternoon hour\nRegister <code>ALARM%s</code> reader\nField <code>SECOND</code> reader - Second\nField <code>SECOND</code> writer - Second\nRegister <code>ALARM%s</code> writer\nField <code>YEAR</code> reader - Year\nField <code>YEAR</code> writer - Year\nMorning hour\nBits 17:21 - Day\nBits 17:21 - Day\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour\nBits 12:16 - Hour\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMorning hour\nAfternoon hour\nBits 6:11 - Minute\nBits 6:11 - Minute\nBits 22:25 - Month\nBits 22:25 - Month\nAfternoon hour\nBits 0:5 - Second\nBits 0:5 - Second\nGet enumerated values variant\nBits 26:31 - Year\nBits 26:31 - Year\n0: AM when CLKREP in 12-hour\nMODE2 Clock Value\nField <code>DAY</code> reader - Day\nField <code>DAY</code> writer - Day\nField <code>HOUR</code> reader - Hour\nField <code>HOUR</code> writer - Hour\nHour\nField <code>MINUTE</code> reader - Minute\nField <code>MINUTE</code> writer - Minute\nField <code>MONTH</code> reader - Month\nField <code>MONTH</code> writer - Month\n16: PM when CLKREP in 12-hour\nRegister <code>CLOCK</code> reader\nField <code>SECOND</code> reader - Second\nField <code>SECOND</code> writer - Second\nRegister <code>CLOCK</code> writer\nField <code>YEAR</code> reader - Year\nField <code>YEAR</code> writer - Year\nAM when CLKREP in 12-hour\nBits 17:21 - Day\nBits 17:21 - Day\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour\nBits 12:16 - Hour\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAM when CLKREP in 12-hour\nPM when CLKREP in 12-hour\nBits 6:11 - Minute\nBits 6:11 - Minute\nBits 22:25 - Month\nBits 22:25 - Month\nPM when CLKREP in 12-hour\nBits 0:5 - Second\nBits 0:5 - Second\nGet enumerated values variant\nBits 26:31 - Year\nBits 26:31 - Year\nField <code>CLKREP</code> reader - Clock Representation\nField <code>CLKREP</code> writer - Clock Representation\n2: Mode 2: Clock/Calendar\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nMODE2 Control\n0: CLK_RTC_CNT = GCLK_RTC/1\n10: CLK_RTC_CNT = GCLK_RTC/1024\n7: CLK_RTC_CNT = GCLK_RTC/128\n4: CLK_RTC_CNT = GCLK_RTC/16\n1: CLK_RTC_CNT = GCLK_RTC/2\n8: CLK_RTC_CNT = GCLK_RTC/256\n5: CLK_RTC_CNT = GCLK_RTC/32\n2: CLK_RTC_CNT = GCLK_RTC/4\n9: CLK_RTC_CNT = GCLK_RTC/512\n6: CLK_RTC_CNT = GCLK_RTC/64\n3: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>MATCHCLR</code> reader - Clear on Match\nField <code>MATCHCLR</code> writer - Clear on Match\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRL</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nBit 6 - Clock Representation\nBit 6 - Clock Representation\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 7 - Clear on Match\nBit 7 - Clear on Match\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ALARMEO0</code> reader - Alarm 0 Event Output Enable\nField <code>ALARMEO0</code> writer - Alarm 0 Event Output Enable\nMODE2 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBit 8 - Alarm 0 Event Output Enable\nBit 8 - Alarm 0 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>ALARM0</code> reader - Alarm 0 Interrupt Enable\nField <code>ALARM0</code> writer - Alarm 0 Interrupt Enable\nMODE2 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 0 - Alarm 0 Interrupt Enable\nBit 0 - Alarm 0 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>ALARM0</code> reader - Alarm 0 Interrupt Enable\nField <code>ALARM0</code> writer - Alarm 0 Interrupt Enable\nMODE2 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENSET</code> writer\nBit 0 - Alarm 0 Interrupt Enable\nBit 0 - Alarm 0 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>ALARM0</code> reader - Alarm 0\nField <code>ALARM0</code> writer - Alarm 0\nMODE2 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nRegister <code>INTFLAG</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nRegister <code>INTFLAG</code> writer\nBit 0 - Alarm 0\nBit 0 - Alarm 0\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow\nBit 7 - Overflow\nBit 6 - Synchronization Ready\nBit 6 - Synchronization Ready\n4: Match seconds, minutes, hours, and days only\n3: Match seconds, minutes, and hours only\nMODE2 Alarm n Mask\n5: Match seconds, minutes, hours, days, and months only\n2: Match seconds and minutes only\n0: Alarm Disabled\nRegister <code>MASK%s</code> reader\nField <code>SEL</code> reader - Alarm Mask Selection\nField <code>SEL</code> writer - Alarm Mask Selection\nAlarm Mask Selection\n1: Match seconds only\nRegister <code>MASK%s</code> writer\n6: Match seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, and days only\nReturns the argument unchanged.\nReturns the argument unchanged.\nMatch seconds, minutes, and hours only\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMatch seconds, minutes, hours, and days only\nMatch seconds, minutes, and hours only\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nMatch seconds only\nMatch seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nBits 0:2 - Alarm Mask Selection\nBits 0:2 - Alarm Mask Selection\nMatch seconds only\nGet enumerated values variant\nMatch seconds, minutes, hours, days, months, and years\nField <code>ADDR</code> reader - Address\nRegister <code>READREQ</code> reader\nField <code>RCONT</code> reader - Read Continuously\nField <code>RCONT</code> writer - Read Continuously\nRead Request\nField <code>RREQ</code> writer - Read Request\nRegister <code>READREQ</code> writer\nBits 0:5 - Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 14 - Read Continuously\nBit 14 - Read Continuously\nBit 15 - Read Request\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nRegister <code>STATUS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy\nI2C Master Mode\nI2C Slave Mode\nRegister block\nSPI Mode\nUSART Mode\nReturns the argument unchanged.\nCluster I2C Master Mode\n0x00..0x31 - I2C Master Mode\nCluster I2C Slave Mode\n0x00..0x29 - I2C Slave Mode\nCalls <code>U::from(self)</code>.\nCluster SPI Mode\n0x00..0x31 - SPI Mode\nCluster USART Mode\n0x00..0x31 - USART Mode\nADDR (rw) register accessor: I2CM Address\nBAUD (rw) register accessor: I2CM Baud Rate\nCTRLA (rw) register accessor: I2CM Control A\nCTRLB (rw) register accessor: I2CM Control B\nDATA (rw) register accessor: I2CM Data\nDBGCTRL (rw) register accessor: I2CM Debug Control\nI2C Master Mode\nINTENCLR (rw) register accessor: I2CM Interrupt Enable …\nINTENSET (rw) register accessor: I2CM Interrupt Enable Set\nINTFLAG (rw) register accessor: I2CM Interrupt Flag Status …\nSTATUS (rw) register accessor: I2CM Status\nSYNCBUSY (r) register accessor: I2CM Syncbusy\nI2CM Address\n0x24 - I2CM Address\nI2CM Baud Rate\n0x0c - I2CM Baud Rate\nI2CM Control A\n0x00 - I2CM Control A\nI2CM Control B\n0x04 - I2CM Control B\nI2CM Data\n0x28 - I2CM Data\nI2CM Debug Control\n0x30 - I2CM Debug Control\nReturns the argument unchanged.\nI2CM Interrupt Enable Clear\n0x14 - I2CM Interrupt Enable Clear\nI2CM Interrupt Enable Set\n0x16 - I2CM Interrupt Enable Set\nI2CM Interrupt Flag Status and Clear\n0x18 - I2CM Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nI2CM Status\n0x1a - I2CM Status\nI2CM Syncbusy\n0x1c - I2CM Syncbusy\nField <code>ADDR</code> reader - Address Value\nI2CM Address\nField <code>ADDR</code> writer - Address Value\nField <code>HS</code> reader - High Speed Mode\nField <code>HS</code> writer - High Speed Mode\nField <code>LEN</code> reader - Length\nField <code>LEN</code> writer - Length\nField <code>LENEN</code> reader - Length Enable\nField <code>LENEN</code> writer - Length Enable\nRegister <code>ADDR</code> reader\nField <code>TENBITEN</code> reader - Ten Bit Addressing Enable\nField <code>TENBITEN</code> writer - Ten Bit Addressing Enable\nRegister <code>ADDR</code> writer\nBits 0:10 - Address Value\nBits 0:10 - Address Value\nReturns the argument unchanged.\nBit 14 - High Speed Mode\nBit 14 - High Speed Mode\nCalls <code>U::from(self)</code>.\nBits 16:23 - Length\nBits 16:23 - Length\nBit 13 - Length Enable\nBit 13 - Length Enable\nBit 15 - Ten Bit Addressing Enable\nBit 15 - Ten Bit Addressing Enable\nField <code>BAUD</code> reader - Baud Rate Value\nI2CM Baud Rate\nField <code>BAUD</code> writer - Baud Rate Value\nField <code>BAUDLOW</code> reader - Baud Rate Value Low\nField <code>BAUDLOW</code> writer - Baud Rate Value Low\nField <code>HSBAUD</code> reader - High Speed Baud Rate Value\nField <code>HSBAUD</code> writer - High Speed Baud Rate Value\nField <code>HSBAUDLOW</code> reader - High Speed Baud Rate Value Low\nField <code>HSBAUDLOW</code> writer - High Speed Baud Rate Value Low\nRegister <code>BAUD</code> reader\nRegister <code>BAUD</code> writer\nBits 0:7 - Baud Rate Value\nBits 0:7 - Baud Rate Value\nBits 8:15 - Baud Rate Value Low\nBits 8:15 - Baud Rate Value Low\nReturns the argument unchanged.\nBits 16:23 - High Speed Baud Rate Value\nBits 16:23 - High Speed Baud Rate Value\nBits 24:31 - High Speed Baud Rate Value Low\nBits 24:31 - High Speed Baud Rate Value Low\nCalls <code>U::from(self)</code>.\nI2CM Control A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\n5: I2C mode with internal clock\n4: I2C mode with external clock\nField <code>INACTOUT</code> reader - Inactive Time-Out\nField <code>INACTOUT</code> writer - Inactive Time-Out\nField <code>LOWTOUTEN</code> reader - SCL Low Timeout Enable\nField <code>LOWTOUTEN</code> writer - SCL Low Timeout Enable\nField <code>MEXTTOEN</code> reader - Master SCL Low Extend Timeout\nField <code>MEXTTOEN</code> writer - Master SCL Low Extend Timeout\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nField <code>PINOUT</code> reader - Pin Usage\nField <code>PINOUT</code> writer - Pin Usage\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SCLSM</code> reader - SCL Clock Stretch Mode\nField <code>SCLSM</code> writer - SCL Clock Stretch Mode\nField <code>SDAHOLD</code> reader - SDA Hold Time\nField <code>SDAHOLD</code> writer - SDA Hold Time\nField <code>SEXTTOEN</code> reader - Slave SCL Low Extend Timeout\nField <code>SEXTTOEN</code> writer - Slave SCL Low Extend Timeout\nField <code>SPEED</code> reader - Transfer Speed\nField <code>SPEED</code> writer - Transfer Speed\n3: SPI mode with internal clock\n2: SPI mode with external clock\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\n0: USART mode with external clock\n1: USART mode with internal clock\nRegister <code>CTRLA</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nI2C mode with internal clock\nI2C mode with external clock\nBits 28:29 - Inactive Time-Out\nBits 28:29 - Inactive Time-Out\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI2C mode with internal clock\nI2C mode with external clock\nSPI mode with internal clock\nSPI mode with external clock\nUSART mode with external clock\nUSART mode with internal clock\nBit 30 - SCL Low Timeout Enable\nBit 30 - SCL Low Timeout Enable\nBit 22 - Master SCL Low Extend Timeout\nBit 22 - Master SCL Low Extend Timeout\nBits 2:4 - Operating Mode\nBits 2:4 - Operating Mode\nBit 16 - Pin Usage\nBit 16 - Pin Usage\nBit 7 - Run in Standby\nBit 7 - Run in Standby\nBit 27 - SCL Clock Stretch Mode\nBit 27 - SCL Clock Stretch Mode\nBits 20:21 - SDA Hold Time\nBits 20:21 - SDA Hold Time\nBit 23 - Slave SCL Low Extend Timeout\nBit 23 - Slave SCL Low Extend Timeout\nBits 24:25 - Transfer Speed\nBits 24:25 - Transfer Speed\nSPI mode with internal clock\nSPI mode with external clock\nBit 0 - Software Reset\nBit 0 - Software Reset\nUSART mode with external clock\nUSART mode with internal clock\nGet enumerated values variant\nField <code>ACKACT</code> reader - Acknowledge Action\nField <code>ACKACT</code> writer - Acknowledge Action\nField <code>CMD</code> writer - Command\nI2CM Control B\nField <code>QCEN</code> reader - Quick Command Enable\nField <code>QCEN</code> writer - Quick Command Enable\nRegister <code>CTRLB</code> reader\nField <code>SMEN</code> reader - Smart Mode Enable\nField <code>SMEN</code> writer - Smart Mode Enable\nRegister <code>CTRLB</code> writer\nBit 18 - Acknowledge Action\nBit 18 - Acknowledge Action\nBits 16:17 - Command\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 9 - Quick Command Enable\nBit 9 - Quick Command Enable\nBit 8 - Smart Mode Enable\nBit 8 - Smart Mode Enable\nField <code>DATA</code> reader - Data Value\nI2CM Data\nField <code>DATA</code> writer - Data Value\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:7 - Data Value\nBits 0:7 - Data Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nI2CM Debug Control\nField <code>DBGSTOP</code> reader - Debug Mode\nField <code>DBGSTOP</code> writer - Debug Mode\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Mode\nBit 0 - Debug Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ERROR</code> reader - Combined Error Interrupt Disable\nField <code>ERROR</code> writer - Combined Error Interrupt Disable\nI2CM Interrupt Enable Clear\nField <code>MB</code> reader - Master On Bus Interrupt Disable\nField <code>MB</code> writer - Master On Bus Interrupt Disable\nRegister <code>INTENCLR</code> reader\nField <code>SB</code> reader - Slave On Bus Interrupt Disable\nField <code>SB</code> writer - Slave On Bus Interrupt Disable\nRegister <code>INTENCLR</code> writer\nBit 7 - Combined Error Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Master On Bus Interrupt Disable\nBit 0 - Master On Bus Interrupt Disable\nBit 1 - Slave On Bus Interrupt Disable\nBit 1 - Slave On Bus Interrupt Disable\nField <code>ERROR</code> reader - Combined Error Interrupt Enable\nField <code>ERROR</code> writer - Combined Error Interrupt Enable\nI2CM Interrupt Enable Set\nField <code>MB</code> reader - Master On Bus Interrupt Enable\nField <code>MB</code> writer - Master On Bus Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SB</code> reader - Slave On Bus Interrupt Enable\nField <code>SB</code> writer - Slave On Bus Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 7 - Combined Error Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Master On Bus Interrupt Enable\nBit 0 - Master On Bus Interrupt Enable\nBit 1 - Slave On Bus Interrupt Enable\nBit 1 - Slave On Bus Interrupt Enable\nField <code>ERROR</code> reader - Combined Error Interrupt\nField <code>ERROR</code> writer - Combined Error Interrupt\nI2CM Interrupt Flag Status and Clear\nField <code>MB</code> reader - Master On Bus Interrupt\nField <code>MB</code> writer - Master On Bus Interrupt\nRegister <code>INTFLAG</code> reader\nField <code>SB</code> reader - Slave On Bus Interrupt\nField <code>SB</code> writer - Slave On Bus Interrupt\nRegister <code>INTFLAG</code> writer\nBit 7 - Combined Error Interrupt\nBit 7 - Combined Error Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Master On Bus Interrupt\nBit 0 - Master On Bus Interrupt\nBit 1 - Slave On Bus Interrupt\nBit 1 - Slave On Bus Interrupt\nField <code>ARBLOST</code> reader - Arbitration Lost\nField <code>ARBLOST</code> writer - Arbitration Lost\nField <code>BUSERR</code> reader - Bus Error\nField <code>BUSERR</code> writer - Bus Error\nField <code>BUSSTATE</code> reader - Bus State\nField <code>BUSSTATE</code> writer - Bus State\nField <code>CLKHOLD</code> reader - Clock Hold\nField <code>LENERR</code> reader - Length Error\nField <code>LENERR</code> writer - Length Error\nField <code>LOWTOUT</code> reader - SCL Low Timeout\nField <code>LOWTOUT</code> writer - SCL Low Timeout\nField <code>MEXTTOUT</code> reader - Master SCL Low Extend Timeout\nField <code>MEXTTOUT</code> writer - Master SCL Low Extend Timeout\nRegister <code>STATUS</code> reader\nField <code>RXNACK</code> reader - Received Not Acknowledge\nField <code>SEXTTOUT</code> reader - Slave SCL Low Extend Timeout\nField <code>SEXTTOUT</code> writer - Slave SCL Low Extend Timeout\nI2CM Status\nRegister <code>STATUS</code> writer\nBit 1 - Arbitration Lost\nBit 1 - Arbitration Lost\nBit 0 - Bus Error\nBit 0 - Bus Error\nBits 4:5 - Bus State\nBits 4:5 - Bus State\nBit 7 - Clock Hold\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 10 - Length Error\nBit 10 - Length Error\nBit 6 - SCL Low Timeout\nBit 6 - SCL Low Timeout\nBit 8 - Master SCL Low Extend Timeout\nBit 8 - Master SCL Low Extend Timeout\nBit 2 - Received Not Acknowledge\nBit 9 - Slave SCL Low Extend Timeout\nBit 9 - Slave SCL Low Extend Timeout\nField <code>ENABLE</code> reader - SERCOM Enable Synchronization Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchronization Busy\nI2CM Syncbusy\nField <code>SYSOP</code> reader - System Operation Synchronization Busy\nBit 1 - SERCOM Enable Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Synchronization Busy\nBit 2 - System Operation Synchronization Busy\nADDR (rw) register accessor: I2CS Address\nCTRLA (rw) register accessor: I2CS Control A\nCTRLB (rw) register accessor: I2CS Control B\nDATA (rw) register accessor: I2CS Data\nI2C Slave Mode\nINTENCLR (rw) register accessor: I2CS Interrupt Enable …\nINTENSET (rw) register accessor: I2CS Interrupt Enable Set\nINTFLAG (rw) register accessor: I2CS Interrupt Flag Status …\nSTATUS (rw) register accessor: I2CS Status\nSYNCBUSY (r) register accessor: I2CS Syncbusy\nI2CS Address\n0x24 - I2CS Address\nI2CS Control A\n0x00 - I2CS Control A\nI2CS Control B\n0x04 - I2CS Control B\nI2CS Data\n0x28 - I2CS Data\nReturns the argument unchanged.\nI2CS Interrupt Enable Clear\n0x14 - I2CS Interrupt Enable Clear\nI2CS Interrupt Enable Set\n0x16 - I2CS Interrupt Enable Set\nI2CS Interrupt Flag Status and Clear\n0x18 - I2CS Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nI2CS Status\n0x1a - I2CS Status\nI2CS Syncbusy\n0x1c - I2CS Syncbusy\nField <code>ADDR</code> reader - Address Value\nI2CS Address\nField <code>ADDR</code> writer - Address Value\nField <code>ADDRMASK</code> reader - Address Mask\nField <code>ADDRMASK</code> writer - Address Mask\nField <code>GENCEN</code> reader - General Call Address Enable\nField <code>GENCEN</code> writer - General Call Address Enable\nRegister <code>ADDR</code> reader\nField <code>TENBITEN</code> reader - Ten Bit Addressing Enable\nField <code>TENBITEN</code> writer - Ten Bit Addressing Enable")