searchState.loadedDescShard("atsamd21g", 0, "Peripheral access API for ATSAMD21G microcontrollers …\n24 - AC\n23 - ADC\nAnalog Comparators\nAnalog Digital Converter\nCache and branch predictor maintenance operations\nCache and branch predictor maintenance operations. Not …\nCPUID\nCPUID\nCore peripherals\n25 - DAC\nDebug Control Block\nDebug Control Block\n6 - DMAC\nData Watchpoint and Trace unit\nData Watchpoint and Trace unit\nDigital Analog Converter\nDirect Memory Access Controller\nDevice Service Unit\n4 - EIC\n8 - EVSYS\nExternal Interrupt Controller\nEvent System Interface\nFlash Patch and Breakpoint unit\nFlash Patch and Breakpoint unit. Not available on Armv6-M.\nFloating Point Unit.\nGeneric Clock Generator\nHSB Matrix\n27 - I2S\nInter-IC Sound Interface\nImplementation Control Block.\nInstrumentation Trace Macrocell\nInstrumentation Trace Macrocell. Not available on Armv6-M …\nEnumeration of all the interrupts.\nMemory Protection Unit\nMemory Protection Unit\nCortex-M0+ Micro-Trace Buffer\nNested Vector Interrupt Controller\nNested Vector Interrupt Controller\nNumber available in the NVIC for configuring priority\n5 - NVMCTRL\nNon-Volatile Memory Controller\n0 - PM\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPointer to the register block\nPeripheral Access Controller 0\nPeripheral Access Controller 1\nPeripheral Access Controller 2\nAll the peripherals.\nPower Manager\nPort Module\nPort Module (IOBUS)\n3 - RTC\nReal-Time Counter\nSecurity Attribution Unit\nSystem Control Block\nSystem Control Block\n9 - SERCOM0\n10 - SERCOM1\n11 - SERCOM2\n12 - SERCOM3\n13 - SERCOM4\n14 - SERCOM5\n1 - SYSCTRL\nSysTick: System Timer\nSysTick: System Timer\nSerial Communication Interface 0\nSerial Communication Interface 1\nSerial Communication Interface 2\nSerial Communication Interface 3\nSerial Communication Interface 4\nSerial Communication Interface 5\nSystem Control\n18 - TC3\n19 - TC4\n20 - TC5\n15 - TCC0\n16 - TCC1\n17 - TCC2\nTrace Port Interface Unit\nTrace Port Interface Unit. Not available on Armv6-M.\nBasic Timer Counter 3\nBasic Timer Counter 4\nBasic Timer Counter 5\nTimer Counter Control 0\nTimer Counter Control 1\nTimer Counter Control 2\n7 - USB\nUniversal Serial Bus\n2 - WDT\nWatchdog Timer\nAnalog Comparators\nAC\nAnalog Digital Converter\nADC\nClears current value to 0\nSet the PENDSTCLR bit in the ICSR register which will …\nSet the PENDSVCLR bit in the ICSR register which will …\nClear the SLEEPDEEP bit in the SCR register\nClear the SLEEPONEXIT bit in the SCR register\nDigital Analog Converter\nDAC\nDisables counter\nDisables SysTick interrupt\nDisables TRACE. See <code>DCB::enable_trace()</code> for more details\nDirect Memory Access Controller\nDMAC\nDevice Service Unit\nDSU\nExternal Interrupt Controller\nEIC\nEnables counter\nEnables SysTick interrupt\nEnables TRACE. This is for example required by the …\nEvent System Interface\nEVSYS\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGeneric Clock Generator\nGCLK\nCommon register and bit access and modify traits\nGets clock source\nGets current value\nReturns the NVIC priority of <code>interrupt</code>\nReturns the hardware priority of <code>system_handler</code>\nGets reload value\nReturns the reload value with which the counter would wrap …\nChecks if an external reference clock is available\nChecks if the counter wrapped (underflowed) since the last …\nHSB Matrix\nHMATRIX\nInter-IC Sound Interface\nI2S\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if counter is enabled\nIs there a debugger attached? (see note)\nChecks if <code>interrupt</code> is enabled\nChecks if SysTick interrupt is enabled\nChecks if <code>interrupt</code> is pending\nCheck if PENDSTSET bit in the ICSR register is set meaning …\nCheck if PENDSVSET bit in the ICSR register is set meaning …\nChecks if the calibration value is precise\nDisables <code>interrupt</code>\nCortex-M0+ Micro-Trace Buffer\nMTB\nNumber of comparators implemented\nNon-Volatile Memory Controller\nNVMCTRL\nPeripheral Access Controller 0\nPAC0\nPeripheral Access Controller 1\nPAC1\nPeripheral Access Controller 2\nPAC2\nForces <code>interrupt</code> into pending state\nPower Manager\nPM\nPort Module\nPORT\nPort Module (IOBUS)\nPORT_IOBUS\nReturn the pointer to the register block\nReturns a pointer to the register block\nReturns a pointer to the register block\nReturns a pointer to the register block\nReturns a pointer to the register block\nReturns a pointer to the register block\nReturns a pointer to the register block\nReturns a pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReturn the pointer to the register block\nReal-Time Counter\nRTC\nSerial Communication Interface 0\nSERCOM0\nSerial Communication Interface 1\nSERCOM1\nSerial Communication Interface 2\nSERCOM2\nSerial Communication Interface 3\nSERCOM3\nSerial Communication Interface 4\nSERCOM4\nSerial Communication Interface 5\nSERCOM5\nSets clock source\nSet the PENDSTSET bit in the ICSR register which will pend …\nSet the PENDSVSET bit in the ICSR register which will pend …\nSets the “priority” of <code>interrupt</code> to <code>prio</code>\nSets the hardware priority of <code>system_handler</code> to <code>prio</code>\nSets reload value\nSet the SLEEPDEEP bit in the SCR register\nSet the SLEEPONEXIT bit in the SCR register\nSteal an instance of this peripheral\nUnchecked version of <code>Peripherals::take</code>\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nSteal an instance of this peripheral\nUnchecked version of <code>Peripherals::take</code>.\nInitiate a system reset request to reset the MCU\nSystem Control\nSYSCTRL\nReturns all the core peripherals <em>once</em>\nReturns all the peripherals <em>once</em>.\nBasic Timer Counter 3\nTC3\nBasic Timer Counter 4\nTC4\nBasic Timer Counter 5\nTC5\nTimer Counter Control 0\nTCC0\nTimer Counter Control 1\nTCC1\nTimer Counter Control 2\nTCC2\nEnables <code>interrupt</code>\nClears <code>interrupt</code>’s pending state\nUniversal Serial Bus\nUSB\nReturns the active exception number\nWatchdog Timer\nWDT\nCOMPCTRL (rw) register accessor: Comparator Control n\nCTRLA (rw) register accessor: Control A\nCTRLB (w) register accessor: Control B\nEVCTRL (rw) register accessor: Event Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRegister block\nSCALER (rw) register accessor: Scaler n\nSTATUSA (r) register accessor: Status A\nSTATUSB (r) register accessor: Status B\nSTATUSC (r) register accessor: Status C\nWINCTRL (rw) register accessor: Window Control\nComparator Control n\n0x10..0x18 - Comparator Control n\nIterator for array of: 0x10..0x18 - Comparator Control n\nControl A\n0x00 - Control A\nControl B\n0x01 - Control B\nEvent Control\n0x02 - Event Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x04 - Interrupt Enable Clear\nInterrupt Enable Set\n0x05 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x06 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nScaler n\n0x20 - Scaler n\nIterator for array of: 0x20 - Scaler n\nStatus A\n0x08 - Status A\nStatus B\n0x09 - Status B\nStatus C\n0x0a - Status C\nWindow Control\n0x0c - Window Control\n1: The asynchronous output of COMPn is routed to the COMPn …\n6: Internal bandgap voltage\nComparator Control n\n7: DAC output\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\n3: Interrupt on end of comparison (single-shot mode only)\n2: Interrupt on comparator output falling\nField <code>FLEN</code> reader - Filter Length\nField <code>FLEN</code> writer - Filter Length\nFilter Length\n4: Ground\n1: High speed\nField <code>HYST</code> reader - Hysteresis Enable\nField <code>HYST</code> writer - Hysteresis Enable\nField <code>INTSEL</code> reader - Interrupt Selection\nField <code>INTSEL</code> writer - Interrupt Selection\nInterrupt Selection\n0: Low speed\n1: 3-bit majority function (2 of 3)\n2: 5-bit majority function (3 of 5)\nField <code>MUXNEG</code> reader - Negative Input Mux Selection\nField <code>MUXNEG</code> writer - Negative Input Mux Selection\nNegative Input Mux Selection\nField <code>MUXPOS</code> reader - Positive Input Mux Selection\nField <code>MUXPOS</code> writer - Positive Input Mux Selection\nPositive Input Mux Selection\n0: The output of COMPn is not routed to the COMPn I/O port\n0: No filtering\nField <code>OUT</code> reader - Output\nField <code>OUT</code> writer - Output\nOutput\n0: I/O pin 0\n0: I/O pin 0\n1: I/O pin 1\n1: I/O pin 1\n2: I/O pin 2\n2: I/O pin 2\n3: I/O pin 3\n3: I/O pin 3\nRegister <code>COMPCTRL%s</code> reader\n1: Interrupt on comparator output rising\nField <code>SINGLE</code> reader - Single-Shot Mode\nField <code>SINGLE</code> writer - Single-Shot Mode\nField <code>SPEED</code> reader - Speed Selection\nField <code>SPEED</code> writer - Speed Selection\nSpeed Selection\nField <code>SWAP</code> reader - Swap Inputs and Invert\nField <code>SWAP</code> writer - Swap Inputs and Invert\n2: The synchronous output (including filtering) of COMPn …\n0: Interrupt on comparator output toggle\n5: VDD scaler\nRegister <code>COMPCTRL%s</code> writer\nThe asynchronous output of COMPn is routed to the COMPn …\nInternal bandgap voltage\nDAC output\nBit 0 - Enable\nBit 0 - Enable\nInterrupt on end of comparison (single-shot mode only)\nInterrupt on comparator output falling\nBits 24:26 - Filter Length\nBits 24:26 - Filter Length\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGround\nHigh speed\nBit 19 - Hysteresis Enable\nBit 19 - Hysteresis Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 5:6 - Interrupt Selection\nBits 5:6 - Interrupt Selection\nThe asynchronous output of COMPn is routed to the COMPn …\nInternal bandgap voltage\nDAC output\nInterrupt on end of comparison (single-shot mode only)\nInterrupt on comparator output falling\nGround\nHigh speed\nLow speed\n3-bit majority function (2 of 3)\n5-bit majority function (3 of 5)\nThe output of COMPn is not routed to the COMPn I/O port\nNo filtering\nI/O pin 0\nI/O pin 0\nI/O pin 1\nI/O pin 1\nI/O pin 2\nI/O pin 2\nI/O pin 3\nI/O pin 3\nInterrupt on comparator output rising\nThe synchronous output (including filtering) of COMPn is …\nInterrupt on comparator output toggle\nVDD scaler\nLow speed\n3-bit majority function (2 of 3)\n5-bit majority function (3 of 5)\nBits 8:10 - Negative Input Mux Selection\nBits 8:10 - Negative Input Mux Selection\nBits 12:13 - Positive Input Mux Selection\nBits 12:13 - Positive Input Mux Selection\nThe output of COMPn is not routed to the COMPn I/O port\nNo filtering\nBits 16:17 - Output\nBits 16:17 - Output\nI/O pin 0\nI/O pin 0\nI/O pin 1\nI/O pin 1\nI/O pin 2\nI/O pin 2\nI/O pin 3\nI/O pin 3\nInterrupt on comparator output rising\nBit 1 - Single-Shot Mode\nBit 1 - Single-Shot Mode\nBits 2:3 - Speed Selection\nBits 2:3 - Speed Selection\nBit 15 - Swap Inputs and Invert\nBit 15 - Swap Inputs and Invert\nThe synchronous output (including filtering) of COMPn is …\nInterrupt on comparator output toggle\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nVDD scaler\nControl A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>LPMUX</code> reader - Low-Power Mux\nField <code>LPMUX</code> writer - Low-Power Mux\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Low-Power Mux\nBit 7 - Low-Power Mux\nBit 2 - Run in Standby\nBit 2 - Run in Standby\nBit 0 - Software Reset\nControl B\nField <code>START0</code> writer - Comparator 0 Start Comparison\nField <code>START1</code> writer - Comparator 1 Start Comparison\nRegister <code>CTRLB</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Comparator 0 Start Comparison\nBit 1 - Comparator 1 Start Comparison\nField <code>COMPEI0</code> reader - Comparator 0 Event Input\nField <code>COMPEI0</code> writer - Comparator 0 Event Input\nField <code>COMPEI1</code> reader - Comparator 1 Event Input\nField <code>COMPEI1</code> writer - Comparator 1 Event Input\nField <code>COMPEO0</code> reader - Comparator 0 Event Output Enable\nField <code>COMPEO0</code> writer - Comparator 0 Event Output Enable\nField <code>COMPEO1</code> reader - Comparator 1 Event Output Enable\nField <code>COMPEO1</code> writer - Comparator 1 Event Output Enable\nEvent Control\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nField <code>WINEO0</code> reader - Window 0 Event Output Enable\nField <code>WINEO0</code> writer - Window 0 Event Output Enable\nBit 8 - Comparator 0 Event Input\nBit 8 - Comparator 0 Event Input\nBit 9 - Comparator 1 Event Input\nBit 9 - Comparator 1 Event Input\nBit 0 - Comparator 0 Event Output Enable\nBit 0 - Comparator 0 Event Output Enable\nBit 1 - Comparator 1 Event Output Enable\nBit 1 - Comparator 1 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Window 0 Event Output Enable\nBit 4 - Window 0 Event Output Enable\nField <code>COMP0</code> reader - Comparator 0 Interrupt Enable\nField <code>COMP0</code> writer - Comparator 0 Interrupt Enable\nField <code>COMP1</code> reader - Comparator 1 Interrupt Enable\nField <code>COMP1</code> writer - Comparator 1 Interrupt Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nField <code>WIN0</code> reader - Window 0 Interrupt Enable\nField <code>WIN0</code> writer - Window 0 Interrupt Enable\nBit 0 - Comparator 0 Interrupt Enable\nBit 0 - Comparator 0 Interrupt Enable\nBit 1 - Comparator 1 Interrupt Enable\nBit 1 - Comparator 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Window 0 Interrupt Enable\nBit 4 - Window 0 Interrupt Enable\nField <code>COMP0</code> reader - Comparator 0 Interrupt Enable\nField <code>COMP0</code> writer - Comparator 0 Interrupt Enable\nField <code>COMP1</code> reader - Comparator 1 Interrupt Enable\nField <code>COMP1</code> writer - Comparator 1 Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nField <code>WIN0</code> reader - Window 0 Interrupt Enable\nField <code>WIN0</code> writer - Window 0 Interrupt Enable\nBit 0 - Comparator 0 Interrupt Enable\nBit 0 - Comparator 0 Interrupt Enable\nBit 1 - Comparator 1 Interrupt Enable\nBit 1 - Comparator 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Window 0 Interrupt Enable\nBit 4 - Window 0 Interrupt Enable\nField <code>COMP0</code> reader - Comparator 0\nField <code>COMP0</code> writer - Comparator 0\nField <code>COMP1</code> reader - Comparator 1\nField <code>COMP1</code> writer - Comparator 1\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nField <code>WIN0</code> reader - Window 0\nField <code>WIN0</code> writer - Window 0\nBit 0 - Comparator 0\nBit 0 - Comparator 0\nBit 1 - Comparator 1\nBit 1 - Comparator 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Window 0\nBit 4 - Window 0\nRegister <code>SCALER%s</code> reader\nScaler n\nField <code>VALUE</code> reader - Scaler Value\nField <code>VALUE</code> writer - Scaler Value\nRegister <code>SCALER%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:5 - Scaler Value\nBits 0:5 - Scaler Value\n0: Signal is above window\n2: Signal is below window\n1: Signal is inside window\nRegister <code>STATUSA</code> reader\nField <code>STATE0</code> reader - Comparator 0 Current State\nField <code>STATE1</code> reader - Comparator 1 Current State\nStatus A\nField <code>WSTATE0</code> reader - Window 0 Current State\nWindow 0 Current State\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSignal is above window\nSignal is below window\nSignal is inside window\nBit 0 - Comparator 0 Current State\nBit 1 - Comparator 1 Current State\nGet enumerated values variant\nBits 4:5 - Window 0 Current State\nRegister <code>STATUSB</code> reader\nField <code>READY0</code> reader - Comparator 0 Ready\nField <code>READY1</code> reader - Comparator 1 Ready\nStatus B\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Comparator 0 Ready\nBit 1 - Comparator 1 Ready\nBit 7 - Synchronization Busy\n0: Signal is above window\n2: Signal is below window\n1: Signal is inside window\nRegister <code>STATUSC</code> reader\nField <code>STATE0</code> reader - Comparator 0 Current State\nField <code>STATE1</code> reader - Comparator 1 Current State\nStatus C\nField <code>WSTATE0</code> reader - Window 0 Current State\nWindow 0 Current State\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSignal is above window\nSignal is below window\nSignal is inside window\nBit 0 - Comparator 0 Current State\nBit 1 - Comparator 1 Current State\nGet enumerated values variant\nBits 4:5 - Window 0 Current State\n0: Interrupt on signal above window\n2: Interrupt on signal below window\n1: Interrupt on signal inside window\n3: Interrupt on signal outside window\nRegister <code>WINCTRL</code> reader\nRegister <code>WINCTRL</code> writer\nField <code>WEN0</code> reader - Window 0 Mode Enable\nField <code>WEN0</code> writer - Window 0 Mode Enable\nWindow Control\nField <code>WINTSEL0</code> reader - Window 0 Interrupt Selection\nField <code>WINTSEL0</code> writer - Window 0 Interrupt Selection\nWindow 0 Interrupt Selection\nInterrupt on signal above window\nInterrupt on signal below window\nReturns the argument unchanged.\nReturns the argument unchanged.\nInterrupt on signal inside window\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInterrupt on signal above window\nInterrupt on signal below window\nInterrupt on signal inside window\nInterrupt on signal outside window\nInterrupt on signal outside window\nGet enumerated values variant\nBit 0 - Window 0 Mode Enable\nBit 0 - Window 0 Mode Enable\nBits 1:2 - Window 0 Interrupt Selection\nBits 1:2 - Window 0 Interrupt Selection\nAVGCTRL (rw) register accessor: Average Control\nCALIB (rw) register accessor: Calibration\nCTRLA (rw) register accessor: Control A\nCTRLB (rw) register accessor: Control B\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: Event Control\nGAINCORR (rw) register accessor: Gain Correction\nINPUTCTRL (rw) register accessor: Input Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nOFFSETCORR (rw) register accessor: Offset Correction\nREFCTRL (rw) register accessor: Reference Control\nRegister block\nRESULT (r) register accessor: Result\nSAMPCTRL (rw) register accessor: Sampling Time Control\nSTATUS (r) register accessor: Status\nSWTRIG (rw) register accessor: Software Trigger\nWINCTRL (rw) register accessor: Window Monitor Control\nWINLT (rw) register accessor: Window Monitor Lower …\nWINUT (rw) register accessor: Window Monitor Upper …\nAverage Control\n0x02 - Average Control\nCalibration\n0x28 - Calibration\nControl A\n0x00 - Control A\nControl B\n0x04 - Control B\nDebug Control\n0x2a - Debug Control\nEvent Control\n0x14 - Event Control\nReturns the argument unchanged.\nGain Correction\n0x24 - Gain Correction\nInput Control\n0x10 - Input Control\nInterrupt Enable Clear\n0x16 - Interrupt Enable Clear\nInterrupt Enable Set\n0x17 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x18 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nOffset Correction\n0x26 - Offset Correction\nReference Control\n0x01 - Reference Control\nResult\n0x1a - Result\nSampling Time Control\n0x03 - Sampling Time Control\nStatus\n0x19 - Status\nSoftware Trigger\n0x0c - Software Trigger\nWindow Monitor Control\n0x08 - Window Monitor Control\nWindow Monitor Lower Threshold\n0x1c - Window Monitor Lower Threshold\nWindow Monitor Upper Threshold\n0x20 - Window Monitor Upper Threshold\nField <code>ADJRES</code> reader - Adjusting Result / Division …\nField <code>ADJRES</code> writer - Adjusting Result / Division …\nAverage Control\nRegister <code>AVGCTRL</code> reader\nField <code>SAMPLENUM</code> reader - Number of Samples to be Collected\nField <code>SAMPLENUM</code> writer - Number of Samples to be Collected\nNumber of Samples to be Collected\nRegister <code>AVGCTRL</code> writer\n1 sample\n0: 1 sample\n1024 samples\n10: 1024 samples\n128 samples\n7: 128 samples\n16 samples\n4: 16 samples\n2 samples\n1: 2 samples\n256 samples\n8: 256 samples\n32 samples\n5: 32 samples\n4 samples\n2: 4 samples\n512 samples\n9: 512 samples\n64 samples\n6: 64 samples\n8 samples\n3: 8 samples\nBits 4:6 - Adjusting Result / Division Coefficient\nBits 4:6 - Adjusting Result / Division Coefficient\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1 sample\n1024 samples\n128 samples\n16 samples\n2 samples\n256 samples\n32 samples\n4 samples\n512 samples\n64 samples\n8 samples\nBits 0:3 - Number of Samples to be Collected\nBits 0:3 - Number of Samples to be Collected\nGet enumerated values variant\nField <code>BIAS_CAL</code> reader - Bias Calibration Value\nField <code>BIAS_CAL</code> writer - Bias Calibration Value\nCalibration\nField <code>LINEARITY_CAL</code> reader - Linearity Calibration Value\nField <code>LINEARITY_CAL</code> writer - Linearity Calibration Value\nRegister <code>CALIB</code> reader\nRegister <code>CALIB</code> writer\nBits 8:10 - Bias Calibration Value\nBits 8:10 - Bias Calibration Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Linearity Calibration Value\nBits 0:7 - Linearity Calibration Value\nControl A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Run in Standby\nBit 2 - Run in Standby\nBit 0 - Software Reset\nBit 0 - Software Reset\nField <code>CORREN</code> reader - Digital Correction Logic Enabled\nField <code>CORREN</code> writer - Digital Correction Logic Enabled\nControl B\nField <code>DIFFMODE</code> reader - Differential Mode\nField <code>DIFFMODE</code> writer - Differential Mode\n5: Peripheral clock divided by 128\n2: Peripheral clock divided by 16\n6: Peripheral clock divided by 256\n3: Peripheral clock divided by 32\n0: Peripheral clock divided by 4\n7: Peripheral clock divided by 512\n4: Peripheral clock divided by 64\n1: Peripheral clock divided by 8\nField <code>FREERUN</code> reader - Free Running Mode\nField <code>FREERUN</code> writer - Free Running Mode\nField <code>LEFTADJ</code> reader - Left-Adjusted Result\nField <code>LEFTADJ</code> writer - Left-Adjusted Result\nField <code>PRESCALER</code> reader - Prescaler Configuration\nField <code>PRESCALER</code> writer - Prescaler Configuration\nPrescaler Configuration\nRegister <code>CTRLB</code> reader\nField <code>RESSEL</code> reader - Conversion Result Resolution\nField <code>RESSEL</code> writer - Conversion Result Resolution\nConversion Result Resolution\nRegister <code>CTRLB</code> writer\n10-bit result\n2: 10-bit result\n12-bit result\n0: 12-bit result\nFor averaging mode output\n1: For averaging mode output\n8-bit result\n3: 8-bit result\nBit 3 - Digital Correction Logic Enabled\nBit 3 - Digital Correction Logic Enabled\nBit 0 - Differential Mode\nBit 0 - Differential Mode\nPeripheral clock divided by 128\nPeripheral clock divided by 16\nPeripheral clock divided by 256\nPeripheral clock divided by 32\nPeripheral clock divided by 4\nPeripheral clock divided by 512\nPeripheral clock divided by 64\nPeripheral clock divided by 8\nBit 2 - Free Running Mode\nBit 2 - Free Running Mode\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n10-bit result\n12-bit result\nFor averaging mode output\n8-bit result\nPeripheral clock divided by 128\nPeripheral clock divided by 16\nPeripheral clock divided by 256\nPeripheral clock divided by 32\nPeripheral clock divided by 4\nPeripheral clock divided by 512\nPeripheral clock divided by 64\nPeripheral clock divided by 8\nBit 1 - Left-Adjusted Result\nBit 1 - Left-Adjusted Result\nBits 8:10 - Prescaler Configuration\nBits 8:10 - Prescaler Configuration\nBits 4:5 - Conversion Result Resolution\nBits 4:5 - Conversion Result Resolution\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Debug Run\nField <code>DBGRUN</code> writer - Debug Run\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Run\nBit 0 - Debug Run\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEvent Control\nRegister <code>EVCTRL</code> reader\nField <code>RESRDYEO</code> reader - Result Ready Event Out\nField <code>RESRDYEO</code> writer - Result Ready Event Out\nField <code>STARTEI</code> reader - Start Conversion Event In\nField <code>STARTEI</code> writer - Start Conversion Event In\nField <code>SYNCEI</code> reader - Synchronization Event In\nField <code>SYNCEI</code> writer - Synchronization Event In\nRegister <code>EVCTRL</code> writer\nField <code>WINMONEO</code> reader - Window Monitor Event Out\nField <code>WINMONEO</code> writer - Window Monitor Event Out\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Result Ready Event Out\nBit 4 - Result Ready Event Out\nBit 0 - Start Conversion Event In\nBit 0 - Start Conversion Event In\nBit 1 - Synchronization Event In\nBit 1 - Synchronization Event In\nBit 5 - Window Monitor Event Out\nBit 5 - Window Monitor Event Out\nField <code>GAINCORR</code> reader - Gain Correction Value\nGain Correction\nField <code>GAINCORR</code> writer - Gain Correction Value\nRegister <code>GAINCORR</code> reader\nRegister <code>GAINCORR</code> writer\nReturns the argument unchanged.\nBits 0:11 - Gain Correction Value\nBits 0:11 - Gain Correction Value\nCalls <code>U::from(self)</code>.\n25: Bandgap Voltage\n28: DAC Output\n15: 1/2x\nField <code>GAIN</code> reader - Gain Factor Selection\nField <code>GAIN</code> writer - Gain Factor Selection\nGain Factor Selection\n24: Internal Ground\nInput Control\nField <code>INPUTOFFSET</code> reader - Positive Mux Setting Offset\nField <code>INPUTOFFSET</code> writer - Positive Mux Setting Offset\nField <code>INPUTSCAN</code> reader - Number of Input Channels Included …\nField <code>INPUTSCAN</code> writer - Number of Input Channels Included …\n25: I/O Ground\nField <code>MUXNEG</code> reader - Negative Mux Input Selection\nField <code>MUXNEG</code> writer - Negative Mux Input Selection\nNegative Mux Input Selection\nField <code>MUXPOS</code> reader - Positive Mux Input Selection\nField <code>MUXPOS</code> writer - Positive Mux Input Selection\nPositive Mux Input Selection\n0: ADC AIN0 Pin\n0: ADC AIN0 Pin\n1: ADC AIN1 Pin\n1: ADC AIN1 Pin\n10: ADC AIN10 Pin\n11: ADC AIN11 Pin\n12: ADC AIN12 Pin\n13: ADC AIN13 Pin\n14: ADC AIN14 Pin\n15: ADC AIN15 Pin\n16: ADC AIN16 Pin\n17: ADC AIN17 Pin\n18: ADC AIN18 Pin\n19: ADC AIN19 Pin\n2: ADC AIN2 Pin\n2: ADC AIN2 Pin\n3: ADC AIN3 Pin\n3: ADC AIN3 Pin\n4: ADC AIN4 Pin\n4: ADC AIN4 Pin\n5: ADC AIN5 Pin\n5: ADC AIN5 Pin\n6: ADC AIN6 Pin\n6: ADC AIN6 Pin\n7: ADC AIN7 Pin\n7: ADC AIN7 Pin\n8: ADC AIN8 Pin\n9: ADC AIN9 Pin\nRegister <code>INPUTCTRL</code> reader\n26: 1/4 Scaled Core Supply\n27: 1/4 Scaled I/O Supply\n24: Temperature Reference\nRegister <code>INPUTCTRL</code> writer\n16x\n4: 16x\n1x\n0: 1x\n2x\n1: 2x\n4x\n2: 4x\n8x\n3: 8x\nBandgap Voltage\nDAC Output\n1/2x\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 24:27 - Gain Factor Selection\nBits 24:27 - Gain Factor Selection\nInternal Ground\nBits 20:23 - Positive Mux Setting Offset\nBits 20:23 - Positive Mux Setting Offset\nBits 16:19 - Number of Input Channels Included in Scan\nBits 16:19 - Number of Input Channels Included in Scan\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI/O Ground\n16x\n1x\n2x\n4x\n8x\nBandgap Voltage\nDAC Output\n1/2x\nInternal Ground\nI/O Ground\nADC AIN0 Pin\nADC AIN0 Pin\nADC AIN1 Pin\nADC AIN1 Pin\nADC AIN10 Pin\nADC AIN11 Pin\nADC AIN12 Pin\nADC AIN13 Pin\nADC AIN14 Pin\nADC AIN15 Pin\nADC AIN16 Pin\nADC AIN17 Pin\nADC AIN18 Pin\nADC AIN19 Pin\nADC AIN2 Pin\nADC AIN2 Pin\nADC AIN3 Pin\nADC AIN3 Pin\nADC AIN4 Pin\nADC AIN4 Pin\nADC AIN5 Pin\nADC AIN5 Pin\nADC AIN6 Pin\nADC AIN6 Pin\nADC AIN7 Pin\nADC AIN7 Pin\nADC AIN8 Pin\nADC AIN9 Pin\n1/4 Scaled Core Supply\n1/4 Scaled I/O Supply\nTemperature Reference\nBits 8:12 - Negative Mux Input Selection\nBits 8:12 - Negative Mux Input Selection\nBits 0:4 - Positive Mux Input Selection\nBits 0:4 - Positive Mux Input Selection\nADC AIN0 Pin\nADC AIN0 Pin\nADC AIN1 Pin\nADC AIN1 Pin\nADC AIN10 Pin\nADC AIN11 Pin\nADC AIN12 Pin\nADC AIN13 Pin\nADC AIN14 Pin\nADC AIN15 Pin\nADC AIN16 Pin\nADC AIN17 Pin\nADC AIN18 Pin\nADC AIN19 Pin\nADC AIN2 Pin\nADC AIN2 Pin\nADC AIN3 Pin\nADC AIN3 Pin\nADC AIN4 Pin\nADC AIN4 Pin\nADC AIN5 Pin\nADC AIN5 Pin\nADC AIN6 Pin\nADC AIN6 Pin\nADC AIN7 Pin\nADC AIN7 Pin\nADC AIN8 Pin\nADC AIN9 Pin\n1/4 Scaled Core Supply\n1/4 Scaled I/O Supply\nTemperature Reference\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nInterrupt Enable Clear\nField <code>OVERRUN</code> reader - Overrun Interrupt Enable\nField <code>OVERRUN</code> writer - Overrun Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>RESRDY</code> reader - Result Ready Interrupt Enable\nField <code>RESRDY</code> writer - Result Ready Interrupt Enable\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENCLR</code> writer\nField <code>WINMON</code> reader - Window Monitor Interrupt Enable\nField <code>WINMON</code> writer - Window Monitor Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Overrun Interrupt Enable\nBit 1 - Overrun Interrupt Enable\nBit 0 - Result Ready Interrupt Enable\nBit 0 - Result Ready Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nBit 2 - Window Monitor Interrupt Enable\nBit 2 - Window Monitor Interrupt Enable\nInterrupt Enable Set\nField <code>OVERRUN</code> reader - Overrun Interrupt Enable\nField <code>OVERRUN</code> writer - Overrun Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>RESRDY</code> reader - Result Ready Interrupt Enable\nField <code>RESRDY</code> writer - Result Ready Interrupt Enable\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENSET</code> writer\nField <code>WINMON</code> reader - Window Monitor Interrupt Enable\nField <code>WINMON</code> writer - Window Monitor Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Overrun Interrupt Enable\nBit 1 - Overrun Interrupt Enable\nBit 0 - Result Ready Interrupt Enable\nBit 0 - Result Ready Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nBit 2 - Window Monitor Interrupt Enable\nBit 2 - Window Monitor Interrupt Enable\nInterrupt Flag Status and Clear\nField <code>OVERRUN</code> reader - Overrun\nField <code>OVERRUN</code> writer - Overrun\nRegister <code>INTFLAG</code> reader\nField <code>RESRDY</code> reader - Result Ready\nField <code>RESRDY</code> writer - Result Ready\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nRegister <code>INTFLAG</code> writer\nField <code>WINMON</code> reader - Window Monitor\nField <code>WINMON</code> writer - Window Monitor\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Overrun\nBit 1 - Overrun\nBit 0 - Result Ready\nBit 0 - Result Ready\nBit 3 - Synchronization Ready\nBit 3 - Synchronization Ready\nBit 2 - Window Monitor\nBit 2 - Window Monitor\nField <code>OFFSETCORR</code> reader - Offset Correction Value\nOffset Correction\nField <code>OFFSETCORR</code> writer - Offset Correction Value\nRegister <code>OFFSETCORR</code> reader\nRegister <code>OFFSETCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:11 - Offset Correction Value\nBits 0:11 - Offset Correction Value\n3: External reference\n4: External reference\n0: 1.0V voltage reference\n1: 1/1.48 VDDANA\n2: 1/2 VDDANA (only for VDDANA &gt; 2.0V)\nRegister <code>REFCTRL</code> reader\nField <code>REFCOMP</code> reader - Reference Buffer Offset …\nField <code>REFCOMP</code> writer - Reference Buffer Offset …\nReference Control\nField <code>REFSEL</code> reader - Reference Selection\nField <code>REFSEL</code> writer - Reference Selection\nReference Selection\nRegister <code>REFCTRL</code> writer\nExternal reference\nExternal reference\nReturns the argument unchanged.\nReturns the argument unchanged.\n1.0V voltage reference\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1/1.48 VDDANA\n1/2 VDDANA (only for VDDANA &gt; 2.0V)\nExternal reference\nExternal reference\n1.0V voltage reference\n1/1.48 VDDANA\n1/2 VDDANA (only for VDDANA &gt; 2.0V)\nBit 7 - Reference Buffer Offset Compensation Enable\nBit 7 - Reference Buffer Offset Compensation Enable\nBits 0:3 - Reference Selection\nBits 0:3 - Reference Selection\nGet enumerated values variant\nRegister <code>RESULT</code> reader\nField <code>RESULT</code> reader - Result Conversion Value\nResult\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Result Conversion Value\nRegister <code>SAMPCTRL</code> reader\nSampling Time Control\nField <code>SAMPLEN</code> reader - Sampling Time Length\nField <code>SAMPLEN</code> writer - Sampling Time Length\nRegister <code>SAMPCTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:5 - Sampling Time Length\nBits 0:5 - Sampling Time Length\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy\nField <code>FLUSH</code> reader - ADC Conversion Flush\nField <code>FLUSH</code> writer - ADC Conversion Flush\nRegister <code>SWTRIG</code> reader\nField <code>START</code> reader - ADC Start Conversion\nField <code>START</code> writer - ADC Start Conversion\nSoftware Trigger\nRegister <code>SWTRIG</code> writer\nBit 0 - ADC Conversion Flush\nBit 0 - ADC Conversion Flush\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - ADC Start Conversion\nBit 1 - ADC Start Conversion\n0: No window mode (default)\n1: Mode 1: RESULT &gt; WINLT\n2: Mode 2: RESULT &lt; WINUT\n3: Mode 3: WINLT &lt; RESULT &lt; WINUT\n4: Mode 4: !(WINLT &lt; RESULT &lt; WINUT)\nRegister <code>WINCTRL</code> reader\nRegister <code>WINCTRL</code> writer\nWindow Monitor Control\nField <code>WINMODE</code> reader - Window Monitor Mode\nField <code>WINMODE</code> writer - Window Monitor Mode\nWindow Monitor Mode\nNo window mode (default)\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo window mode (default)\nMode 1: RESULT &gt; WINLT\nMode 2: RESULT &lt; WINUT\nMode 3: WINLT &lt; RESULT &lt; WINUT\nMode 4: !(WINLT &lt; RESULT &lt; WINUT)\nMode 1: RESULT &gt; WINLT\nMode 2: RESULT &lt; WINUT\nMode 3: WINLT &lt; RESULT &lt; WINUT\nMode 4: !(WINLT &lt; RESULT &lt; WINUT)\nGet enumerated values variant\nBits 0:2 - Window Monitor Mode\nBits 0:2 - Window Monitor Mode\nRegister <code>WINLT</code> reader\nRegister <code>WINLT</code> writer\nField <code>WINLT</code> reader - Window Lower Threshold\nWindow Monitor Lower Threshold\nField <code>WINLT</code> writer - Window Lower Threshold\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Window Lower Threshold\nBits 0:15 - Window Lower Threshold\nRegister <code>WINUT</code> reader\nRegister <code>WINUT</code> writer\nField <code>WINUT</code> reader - Window Upper Threshold\nWindow Monitor Upper Threshold\nField <code>WINUT</code> writer - Window Upper Threshold\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Window Upper Threshold\nBits 0:15 - Window Upper Threshold\nCTRLA (rw) register accessor: Control A\nCTRLB (rw) register accessor: Control B\nDATA (rw) register accessor: Data\nDATABUF (rw) register accessor: Data Buffer\nEVCTRL (rw) register accessor: Event Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRegister block\nSTATUS (r) register accessor: Status\nControl A\n0x00 - Control A\nControl B\n0x01 - Control B\nData\n0x08 - Data\nData Buffer\n0x0c - Data Buffer\nEvent Control\n0x02 - Event Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x04 - Interrupt Enable Clear\nInterrupt Enable Set\n0x05 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x06 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nStatus\n0x07 - Status\nControl A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Run in Standby\nBit 2 - Run in Standby\nBit 0 - Software Reset\nBit 0 - Software Reset\n1: AVCC\nField <code>BDWP</code> reader - Bypass DATABUF Write Protection\nField <code>BDWP</code> writer - Bypass DATABUF Write Protection\nControl B\nField <code>EOEN</code> reader - External Output Enable\nField <code>EOEN</code> writer - External Output Enable\n0: Internal 1.0V reference\nField <code>IOEN</code> reader - Internal Output Enable\nField <code>IOEN</code> writer - Internal Output Enable\nField <code>LEFTADJ</code> reader - Left Adjusted Data\nField <code>LEFTADJ</code> writer - Left Adjusted Data\nRegister <code>CTRLB</code> reader\nField <code>REFSEL</code> reader - Reference Selection\nField <code>REFSEL</code> writer - Reference Selection\nReference Selection\nField <code>VPD</code> reader - Voltage Pump Disable\nField <code>VPD</code> writer - Voltage Pump Disable\n2: External reference\nRegister <code>CTRLB</code> writer\nAVCC\nBit 4 - Bypass DATABUF Write Protection\nBit 4 - Bypass DATABUF Write Protection\nBit 0 - External Output Enable\nBit 0 - External Output Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nInternal 1.0V reference\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBit 1 - Internal Output Enable\nBit 1 - Internal Output Enable\nAVCC\nInternal 1.0V reference\nExternal reference\nBit 2 - Left Adjusted Data\nBit 2 - Left Adjusted Data\nBits 6:7 - Reference Selection\nBits 6:7 - Reference Selection\nGet enumerated values variant\nBit 3 - Voltage Pump Disable\nBit 3 - Voltage Pump Disable\nExternal reference\nField <code>DATA</code> reader - Data value to be converted\nData\nField <code>DATA</code> writer - Data value to be converted\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:15 - Data value to be converted\nBits 0:15 - Data value to be converted\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DATABUF</code> reader - Data Buffer\nData Buffer\nField <code>DATABUF</code> writer - Data Buffer\nRegister <code>DATABUF</code> reader\nRegister <code>DATABUF</code> writer\nBits 0:15 - Data Buffer\nBits 0:15 - Data Buffer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EMPTYEO</code> reader - Data Buffer Empty Event Output\nField <code>EMPTYEO</code> writer - Data Buffer Empty Event Output\nEvent Control\nRegister <code>EVCTRL</code> reader\nField <code>STARTEI</code> reader - Start Conversion Event Input\nField <code>STARTEI</code> writer - Start Conversion Event Input\nRegister <code>EVCTRL</code> writer\nBit 1 - Data Buffer Empty Event Output\nBit 1 - Data Buffer Empty Event Output\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Start Conversion Event Input\nBit 0 - Start Conversion Event Input\nField <code>EMPTY</code> reader - Data Buffer Empty Interrupt Enable\nField <code>EMPTY</code> writer - Data Buffer Empty Interrupt Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nField <code>UNDERRUN</code> reader - Underrun Interrupt Enable\nField <code>UNDERRUN</code> writer - Underrun Interrupt Enable\nRegister <code>INTENCLR</code> writer\nBit 1 - Data Buffer Empty Interrupt Enable\nBit 1 - Data Buffer Empty Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Synchronization Ready Interrupt Enable\nBit 2 - Synchronization Ready Interrupt Enable\nBit 0 - Underrun Interrupt Enable\nBit 0 - Underrun Interrupt Enable\nField <code>EMPTY</code> reader - Data Buffer Empty Interrupt Enable\nField <code>EMPTY</code> writer - Data Buffer Empty Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nField <code>UNDERRUN</code> reader - Underrun Interrupt Enable\nField <code>UNDERRUN</code> writer - Underrun Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 1 - Data Buffer Empty Interrupt Enable\nBit 1 - Data Buffer Empty Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Synchronization Ready Interrupt Enable\nBit 2 - Synchronization Ready Interrupt Enable\nBit 0 - Underrun Interrupt Enable\nBit 0 - Underrun Interrupt Enable\nField <code>EMPTY</code> reader - Data Buffer Empty\nField <code>EMPTY</code> writer - Data Buffer Empty\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nField <code>UNDERRUN</code> reader - Underrun\nField <code>UNDERRUN</code> writer - Underrun\nRegister <code>INTFLAG</code> writer\nBit 1 - Data Buffer Empty\nBit 1 - Data Buffer Empty\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Synchronization Ready\nBit 2 - Synchronization Ready\nBit 0 - Underrun\nBit 0 - Underrun\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy Status\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy Status\nACTIVE (r) register accessor: Active Channel and Levels\nBASEADDR (rw) register accessor: Descriptor Memory Section …\nBUSYCH (r) register accessor: Busy Channels\nCHCTRLA (rw) register accessor: Channel Control A\nCHCTRLB (rw) register accessor: Channel Control B\nCHID (rw) register accessor: Channel ID\nCHINTENCLR (rw) register accessor: Channel Interrupt …\nCHINTENSET (rw) register accessor: Channel Interrupt …\nCHINTFLAG (rw) register accessor: Channel Interrupt Flag …\nCHSTATUS (r) register accessor: Channel Status\nCRCCHKSUM (rw) register accessor: CRC Checksum\nCRCCTRL (rw) register accessor: CRC Control\nCRCDATAIN (rw) register accessor: CRC Data Input\nCRCSTATUS (rw) register accessor: CRC Status\nCTRL (rw) register accessor: Control\nDBGCTRL (rw) register accessor: Debug Control\nINTPEND (rw) register accessor: Interrupt Pending\nINTSTATUS (r) register accessor: Interrupt Status\nPENDCH (r) register accessor: Pending Channels\nPRICTRL0 (rw) register accessor: Priority Control 0\nQOSCTRL (rw) register accessor: QOS Control\nRegister block\nSWTRIGCTRL (rw) register accessor: Software Trigger Control\nWRBADDR (rw) register accessor: Write-Back Memory Section …\nActive Channel and Levels\n0x30 - Active Channel and Levels\nDescriptor Memory Section Base Address\n0x34 - Descriptor Memory Section Base Address\nBusy Channels\n0x28 - Busy Channels\nChannel Control A\n0x40 - Channel Control A\nChannel Control B\n0x44 - Channel Control B\nChannel ID\n0x3f - Channel ID\nChannel Interrupt Enable Clear\n0x4c - Channel Interrupt Enable Clear\nChannel Interrupt Enable Set\n0x4d - Channel Interrupt Enable Set\nChannel Interrupt Flag Status and Clear\n0x4e - Channel Interrupt Flag Status and Clear\nChannel Status\n0x4f - Channel Status\nCRC Checksum\n0x08 - CRC Checksum\nCRC Control\n0x02 - CRC Control\nCRC Data Input\n0x04 - CRC Data Input\nCRC Status\n0x0c - CRC Status\nControl\n0x00 - Control\nDebug Control\n0x0d - Debug Control\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInterrupt Pending\n0x20 - Interrupt Pending\nInterrupt Status\n0x24 - Interrupt Status\nPending Channels\n0x2c - Pending Channels\nPriority Control 0\n0x14 - Priority Control 0\nQOS Control\n0x0e - QOS Control\nSoftware Trigger Control\n0x10 - Software Trigger Control\nWrite-Back Memory Section Base Address\n0x38 - Write-Back Memory Section Base Address\nField <code>ABUSY</code> reader - Active Channel Busy\nActive Channel and Levels\nField <code>BTCNT</code> reader - Active Channel Block Transfer Count\nField <code>ID</code> reader - Active Channel ID\nField <code>LVLEX0</code> reader - Level 0 Channel Trigger Request …\nField <code>LVLEX1</code> reader - Level 1 Channel Trigger Request …\nField <code>LVLEX2</code> reader - Level 2 Channel Trigger Request …\nField <code>LVLEX3</code> reader - Level 3 Channel Trigger Request …\nRegister <code>ACTIVE</code> reader\nBit 15 - Active Channel Busy\nBits 16:31 - Active Channel Block Transfer Count\nReturns the argument unchanged.\nBits 8:12 - Active Channel ID\nCalls <code>U::from(self)</code>.\nBit 0 - Level 0 Channel Trigger Request Executing\nBit 1 - Level 1 Channel Trigger Request Executing\nBit 2 - Level 2 Channel Trigger Request Executing\nBit 3 - Level 3 Channel Trigger Request Executing\nField <code>BASEADDR</code> reader - Descriptor Memory Base Address\nDescriptor Memory Section Base Address\nField <code>BASEADDR</code> writer - Descriptor Memory Base Address\nRegister <code>BASEADDR</code> reader\nRegister <code>BASEADDR</code> writer\nBits 0:31 - Descriptor Memory Base Address\nBits 0:31 - Descriptor Memory Base Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BUSYCH0</code> reader - Busy Channel 0\nField <code>BUSYCH10</code> reader - Busy Channel 10\nField <code>BUSYCH11</code> reader - Busy Channel 11\nField <code>BUSYCH1</code> reader - Busy Channel 1\nField <code>BUSYCH2</code> reader - Busy Channel 2\nField <code>BUSYCH3</code> reader - Busy Channel 3\nField <code>BUSYCH4</code> reader - Busy Channel 4\nField <code>BUSYCH5</code> reader - Busy Channel 5\nField <code>BUSYCH6</code> reader - Busy Channel 6\nField <code>BUSYCH7</code> reader - Busy Channel 7\nField <code>BUSYCH8</code> reader - Busy Channel 8\nField <code>BUSYCH9</code> reader - Busy Channel 9\nBusy Channels\nRegister <code>BUSYCH</code> reader\nBit 0 - Busy Channel 0\nBit 1 - Busy Channel 1\nBit 10 - Busy Channel 10\nBit 11 - Busy Channel 11\nBit 2 - Busy Channel 2\nBit 3 - Busy Channel 3\nBit 4 - Busy Channel 4\nBit 5 - Busy Channel 5\nBit 6 - Busy Channel 6\nBit 7 - Busy Channel 7\nBit 8 - Busy Channel 8\nBit 9 - Busy Channel 9\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChannel Control A\nField <code>ENABLE</code> reader - Channel Enable\nField <code>ENABLE</code> writer - Channel Enable\nRegister <code>CHCTRLA</code> reader\nField <code>SWRST</code> reader - Channel Software Reset\nField <code>SWRST</code> writer - Channel Software Reset\nRegister <code>CHCTRLA</code> writer\nBit 1 - Channel Enable\nBit 1 - Channel Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel Software Reset\nBit 0 - Channel Software Reset\n39: ADC Result Ready Trigger\n2: One trigger required for each beat transfer\n0: One trigger required for each block transfer\n3: Conditional block transfer\nChannel Control B\nField <code>CMD</code> reader - Software Command\nField <code>CMD</code> writer - Software Command\nSoftware Command\n2: Conditional transfer trigger\n40: DAC Empty Trigger\n0: Only software/event triggers\nField <code>EVACT</code> reader - Event Input Action\nField <code>EVACT</code> writer - Event Input Action\nEvent Input Action\nField <code>EVIE</code> reader - Channel Event Input Enable\nField <code>EVIE</code> writer - Channel Event Input Enable\nField <code>EVOE</code> reader - Channel Event Output Enable\nField <code>EVOE</code> writer - Channel Event Output Enable\n41: I2S RX 0 Trigger\n42: I2S RX 1 Trigger\n43: I2S TX 0 Trigger\n44: I2S TX 1 Trigger\n0: Channel Priority Level 0\n1: Channel Priority Level 1\n2: Channel Priority Level 2\n3: Channel Priority Level 3\nField <code>LVL</code> reader - Channel Arbitration Level\nField <code>LVL</code> writer - Channel Arbitration Level\nChannel Arbitration Level\n0: No action\n0: No action\nRegister <code>CHCTRLB</code> reader\n5: Channel resume operation\n2: Channel resume operation\n1: SERCOM0 RX Trigger\n2: SERCOM0 TX Trigger\n3: SERCOM1 RX Trigger\n4: SERCOM1 TX Trigger\n5: SERCOM2 RX Trigger\n6: SERCOM2 TX Trigger\n7: SERCOM3 RX Trigger\n8: SERCOM3 TX Trigger\n9: SERCOM4 RX Trigger\n10: SERCOM4 TX Trigger\n11: SERCOM5 RX Trigger\n12: SERCOM5 TX Trigger\n6: Skip next block suspend action\n4: Channel suspend operation\n1: Channel suspend operation\n25: TC3 Match/Compare 0 Trigger\n26: TC3 Match/Compare 1 Trigger\n24: TC3 Overflow Trigger\n28: TC4 Match/Compare 0 Trigger\n29: TC4 Match/Compare 1 Trigger\n27: TC4 Overflow Trigger\n31: TC5 Match/Compare 0 Trigger\n32: TC5 Match/Compare 1 Trigger\n30: TC5 Overflow Trigger\n34: TC6 Match/Compare 0 Trigger\n35: TC6 Match/Compare 1 Trigger\n33: TC6 Overflow Trigger\n37: TC7 Match/Compare 0 Trigger\n38: TC7 Match/Compare 1 Trigger\n36: TC7 Overflow Trigger\n14: TCC0 Match/Compare 0 Trigger\n15: TCC0 Match/Compare 1 Trigger\n16: TCC0 Match/Compare 2 Trigger\n17: TCC0 Match/Compare 3 Trigger\n13: TCC0 Overflow Trigger\n19: TCC1 Match/Compare 0 Trigger\n20: TCC1 Match/Compare 1 Trigger\n18: TCC1 Overflow Trigger\n22: TCC2 Match/Compare 0 Trigger\n23: TCC2 Match/Compare 1 Trigger\n21: TCC2 Overflow Trigger\n46: TCC3 Match/Compare 0 Trigger\n47: TCC3 Match/Compare 1 Trigger\n48: Match/Compare 2 Trigger\n49: Match/Compare 3 Trigger\n45: TCC3 Overflow Trigger\n3: One trigger required for each transaction\n1: Transfer and periodic transfer trigger\nField <code>TRIGACT</code> reader - Trigger Action\nField <code>TRIGACT</code> writer - Trigger Action\nTrigger Action\nField <code>TRIGSRC</code> reader - Trigger Source\nField <code>TRIGSRC</code> writer - Trigger Source\nTrigger Source\nRegister <code>CHCTRLB</code> writer\nADC Result Ready Trigger\nOne trigger required for each beat transfer\nOne trigger required for each block transfer\nConditional block transfer\nBits 24:25 - Software Command\nBits 24:25 - Software Command\nConditional transfer trigger\nDAC Empty Trigger\nOnly software/event triggers\nBits 0:2 - Event Input Action\nBits 0:2 - Event Input Action\nBit 3 - Channel Event Input Enable\nBit 3 - Channel Event Input Enable\nBit 4 - Channel Event Output Enable\nBit 4 - Channel Event Output Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nI2S RX 0 Trigger\nI2S RX 1 Trigger\nI2S TX 0 Trigger\nI2S TX 1 Trigger\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nADC Result Ready Trigger\nOne trigger required for each beat transfer\nOne trigger required for each block transfer\nConditional block transfer\nConditional transfer trigger\nDAC Empty Trigger\nOnly software/event triggers\nI2S RX 0 Trigger\nI2S RX 1 Trigger\nI2S TX 0 Trigger\nI2S TX 1 Trigger\nChannel Priority Level 0\nChannel Priority Level 1\nChannel Priority Level 2\nChannel Priority Level 3\nNo action\nNo action\nChannel resume operation\nChannel resume operation\nSERCOM0 RX Trigger\nSERCOM0 TX Trigger\nSERCOM1 RX Trigger\nSERCOM1 TX Trigger\nSERCOM2 RX Trigger\nSERCOM2 TX Trigger\nSERCOM3 RX Trigger\nSERCOM3 TX Trigger\nSERCOM4 RX Trigger\nSERCOM4 TX Trigger\nSERCOM5 RX Trigger\nSERCOM5 TX Trigger\nSkip next block suspend action\nChannel suspend operation\nChannel suspend operation\nTC3 Match/Compare 0 Trigger\nTC3 Match/Compare 1 Trigger\nTC3 Overflow Trigger\nTC4 Match/Compare 0 Trigger\nTC4 Match/Compare 1 Trigger\nTC4 Overflow Trigger\nTC5 Match/Compare 0 Trigger\nTC5 Match/Compare 1 Trigger\nTC5 Overflow Trigger\nTC6 Match/Compare 0 Trigger\nTC6 Match/Compare 1 Trigger\nTC6 Overflow Trigger\nTC7 Match/Compare 0 Trigger\nTC7 Match/Compare 1 Trigger\nTC7 Overflow Trigger\nTCC0 Match/Compare 0 Trigger\nTCC0 Match/Compare 1 Trigger\nTCC0 Match/Compare 2 Trigger\nTCC0 Match/Compare 3 Trigger\nTCC0 Overflow Trigger\nTCC1 Match/Compare 0 Trigger\nTCC1 Match/Compare 1 Trigger\nTCC1 Overflow Trigger\nTCC2 Match/Compare 0 Trigger\nTCC2 Match/Compare 1 Trigger\nTCC2 Overflow Trigger\nTCC3 Match/Compare 0 Trigger\nTCC3 Match/Compare 1 Trigger\nMatch/Compare 2 Trigger\nMatch/Compare 3 Trigger\nTCC3 Overflow Trigger\nOne trigger required for each transaction\nTransfer and periodic transfer trigger\nBits 5:6 - Channel Arbitration Level\nBits 5:6 - Channel Arbitration Level\nChannel Priority Level 0\nChannel Priority Level 1\nChannel Priority Level 2\nChannel Priority Level 3\nNo action\nNo action\nChannel resume operation\nChannel resume operation\nSERCOM0 RX Trigger\nSERCOM0 TX Trigger\nSERCOM1 RX Trigger\nSERCOM1 TX Trigger\nSERCOM2 RX Trigger\nSERCOM2 TX Trigger\nSERCOM3 RX Trigger\nSERCOM3 TX Trigger\nSERCOM4 RX Trigger\nSERCOM4 TX Trigger\nSERCOM5 RX Trigger\nSERCOM5 TX Trigger\nSkip next block suspend action\nChannel suspend operation\nChannel suspend operation\nTC3 Match/Compare 0 Trigger\nTC3 Match/Compare 1 Trigger\nTC3 Overflow Trigger\nTC4 Match/Compare 0 Trigger\nTC4 Match/Compare 1 Trigger\nTC4 Overflow Trigger\nTC5 Match/Compare 0 Trigger\nTC5 Match/Compare 1 Trigger\nTC5 Overflow Trigger\nTC6 Match/Compare 0 Trigger\nTC6 Match/Compare 1 Trigger\nTC6 Overflow Trigger\nTC7 Match/Compare 0 Trigger\nTC7 Match/Compare 1 Trigger\nTC7 Overflow Trigger\nTCC0 Match/Compare 0 Trigger\nTCC0 Match/Compare 1 Trigger\nTCC0 Match/Compare 2 Trigger\nTCC0 Match/Compare 3 Trigger\nTCC0 Overflow Trigger\nTCC1 Match/Compare 0 Trigger\nTCC1 Match/Compare 1 Trigger\nTCC1 Overflow Trigger\nTCC2 Match/Compare 0 Trigger\nTCC2 Match/Compare 1 Trigger\nTCC2 Overflow Trigger\nTCC3 Match/Compare 0 Trigger\nTCC3 Match/Compare 1 Trigger\nMatch/Compare 2 Trigger\nMatch/Compare 3 Trigger\nTCC3 Overflow Trigger\nOne trigger required for each transaction\nTransfer and periodic transfer trigger\nBits 22:23 - Trigger Action\nBits 22:23 - Trigger Action\nBits 8:13 - Trigger Source\nBits 8:13 - Trigger Source\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nChannel ID\nField <code>ID</code> reader - Channel ID\nField <code>ID</code> writer - Channel ID\nRegister <code>CHID</code> reader\nRegister <code>CHID</code> writer\nReturns the argument unchanged.\nBits 0:3 - Channel ID\nBits 0:3 - Channel ID\nCalls <code>U::from(self)</code>.\nChannel Interrupt Enable Clear\nRegister <code>CHINTENCLR</code> reader\nField <code>SUSP</code> reader - Channel Suspend Interrupt Enable\nField <code>SUSP</code> writer - Channel Suspend Interrupt Enable\nField <code>TCMPL</code> reader - Channel Transfer Complete Interrupt …\nField <code>TCMPL</code> writer - Channel Transfer Complete Interrupt …\nField <code>TERR</code> reader - Channel Transfer Error Interrupt Enable\nField <code>TERR</code> writer - Channel Transfer Error Interrupt Enable\nRegister <code>CHINTENCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Channel Suspend Interrupt Enable\nBit 2 - Channel Suspend Interrupt Enable\nBit 1 - Channel Transfer Complete Interrupt Enable\nBit 1 - Channel Transfer Complete Interrupt Enable\nBit 0 - Channel Transfer Error Interrupt Enable\nBit 0 - Channel Transfer Error Interrupt Enable\nChannel Interrupt Enable Set\nRegister <code>CHINTENSET</code> reader\nField <code>SUSP</code> reader - Channel Suspend Interrupt Enable\nField <code>SUSP</code> writer - Channel Suspend Interrupt Enable\nField <code>TCMPL</code> reader - Channel Transfer Complete Interrupt …\nField <code>TCMPL</code> writer - Channel Transfer Complete Interrupt …\nField <code>TERR</code> reader - Channel Transfer Error Interrupt Enable\nField <code>TERR</code> writer - Channel Transfer Error Interrupt Enable\nRegister <code>CHINTENSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Channel Suspend Interrupt Enable\nBit 2 - Channel Suspend Interrupt Enable\nBit 1 - Channel Transfer Complete Interrupt Enable\nBit 1 - Channel Transfer Complete Interrupt Enable\nBit 0 - Channel Transfer Error Interrupt Enable\nBit 0 - Channel Transfer Error Interrupt Enable\nChannel Interrupt Flag Status and Clear\nRegister <code>CHINTFLAG</code> reader\nField <code>SUSP</code> reader - Channel Suspend\nField <code>SUSP</code> writer - Channel Suspend\nField <code>TCMPL</code> reader - Channel Transfer Complete\nField <code>TCMPL</code> writer - Channel Transfer Complete\nField <code>TERR</code> reader - Channel Transfer Error\nField <code>TERR</code> writer - Channel Transfer Error\nRegister <code>CHINTFLAG</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Channel Suspend\nBit 2 - Channel Suspend\nBit 1 - Channel Transfer Complete\nBit 1 - Channel Transfer Complete\nBit 0 - Channel Transfer Error\nBit 0 - Channel Transfer Error\nField <code>BUSY</code> reader - Channel Busy\nChannel Status\nField <code>FERR</code> reader - Channel Fetch Error\nField <code>PEND</code> reader - Channel Pending\nRegister <code>CHSTATUS</code> reader\nBit 1 - Channel Busy\nBit 2 - Channel Fetch Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel Pending\nField <code>CRCCHKSUM</code> reader - CRC Checksum\nCRC Checksum\nField <code>CRCCHKSUM</code> writer - CRC Checksum\nRegister <code>CRCCHKSUM</code> reader\nRegister <code>CRCCHKSUM</code> writer\nBits 0:31 - CRC Checksum\nBits 0:31 - CRC Checksum\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n0: 8-bit bus transfer\n0: CRC-16 (CRC-CCITT)\n1: CRC32 (IEEE 802.3)\nField <code>CRCBEATSIZE</code> reader - CRC Beat Size\nField <code>CRCBEATSIZE</code> writer - CRC Beat Size\nCRC Beat Size\nCRC Control\nField <code>CRCPOLY</code> reader - CRC Polynomial Type\nField <code>CRCPOLY</code> writer - CRC Polynomial Type\nCRC Polynomial Type\nField <code>CRCSRC</code> reader - CRC Input Source\nField <code>CRCSRC</code> writer - CRC Input Source\nCRC Input Source\n1: 16-bit bus transfer\n1: I/O interface\n0: No action\nRegister <code>CRCCTRL</code> reader\nRegister <code>CRCCTRL</code> writer\n2: 32-bit bus transfer\n8-bit bus transfer\nCRC-16 (CRC-CCITT)\nCRC32 (IEEE 802.3)\nBits 0:1 - CRC Beat Size\nBits 0:1 - CRC Beat Size\nBits 2:3 - CRC Polynomial Type\nBits 2:3 - CRC Polynomial Type\nBits 8:13 - CRC Input Source\nBits 8:13 - CRC Input Source\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n16-bit bus transfer\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI/O interface\n8-bit bus transfer\nCRC-16 (CRC-CCITT)\nCRC32 (IEEE 802.3)\n16-bit bus transfer\nI/O interface\nNo action\n32-bit bus transfer\nNo action\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n32-bit bus transfer\nField <code>CRCDATAIN</code> reader - CRC Data Input\nCRC Data Input\nField <code>CRCDATAIN</code> writer - CRC Data Input\nRegister <code>CRCDATAIN</code> reader\nRegister <code>CRCDATAIN</code> writer\nBits 0:31 - CRC Data Input\nBits 0:31 - CRC Data Input\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CRCBUSY</code> reader - CRC Module Busy\nField <code>CRCBUSY</code> writer - CRC Module Busy\nCRC Status\nField <code>CRCZERO</code> reader - CRC Zero\nRegister <code>CRCSTATUS</code> reader\nRegister <code>CRCSTATUS</code> writer\nBit 0 - CRC Module Busy\nBit 0 - CRC Module Busy\nBit 1 - CRC Zero\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CRCENABLE</code> reader - CRC Enable\nField <code>CRCENABLE</code> writer - CRC Enable\nControl\nField <code>DMAENABLE</code> reader - DMA Enable\nField <code>DMAENABLE</code> writer - DMA Enable\nField <code>LVLEN0</code> reader - Priority Level 0 Enable\nField <code>LVLEN0</code> writer - Priority Level 0 Enable\nField <code>LVLEN1</code> reader - Priority Level 1 Enable\nField <code>LVLEN1</code> writer - Priority Level 1 Enable\nField <code>LVLEN2</code> reader - Priority Level 2 Enable\nField <code>LVLEN2</code> writer - Priority Level 2 Enable\nField <code>LVLEN3</code> reader - Priority Level 3 Enable\nField <code>LVLEN3</code> writer - Priority Level 3 Enable\nRegister <code>CTRL</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nBit 2 - CRC Enable\nBit 2 - CRC Enable\nBit 1 - DMA Enable\nBit 1 - DMA Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 8 - Priority Level 0 Enable\nBit 8 - Priority Level 0 Enable\nBit 9 - Priority Level 1 Enable\nBit 9 - Priority Level 1 Enable\nBit 10 - Priority Level 2 Enable\nBit 10 - Priority Level 2 Enable\nBit 11 - Priority Level 3 Enable\nBit 11 - Priority Level 3 Enable\nBit 0 - Software Reset\nBit 0 - Software Reset\nDebug Control\nField <code>DBGRUN</code> reader - Debug Run\nField <code>DBGRUN</code> writer - Debug Run\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Run\nBit 0 - Debug Run\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BUSY</code> reader - Busy\nField <code>FERR</code> reader - Fetch Error\nField <code>ID</code> reader - Channel ID\nField <code>ID</code> writer - Channel ID\nInterrupt Pending\nField <code>PEND</code> reader - Pending\nRegister <code>INTPEND</code> reader\nField <code>SUSP</code> reader - Channel Suspend\nField <code>SUSP</code> writer - Channel Suspend\nField <code>TCMPL</code> reader - Transfer Complete\nField <code>TCMPL</code> writer - Transfer Complete\nField <code>TERR</code> reader - Transfer Error\nField <code>TERR</code> writer - Transfer Error\nRegister <code>INTPEND</code> writer\nBit 14 - Busy\nBit 13 - Fetch Error\nReturns the argument unchanged.\nBits 0:3 - Channel ID\nBits 0:3 - Channel ID\nCalls <code>U::from(self)</code>.\nBit 15 - Pending\nBit 10 - Channel Suspend\nBit 10 - Channel Suspend\nBit 9 - Transfer Complete\nBit 9 - Transfer Complete\nBit 8 - Transfer Error\nBit 8 - Transfer Error\nField <code>CHINT0</code> reader - Channel 0 Pending Interrupt\nField <code>CHINT10</code> reader - Channel 10 Pending Interrupt\nField <code>CHINT11</code> reader - Channel 11 Pending Interrupt\nField <code>CHINT1</code> reader - Channel 1 Pending Interrupt\nField <code>CHINT2</code> reader - Channel 2 Pending Interrupt\nField <code>CHINT3</code> reader - Channel 3 Pending Interrupt\nField <code>CHINT4</code> reader - Channel 4 Pending Interrupt\nField <code>CHINT5</code> reader - Channel 5 Pending Interrupt\nField <code>CHINT6</code> reader - Channel 6 Pending Interrupt\nField <code>CHINT7</code> reader - Channel 7 Pending Interrupt\nField <code>CHINT8</code> reader - Channel 8 Pending Interrupt\nField <code>CHINT9</code> reader - Channel 9 Pending Interrupt\nInterrupt Status\nRegister <code>INTSTATUS</code> reader\nBit 0 - Channel 0 Pending Interrupt\nBit 1 - Channel 1 Pending Interrupt\nBit 10 - Channel 10 Pending Interrupt\nBit 11 - Channel 11 Pending Interrupt\nBit 2 - Channel 2 Pending Interrupt\nBit 3 - Channel 3 Pending Interrupt\nBit 4 - Channel 4 Pending Interrupt\nBit 5 - Channel 5 Pending Interrupt\nBit 6 - Channel 6 Pending Interrupt\nBit 7 - Channel 7 Pending Interrupt\nBit 8 - Channel 8 Pending Interrupt\nBit 9 - Channel 9 Pending Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>PENDCH0</code> reader - Pending Channel 0\nField <code>PENDCH10</code> reader - Pending Channel 10\nField <code>PENDCH11</code> reader - Pending Channel 11\nField <code>PENDCH1</code> reader - Pending Channel 1\nField <code>PENDCH2</code> reader - Pending Channel 2\nField <code>PENDCH3</code> reader - Pending Channel 3\nField <code>PENDCH4</code> reader - Pending Channel 4\nField <code>PENDCH5</code> reader - Pending Channel 5\nField <code>PENDCH6</code> reader - Pending Channel 6\nField <code>PENDCH7</code> reader - Pending Channel 7\nField <code>PENDCH8</code> reader - Pending Channel 8\nField <code>PENDCH9</code> reader - Pending Channel 9\nPending Channels\nRegister <code>PENDCH</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Pending Channel 0\nBit 1 - Pending Channel 1\nBit 10 - Pending Channel 10\nBit 11 - Pending Channel 11\nBit 2 - Pending Channel 2\nBit 3 - Pending Channel 3\nBit 4 - Pending Channel 4\nBit 5 - Pending Channel 5\nBit 6 - Pending Channel 6\nBit 7 - Pending Channel 7\nBit 8 - Pending Channel 8\nBit 9 - Pending Channel 9\nField <code>LVLPRI0</code> reader - Level 0 Channel Priority Number\nField <code>LVLPRI0</code> writer - Level 0 Channel Priority Number\nField <code>LVLPRI1</code> reader - Level 1 Channel Priority Number\nField <code>LVLPRI1</code> writer - Level 1 Channel Priority Number\nField <code>LVLPRI2</code> reader - Level 2 Channel Priority Number\nField <code>LVLPRI2</code> writer - Level 2 Channel Priority Number\nField <code>LVLPRI3</code> reader - Level 3 Channel Priority Number\nField <code>LVLPRI3</code> writer - Level 3 Channel Priority Number\nPriority Control 0\nRegister <code>PRICTRL0</code> reader\nField <code>RRLVLEN0</code> reader - Level 0 Round-Robin Scheduling …\nField <code>RRLVLEN0</code> writer - Level 0 Round-Robin Scheduling …\nField <code>RRLVLEN1</code> reader - Level 1 Round-Robin Scheduling …\nField <code>RRLVLEN1</code> writer - Level 1 Round-Robin Scheduling …\nField <code>RRLVLEN2</code> reader - Level 2 Round-Robin Scheduling …\nField <code>RRLVLEN2</code> writer - Level 2 Round-Robin Scheduling …\nField <code>RRLVLEN3</code> reader - Level 3 Round-Robin Scheduling …\nField <code>RRLVLEN3</code> writer - Level 3 Round-Robin Scheduling …\nRegister <code>PRICTRL0</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:3 - Level 0 Channel Priority Number\nBits 0:3 - Level 0 Channel Priority Number\nBits 8:11 - Level 1 Channel Priority Number\nBits 8:11 - Level 1 Channel Priority Number\nBits 16:19 - Level 2 Channel Priority Number\nBits 16:19 - Level 2 Channel Priority Number\nBits 24:27 - Level 3 Channel Priority Number\nBits 24:27 - Level 3 Channel Priority Number\nBit 7 - Level 0 Round-Robin Scheduling Enable\nBit 7 - Level 0 Round-Robin Scheduling Enable\nBit 15 - Level 1 Round-Robin Scheduling Enable\nBit 15 - Level 1 Round-Robin Scheduling Enable\nBit 23 - Level 2 Round-Robin Scheduling Enable\nBit 23 - Level 2 Round-Robin Scheduling Enable\nBit 31 - Level 3 Round-Robin Scheduling Enable\nBit 31 - Level 3 Round-Robin Scheduling Enable\n0: Background (no sensitive operation)\n0: Background (no sensitive operation)\n0: Background (no sensitive operation)\nField <code>DQOS</code> reader - Data Transfer Quality of Service\nField <code>DQOS</code> writer - Data Transfer Quality of Service\nData Transfer Quality of Service\nField <code>FQOS</code> reader - Fetch Quality of Service\nField <code>FQOS</code> writer - Fetch Quality of Service\nFetch Quality of Service\n3: Critical Latency\n3: Critical Latency\n3: Critical Latency\n1: Sensitive Bandwidth\n1: Sensitive Bandwidth\n1: Sensitive Bandwidth\n2: Sensitive Latency\n2: Sensitive Latency\n2: Sensitive Latency\nQOS Control\nRegister <code>QOSCTRL</code> reader\nRegister <code>QOSCTRL</code> writer\nField <code>WRBQOS</code> reader - Write-Back Quality of Service\nField <code>WRBQOS</code> writer - Write-Back Quality of Service\nWrite-Back Quality of Service\nBackground (no sensitive operation)\nBackground (no sensitive operation)\nBackground (no sensitive operation)\nBits 4:5 - Data Transfer Quality of Service\nBits 4:5 - Data Transfer Quality of Service\nBits 2:3 - Fetch Quality of Service\nBits 2:3 - Fetch Quality of Service\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCritical Latency\nCritical Latency\nCritical Latency\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBackground (no sensitive operation)\nBackground (no sensitive operation)\nBackground (no sensitive operation)\nCritical Latency\nCritical Latency\nCritical Latency\nSensitive Bandwidth\nSensitive Bandwidth\nSensitive Bandwidth\nSensitive Latency\nSensitive Latency\nSensitive Latency\nSensitive Bandwidth\nSensitive Bandwidth\nSensitive Bandwidth\nSensitive Latency\nSensitive Latency\nSensitive Latency\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBits 0:1 - Write-Back Quality of Service\nBits 0:1 - Write-Back Quality of Service\nRegister <code>SWTRIGCTRL</code> reader\nField <code>SWTRIG0</code> reader - Channel 0 Software Trigger\nField <code>SWTRIG0</code> writer - Channel 0 Software Trigger\nField <code>SWTRIG10</code> reader - Channel 10 Software Trigger\nField <code>SWTRIG10</code> writer - Channel 10 Software Trigger\nField <code>SWTRIG11</code> reader - Channel 11 Software Trigger\nField <code>SWTRIG11</code> writer - Channel 11 Software Trigger\nField <code>SWTRIG1</code> reader - Channel 1 Software Trigger\nField <code>SWTRIG1</code> writer - Channel 1 Software Trigger\nField <code>SWTRIG2</code> reader - Channel 2 Software Trigger\nField <code>SWTRIG2</code> writer - Channel 2 Software Trigger\nField <code>SWTRIG3</code> reader - Channel 3 Software Trigger\nField <code>SWTRIG3</code> writer - Channel 3 Software Trigger\nField <code>SWTRIG4</code> reader - Channel 4 Software Trigger\nField <code>SWTRIG4</code> writer - Channel 4 Software Trigger\nField <code>SWTRIG5</code> reader - Channel 5 Software Trigger\nField <code>SWTRIG5</code> writer - Channel 5 Software Trigger\nField <code>SWTRIG6</code> reader - Channel 6 Software Trigger\nField <code>SWTRIG6</code> writer - Channel 6 Software Trigger\nField <code>SWTRIG7</code> reader - Channel 7 Software Trigger\nField <code>SWTRIG7</code> writer - Channel 7 Software Trigger\nField <code>SWTRIG8</code> reader - Channel 8 Software Trigger\nField <code>SWTRIG8</code> writer - Channel 8 Software Trigger\nField <code>SWTRIG9</code> reader - Channel 9 Software Trigger\nField <code>SWTRIG9</code> writer - Channel 9 Software Trigger\nSoftware Trigger Control\nRegister <code>SWTRIGCTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel 0 Software Trigger\nBit 0 - Channel 0 Software Trigger\nBit 1 - Channel 1 Software Trigger\nBit 1 - Channel 1 Software Trigger\nBit 10 - Channel 10 Software Trigger\nBit 10 - Channel 10 Software Trigger\nBit 11 - Channel 11 Software Trigger\nBit 11 - Channel 11 Software Trigger\nBit 2 - Channel 2 Software Trigger\nBit 2 - Channel 2 Software Trigger\nBit 3 - Channel 3 Software Trigger\nBit 3 - Channel 3 Software Trigger\nBit 4 - Channel 4 Software Trigger\nBit 4 - Channel 4 Software Trigger\nBit 5 - Channel 5 Software Trigger\nBit 5 - Channel 5 Software Trigger\nBit 6 - Channel 6 Software Trigger\nBit 6 - Channel 6 Software Trigger\nBit 7 - Channel 7 Software Trigger\nBit 7 - Channel 7 Software Trigger\nBit 8 - Channel 8 Software Trigger\nBit 8 - Channel 8 Software Trigger\nBit 9 - Channel 9 Software Trigger\nBit 9 - Channel 9 Software Trigger\nRegister <code>WRBADDR</code> reader\nRegister <code>WRBADDR</code> writer\nField <code>WRBADDR</code> reader - Write-Back Memory Base Address\nWrite-Back Memory Section Base Address\nField <code>WRBADDR</code> writer - Write-Back Memory Base Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Write-Back Memory Base Address\nBits 0:31 - Write-Back Memory Base Address\nADDR (rw) register accessor: Address\nCID0 (r) register accessor: Component Identification 0\nCID1 (r) register accessor: Component Identification 1\nCID2 (r) register accessor: Component Identification 2\nCID3 (r) register accessor: Component Identification 3\nCTRL (w) register accessor: Control\nDATA (rw) register accessor: Data\nDCC (rw) register accessor: Debug Communication Channel n\nDID (r) register accessor: Device Identification\nEND (r) register accessor: CoreSight ROM Table End\nENTRY (r) register accessor: CoreSight ROM Table Entry 0\nENTRY1 (r) register accessor: CoreSight ROM Table Entry 1\nLENGTH (rw) register accessor: Length\nMEMTYPE (r) register accessor: CoreSight ROM Table Memory …\nPID0 (r) register accessor: Peripheral Identification 0\nPID1 (r) register accessor: Peripheral Identification 1\nPID2 (r) register accessor: Peripheral Identification 2\nPID3 (r) register accessor: Peripheral Identification 3\nPID4 (r) register accessor: Peripheral Identification 4\nRegister block\nSTATUSA (rw) register accessor: Status A\nSTATUSB (r) register accessor: Status B\nAddress\n0x04 - Address\nComponent Identification 0\n0x1ff0 - Component Identification 0\nComponent Identification 1\n0x1ff4 - Component Identification 1\nComponent Identification 2\n0x1ff8 - Component Identification 2\nComponent Identification 3\n0x1ffc - Component Identification 3\nControl\n0x00 - Control\nData\n0x0c - Data\nDebug Communication Channel n\n0x10..0x18 - Debug Communication Channel n\nIterator for array of: 0x10..0x18 - Debug Communication …\nDevice Identification\n0x18 - Device Identification\nCoreSight ROM Table End\n0x1008 - CoreSight ROM Table End\nCoreSight ROM Table Entry 0\n0x1000 - CoreSight ROM Table Entry 0\nCoreSight ROM Table Entry 1\n0x1004 - CoreSight ROM Table Entry 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLength\n0x08 - Length\nCoreSight ROM Table Memory Type\n0x1fcc - CoreSight ROM Table Memory Type\nPeripheral Identification 0\n0x1fe0 - Peripheral Identification 0\nPeripheral Identification 1\n0x1fe4 - Peripheral Identification 1\nPeripheral Identification 2\n0x1fe8 - Peripheral Identification 2\nPeripheral Identification 3\n0x1fec - Peripheral Identification 3\nPeripheral Identification 4\n0x1fd0 - Peripheral Identification 4\nStatus A\n0x01 - Status A\nStatus B\n0x02 - Status B\nField <code>ADDR</code> reader - Address\nAddress\nField <code>ADDR</code> writer - Address\nRegister <code>ADDR</code> reader\nRegister <code>ADDR</code> writer\nBits 2:31 - Address\nBits 2:31 - Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nComponent Identification 0\nField <code>PREAMBLEB0</code> reader - Preamble Byte 0\nRegister <code>CID0</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Preamble Byte 0\nField <code>CCLASS</code> reader - Component Class\nComponent Identification 1\nField <code>PREAMBLE</code> reader - Preamble\nRegister <code>CID1</code> reader\nBits 4:7 - Component Class\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:3 - Preamble\nComponent Identification 2\nField <code>PREAMBLEB2</code> reader - Preamble Byte 2\nRegister <code>CID2</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Preamble Byte 2\nComponent Identification 3\nField <code>PREAMBLEB3</code> reader - Preamble Byte 3\nRegister <code>CID3</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Preamble Byte 3\nField <code>CE</code> writer - Chip Erase\nField <code>CRC</code> writer - 32-bit Cyclic Redundancy Check\nControl\nField <code>MBIST</code> writer - Memory Built-In Self-Test\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nBit 4 - Chip Erase\nBit 2 - 32-bit Cyclic Redundancy Check\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 3 - Memory Built-In Self-Test\nBit 0 - Software Reset\nField <code>DATA</code> reader - Data\nData\nField <code>DATA</code> writer - Data\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:31 - Data\nBits 0:31 - Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DATA</code> reader - Data\nField <code>DATA</code> writer - Data\nDebug Communication Channel n\nRegister <code>DCC%s</code> reader\nRegister <code>DCC%s</code> writer\nBits 0:31 - Data\nBits 0:31 - Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DEVSEL</code> reader - Device Select\nDevice Identification\nField <code>DIE</code> reader - Die Identification\nField <code>FAMILY</code> reader - Product Family\nField <code>PROCESSOR</code> reader - Processor\nRegister <code>DID</code> reader\nField <code>REVISION</code> reader - Revision\nField <code>SERIES</code> reader - Product Series\nBits 0:7 - Device Select\nBits 12:15 - Die Identification\nBits 23:27 - Product Family\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 28:31 - Processor\nBits 8:11 - Revision\nBits 16:21 - Product Series\nField <code>END</code> reader - End Marker\nCoreSight ROM Table End\nRegister <code>END</code> reader\nBits 0:31 - End Marker\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ADDOFF</code> reader - Address Offset\nCoreSight ROM Table Entry 0\nField <code>EPRES</code> reader - Entry Present\nField <code>FMT</code> reader - Format\nRegister <code>ENTRY</code> reader\nBits 12:31 - Address Offset\nBit 0 - Entry Present\nBit 1 - Format\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight ROM Table Entry 1\nRegister <code>ENTRY1</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>LENGTH</code> reader - Length\nLength\nField <code>LENGTH</code> writer - Length\nRegister <code>LENGTH</code> reader\nRegister <code>LENGTH</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 2:31 - Length\nBits 2:31 - Length\nCoreSight ROM Table Memory Type\nRegister <code>MEMTYPE</code> reader\nField <code>SMEMP</code> reader - System Memory Present\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - System Memory Present\nField <code>PARTNBL</code> reader - Part Number Low\nPeripheral Identification 0\nRegister <code>PID0</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Part Number Low\nField <code>JEPIDCL</code> reader - Low part of the JEP-106 Identity …\nField <code>PARTNBH</code> reader - Part Number High\nPeripheral Identification 1\nRegister <code>PID1</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 4:7 - Low part of the JEP-106 Identity Code\nBits 0:3 - Part Number High\nField <code>JEPIDCH</code> reader - JEP-106 Identity Code High\nField <code>JEPU</code> reader - JEP-106 Identity Code is used\nPeripheral Identification 2\nRegister <code>PID2</code> reader\nField <code>REVISION</code> reader - Revision Number\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:2 - JEP-106 Identity Code High\nBit 3 - JEP-106 Identity Code is used\nBits 4:7 - Revision Number\nField <code>CUSMOD</code> reader - ARM CUSMOD\nPeripheral Identification 3\nRegister <code>PID3</code> reader\nField <code>REVAND</code> reader - Revision Number\nBits 0:3 - ARM CUSMOD\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 4:7 - Revision Number\nField <code>FKBC</code> reader - 4KB Count\nField <code>JEPCC</code> reader - JEP-106 Continuation Code\nPeripheral Identification 4\nRegister <code>PID4</code> reader\nBits 4:7 - 4KB Count\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:3 - JEP-106 Continuation Code\nField <code>BERR</code> reader - Bus Error\nField <code>BERR</code> writer - Bus Error\nField <code>CRSTEXT</code> reader - CPU Reset Phase Extension\nField <code>CRSTEXT</code> writer - CPU Reset Phase Extension\nField <code>DONE</code> reader - Done\nField <code>DONE</code> writer - Done\nField <code>FAIL</code> reader - Failure\nField <code>FAIL</code> writer - Failure\nField <code>PERR</code> reader - Protection Error\nField <code>PERR</code> writer - Protection Error\nRegister <code>STATUSA</code> reader\nStatus A\nRegister <code>STATUSA</code> writer\nBit 2 - Bus Error\nBit 2 - Bus Error\nBit 1 - CPU Reset Phase Extension\nBit 1 - CPU Reset Phase Extension\nBit 0 - Done\nBit 0 - Done\nBit 3 - Failure\nBit 3 - Failure\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Protection Error\nBit 4 - Protection Error\nField <code>DBGPRES</code> reader - Debugger Present\nField <code>DCCD0</code> reader - Debug Communication Channel 0 Dirty\nField <code>DCCD1</code> reader - Debug Communication Channel 1 Dirty\nField <code>HPE</code> reader - Hot-Plugging Enable\nField <code>PROT</code> reader - Protected\nRegister <code>STATUSB</code> reader\nStatus B\nBit 1 - Debugger Present\nBit 2 - Debug Communication Channel 0 Dirty\nBit 3 - Debug Communication Channel 1 Dirty\nReturns the argument unchanged.\nBit 4 - Hot-Plugging Enable\nCalls <code>U::from(self)</code>.\nBit 0 - Protected\nCONFIG (rw) register accessor: Configuration n\nCTRL (rw) register accessor: Control\nEVCTRL (rw) register accessor: Event Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nNMICTRL (rw) register accessor: Non-Maskable Interrupt …\nNMIFLAG (rw) register accessor: Non-Maskable Interrupt …\nRegister block\nSTATUS (r) register accessor: Status\nWAKEUP (rw) register accessor: Wake-Up Enable\nConfiguration n\n0x18..0x20 - Configuration n\nIterator for array of: 0x18..0x20 - Configuration n\nControl\n0x00 - Control\nEvent Control\n0x04 - Event Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x08 - Interrupt Enable Clear\nInterrupt Enable Set\n0x0c - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x10 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nNon-Maskable Interrupt Control\n0x02 - Non-Maskable Interrupt Control\nNon-Maskable Interrupt Flag Status and Clear\n0x03 - Non-Maskable Interrupt Flag Status and Clear\nStatus\n0x01 - Status\nWake-Up Enable\n0x14 - Wake-Up Enable\n3: Both-edges detection\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\nConfiguration n\n2: Falling-edge detection\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\nField <code>FILTEN0</code> reader - Filter 0 Enable\nField <code>FILTEN0</code> writer - Filter 0 Enable\nField <code>FILTEN1</code> reader - Filter 1 Enable\nField <code>FILTEN1</code> writer - Filter 1 Enable\nField <code>FILTEN2</code> reader - Filter 2 Enable\nField <code>FILTEN2</code> writer - Filter 2 Enable\nField <code>FILTEN3</code> reader - Filter 3 Enable\nField <code>FILTEN3</code> writer - Filter 3 Enable\nField <code>FILTEN4</code> reader - Filter 4 Enable\nField <code>FILTEN4</code> writer - Filter 4 Enable\nField <code>FILTEN5</code> reader - Filter 5 Enable\nField <code>FILTEN5</code> writer - Filter 5 Enable\nField <code>FILTEN6</code> reader - Filter 6 Enable\nField <code>FILTEN6</code> writer - Filter 6 Enable\nField <code>FILTEN7</code> reader - Filter 7 Enable\nField <code>FILTEN7</code> writer - Filter 7 Enable\n4: High-level detection\n4: High level detection\n4: High level detection\n4: High level detection\n4: High level detection\n4: High level detection\n4: High level detection\n4: High level detection\n5: Low-level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n0: No detection\n0: No detection\n0: No detection\n0: No detection\n0: No detection\n0: No detection\n0: No detection\n0: No detection\nRegister <code>CONFIG%s</code> reader\n1: Rising-edge detection\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\nField <code>SENSE0</code> reader - Input Sense 0 Configuration\nField <code>SENSE0</code> writer - Input Sense 0 Configuration\nInput Sense 0 Configuration\nField <code>SENSE1</code> reader - Input Sense 1 Configuration\nField <code>SENSE1</code> writer - Input Sense 1 Configuration\nInput Sense 1 Configuration\nField <code>SENSE2</code> reader - Input Sense 2 Configuration\nField <code>SENSE2</code> writer - Input Sense 2 Configuration\nInput Sense 2 Configuration\nField <code>SENSE3</code> reader - Input Sense 3 Configuration\nField <code>SENSE3</code> writer - Input Sense 3 Configuration\nInput Sense 3 Configuration\nField <code>SENSE4</code> reader - Input Sense 4 Configuration\nField <code>SENSE4</code> writer - Input Sense 4 Configuration\nInput Sense 4 Configuration\nField <code>SENSE5</code> reader - Input Sense 5 Configuration\nField <code>SENSE5</code> writer - Input Sense 5 Configuration\nInput Sense 5 Configuration\nField <code>SENSE6</code> reader - Input Sense 6 Configuration\nField <code>SENSE6</code> writer - Input Sense 6 Configuration\nInput Sense 6 Configuration\nField <code>SENSE7</code> reader - Input Sense 7 Configuration\nField <code>SENSE7</code> writer - Input Sense 7 Configuration\nInput Sense 7 Configuration\nRegister <code>CONFIG%s</code> writer\nBoth-edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nFalling-edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nBit 3 - Filter 0 Enable\nBit 3 - Filter 0 Enable\nBit 7 - Filter 1 Enable\nBit 7 - Filter 1 Enable\nBit 11 - Filter 2 Enable\nBit 11 - Filter 2 Enable\nBit 15 - Filter 3 Enable\nBit 15 - Filter 3 Enable\nBit 19 - Filter 4 Enable\nBit 19 - Filter 4 Enable\nBit 23 - Filter 5 Enable\nBit 23 - Filter 5 Enable\nBit 27 - Filter 6 Enable\nBit 27 - Filter 6 Enable\nBit 31 - Filter 7 Enable\nBit 31 - Filter 7 Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHigh-level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBoth-edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nFalling-edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nHigh-level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nLow-level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nRising-edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nLow-level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nRising-edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nBits 0:2 - Input Sense 0 Configuration\nBits 0:2 - Input Sense 0 Configuration\nBits 4:6 - Input Sense 1 Configuration\nBits 4:6 - Input Sense 1 Configuration\nBits 8:10 - Input Sense 2 Configuration\nBits 8:10 - Input Sense 2 Configuration\nBits 12:14 - Input Sense 3 Configuration\nBits 12:14 - Input Sense 3 Configuration\nBits 16:18 - Input Sense 4 Configuration\nBits 16:18 - Input Sense 4 Configuration\nBits 20:22 - Input Sense 5 Configuration\nBits 20:22 - Input Sense 5 Configuration\nBits 24:26 - Input Sense 6 Configuration\nBits 24:26 - Input Sense 6 Configuration\nBits 28:30 - Input Sense 7 Configuration\nBits 28:30 - Input Sense 7 Configuration\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nControl\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nRegister <code>CTRL</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset\nBit 0 - Software Reset\nEvent Control\nField <code>EXTINTEO0</code> reader - External Interrupt 0 Event Output …\nField <code>EXTINTEO0</code> writer - External Interrupt 0 Event Output …\nField <code>EXTINTEO10</code> reader - External Interrupt 10 Event …\nField <code>EXTINTEO10</code> writer - External Interrupt 10 Event …\nField <code>EXTINTEO11</code> reader - External Interrupt 11 Event …\nField <code>EXTINTEO11</code> writer - External Interrupt 11 Event …\nField <code>EXTINTEO12</code> reader - External Interrupt 12 Event …\nField <code>EXTINTEO12</code> writer - External Interrupt 12 Event …\nField <code>EXTINTEO13</code> reader - External Interrupt 13 Event …\nField <code>EXTINTEO13</code> writer - External Interrupt 13 Event …\nField <code>EXTINTEO14</code> reader - External Interrupt 14 Event …\nField <code>EXTINTEO14</code> writer - External Interrupt 14 Event …\nField <code>EXTINTEO15</code> reader - External Interrupt 15 Event …\nField <code>EXTINTEO15</code> writer - External Interrupt 15 Event …\nField <code>EXTINTEO1</code> reader - External Interrupt 1 Event Output …\nField <code>EXTINTEO1</code> writer - External Interrupt 1 Event Output …\nField <code>EXTINTEO2</code> reader - External Interrupt 2 Event Output …\nField <code>EXTINTEO2</code> writer - External Interrupt 2 Event Output …\nField <code>EXTINTEO3</code> reader - External Interrupt 3 Event Output …\nField <code>EXTINTEO3</code> writer - External Interrupt 3 Event Output …\nField <code>EXTINTEO4</code> reader - External Interrupt 4 Event Output …\nField <code>EXTINTEO4</code> writer - External Interrupt 4 Event Output …\nField <code>EXTINTEO5</code> reader - External Interrupt 5 Event Output …\nField <code>EXTINTEO5</code> writer - External Interrupt 5 Event Output …\nField <code>EXTINTEO6</code> reader - External Interrupt 6 Event Output …\nField <code>EXTINTEO6</code> writer - External Interrupt 6 Event Output …\nField <code>EXTINTEO7</code> reader - External Interrupt 7 Event Output …\nField <code>EXTINTEO7</code> writer - External Interrupt 7 Event Output …\nField <code>EXTINTEO8</code> reader - External Interrupt 8 Event Output …\nField <code>EXTINTEO8</code> writer - External Interrupt 8 Event Output …\nField <code>EXTINTEO9</code> reader - External Interrupt 9 Event Output …\nField <code>EXTINTEO9</code> writer - External Interrupt 9 Event Output …\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBit 0 - External Interrupt 0 Event Output Enable\nBit 0 - External Interrupt 0 Event Output Enable\nBit 1 - External Interrupt 1 Event Output Enable\nBit 1 - External Interrupt 1 Event Output Enable\nBit 10 - External Interrupt 10 Event Output Enable\nBit 10 - External Interrupt 10 Event Output Enable\nBit 11 - External Interrupt 11 Event Output Enable\nBit 11 - External Interrupt 11 Event Output Enable\nBit 12 - External Interrupt 12 Event Output Enable\nBit 12 - External Interrupt 12 Event Output Enable\nBit 13 - External Interrupt 13 Event Output Enable\nBit 13 - External Interrupt 13 Event Output Enable\nBit 14 - External Interrupt 14 Event Output Enable\nBit 14 - External Interrupt 14 Event Output Enable\nBit 15 - External Interrupt 15 Event Output Enable\nBit 15 - External Interrupt 15 Event Output Enable\nBit 2 - External Interrupt 2 Event Output Enable\nBit 2 - External Interrupt 2 Event Output Enable\nBit 3 - External Interrupt 3 Event Output Enable\nBit 3 - External Interrupt 3 Event Output Enable\nBit 4 - External Interrupt 4 Event Output Enable\nBit 4 - External Interrupt 4 Event Output Enable\nBit 5 - External Interrupt 5 Event Output Enable\nBit 5 - External Interrupt 5 Event Output Enable\nBit 6 - External Interrupt 6 Event Output Enable\nBit 6 - External Interrupt 6 Event Output Enable\nBit 7 - External Interrupt 7 Event Output Enable\nBit 7 - External Interrupt 7 Event Output Enable\nBit 8 - External Interrupt 8 Event Output Enable\nBit 8 - External Interrupt 8 Event Output Enable\nBit 9 - External Interrupt 9 Event Output Enable\nBit 9 - External Interrupt 9 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EXTINT0</code> reader - External Interrupt 0 Enable\nField <code>EXTINT0</code> writer - External Interrupt 0 Enable\nField <code>EXTINT10</code> reader - External Interrupt 10 Enable\nField <code>EXTINT10</code> writer - External Interrupt 10 Enable\nField <code>EXTINT11</code> reader - External Interrupt 11 Enable\nField <code>EXTINT11</code> writer - External Interrupt 11 Enable\nField <code>EXTINT12</code> reader - External Interrupt 12 Enable\nField <code>EXTINT12</code> writer - External Interrupt 12 Enable\nField <code>EXTINT13</code> reader - External Interrupt 13 Enable\nField <code>EXTINT13</code> writer - External Interrupt 13 Enable\nField <code>EXTINT14</code> reader - External Interrupt 14 Enable\nField <code>EXTINT14</code> writer - External Interrupt 14 Enable\nField <code>EXTINT15</code> reader - External Interrupt 15 Enable\nField <code>EXTINT15</code> writer - External Interrupt 15 Enable\nField <code>EXTINT1</code> reader - External Interrupt 1 Enable\nField <code>EXTINT1</code> writer - External Interrupt 1 Enable\nField <code>EXTINT2</code> reader - External Interrupt 2 Enable\nField <code>EXTINT2</code> writer - External Interrupt 2 Enable\nField <code>EXTINT3</code> reader - External Interrupt 3 Enable\nField <code>EXTINT3</code> writer - External Interrupt 3 Enable\nField <code>EXTINT4</code> reader - External Interrupt 4 Enable\nField <code>EXTINT4</code> writer - External Interrupt 4 Enable\nField <code>EXTINT5</code> reader - External Interrupt 5 Enable\nField <code>EXTINT5</code> writer - External Interrupt 5 Enable\nField <code>EXTINT6</code> reader - External Interrupt 6 Enable\nField <code>EXTINT6</code> writer - External Interrupt 6 Enable\nField <code>EXTINT7</code> reader - External Interrupt 7 Enable\nField <code>EXTINT7</code> writer - External Interrupt 7 Enable\nField <code>EXTINT8</code> reader - External Interrupt 8 Enable\nField <code>EXTINT8</code> writer - External Interrupt 8 Enable\nField <code>EXTINT9</code> reader - External Interrupt 9 Enable\nField <code>EXTINT9</code> writer - External Interrupt 9 Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nBit 0 - External Interrupt 0 Enable\nBit 0 - External Interrupt 0 Enable\nBit 1 - External Interrupt 1 Enable\nBit 1 - External Interrupt 1 Enable\nBit 10 - External Interrupt 10 Enable\nBit 10 - External Interrupt 10 Enable\nBit 11 - External Interrupt 11 Enable\nBit 11 - External Interrupt 11 Enable\nBit 12 - External Interrupt 12 Enable\nBit 12 - External Interrupt 12 Enable\nBit 13 - External Interrupt 13 Enable\nBit 13 - External Interrupt 13 Enable\nBit 14 - External Interrupt 14 Enable\nBit 14 - External Interrupt 14 Enable\nBit 15 - External Interrupt 15 Enable\nBit 15 - External Interrupt 15 Enable\nBit 2 - External Interrupt 2 Enable\nBit 2 - External Interrupt 2 Enable\nBit 3 - External Interrupt 3 Enable\nBit 3 - External Interrupt 3 Enable\nBit 4 - External Interrupt 4 Enable\nBit 4 - External Interrupt 4 Enable\nBit 5 - External Interrupt 5 Enable\nBit 5 - External Interrupt 5 Enable\nBit 6 - External Interrupt 6 Enable\nBit 6 - External Interrupt 6 Enable\nBit 7 - External Interrupt 7 Enable\nBit 7 - External Interrupt 7 Enable\nBit 8 - External Interrupt 8 Enable\nBit 8 - External Interrupt 8 Enable\nBit 9 - External Interrupt 9 Enable\nBit 9 - External Interrupt 9 Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EXTINT0</code> reader - External Interrupt 0 Enable\nField <code>EXTINT0</code> writer - External Interrupt 0 Enable\nField <code>EXTINT10</code> reader - External Interrupt 10 Enable\nField <code>EXTINT10</code> writer - External Interrupt 10 Enable\nField <code>EXTINT11</code> reader - External Interrupt 11 Enable\nField <code>EXTINT11</code> writer - External Interrupt 11 Enable\nField <code>EXTINT12</code> reader - External Interrupt 12 Enable\nField <code>EXTINT12</code> writer - External Interrupt 12 Enable\nField <code>EXTINT13</code> reader - External Interrupt 13 Enable\nField <code>EXTINT13</code> writer - External Interrupt 13 Enable\nField <code>EXTINT14</code> reader - External Interrupt 14 Enable\nField <code>EXTINT14</code> writer - External Interrupt 14 Enable\nField <code>EXTINT15</code> reader - External Interrupt 15 Enable\nField <code>EXTINT15</code> writer - External Interrupt 15 Enable\nField <code>EXTINT1</code> reader - External Interrupt 1 Enable\nField <code>EXTINT1</code> writer - External Interrupt 1 Enable\nField <code>EXTINT2</code> reader - External Interrupt 2 Enable\nField <code>EXTINT2</code> writer - External Interrupt 2 Enable\nField <code>EXTINT3</code> reader - External Interrupt 3 Enable\nField <code>EXTINT3</code> writer - External Interrupt 3 Enable\nField <code>EXTINT4</code> reader - External Interrupt 4 Enable\nField <code>EXTINT4</code> writer - External Interrupt 4 Enable\nField <code>EXTINT5</code> reader - External Interrupt 5 Enable\nField <code>EXTINT5</code> writer - External Interrupt 5 Enable\nField <code>EXTINT6</code> reader - External Interrupt 6 Enable\nField <code>EXTINT6</code> writer - External Interrupt 6 Enable\nField <code>EXTINT7</code> reader - External Interrupt 7 Enable\nField <code>EXTINT7</code> writer - External Interrupt 7 Enable\nField <code>EXTINT8</code> reader - External Interrupt 8 Enable\nField <code>EXTINT8</code> writer - External Interrupt 8 Enable\nField <code>EXTINT9</code> reader - External Interrupt 9 Enable\nField <code>EXTINT9</code> writer - External Interrupt 9 Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nBit 0 - External Interrupt 0 Enable\nBit 0 - External Interrupt 0 Enable\nBit 1 - External Interrupt 1 Enable\nBit 1 - External Interrupt 1 Enable\nBit 10 - External Interrupt 10 Enable\nBit 10 - External Interrupt 10 Enable\nBit 11 - External Interrupt 11 Enable\nBit 11 - External Interrupt 11 Enable\nBit 12 - External Interrupt 12 Enable\nBit 12 - External Interrupt 12 Enable\nBit 13 - External Interrupt 13 Enable\nBit 13 - External Interrupt 13 Enable\nBit 14 - External Interrupt 14 Enable\nBit 14 - External Interrupt 14 Enable\nBit 15 - External Interrupt 15 Enable\nBit 15 - External Interrupt 15 Enable\nBit 2 - External Interrupt 2 Enable\nBit 2 - External Interrupt 2 Enable\nBit 3 - External Interrupt 3 Enable\nBit 3 - External Interrupt 3 Enable\nBit 4 - External Interrupt 4 Enable\nBit 4 - External Interrupt 4 Enable\nBit 5 - External Interrupt 5 Enable\nBit 5 - External Interrupt 5 Enable\nBit 6 - External Interrupt 6 Enable\nBit 6 - External Interrupt 6 Enable\nBit 7 - External Interrupt 7 Enable\nBit 7 - External Interrupt 7 Enable\nBit 8 - External Interrupt 8 Enable\nBit 8 - External Interrupt 8 Enable\nBit 9 - External Interrupt 9 Enable\nBit 9 - External Interrupt 9 Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EXTINT0</code> reader - External Interrupt 0\nField <code>EXTINT0</code> writer - External Interrupt 0\nField <code>EXTINT10</code> reader - External Interrupt 10\nField <code>EXTINT10</code> writer - External Interrupt 10\nField <code>EXTINT11</code> reader - External Interrupt 11\nField <code>EXTINT11</code> writer - External Interrupt 11\nField <code>EXTINT12</code> reader - External Interrupt 12\nField <code>EXTINT12</code> writer - External Interrupt 12\nField <code>EXTINT13</code> reader - External Interrupt 13\nField <code>EXTINT13</code> writer - External Interrupt 13\nField <code>EXTINT14</code> reader - External Interrupt 14\nField <code>EXTINT14</code> writer - External Interrupt 14\nField <code>EXTINT15</code> reader - External Interrupt 15\nField <code>EXTINT15</code> writer - External Interrupt 15\nField <code>EXTINT1</code> reader - External Interrupt 1\nField <code>EXTINT1</code> writer - External Interrupt 1\nField <code>EXTINT2</code> reader - External Interrupt 2\nField <code>EXTINT2</code> writer - External Interrupt 2\nField <code>EXTINT3</code> reader - External Interrupt 3\nField <code>EXTINT3</code> writer - External Interrupt 3\nField <code>EXTINT4</code> reader - External Interrupt 4\nField <code>EXTINT4</code> writer - External Interrupt 4\nField <code>EXTINT5</code> reader - External Interrupt 5\nField <code>EXTINT5</code> writer - External Interrupt 5\nField <code>EXTINT6</code> reader - External Interrupt 6\nField <code>EXTINT6</code> writer - External Interrupt 6\nField <code>EXTINT7</code> reader - External Interrupt 7\nField <code>EXTINT7</code> writer - External Interrupt 7\nField <code>EXTINT8</code> reader - External Interrupt 8\nField <code>EXTINT8</code> writer - External Interrupt 8\nField <code>EXTINT9</code> reader - External Interrupt 9\nField <code>EXTINT9</code> writer - External Interrupt 9\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nBit 0 - External Interrupt 0\nBit 0 - External Interrupt 0\nBit 1 - External Interrupt 1\nBit 1 - External Interrupt 1\nBit 10 - External Interrupt 10\nBit 10 - External Interrupt 10\nBit 11 - External Interrupt 11\nBit 11 - External Interrupt 11\nBit 12 - External Interrupt 12\nBit 12 - External Interrupt 12\nBit 13 - External Interrupt 13\nBit 13 - External Interrupt 13\nBit 14 - External Interrupt 14\nBit 14 - External Interrupt 14\nBit 15 - External Interrupt 15\nBit 15 - External Interrupt 15\nBit 2 - External Interrupt 2\nBit 2 - External Interrupt 2\nBit 3 - External Interrupt 3\nBit 3 - External Interrupt 3\nBit 4 - External Interrupt 4\nBit 4 - External Interrupt 4\nBit 5 - External Interrupt 5\nBit 5 - External Interrupt 5\nBit 6 - External Interrupt 6\nBit 6 - External Interrupt 6\nBit 7 - External Interrupt 7\nBit 7 - External Interrupt 7\nBit 8 - External Interrupt 8\nBit 8 - External Interrupt 8\nBit 9 - External Interrupt 9\nBit 9 - External Interrupt 9\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n3: Both-edges detection\n2: Falling-edge detection\n4: High-level detection\n5: Low-level detection\nNon-Maskable Interrupt Control\nField <code>NMIFILTEN</code> reader - Non-Maskable Interrupt Filter …\nField <code>NMIFILTEN</code> writer - Non-Maskable Interrupt Filter …\nField <code>NMISENSE</code> reader - Non-Maskable Interrupt Sense\nField <code>NMISENSE</code> writer - Non-Maskable Interrupt Sense\nNon-Maskable Interrupt Sense\n0: No detection\nRegister <code>NMICTRL</code> reader\n1: Rising-edge detection\nRegister <code>NMICTRL</code> writer\nBoth-edges detection\nFalling-edge detection\nReturns the argument unchanged.\nReturns the argument unchanged.\nHigh-level detection\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBoth-edges detection\nFalling-edge detection\nHigh-level detection\nLow-level detection\nNo detection\nRising-edge detection\nLow-level detection\nBit 3 - Non-Maskable Interrupt Filter Enable\nBit 3 - Non-Maskable Interrupt Filter Enable\nBits 0:2 - Non-Maskable Interrupt Sense\nBits 0:2 - Non-Maskable Interrupt Sense\nNo detection\nRising-edge detection\nGet enumerated values variant\nField <code>NMI</code> reader - Non-Maskable Interrupt\nField <code>NMI</code> writer - Non-Maskable Interrupt\nNon-Maskable Interrupt Flag Status and Clear\nRegister <code>NMIFLAG</code> reader\nRegister <code>NMIFLAG</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Non-Maskable Interrupt\nBit 0 - Non-Maskable Interrupt\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy\nRegister <code>WAKEUP</code> reader\nRegister <code>WAKEUP</code> writer\nWake-Up Enable\nField <code>WAKEUPEN0</code> reader - External Interrupt 0 Wake-up …\nField <code>WAKEUPEN0</code> writer - External Interrupt 0 Wake-up …\nField <code>WAKEUPEN10</code> reader - External Interrupt 10 Wake-up …\nField <code>WAKEUPEN10</code> writer - External Interrupt 10 Wake-up …\nField <code>WAKEUPEN11</code> reader - External Interrupt 11 Wake-up …\nField <code>WAKEUPEN11</code> writer - External Interrupt 11 Wake-up …\nField <code>WAKEUPEN12</code> reader - External Interrupt 12 Wake-up …\nField <code>WAKEUPEN12</code> writer - External Interrupt 12 Wake-up …\nField <code>WAKEUPEN13</code> reader - External Interrupt 13 Wake-up …\nField <code>WAKEUPEN13</code> writer - External Interrupt 13 Wake-up …\nField <code>WAKEUPEN14</code> reader - External Interrupt 14 Wake-up …\nField <code>WAKEUPEN14</code> writer - External Interrupt 14 Wake-up …\nField <code>WAKEUPEN15</code> reader - External Interrupt 15 Wake-up …\nField <code>WAKEUPEN15</code> writer - External Interrupt 15 Wake-up …\nField <code>WAKEUPEN1</code> reader - External Interrupt 1 Wake-up …\nField <code>WAKEUPEN1</code> writer - External Interrupt 1 Wake-up …\nField <code>WAKEUPEN2</code> reader - External Interrupt 2 Wake-up …\nField <code>WAKEUPEN2</code> writer - External Interrupt 2 Wake-up …\nField <code>WAKEUPEN3</code> reader - External Interrupt 3 Wake-up …\nField <code>WAKEUPEN3</code> writer - External Interrupt 3 Wake-up …\nField <code>WAKEUPEN4</code> reader - External Interrupt 4 Wake-up …\nField <code>WAKEUPEN4</code> writer - External Interrupt 4 Wake-up …\nField <code>WAKEUPEN5</code> reader - External Interrupt 5 Wake-up …\nField <code>WAKEUPEN5</code> writer - External Interrupt 5 Wake-up …\nField <code>WAKEUPEN6</code> reader - External Interrupt 6 Wake-up …\nField <code>WAKEUPEN6</code> writer - External Interrupt 6 Wake-up …\nField <code>WAKEUPEN7</code> reader - External Interrupt 7 Wake-up …\nField <code>WAKEUPEN7</code> writer - External Interrupt 7 Wake-up …\nField <code>WAKEUPEN8</code> reader - External Interrupt 8 Wake-up …\nField <code>WAKEUPEN8</code> writer - External Interrupt 8 Wake-up …\nField <code>WAKEUPEN9</code> reader - External Interrupt 9 Wake-up …\nField <code>WAKEUPEN9</code> writer - External Interrupt 9 Wake-up …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - External Interrupt 0 Wake-up Enable\nBit 0 - External Interrupt 0 Wake-up Enable\nBit 1 - External Interrupt 1 Wake-up Enable\nBit 1 - External Interrupt 1 Wake-up Enable\nBit 10 - External Interrupt 10 Wake-up Enable\nBit 10 - External Interrupt 10 Wake-up Enable\nBit 11 - External Interrupt 11 Wake-up Enable\nBit 11 - External Interrupt 11 Wake-up Enable\nBit 12 - External Interrupt 12 Wake-up Enable\nBit 12 - External Interrupt 12 Wake-up Enable\nBit 13 - External Interrupt 13 Wake-up Enable\nBit 13 - External Interrupt 13 Wake-up Enable\nBit 14 - External Interrupt 14 Wake-up Enable\nBit 14 - External Interrupt 14 Wake-up Enable\nBit 15 - External Interrupt 15 Wake-up Enable\nBit 15 - External Interrupt 15 Wake-up Enable\nBit 2 - External Interrupt 2 Wake-up Enable\nBit 2 - External Interrupt 2 Wake-up Enable\nBit 3 - External Interrupt 3 Wake-up Enable\nBit 3 - External Interrupt 3 Wake-up Enable\nBit 4 - External Interrupt 4 Wake-up Enable\nBit 4 - External Interrupt 4 Wake-up Enable\nBit 5 - External Interrupt 5 Wake-up Enable\nBit 5 - External Interrupt 5 Wake-up Enable\nBit 6 - External Interrupt 6 Wake-up Enable\nBit 6 - External Interrupt 6 Wake-up Enable\nBit 7 - External Interrupt 7 Wake-up Enable\nBit 7 - External Interrupt 7 Wake-up Enable\nBit 8 - External Interrupt 8 Wake-up Enable\nBit 8 - External Interrupt 8 Wake-up Enable\nBit 9 - External Interrupt 9 Wake-up Enable\nBit 9 - External Interrupt 9 Wake-up Enable\nCHANNEL (rw) register accessor: Channel\nCHSTATUS (r) register accessor: Channel Status\nCTRL (w) register accessor: Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRegister block\nUSER (rw) register accessor: User Multiplexer\nChannel\n0x04 - Channel\nChannel Status\n0x0c - Channel Status\nControl\n0x00 - Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x10 - Interrupt Enable Clear\nInterrupt Enable Set\n0x14 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x18 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nUser Multiplexer\n0x08 - User Multiplexer\n2: Asynchronous path\n3: Event detection on rising and falling edges of the …\nField <code>CHANNEL</code> reader - Channel Selection\nChannel\nField <code>CHANNEL</code> writer - Channel Selection\nField <code>EDGSEL</code> reader - Edge Detection Selection\nField <code>EDGSEL</code> writer - Edge Detection Selection\nEdge Detection Selection\nField <code>EVGEN</code> reader - Event Generator Selection\nField <code>EVGEN</code> writer - Event Generator Selection\n2: Event detection only on the falling edge of the signal …\n0: No event output when using the resynchronized or …\nField <code>PATH</code> reader - Path Selection\nField <code>PATH</code> writer - Path Selection\nPath Selection\nRegister <code>CHANNEL</code> reader\n1: Resynchronized path\n1: Event detection only on the rising edge of the signal …\nField <code>SWEVT</code> reader - Software Event\nField <code>SWEVT</code> writer - Software Event\n0: Synchronous path\nRegister <code>CHANNEL</code> writer\nAsynchronous path\nEvent detection on rising and falling edges of the signal …\nBits 0:3 - Channel Selection\nBits 0:3 - Channel Selection\nBits 26:27 - Edge Detection Selection\nBits 26:27 - Edge Detection Selection\nBits 16:22 - Event Generator Selection\nBits 16:22 - Event Generator Selection\nEvent detection only on the falling edge of the signal …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAsynchronous path\nEvent detection on rising and falling edges of the signal …\nEvent detection only on the falling edge of the signal …\nNo event output when using the resynchronized or …\nResynchronized path\nEvent detection only on the rising edge of the signal from …\nSynchronous path\nNo event output when using the resynchronized or …\nBits 24:25 - Path Selection\nBits 24:25 - Path Selection\nResynchronized path\nEvent detection only on the rising edge of the signal from …\nBit 8 - Software Event\nBit 8 - Software Event\nSynchronous path\nGet enumerated values variant\nGet enumerated values variant\nField <code>CHBUSY0</code> reader - Channel 0 Busy\nField <code>CHBUSY10</code> reader - Channel 10 Busy\nField <code>CHBUSY11</code> reader - Channel 11 Busy\nField <code>CHBUSY1</code> reader - Channel 1 Busy\nField <code>CHBUSY2</code> reader - Channel 2 Busy\nField <code>CHBUSY3</code> reader - Channel 3 Busy\nField <code>CHBUSY4</code> reader - Channel 4 Busy\nField <code>CHBUSY5</code> reader - Channel 5 Busy\nField <code>CHBUSY6</code> reader - Channel 6 Busy\nField <code>CHBUSY7</code> reader - Channel 7 Busy\nField <code>CHBUSY8</code> reader - Channel 8 Busy\nField <code>CHBUSY9</code> reader - Channel 9 Busy\nChannel Status\nRegister <code>CHSTATUS</code> reader\nField <code>USRRDY0</code> reader - Channel 0 User Ready\nField <code>USRRDY10</code> reader - Channel 10 User Ready\nField <code>USRRDY11</code> reader - Channel 11 User Ready\nField <code>USRRDY1</code> reader - Channel 1 User Ready\nField <code>USRRDY2</code> reader - Channel 2 User Ready\nField <code>USRRDY3</code> reader - Channel 3 User Ready\nField <code>USRRDY4</code> reader - Channel 4 User Ready\nField <code>USRRDY5</code> reader - Channel 5 User Ready\nField <code>USRRDY6</code> reader - Channel 6 User Ready\nField <code>USRRDY7</code> reader - Channel 7 User Ready\nField <code>USRRDY8</code> reader - Channel 8 User Ready\nField <code>USRRDY9</code> reader - Channel 9 User Ready\nBit 8 - Channel 0 Busy\nBit 9 - Channel 1 Busy\nBit 26 - Channel 10 Busy\nBit 27 - Channel 11 Busy\nBit 10 - Channel 2 Busy\nBit 11 - Channel 3 Busy\nBit 12 - Channel 4 Busy\nBit 13 - Channel 5 Busy\nBit 14 - Channel 6 Busy\nBit 15 - Channel 7 Busy\nBit 24 - Channel 8 Busy\nBit 25 - Channel 9 Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel 0 User Ready\nBit 1 - Channel 1 User Ready\nBit 18 - Channel 10 User Ready\nBit 19 - Channel 11 User Ready\nBit 2 - Channel 2 User Ready\nBit 3 - Channel 3 User Ready\nBit 4 - Channel 4 User Ready\nBit 5 - Channel 5 User Ready\nBit 6 - Channel 6 User Ready\nBit 7 - Channel 7 User Ready\nBit 16 - Channel 8 User Ready\nBit 17 - Channel 9 User Ready\nControl\nField <code>GCLKREQ</code> writer - Generic Clock Requests\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nReturns the argument unchanged.\nBit 4 - Generic Clock Requests\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset\nField <code>EVD0</code> reader - Channel 0 Event Detection Interrupt …\nField <code>EVD0</code> writer - Channel 0 Event Detection Interrupt …\nField <code>EVD10</code> reader - Channel 10 Event Detection Interrupt …\nField <code>EVD10</code> writer - Channel 10 Event Detection Interrupt …\nField <code>EVD11</code> reader - Channel 11 Event Detection Interrupt …\nField <code>EVD11</code> writer - Channel 11 Event Detection Interrupt …\nField <code>EVD1</code> reader - Channel 1 Event Detection Interrupt …\nField <code>EVD1</code> writer - Channel 1 Event Detection Interrupt …\nField <code>EVD2</code> reader - Channel 2 Event Detection Interrupt …\nField <code>EVD2</code> writer - Channel 2 Event Detection Interrupt …\nField <code>EVD3</code> reader - Channel 3 Event Detection Interrupt …\nField <code>EVD3</code> writer - Channel 3 Event Detection Interrupt …\nField <code>EVD4</code> reader - Channel 4 Event Detection Interrupt …\nField <code>EVD4</code> writer - Channel 4 Event Detection Interrupt …\nField <code>EVD5</code> reader - Channel 5 Event Detection Interrupt …\nField <code>EVD5</code> writer - Channel 5 Event Detection Interrupt …\nField <code>EVD6</code> reader - Channel 6 Event Detection Interrupt …\nField <code>EVD6</code> writer - Channel 6 Event Detection Interrupt …\nField <code>EVD7</code> reader - Channel 7 Event Detection Interrupt …\nField <code>EVD7</code> writer - Channel 7 Event Detection Interrupt …\nField <code>EVD8</code> reader - Channel 8 Event Detection Interrupt …\nField <code>EVD8</code> writer - Channel 8 Event Detection Interrupt …\nField <code>EVD9</code> reader - Channel 9 Event Detection Interrupt …\nField <code>EVD9</code> writer - Channel 9 Event Detection Interrupt …\nInterrupt Enable Clear\nField <code>OVR0</code> reader - Channel 0 Overrun Interrupt Enable\nField <code>OVR0</code> writer - Channel 0 Overrun Interrupt Enable\nField <code>OVR10</code> reader - Channel 10 Overrun Interrupt Enable\nField <code>OVR10</code> writer - Channel 10 Overrun Interrupt Enable\nField <code>OVR11</code> reader - Channel 11 Overrun Interrupt Enable\nField <code>OVR11</code> writer - Channel 11 Overrun Interrupt Enable\nField <code>OVR1</code> reader - Channel 1 Overrun Interrupt Enable\nField <code>OVR1</code> writer - Channel 1 Overrun Interrupt Enable\nField <code>OVR2</code> reader - Channel 2 Overrun Interrupt Enable\nField <code>OVR2</code> writer - Channel 2 Overrun Interrupt Enable\nField <code>OVR3</code> reader - Channel 3 Overrun Interrupt Enable\nField <code>OVR3</code> writer - Channel 3 Overrun Interrupt Enable\nField <code>OVR4</code> reader - Channel 4 Overrun Interrupt Enable\nField <code>OVR4</code> writer - Channel 4 Overrun Interrupt Enable\nField <code>OVR5</code> reader - Channel 5 Overrun Interrupt Enable\nField <code>OVR5</code> writer - Channel 5 Overrun Interrupt Enable\nField <code>OVR6</code> reader - Channel 6 Overrun Interrupt Enable\nField <code>OVR6</code> writer - Channel 6 Overrun Interrupt Enable\nField <code>OVR7</code> reader - Channel 7 Overrun Interrupt Enable\nField <code>OVR7</code> writer - Channel 7 Overrun Interrupt Enable\nField <code>OVR8</code> reader - Channel 8 Overrun Interrupt Enable\nField <code>OVR8</code> writer - Channel 8 Overrun Interrupt Enable\nField <code>OVR9</code> reader - Channel 9 Overrun Interrupt Enable\nField <code>OVR9</code> writer - Channel 9 Overrun Interrupt Enable\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nBit 8 - Channel 0 Event Detection Interrupt Enable\nBit 8 - Channel 0 Event Detection Interrupt Enable\nBit 9 - Channel 1 Event Detection Interrupt Enable\nBit 9 - Channel 1 Event Detection Interrupt Enable\nBit 26 - Channel 10 Event Detection Interrupt Enable\nBit 26 - Channel 10 Event Detection Interrupt Enable\nBit 27 - Channel 11 Event Detection Interrupt Enable\nBit 27 - Channel 11 Event Detection Interrupt Enable\nBit 10 - Channel 2 Event Detection Interrupt Enable\nBit 10 - Channel 2 Event Detection Interrupt Enable\nBit 11 - Channel 3 Event Detection Interrupt Enable\nBit 11 - Channel 3 Event Detection Interrupt Enable\nBit 12 - Channel 4 Event Detection Interrupt Enable\nBit 12 - Channel 4 Event Detection Interrupt Enable\nBit 13 - Channel 5 Event Detection Interrupt Enable\nBit 13 - Channel 5 Event Detection Interrupt Enable\nBit 14 - Channel 6 Event Detection Interrupt Enable\nBit 14 - Channel 6 Event Detection Interrupt Enable\nBit 15 - Channel 7 Event Detection Interrupt Enable\nBit 15 - Channel 7 Event Detection Interrupt Enable\nBit 24 - Channel 8 Event Detection Interrupt Enable\nBit 24 - Channel 8 Event Detection Interrupt Enable\nBit 25 - Channel 9 Event Detection Interrupt Enable\nBit 25 - Channel 9 Event Detection Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel 0 Overrun Interrupt Enable\nBit 0 - Channel 0 Overrun Interrupt Enable\nBit 1 - Channel 1 Overrun Interrupt Enable\nBit 1 - Channel 1 Overrun Interrupt Enable\nBit 18 - Channel 10 Overrun Interrupt Enable\nBit 18 - Channel 10 Overrun Interrupt Enable\nBit 19 - Channel 11 Overrun Interrupt Enable\nBit 19 - Channel 11 Overrun Interrupt Enable\nBit 2 - Channel 2 Overrun Interrupt Enable\nBit 2 - Channel 2 Overrun Interrupt Enable\nBit 3 - Channel 3 Overrun Interrupt Enable\nBit 3 - Channel 3 Overrun Interrupt Enable\nBit 4 - Channel 4 Overrun Interrupt Enable\nBit 4 - Channel 4 Overrun Interrupt Enable\nBit 5 - Channel 5 Overrun Interrupt Enable\nBit 5 - Channel 5 Overrun Interrupt Enable\nBit 6 - Channel 6 Overrun Interrupt Enable\nBit 6 - Channel 6 Overrun Interrupt Enable\nBit 7 - Channel 7 Overrun Interrupt Enable\nBit 7 - Channel 7 Overrun Interrupt Enable\nBit 16 - Channel 8 Overrun Interrupt Enable\nBit 16 - Channel 8 Overrun Interrupt Enable\nBit 17 - Channel 9 Overrun Interrupt Enable\nBit 17 - Channel 9 Overrun Interrupt Enable\nField <code>EVD0</code> reader - Channel 0 Event Detection Interrupt …\nField <code>EVD0</code> writer - Channel 0 Event Detection Interrupt …\nField <code>EVD10</code> reader - Channel 10 Event Detection Interrupt …\nField <code>EVD10</code> writer - Channel 10 Event Detection Interrupt …\nField <code>EVD11</code> reader - Channel 11 Event Detection Interrupt …\nField <code>EVD11</code> writer - Channel 11 Event Detection Interrupt …\nField <code>EVD1</code> reader - Channel 1 Event Detection Interrupt …\nField <code>EVD1</code> writer - Channel 1 Event Detection Interrupt …\nField <code>EVD2</code> reader - Channel 2 Event Detection Interrupt …\nField <code>EVD2</code> writer - Channel 2 Event Detection Interrupt …\nField <code>EVD3</code> reader - Channel 3 Event Detection Interrupt …\nField <code>EVD3</code> writer - Channel 3 Event Detection Interrupt …\nField <code>EVD4</code> reader - Channel 4 Event Detection Interrupt …\nField <code>EVD4</code> writer - Channel 4 Event Detection Interrupt …\nField <code>EVD5</code> reader - Channel 5 Event Detection Interrupt …\nField <code>EVD5</code> writer - Channel 5 Event Detection Interrupt …\nField <code>EVD6</code> reader - Channel 6 Event Detection Interrupt …\nField <code>EVD6</code> writer - Channel 6 Event Detection Interrupt …\nField <code>EVD7</code> reader - Channel 7 Event Detection Interrupt …\nField <code>EVD7</code> writer - Channel 7 Event Detection Interrupt …\nField <code>EVD8</code> reader - Channel 8 Event Detection Interrupt …\nField <code>EVD8</code> writer - Channel 8 Event Detection Interrupt …\nField <code>EVD9</code> reader - Channel 9 Event Detection Interrupt …\nField <code>EVD9</code> writer - Channel 9 Event Detection Interrupt …\nInterrupt Enable Set\nField <code>OVR0</code> reader - Channel 0 Overrun Interrupt Enable\nField <code>OVR0</code> writer - Channel 0 Overrun Interrupt Enable\nField <code>OVR10</code> reader - Channel 10 Overrun Interrupt Enable\nField <code>OVR10</code> writer - Channel 10 Overrun Interrupt Enable\nField <code>OVR11</code> reader - Channel 11 Overrun Interrupt Enable\nField <code>OVR11</code> writer - Channel 11 Overrun Interrupt Enable\nField <code>OVR1</code> reader - Channel 1 Overrun Interrupt Enable\nField <code>OVR1</code> writer - Channel 1 Overrun Interrupt Enable\nField <code>OVR2</code> reader - Channel 2 Overrun Interrupt Enable\nField <code>OVR2</code> writer - Channel 2 Overrun Interrupt Enable\nField <code>OVR3</code> reader - Channel 3 Overrun Interrupt Enable\nField <code>OVR3</code> writer - Channel 3 Overrun Interrupt Enable\nField <code>OVR4</code> reader - Channel 4 Overrun Interrupt Enable\nField <code>OVR4</code> writer - Channel 4 Overrun Interrupt Enable\nField <code>OVR5</code> reader - Channel 5 Overrun Interrupt Enable\nField <code>OVR5</code> writer - Channel 5 Overrun Interrupt Enable\nField <code>OVR6</code> reader - Channel 6 Overrun Interrupt Enable\nField <code>OVR6</code> writer - Channel 6 Overrun Interrupt Enable\nField <code>OVR7</code> reader - Channel 7 Overrun Interrupt Enable\nField <code>OVR7</code> writer - Channel 7 Overrun Interrupt Enable\nField <code>OVR8</code> reader - Channel 8 Overrun Interrupt Enable")