searchState.loadedDescShard("embedded_io", 0, "crates.io crates.io Documentation\nA socket address could not be bound because the address is …\nA nonexistent interface was requested or the requested …\nAn entity already exists, often a file.\nThe operation failed because a pipe was closed.\nBlocking buffered reader.\nThe connection was aborted (terminated) by the remote …\nThe connection was refused by the remote server.\nThe connection was reset by the remote server.\nSets the offset to the current position plus the specified …\nSets the offset to the size of this object plus the …\nError trait.\nError type of all the IO operations on this type.\nPossible kinds of errors.\nBase trait for all IO traits, defining the error type.\nAn error was encountered while formatting.\nThe target slice was full and so could not receive any new …\nThis operation was interrupted.\nData not valid for the operation were encountered.\nA parameter was incorrect.\nThe network operation failed because it was not connected …\nAn entity was not found, often a file.\nUnspecified error kind.\nError returned by the inner Read.\nError returned by the inner Write.\nAn operation could not be completed, because it failed to …\nThe operation lacked the necessary privileges to complete.\nBlocking reader.\nError returned by <code>Read::read_exact</code>\nGet whether a reader is ready.\nBlocking seek within streams.\nEnumeration of possible methods to seek within an I/O …\nErrors that could be returned by <code>Write</code> on <code>&amp;mut [u8]</code>.\nSets the offset to the provided number of bytes.\nThe I/O operation’s timeout expired, causing it to be …\nAn EOF error was encountered before reading the exact …\nThis operation is unsupported on this platform.\nBlocking writer.\nError returned by <code>Write::write_fmt</code>\nGet whether a writer is ready.\nAn attempted write could not write any data.\nTell this buffer that <code>amt</code> bytes have been consumed from …\nReturn the contents of the internal buffer, filling it …\nFlush this output stream, blocking until all …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the kind of this error.\nRead some bytes from this source into the specified …\nRead the exact number of bytes required to fill <code>buf</code>.\nGet whether the reader is ready for immediately reading.\nRewind to the beginning of a stream.\nSeek to an offset, in bytes, in a stream.\nReturns the current seek position from the start of the …\nWrite a buffer into this writer, returning how many bytes …\nWrite an entire buffer into this writer.\nWrite a formatted string into this writer, returning any …\nGet whether the writer is ready for immediately writing.")