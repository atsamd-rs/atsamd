(function() {
    var implementors = Object.fromEntries([["atsamd_hal",[["impl&lt;C, A, R, T&gt; <a class=\"trait\" href=\"embedded_io/trait.ErrorType.html\" title=\"trait embedded_io::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, A, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div>"],["impl&lt;C, D, R, T&gt; <a class=\"trait\" href=\"embedded_io/trait.ErrorType.html\" title=\"trait embedded_io::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div>"],["impl&lt;C, D, R, T&gt; <a class=\"trait\" href=\"embedded_io/trait.ErrorType.html\" title=\"trait embedded_io::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/uart/struct.Uart.html\" title=\"struct atsamd_hal::sercom::uart::Uart\">Uart</a>&lt;C, D, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/uart/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::uart::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/uart/trait.Capability.html\" title=\"trait atsamd_hal::sercom::uart::Capability\">Capability</a>,</div>"],["impl&lt;C, D, R, T&gt; <a class=\"trait\" href=\"embedded_io/trait.ErrorType.html\" title=\"trait embedded_io::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/uart/struct.UartFuture.html\" title=\"struct atsamd_hal::sercom::uart::UartFuture\">UartFuture</a>&lt;C, D, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/uart/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::uart::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/uart/trait.Capability.html\" title=\"trait atsamd_hal::sercom::uart::Capability\">Capability</a>,</div>"]]],["embassy_sync",[["impl&lt;M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"embedded_io/trait.ErrorType.html\" title=\"trait embedded_io::ErrorType\">ErrorType</a> for &amp;<a class=\"struct\" href=\"embassy_sync/pipe/struct.Pipe.html\" title=\"struct embassy_sync::pipe::Pipe\">Pipe</a>&lt;M, N&gt;"],["impl&lt;M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"embedded_io/trait.ErrorType.html\" title=\"trait embedded_io::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"embassy_sync/pipe/struct.Pipe.html\" title=\"struct embassy_sync::pipe::Pipe\">Pipe</a>&lt;M, N&gt;"],["impl&lt;M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"embedded_io/trait.ErrorType.html\" title=\"trait embedded_io::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"embassy_sync/pipe/struct.Reader.html\" title=\"struct embassy_sync::pipe::Reader\">Reader</a>&lt;'_, M, N&gt;"],["impl&lt;M: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"embedded_io/trait.ErrorType.html\" title=\"trait embedded_io::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"embassy_sync/pipe/struct.Writer.html\" title=\"struct embassy_sync::pipe::Writer\">Writer</a>&lt;'_, M, N&gt;"]]],["embedded_io",[]],["embedded_io_async",[]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[2530,2156,19,25]}