searchState.loadedDescShard("atsamd51g", 2, "High Double-Word Error Type\nField <code>TYPEL</code> reader - Low Double-Word Error Type\nLow Double-Word Error Type\nBits 0:23 - Error Address\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAt Least One Dual Error Detected Since Last Read\nAt Least One Dual Error Detected Since Last Read\nNo Error Detected Since Last Read\nNo Error Detected Since Last Read\nAt Least One Single Error Detected Since last Read\nAt Least One Single Error Detected Since last Read\nBits 30:31 - High Double-Word Error Type\nBits 28:29 - Low Double-Word Error Type\nGet enumerated values variant\nGet enumerated values variant\nField <code>ADDRE</code> reader - Address Error\nField <code>ADDRE</code> writer - Address Error\nField <code>DONE</code> reader - Command Done Interrupt Clear\nField <code>DONE</code> writer - Command Done Interrupt Clear\nField <code>ECCDE</code> reader - ECC Dual Error Interrupt Clear\nField <code>ECCDE</code> writer - ECC Dual Error Interrupt Clear\nField <code>ECCSE</code> reader - ECC Single Error Interrupt Clear\nField <code>ECCSE</code> writer - ECC Single Error Interrupt Clear\nInterrupt Enable Clear\nField <code>LOCKE</code> reader - Lock Error Interrupt Clear\nField <code>LOCKE</code> writer - Lock Error Interrupt Clear\nField <code>NVME</code> reader - NVM Error Interrupt Clear\nField <code>NVME</code> writer - NVM Error Interrupt Clear\nField <code>PROGE</code> reader - Programming Error Interrupt Clear\nField <code>PROGE</code> writer - Programming Error Interrupt Clear\nRegister <code>INTENCLR</code> reader\nField <code>SEESFULL</code> reader - Active SEES Full Interrupt Clear\nField <code>SEESFULL</code> writer - Active SEES Full Interrupt Clear\nField <code>SEESOVF</code> reader - Active SEES Overflow Interrupt Clear\nField <code>SEESOVF</code> writer - Active SEES Overflow Interrupt Clear\nField <code>SEEWRC</code> reader - SEE Write Completed Interrupt Clear\nField <code>SEEWRC</code> writer - SEE Write Completed Interrupt Clear\nField <code>SUSP</code> reader - Suspended Write Or Erase Interrupt …\nField <code>SUSP</code> writer - Suspended Write Or Erase Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 1 - Address Error\nBit 1 - Address Error\nBit 0 - Command Done Interrupt Clear\nBit 0 - Command Done Interrupt Clear\nBit 5 - ECC Dual Error Interrupt Clear\nBit 5 - ECC Dual Error Interrupt Clear\nBit 4 - ECC Single Error Interrupt Clear\nBit 4 - ECC Single Error Interrupt Clear\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 3 - Lock Error Interrupt Clear\nBit 3 - Lock Error Interrupt Clear\nBit 6 - NVM Error Interrupt Clear\nBit 6 - NVM Error Interrupt Clear\nBit 2 - Programming Error Interrupt Clear\nBit 2 - Programming Error Interrupt Clear\nBit 8 - Active SEES Full Interrupt Clear\nBit 8 - Active SEES Full Interrupt Clear\nBit 9 - Active SEES Overflow Interrupt Clear\nBit 9 - Active SEES Overflow Interrupt Clear\nBit 10 - SEE Write Completed Interrupt Clear\nBit 10 - SEE Write Completed Interrupt Clear\nBit 7 - Suspended Write Or Erase Interrupt Clear\nBit 7 - Suspended Write Or Erase Interrupt Clear\nField <code>ADDRE</code> reader - Address Error Interrupt Enable\nField <code>ADDRE</code> writer - Address Error Interrupt Enable\nField <code>DONE</code> reader - Command Done Interrupt Enable\nField <code>DONE</code> writer - Command Done Interrupt Enable\nField <code>ECCDE</code> reader - ECC Dual Error Interrupt Enable\nField <code>ECCDE</code> writer - ECC Dual Error Interrupt Enable\nField <code>ECCSE</code> reader - ECC Single Error Interrupt Enable\nField <code>ECCSE</code> writer - ECC Single Error Interrupt Enable\nInterrupt Enable Set\nField <code>LOCKE</code> reader - Lock Error Interrupt Enable\nField <code>LOCKE</code> writer - Lock Error Interrupt Enable\nField <code>NVME</code> reader - NVM Error Interrupt Enable\nField <code>NVME</code> writer - NVM Error Interrupt Enable\nField <code>PROGE</code> reader - Programming Error Interrupt Enable\nField <code>PROGE</code> writer - Programming Error Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SEESFULL</code> reader - Active SEES Full Interrupt Enable\nField <code>SEESFULL</code> writer - Active SEES Full Interrupt Enable\nField <code>SEESOVF</code> reader - Active SEES Overflow Interrupt …\nField <code>SEESOVF</code> writer - Active SEES Overflow Interrupt …\nField <code>SEEWRC</code> reader - SEE Write Completed Interrupt Enable\nField <code>SEEWRC</code> writer - SEE Write Completed Interrupt Enable\nField <code>SUSP</code> reader - Suspended Write Or Erase Interrupt …\nField <code>SUSP</code> writer - Suspended Write Or Erase Interrupt …\nRegister <code>INTENSET</code> writer\nBit 1 - Address Error Interrupt Enable\nBit 1 - Address Error Interrupt Enable\nBit 0 - Command Done Interrupt Enable\nBit 0 - Command Done Interrupt Enable\nBit 5 - ECC Dual Error Interrupt Enable\nBit 5 - ECC Dual Error Interrupt Enable\nBit 4 - ECC Single Error Interrupt Enable\nBit 4 - ECC Single Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 3 - Lock Error Interrupt Enable\nBit 3 - Lock Error Interrupt Enable\nBit 6 - NVM Error Interrupt Enable\nBit 6 - NVM Error Interrupt Enable\nBit 2 - Programming Error Interrupt Enable\nBit 2 - Programming Error Interrupt Enable\nBit 8 - Active SEES Full Interrupt Enable\nBit 8 - Active SEES Full Interrupt Enable\nBit 9 - Active SEES Overflow Interrupt Enable\nBit 9 - Active SEES Overflow Interrupt Enable\nBit 10 - SEE Write Completed Interrupt Enable\nBit 10 - SEE Write Completed Interrupt Enable\nBit 7 - Suspended Write Or Erase Interrupt Enable\nBit 7 - Suspended Write Or Erase Interrupt Enable\nField <code>ADDRE</code> reader - Address Error\nField <code>ADDRE</code> writer - Address Error\nField <code>DONE</code> reader - Command Done\nField <code>DONE</code> writer - Command Done\nField <code>ECCDE</code> reader - ECC Dual Error\nField <code>ECCDE</code> writer - ECC Dual Error\nField <code>ECCSE</code> reader - ECC Single Error\nField <code>ECCSE</code> writer - ECC Single Error\nInterrupt Flag Status and Clear\nField <code>LOCKE</code> reader - Lock Error\nField <code>LOCKE</code> writer - Lock Error\nField <code>NVME</code> reader - NVM Error\nField <code>NVME</code> writer - NVM Error\nField <code>PROGE</code> reader - Programming Error\nField <code>PROGE</code> writer - Programming Error\nRegister <code>INTFLAG</code> reader\nField <code>SEESFULL</code> reader - Active SEES Full\nField <code>SEESFULL</code> writer - Active SEES Full\nField <code>SEESOVF</code> reader - Active SEES Overflow\nField <code>SEESOVF</code> writer - Active SEES Overflow\nField <code>SEEWRC</code> reader - SEE Write Completed\nField <code>SEEWRC</code> writer - SEE Write Completed\nField <code>SUSP</code> reader - Suspended Write Or Erase Operation\nField <code>SUSP</code> writer - Suspended Write Or Erase Operation\nRegister <code>INTFLAG</code> writer\nBit 1 - Address Error\nBit 1 - Address Error\nBit 0 - Command Done\nBit 0 - Command Done\nBit 5 - ECC Dual Error\nBit 5 - ECC Dual Error\nBit 4 - ECC Single Error\nBit 4 - ECC Single Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 3 - Lock Error\nBit 3 - Lock Error\nBit 6 - NVM Error\nBit 6 - NVM Error\nBit 2 - Programming Error\nBit 2 - Programming Error\nBit 8 - Active SEES Full\nBit 8 - Active SEES Full\nBit 9 - Active SEES Overflow\nBit 9 - Active SEES Overflow\nBit 10 - SEE Write Completed\nBit 10 - SEE Write Completed\nBit 7 - Suspended Write Or Erase Operation\nBit 7 - Suspended Write Or Erase Operation\nField <code>NVMP</code> reader - NVM Pages\nNVM Parameter\nField <code>PSZ</code> reader - Page Size\nPage Size\nRegister <code>PARAM</code> reader\nField <code>SEE</code> reader - SmartEEPROM Supported\n7: 1024 bytes\n4: 128 bytes\n1: 16 bytes\n5: 256 bytes\n2: 32 bytes\n6: 512 bytes\n3: 64 bytes\n0: 8 bytes\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1024 bytes\n128 bytes\n16 bytes\n256 bytes\n32 bytes\n512 bytes\n64 bytes\n8 bytes\nBits 0:15 - NVM Pages\nBits 16:18 - Page Size\nBit 31 - SmartEEPROM Supported\nGet enumerated values variant\nField <code>DATA</code> reader - Page Buffer Data\nPage Buffer Load Data x\nRegister <code>PBLDATA[%s]</code> reader\nBits 0:31 - Page Buffer Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>RUNLOCK</code> reader\nField <code>RUNLOCK</code> reader - Region Un-Lock Bits\nLock Section\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Region Un-Lock Bits\nField <code>APRDIS</code> reader - Automatic Page Reallocation Disable\nField <code>APRDIS</code> writer - Automatic Page Reallocation Disable\n1: A NVM write command is issued when a write to a new …\nRegister <code>SEECFG</code> reader\nSmartEEPROM Configuration Register\n0: A NVM write command is issued after each write in the …\nRegister <code>SEECFG</code> writer\nField <code>WMODE</code> reader - Write Mode\nField <code>WMODE</code> writer - Write Mode\nWrite Mode\nBit 1 - Automatic Page Reallocation Disable\nBit 1 - Automatic Page Reallocation Disable\nA NVM write command is issued when a write to a new page …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA NVM write command is issued when a write to a new page …\nA NVM write command is issued after each write in the …\nA NVM write command is issued after each write in the …\nGet enumerated values variant\nBit 0 - Write Mode\nBit 0 - Write Mode\nField <code>ASEES</code> reader - Active SmartEEPROM Sector\nField <code>BUSY</code> reader - Busy\nField <code>LOAD</code> reader - Page Buffer Loaded\nField <code>LOCK</code> reader - SmartEEPROM Write Access Is Locked\nField <code>PSZ</code> reader - SmartEEPROM Page Size\nRegister <code>SEESTAT</code> reader\nField <code>RLOCK</code> reader - SmartEEPROM Write Access To Register …\nField <code>SBLK</code> reader - Blocks Number In a Sector\nSmartEEPROM Status Register\nBit 0 - Active SmartEEPROM Sector\nBit 2 - Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Page Buffer Loaded\nBit 3 - SmartEEPROM Write Access Is Locked\nBits 16:18 - SmartEEPROM Page Size\nBit 4 - SmartEEPROM Write Access To Register Address Space …\nBits 8:11 - Blocks Number In a Sector\nField <code>AFIRST</code> reader - BANKA First\nField <code>BOOTPROT</code> reader - Boot Loader Protection Size\nBoot Loader Protection Size\nField <code>BPDIS</code> reader - Boot Loader Protection Disable\nField <code>LOAD</code> reader - NVM Page Buffer Active Loading\nField <code>PRM</code> reader - Power Reduction Mode\nRegister <code>STATUS</code> reader\nField <code>READY</code> reader - Ready to accept a command\nStatus\nField <code>SUSP</code> reader - NVM Write Or Erase Operation Is …\n15: 0 kbytes\n2: 104 kbytes\n1: 112 kbytes\n0: 120 kbytes\n13: 16 kbytes\n12: 24 kbytes\n11: 32 kbytes\n10: 40 kbytes\n9: 48 kbytes\n8: 56 kbytes\n7: 64 kbytes\n6: 72 kbytes\n14: 8 kbytes\n5: 80 kbytes\n4: 88 kbytes\n3: 96 kbytes\nBit 4 - BANKA First\nBits 8:11 - Boot Loader Protection Size\nBit 5 - Boot Loader Protection Disable\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n0 kbytes\n104 kbytes\n112 kbytes\n120 kbytes\n16 kbytes\n24 kbytes\n32 kbytes\n40 kbytes\n48 kbytes\n56 kbytes\n64 kbytes\n72 kbytes\n8 kbytes\n80 kbytes\n88 kbytes\n96 kbytes\nBit 2 - NVM Page Buffer Active Loading\nBit 1 - Power Reduction Mode\nBit 0 - Ready to accept a command\nBit 3 - NVM Write Or Erase Operation Is Suspended\nGet enumerated values variant\nCFDCTRL (rw) register accessor: Clock Failure Detector …\nEVCTRL (rw) register accessor: Event Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nOSCULP32K (rw) register accessor: 32kHz Ultra Low Power …\nRegister block\nRTCCTRL (rw) register accessor: RTC Clock Selection\nSTATUS (r) register accessor: Power and Clocks Status\nXOSC32K (rw) register accessor: 32kHz External Crystal …\nClock Failure Detector Control\n0x16 - Clock Failure Detector Control\nEvent Control\n0x17 - Event Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x00 - Interrupt Enable Clear\nInterrupt Enable Set\n0x04 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x08 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\n32kHz Ultra Low Power Internal Oscillator (OSCULP32K) …\n0x1c - 32kHz Ultra Low Power Internal Oscillator …\nRTC Clock Selection\n0x10 - RTC Clock Selection\nPower and Clocks Status\n0x0c - Power and Clocks Status\n32kHz External Crystal Oscillator (XOSC32K) Control\n0x14 - 32kHz External Crystal Oscillator (XOSC32K) Control\nClock Failure Detector Control\nField <code>CFDEN</code> reader - Clock Failure Detector Enable\nField <code>CFDEN</code> writer - Clock Failure Detector Enable\nField <code>CFDPRESC</code> reader - Clock Failure Detector Prescaler\nField <code>CFDPRESC</code> writer - Clock Failure Detector Prescaler\nRegister <code>CFDCTRL</code> reader\nField <code>SWBACK</code> reader - Clock Switch Back\nField <code>SWBACK</code> writer - Clock Switch Back\nRegister <code>CFDCTRL</code> writer\nBit 0 - Clock Failure Detector Enable\nBit 0 - Clock Failure Detector Enable\nBit 2 - Clock Failure Detector Prescaler\nBit 2 - Clock Failure Detector Prescaler\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Clock Switch Back\nBit 1 - Clock Switch Back\nField <code>CFDEO</code> reader - Clock Failure Detector Event Output …\nField <code>CFDEO</code> writer - Clock Failure Detector Event Output …\nEvent Control\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBit 0 - Clock Failure Detector Event Output Enable\nBit 0 - Clock Failure Detector Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nField <code>XOSC32KFAIL</code> reader - XOSC32K Clock Failure Detector …\nField <code>XOSC32KFAIL</code> writer - XOSC32K Clock Failure Detector …\nField <code>XOSC32KRDY</code> reader - XOSC32K Ready Interrupt Enable\nField <code>XOSC32KRDY</code> writer - XOSC32K Ready Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - XOSC32K Clock Failure Detector Interrupt Enable\nBit 2 - XOSC32K Clock Failure Detector Interrupt Enable\nBit 0 - XOSC32K Ready Interrupt Enable\nBit 0 - XOSC32K Ready Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nField <code>XOSC32KFAIL</code> reader - XOSC32K Clock Failure Detector …\nField <code>XOSC32KFAIL</code> writer - XOSC32K Clock Failure Detector …\nField <code>XOSC32KRDY</code> reader - XOSC32K Ready Interrupt Enable\nField <code>XOSC32KRDY</code> writer - XOSC32K Ready Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - XOSC32K Clock Failure Detector Interrupt Enable\nBit 2 - XOSC32K Clock Failure Detector Interrupt Enable\nBit 0 - XOSC32K Ready Interrupt Enable\nBit 0 - XOSC32K Ready Interrupt Enable\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nField <code>XOSC32KFAIL</code> reader - XOSC32K Clock Failure Detector\nField <code>XOSC32KFAIL</code> writer - XOSC32K Clock Failure Detector\nField <code>XOSC32KRDY</code> reader - XOSC32K Ready\nField <code>XOSC32KRDY</code> writer - XOSC32K Ready\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - XOSC32K Clock Failure Detector\nBit 2 - XOSC32K Clock Failure Detector\nBit 0 - XOSC32K Ready\nBit 0 - XOSC32K Ready\nField <code>EN1K</code> reader - Enable Out 1k\nField <code>EN1K</code> writer - Enable Out 1k\nField <code>EN32K</code> reader - Enable Out 32k\nField <code>EN32K</code> writer - Enable Out 32k\n32kHz Ultra Low Power Internal Oscillator (OSCULP32K) …\nRegister <code>OSCULP32K</code> reader\nRegister <code>OSCULP32K</code> writer\nField <code>WRTLOCK</code> reader - Write Lock\nField <code>WRTLOCK</code> writer - Write Lock\nBit 2 - Enable Out 1k\nBit 2 - Enable Out 1k\nBit 1 - Enable Out 32k\nBit 1 - Enable Out 32k\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Write Lock\nBit 15 - Write Lock\nRegister <code>RTCCTRL</code> reader\nRTC Clock Selection\nField <code>RTCSEL</code> reader - RTC Clock Selection\nField <code>RTCSEL</code> writer - RTC Clock Selection\nRTC Clock Selection\n0: 1.024kHz from 32kHz internal ULP oscillator\n1: 32.768kHz from 32kHz internal ULP oscillator\nRegister <code>RTCCTRL</code> writer\n4: 1.024kHz from 32.768kHz internal oscillator\n5: 32.768kHz from 32.768kHz external crystal oscillator\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1.024kHz from 32kHz internal ULP oscillator\n32.768kHz from 32kHz internal ULP oscillator\n1.024kHz from 32.768kHz internal oscillator\n32.768kHz from 32.768kHz external crystal oscillator\nBits 0:2 - RTC Clock Selection\nBits 0:2 - RTC Clock Selection\n1.024kHz from 32kHz internal ULP oscillator\n32.768kHz from 32kHz internal ULP oscillator\nGet enumerated values variant\n1.024kHz from 32.768kHz internal oscillator\n32.768kHz from 32.768kHz external crystal oscillator\nRegister <code>STATUS</code> reader\nPower and Clocks Status\nField <code>XOSC32KFAIL</code> reader - XOSC32K Clock Failure Detector\nField <code>XOSC32KRDY</code> reader - XOSC32K Ready\nField <code>XOSC32KSW</code> reader - XOSC32K Clock switch\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - XOSC32K Clock Failure Detector\nBit 0 - XOSC32K Ready\nBit 3 - XOSC32K Clock switch\nField <code>CGM</code> reader - Control Gain Mode\nField <code>CGM</code> writer - Control Gain Mode\nControl Gain Mode\n5: 4000 ms\n2: 500 ms\n0: 62.6 ms\n6: 8000 ms\n3: 1000 ms\n1: 125 ms\n4: 2000 ms\nField <code>EN1K</code> reader - 1kHz Output Enable\nField <code>EN1K</code> writer - 1kHz Output Enable\nField <code>EN32K</code> reader - 32kHz Output Enable\nField <code>EN32K</code> writer - 32kHz Output Enable\nField <code>ENABLE</code> reader - Oscillator Enable\nField <code>ENABLE</code> writer - Oscillator Enable\n2: High Speed mode\nField <code>ONDEMAND</code> reader - On Demand Control\nField <code>ONDEMAND</code> writer - On Demand Control\nRegister <code>XOSC32K</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>STARTUP</code> reader - Oscillator Start-Up Time\nField <code>STARTUP</code> writer - Oscillator Start-Up Time\nOscillator Start-Up Time\nRegister <code>XOSC32K</code> writer\nField <code>WRTLOCK</code> reader - Write Lock\nField <code>WRTLOCK</code> writer - Write Lock\n32kHz External Crystal Oscillator (XOSC32K) Control\n1: Standard mode\nField <code>XTALEN</code> reader - Crystal Oscillator Enable\nField <code>XTALEN</code> writer - Crystal Oscillator Enable\nBits 13:14 - Control Gain Mode\nBits 13:14 - Control Gain Mode\n4000 ms\n500 ms\n62.6 ms\n8000 ms\n1000 ms\n125 ms\n2000 ms\nBit 4 - 1kHz Output Enable\nBit 4 - 1kHz Output Enable\nBit 3 - 32kHz Output Enable\nBit 3 - 32kHz Output Enable\nBit 1 - Oscillator Enable\nBit 1 - Oscillator Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHigh Speed mode\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n4000 ms\n500 ms\n62.6 ms\n8000 ms\n1000 ms\n125 ms\n2000 ms\nHigh Speed mode\nStandard mode\nBit 7 - On Demand Control\nBit 7 - On Demand Control\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nBits 8:10 - Oscillator Start-Up Time\nBits 8:10 - Oscillator Start-Up Time\nGet enumerated values variant\nGet enumerated values variant\nBit 12 - Write Lock\nBit 12 - Write Lock\nStandard mode\nBit 2 - Crystal Oscillator Enable\nBit 2 - Crystal Oscillator Enable\nDFLLCTRLA (rw) register accessor: DFLL48M Control A\nDFLLCTRLB (rw) register accessor: DFLL48M Control B\nDFLLMUL (rw) register accessor: DFLL48M Multiplier\nDFLLSYNC (rw) register accessor: DFLL48M Synchronization\nDFLLVAL (rw) register accessor: DFLL48M Value\nDPLL[%s]\nEVCTRL (rw) register accessor: Event Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRegister block\nSTATUS (r) register accessor: Status\nXOSCCTRL (rw) register accessor: External Multipurpose …\nDFLL48M Control A\n0x1c - DFLL48M Control A\nDFLL48M Control B\n0x20 - DFLL48M Control B\nDFLL48M Multiplier\n0x28 - DFLL48M Multiplier\nDFLL48M Synchronization\n0x2c - DFLL48M Synchronization\nDFLL48M Value\n0x24 - DFLL48M Value\nCluster DPLL[%s]\n0x30..0x58 - DPLL[%s]\nIterator for array of: 0x30..0x58 - DPLL[%s]\nEvent Control\n0x00 - Event Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x04 - Interrupt Enable Clear\nInterrupt Enable Set\n0x08 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x0c - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nStatus\n0x10 - Status\nExternal Multipurpose Crystal Oscillator Control\n0x14..0x1c - External Multipurpose Crystal Oscillator …\nIterator for array of: 0x14..0x1c - External Multipurpose …\nDFLL48M Control A\nField <code>ENABLE</code> reader - DFLL Enable\nField <code>ENABLE</code> writer - DFLL Enable\nField <code>ONDEMAND</code> reader - On Demand Control\nField <code>ONDEMAND</code> writer - On Demand Control\nRegister <code>DFLLCTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nRegister <code>DFLLCTRLA</code> writer\nBit 1 - DFLL Enable\nBit 1 - DFLL Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - On Demand Control\nBit 7 - On Demand Control\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nField <code>BPLCKC</code> reader - Bypass Coarse Lock\nField <code>BPLCKC</code> writer - Bypass Coarse Lock\nField <code>CCDIS</code> reader - Chill Cycle Disable\nField <code>CCDIS</code> writer - Chill Cycle Disable\nDFLL48M Control B\nField <code>LLAW</code> reader - Lose Lock After Wake\nField <code>LLAW</code> writer - Lose Lock After Wake\nField <code>MODE</code> reader - Operating Mode Selection\nField <code>MODE</code> writer - Operating Mode Selection\nField <code>QLDIS</code> reader - Quick Lock Disable\nField <code>QLDIS</code> writer - Quick Lock Disable\nRegister <code>DFLLCTRLB</code> reader\nField <code>STABLE</code> reader - Stable DFLL Frequency\nField <code>STABLE</code> writer - Stable DFLL Frequency\nField <code>USBCRM</code> reader - USB Clock Recovery Mode\nField <code>USBCRM</code> writer - USB Clock Recovery Mode\nRegister <code>DFLLCTRLB</code> writer\nField <code>WAITLOCK</code> reader - Wait Lock\nField <code>WAITLOCK</code> writer - Wait Lock\nBit 6 - Bypass Coarse Lock\nBit 6 - Bypass Coarse Lock\nBit 4 - Chill Cycle Disable\nBit 4 - Chill Cycle Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Lose Lock After Wake\nBit 2 - Lose Lock After Wake\nBit 0 - Operating Mode Selection\nBit 0 - Operating Mode Selection\nBit 5 - Quick Lock Disable\nBit 5 - Quick Lock Disable\nBit 1 - Stable DFLL Frequency\nBit 1 - Stable DFLL Frequency\nBit 3 - USB Clock Recovery Mode\nBit 3 - USB Clock Recovery Mode\nBit 7 - Wait Lock\nBit 7 - Wait Lock\nField <code>CSTEP</code> reader - Coarse Maximum Step\nField <code>CSTEP</code> writer - Coarse Maximum Step\nDFLL48M Multiplier\nField <code>FSTEP</code> reader - Fine Maximum Step\nField <code>FSTEP</code> writer - Fine Maximum Step\nField <code>MUL</code> reader - DFLL Multiply Factor\nField <code>MUL</code> writer - DFLL Multiply Factor\nRegister <code>DFLLMUL</code> reader\nRegister <code>DFLLMUL</code> writer\nBits 26:31 - Coarse Maximum Step\nBits 26:31 - Coarse Maximum Step\nReturns the argument unchanged.\nBits 16:23 - Fine Maximum Step\nBits 16:23 - Fine Maximum Step\nCalls <code>U::from(self)</code>.\nBits 0:15 - DFLL Multiply Factor\nBits 0:15 - DFLL Multiply Factor\nField <code>DFLLCTRLB</code> reader - DFLLCTRLB Synchronization Busy\nField <code>DFLLCTRLB</code> writer - DFLLCTRLB Synchronization Busy\nField <code>DFLLMUL</code> reader - DFLLMUL Synchronization Busy\nField <code>DFLLMUL</code> writer - DFLLMUL Synchronization Busy\nDFLL48M Synchronization\nField <code>DFLLVAL</code> reader - DFLLVAL Synchronization Busy\nField <code>DFLLVAL</code> writer - DFLLVAL Synchronization Busy\nField <code>ENABLE</code> reader - ENABLE Synchronization Busy\nField <code>ENABLE</code> writer - ENABLE Synchronization Busy\nRegister <code>DFLLSYNC</code> reader\nRegister <code>DFLLSYNC</code> writer\nBit 2 - DFLLCTRLB Synchronization Busy\nBit 2 - DFLLCTRLB Synchronization Busy\nBit 4 - DFLLMUL Synchronization Busy\nBit 4 - DFLLMUL Synchronization Busy\nBit 3 - DFLLVAL Synchronization Busy\nBit 3 - DFLLVAL Synchronization Busy\nBit 1 - ENABLE Synchronization Busy\nBit 1 - ENABLE Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COARSE</code> reader - Coarse Value\nField <code>COARSE</code> writer - Coarse Value\nDFLL48M Value\nField <code>DIFF</code> reader - Multiplication Ratio Difference\nField <code>DIFF</code> writer - Multiplication Ratio Difference\nField <code>FINE</code> reader - Fine Value\nField <code>FINE</code> writer - Fine Value\nRegister <code>DFLLVAL</code> reader\nRegister <code>DFLLVAL</code> writer\nBits 10:15 - Coarse Value\nBits 10:15 - Coarse Value\nBits 16:31 - Multiplication Ratio Difference\nBits 16:31 - Multiplication Ratio Difference\nBits 0:7 - Fine Value\nBits 0:7 - Fine Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDPLL[%s]\nDPLLCTRLA (rw) register accessor: DPLL Control A\nDPLLCTRLB (rw) register accessor: DPLL Control B\nDPLLRATIO (rw) register accessor: DPLL Ratio Control\nDPLLSTATUS (r) register accessor: DPLL Status\nDPLLSYNCBUSY (r) register accessor: DPLL Synchronization …\nDPLL Control A\n0x00 - DPLL Control A\nDPLL Control B\n0x08 - DPLL Control B\nDPLL Ratio Control\n0x04 - DPLL Ratio Control\nDPLL Status\n0x10 - DPLL Status\nDPLL Synchronization Busy\n0x0c - DPLL Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDPLL Control A\nField <code>ENABLE</code> reader - DPLL Enable\nField <code>ENABLE</code> writer - DPLL Enable\nField <code>ONDEMAND</code> reader - On Demand Control\nField <code>ONDEMAND</code> writer - On Demand Control\nRegister <code>DPLLCTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nRegister <code>DPLLCTRLA</code> writer\nBit 1 - DPLL Enable\nBit 1 - DPLL Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - On Demand Control\nBit 7 - On Demand Control\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nField <code>DCOEN</code> reader - DCO Filter Enable\nField <code>DCOEN</code> writer - DCO Filter Enable\nField <code>DCOFILTER</code> reader - Sigma-Delta DCO Filter Selection\nField <code>DCOFILTER</code> writer - Sigma-Delta DCO Filter Selection\nSigma-Delta DCO Filter Selection\n0: No time-out. Automatic lock\nField <code>DIV</code> reader - Clock Divider\nField <code>DIV</code> writer - Clock Divider\nDPLL Control B\n0: Bandwidth = 92.7Khz and Damping Factor = 0.76\n0: Capacitor(pF) = 0.5 and Bandwidth Fn (MHz) = 3.21\n9: Bandwidth = 65.6Khz and Damping Factor = 2.11\n10: Bandwidth = 23.2Khz and Damping Factor = 0.75\n11: Bandwidth = 32.8Khz and Damping Factor = 1.06\n12: Bandwidth = 65.6Khz and Damping Factor = 1.07\n13: Bandwidth = 92.7Khz and Damping Factor = 1.51\n14: Bandwidth = 32.8Khz and Damping Factor = 0.53\n15: Bandwidth = 46.4Khz and Damping Factor = 0.75\n1: Bandwidth = 131Khz and Damping Factor = 1.08\n1: Capacitor(pF) = 1 and Bandwidth Fn (MHz) = 1.6\n2: Bandwidth = 46.4Khz and Damping Factor = 0.38\n2: Capacitor(pF) = 1.5 and Bandwidth Fn (MHz) = 1.1\n3: Bandwidth = 65.6Khz and Damping Factor = 0.54\n3: Capacitor(pF) = 2 and Bandwidth Fn (MHz) = 0.8\n4: Bandwidth = 131Khz and Damping Factor = 0.56\n4: Capacitor(pF) = 2.5 and Bandwidth Fn (MHz) = 0.64\n5: Bandwidth = 185Khz and Damping Factor = 0.79\n5: Capacitor(pF) = 3 and Bandwidth Fn (MHz) = 0.55\n6: Bandwidth = 65.6Khz and Damping Factor = 0.28\n6: Capacitor(pF) = 3.5 and Bandwidth Fn (MHz) = 0.45\n7: Bandwidth = 92.7Khz and Damping Factor = 0.39\n7: Capacitor(pF) = 4 and Bandwidth Fn (MHz) = 0.4\n8: Bandwidth = 46.4Khz and Damping Factor = 1.49\nField <code>FILTER</code> reader - Proportional Integral Filter …\nField <code>FILTER</code> writer - Proportional Integral Filter …\nProportional Integral Filter Selection\n0: Dedicated GCLK clock reference\nField <code>LBYPASS</code> reader - Lock Bypass\nField <code>LBYPASS</code> writer - Lock Bypass\nField <code>LTIME</code> reader - Lock Time\nField <code>LTIME</code> writer - Lock Time\nLock Time\nRegister <code>DPLLCTRLB</code> reader\nField <code>REFCLK</code> reader - Reference Clock Selection\nField <code>REFCLK</code> writer - Reference Clock Selection\nReference Clock Selection\nRegister <code>DPLLCTRLB</code> writer\nField <code>WUF</code> reader - Wake Up Fast\nField <code>WUF</code> writer - Wake Up Fast\n2: XOSC0 clock reference\n3: XOSC1 clock reference\n1: XOSC32K clock reference\nTime-out if no lock within 1ms\n6: Time-out if no lock within 1ms\nTime-out if no lock within 1.1ms\n7: Time-out if no lock within 1.1ms\nTime-out if no lock within 800us\n4: Time-out if no lock within 800us\nTime-out if no lock within 900us\n5: Time-out if no lock within 900us\nBit 15 - DCO Filter Enable\nBit 15 - DCO Filter Enable\nBits 12:14 - Sigma-Delta DCO Filter Selection\nBits 12:14 - Sigma-Delta DCO Filter Selection\nNo time-out. Automatic lock\nBits 16:26 - Clock Divider\nBits 16:26 - Clock Divider\nBits 0:3 - Proportional Integral Filter Selection\nBits 0:3 - Proportional Integral Filter Selection\nBandwidth = 92.7Khz and Damping Factor = 0.76\nCapacitor(pF) = 0.5 and Bandwidth Fn (MHz) = 3.21\nBandwidth = 65.6Khz and Damping Factor = 2.11\nBandwidth = 23.2Khz and Damping Factor = 0.75\nBandwidth = 32.8Khz and Damping Factor = 1.06\nBandwidth = 65.6Khz and Damping Factor = 1.07\nBandwidth = 92.7Khz and Damping Factor = 1.51\nBandwidth = 32.8Khz and Damping Factor = 0.53\nBandwidth = 46.4Khz and Damping Factor = 0.75\nBandwidth = 131Khz and Damping Factor = 1.08\nCapacitor(pF) = 1 and Bandwidth Fn (MHz) = 1.6\nBandwidth = 46.4Khz and Damping Factor = 0.38\nCapacitor(pF) = 1.5 and Bandwidth Fn (MHz) = 1.1\nBandwidth = 65.6Khz and Damping Factor = 0.54\nCapacitor(pF) = 2 and Bandwidth Fn (MHz) = 0.8\nBandwidth = 131Khz and Damping Factor = 0.56\nCapacitor(pF) = 2.5 and Bandwidth Fn (MHz) = 0.64\nBandwidth = 185Khz and Damping Factor = 0.79\nCapacitor(pF) = 3 and Bandwidth Fn (MHz) = 0.55\nBandwidth = 65.6Khz and Damping Factor = 0.28\nCapacitor(pF) = 3.5 and Bandwidth Fn (MHz) = 0.45\nBandwidth = 92.7Khz and Damping Factor = 0.39\nCapacitor(pF) = 4 and Bandwidth Fn (MHz) = 0.4\nBandwidth = 46.4Khz and Damping Factor = 1.49\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDedicated GCLK clock reference\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTime-out if no lock within 1ms\nTime-out if no lock within 1.1ms\nTime-out if no lock within 800us\nTime-out if no lock within 900us\nNo time-out. Automatic lock\nBandwidth = 92.7Khz and Damping Factor = 0.76\nCapacitor(pF) = 0.5 and Bandwidth Fn (MHz) = 3.21\nBandwidth = 65.6Khz and Damping Factor = 2.11\nBandwidth = 23.2Khz and Damping Factor = 0.75\nBandwidth = 32.8Khz and Damping Factor = 1.06\nBandwidth = 65.6Khz and Damping Factor = 1.07\nBandwidth = 92.7Khz and Damping Factor = 1.51\nBandwidth = 32.8Khz and Damping Factor = 0.53\nBandwidth = 46.4Khz and Damping Factor = 0.75\nBandwidth = 131Khz and Damping Factor = 1.08\nCapacitor(pF) = 1 and Bandwidth Fn (MHz) = 1.6\nBandwidth = 46.4Khz and Damping Factor = 0.38\nCapacitor(pF) = 1.5 and Bandwidth Fn (MHz) = 1.1\nBandwidth = 65.6Khz and Damping Factor = 0.54\nCapacitor(pF) = 2 and Bandwidth Fn (MHz) = 0.8\nBandwidth = 131Khz and Damping Factor = 0.56\nCapacitor(pF) = 2.5 and Bandwidth Fn (MHz) = 0.64\nBandwidth = 185Khz and Damping Factor = 0.79\nCapacitor(pF) = 3 and Bandwidth Fn (MHz) = 0.55\nBandwidth = 65.6Khz and Damping Factor = 0.28\nCapacitor(pF) = 3.5 and Bandwidth Fn (MHz) = 0.45\nBandwidth = 92.7Khz and Damping Factor = 0.39\nCapacitor(pF) = 4 and Bandwidth Fn (MHz) = 0.4\nBandwidth = 46.4Khz and Damping Factor = 1.49\nDedicated GCLK clock reference\nXOSC0 clock reference\nXOSC1 clock reference\nXOSC32K clock reference\nBit 11 - Lock Bypass\nBit 11 - Lock Bypass\nBits 8:10 - Lock Time\nBits 8:10 - Lock Time\nBits 5:7 - Reference Clock Selection\nBits 5:7 - Reference Clock Selection\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBit 4 - Wake Up Fast\nBit 4 - Wake Up Fast\nXOSC0 clock reference\nXOSC1 clock reference\nXOSC32K clock reference\nDPLL Ratio Control\nField <code>LDR</code> reader - Loop Divider Ratio\nField <code>LDR</code> writer - Loop Divider Ratio\nField <code>LDRFRAC</code> reader - Loop Divider Ratio Fractional Part\nField <code>LDRFRAC</code> writer - Loop Divider Ratio Fractional Part\nRegister <code>DPLLRATIO</code> reader\nRegister <code>DPLLRATIO</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:12 - Loop Divider Ratio\nBits 0:12 - Loop Divider Ratio\nBits 16:20 - Loop Divider Ratio Fractional Part\nBits 16:20 - Loop Divider Ratio Fractional Part\nField <code>CLKRDY</code> reader - DPLL Clock Ready\nDPLL Status\nField <code>LOCK</code> reader - DPLL Lock Status\nRegister <code>DPLLSTATUS</code> reader\nBit 1 - DPLL Clock Ready\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - DPLL Lock Status\nField <code>DPLLRATIO</code> reader - DPLL Loop Divider Ratio …\nDPLL Synchronization Busy\nField <code>ENABLE</code> reader - DPLL Enable Synchronization Status\nRegister <code>DPLLSYNCBUSY</code> reader\nBit 2 - DPLL Loop Divider Ratio Synchronization Status\nBit 1 - DPLL Enable Synchronization Status\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CFDEO0</code> reader - Clock 0 Failure Detector Event …\nField <code>CFDEO0</code> writer - Clock 0 Failure Detector Event …\nField <code>CFDEO1</code> reader - Clock 1 Failure Detector Event …\nField <code>CFDEO1</code> writer - Clock 1 Failure Detector Event …\nEvent Control\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBit 0 - Clock 0 Failure Detector Event Output Enable\nBit 0 - Clock 0 Failure Detector Event Output Enable\nBit 1 - Clock 1 Failure Detector Event Output Enable\nBit 1 - Clock 1 Failure Detector Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DFLLLCKC</code> reader - DFLL Lock Coarse Interrupt Enable\nField <code>DFLLLCKC</code> writer - DFLL Lock Coarse Interrupt Enable\nField <code>DFLLLCKF</code> reader - DFLL Lock Fine Interrupt Enable\nField <code>DFLLLCKF</code> writer - DFLL Lock Fine Interrupt Enable\nField <code>DFLLOOB</code> reader - DFLL Out Of Bounds Interrupt Enable\nField <code>DFLLOOB</code> writer - DFLL Out Of Bounds Interrupt Enable\nField <code>DFLLRCS</code> reader - DFLL Reference Clock Stopped …\nField <code>DFLLRCS</code> writer - DFLL Reference Clock Stopped …\nField <code>DFLLRDY</code> reader - DFLL Ready Interrupt Enable\nField <code>DFLLRDY</code> writer - DFLL Ready Interrupt Enable\nField <code>DPLL0LCKF</code> reader - DPLL0 Lock Fall Interrupt Enable\nField <code>DPLL0LCKF</code> writer - DPLL0 Lock Fall Interrupt Enable\nField <code>DPLL0LCKR</code> reader - DPLL0 Lock Rise Interrupt Enable\nField <code>DPLL0LCKR</code> writer - DPLL0 Lock Rise Interrupt Enable\nField <code>DPLL0LDRTO</code> reader - DPLL0 Loop Divider Ratio Update …\nField <code>DPLL0LDRTO</code> writer - DPLL0 Loop Divider Ratio Update …\nField <code>DPLL0LTO</code> reader - DPLL0 Lock Timeout Interrupt Enable\nField <code>DPLL0LTO</code> writer - DPLL0 Lock Timeout Interrupt Enable\nField <code>DPLL1LCKF</code> reader - DPLL1 Lock Fall Interrupt Enable\nField <code>DPLL1LCKF</code> writer - DPLL1 Lock Fall Interrupt Enable\nField <code>DPLL1LCKR</code> reader - DPLL1 Lock Rise Interrupt Enable\nField <code>DPLL1LCKR</code> writer - DPLL1 Lock Rise Interrupt Enable\nField <code>DPLL1LDRTO</code> reader - DPLL1 Loop Divider Ratio Update …\nField <code>DPLL1LDRTO</code> writer - DPLL1 Loop Divider Ratio Update …\nField <code>DPLL1LTO</code> reader - DPLL1 Lock Timeout Interrupt Enable\nField <code>DPLL1LTO</code> writer - DPLL1 Lock Timeout Interrupt Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nField <code>XOSCFAIL0</code> reader - XOSC 0 Clock Failure Detector …\nField <code>XOSCFAIL0</code> writer - XOSC 0 Clock Failure Detector …\nField <code>XOSCFAIL1</code> reader - XOSC 1 Clock Failure Detector …\nField <code>XOSCFAIL1</code> writer - XOSC 1 Clock Failure Detector …\nField <code>XOSCRDY0</code> reader - XOSC 0 Ready Interrupt Enable\nField <code>XOSCRDY0</code> writer - XOSC 0 Ready Interrupt Enable\nField <code>XOSCRDY1</code> reader - XOSC 1 Ready Interrupt Enable\nField <code>XOSCRDY1</code> writer - XOSC 1 Ready Interrupt Enable\nBit 11 - DFLL Lock Coarse Interrupt Enable\nBit 11 - DFLL Lock Coarse Interrupt Enable\nBit 10 - DFLL Lock Fine Interrupt Enable\nBit 10 - DFLL Lock Fine Interrupt Enable\nBit 9 - DFLL Out Of Bounds Interrupt Enable\nBit 9 - DFLL Out Of Bounds Interrupt Enable\nBit 12 - DFLL Reference Clock Stopped Interrupt Enable\nBit 12 - DFLL Reference Clock Stopped Interrupt Enable\nBit 8 - DFLL Ready Interrupt Enable\nBit 8 - DFLL Ready Interrupt Enable\nBit 17 - DPLL0 Lock Fall Interrupt Enable\nBit 17 - DPLL0 Lock Fall Interrupt Enable\nBit 16 - DPLL0 Lock Rise Interrupt Enable\nBit 16 - DPLL0 Lock Rise Interrupt Enable\nBit 19 - DPLL0 Loop Divider Ratio Update Complete …\nBit 19 - DPLL0 Loop Divider Ratio Update Complete …\nBit 18 - DPLL0 Lock Timeout Interrupt Enable\nBit 18 - DPLL0 Lock Timeout Interrupt Enable\nBit 25 - DPLL1 Lock Fall Interrupt Enable\nBit 25 - DPLL1 Lock Fall Interrupt Enable\nBit 24 - DPLL1 Lock Rise Interrupt Enable\nBit 24 - DPLL1 Lock Rise Interrupt Enable\nBit 27 - DPLL1 Loop Divider Ratio Update Complete …\nBit 27 - DPLL1 Loop Divider Ratio Update Complete …\nBit 26 - DPLL1 Lock Timeout Interrupt Enable\nBit 26 - DPLL1 Lock Timeout Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - XOSC 0 Clock Failure Detector Interrupt Enable\nBit 2 - XOSC 0 Clock Failure Detector Interrupt Enable\nBit 3 - XOSC 1 Clock Failure Detector Interrupt Enable\nBit 3 - XOSC 1 Clock Failure Detector Interrupt Enable\nBit 0 - XOSC 0 Ready Interrupt Enable\nBit 0 - XOSC 0 Ready Interrupt Enable\nBit 1 - XOSC 1 Ready Interrupt Enable\nBit 1 - XOSC 1 Ready Interrupt Enable\nField <code>DFLLLCKC</code> reader - DFLL Lock Coarse Interrupt Enable\nField <code>DFLLLCKC</code> writer - DFLL Lock Coarse Interrupt Enable\nField <code>DFLLLCKF</code> reader - DFLL Lock Fine Interrupt Enable\nField <code>DFLLLCKF</code> writer - DFLL Lock Fine Interrupt Enable\nField <code>DFLLOOB</code> reader - DFLL Out Of Bounds Interrupt Enable\nField <code>DFLLOOB</code> writer - DFLL Out Of Bounds Interrupt Enable\nField <code>DFLLRCS</code> reader - DFLL Reference Clock Stopped …\nField <code>DFLLRCS</code> writer - DFLL Reference Clock Stopped …\nField <code>DFLLRDY</code> reader - DFLL Ready Interrupt Enable\nField <code>DFLLRDY</code> writer - DFLL Ready Interrupt Enable\nField <code>DPLL0LCKF</code> reader - DPLL0 Lock Fall Interrupt Enable\nField <code>DPLL0LCKF</code> writer - DPLL0 Lock Fall Interrupt Enable\nField <code>DPLL0LCKR</code> reader - DPLL0 Lock Rise Interrupt Enable\nField <code>DPLL0LCKR</code> writer - DPLL0 Lock Rise Interrupt Enable\nField <code>DPLL0LDRTO</code> reader - DPLL0 Loop Divider Ratio Update …\nField <code>DPLL0LDRTO</code> writer - DPLL0 Loop Divider Ratio Update …\nField <code>DPLL0LTO</code> reader - DPLL0 Lock Timeout Interrupt Enable\nField <code>DPLL0LTO</code> writer - DPLL0 Lock Timeout Interrupt Enable\nField <code>DPLL1LCKF</code> reader - DPLL1 Lock Fall Interrupt Enable\nField <code>DPLL1LCKF</code> writer - DPLL1 Lock Fall Interrupt Enable\nField <code>DPLL1LCKR</code> reader - DPLL1 Lock Rise Interrupt Enable\nField <code>DPLL1LCKR</code> writer - DPLL1 Lock Rise Interrupt Enable\nField <code>DPLL1LDRTO</code> reader - DPLL1 Loop Divider Ratio Update …\nField <code>DPLL1LDRTO</code> writer - DPLL1 Loop Divider Ratio Update …\nField <code>DPLL1LTO</code> reader - DPLL1 Lock Timeout Interrupt Enable\nField <code>DPLL1LTO</code> writer - DPLL1 Lock Timeout Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nField <code>XOSCFAIL0</code> reader - XOSC 0 Clock Failure Detector …\nField <code>XOSCFAIL0</code> writer - XOSC 0 Clock Failure Detector …\nField <code>XOSCFAIL1</code> reader - XOSC 1 Clock Failure Detector …\nField <code>XOSCFAIL1</code> writer - XOSC 1 Clock Failure Detector …\nField <code>XOSCRDY0</code> reader - XOSC 0 Ready Interrupt Enable\nField <code>XOSCRDY0</code> writer - XOSC 0 Ready Interrupt Enable\nField <code>XOSCRDY1</code> reader - XOSC 1 Ready Interrupt Enable\nField <code>XOSCRDY1</code> writer - XOSC 1 Ready Interrupt Enable\nBit 11 - DFLL Lock Coarse Interrupt Enable\nBit 11 - DFLL Lock Coarse Interrupt Enable\nBit 10 - DFLL Lock Fine Interrupt Enable\nBit 10 - DFLL Lock Fine Interrupt Enable\nBit 9 - DFLL Out Of Bounds Interrupt Enable\nBit 9 - DFLL Out Of Bounds Interrupt Enable\nBit 12 - DFLL Reference Clock Stopped Interrupt Enable\nBit 12 - DFLL Reference Clock Stopped Interrupt Enable\nBit 8 - DFLL Ready Interrupt Enable\nBit 8 - DFLL Ready Interrupt Enable\nBit 17 - DPLL0 Lock Fall Interrupt Enable\nBit 17 - DPLL0 Lock Fall Interrupt Enable\nBit 16 - DPLL0 Lock Rise Interrupt Enable\nBit 16 - DPLL0 Lock Rise Interrupt Enable\nBit 19 - DPLL0 Loop Divider Ratio Update Complete …\nBit 19 - DPLL0 Loop Divider Ratio Update Complete …\nBit 18 - DPLL0 Lock Timeout Interrupt Enable\nBit 18 - DPLL0 Lock Timeout Interrupt Enable\nBit 25 - DPLL1 Lock Fall Interrupt Enable\nBit 25 - DPLL1 Lock Fall Interrupt Enable\nBit 24 - DPLL1 Lock Rise Interrupt Enable\nBit 24 - DPLL1 Lock Rise Interrupt Enable\nBit 27 - DPLL1 Loop Divider Ratio Update Complete …\nBit 27 - DPLL1 Loop Divider Ratio Update Complete …\nBit 26 - DPLL1 Lock Timeout Interrupt Enable\nBit 26 - DPLL1 Lock Timeout Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - XOSC 0 Clock Failure Detector Interrupt Enable\nBit 2 - XOSC 0 Clock Failure Detector Interrupt Enable\nBit 3 - XOSC 1 Clock Failure Detector Interrupt Enable\nBit 3 - XOSC 1 Clock Failure Detector Interrupt Enable\nBit 0 - XOSC 0 Ready Interrupt Enable\nBit 0 - XOSC 0 Ready Interrupt Enable\nBit 1 - XOSC 1 Ready Interrupt Enable\nBit 1 - XOSC 1 Ready Interrupt Enable\nField <code>DFLLLCKC</code> reader - DFLL Lock Coarse\nField <code>DFLLLCKC</code> writer - DFLL Lock Coarse\nField <code>DFLLLCKF</code> reader - DFLL Lock Fine\nField <code>DFLLLCKF</code> writer - DFLL Lock Fine\nField <code>DFLLOOB</code> reader - DFLL Out Of Bounds\nField <code>DFLLOOB</code> writer - DFLL Out Of Bounds\nField <code>DFLLRCS</code> reader - DFLL Reference Clock Stopped\nField <code>DFLLRCS</code> writer - DFLL Reference Clock Stopped\nField <code>DFLLRDY</code> reader - DFLL Ready\nField <code>DFLLRDY</code> writer - DFLL Ready\nField <code>DPLL0LCKF</code> reader - DPLL0 Lock Fall\nField <code>DPLL0LCKF</code> writer - DPLL0 Lock Fall\nField <code>DPLL0LCKR</code> reader - DPLL0 Lock Rise\nField <code>DPLL0LCKR</code> writer - DPLL0 Lock Rise\nField <code>DPLL0LDRTO</code> reader - DPLL0 Loop Divider Ratio Update …\nField <code>DPLL0LDRTO</code> writer - DPLL0 Loop Divider Ratio Update …\nField <code>DPLL0LTO</code> reader - DPLL0 Lock Timeout\nField <code>DPLL0LTO</code> writer - DPLL0 Lock Timeout\nField <code>DPLL1LCKF</code> reader - DPLL1 Lock Fall\nField <code>DPLL1LCKF</code> writer - DPLL1 Lock Fall\nField <code>DPLL1LCKR</code> reader - DPLL1 Lock Rise\nField <code>DPLL1LCKR</code> writer - DPLL1 Lock Rise\nField <code>DPLL1LDRTO</code> reader - DPLL1 Loop Divider Ratio Update …\nField <code>DPLL1LDRTO</code> writer - DPLL1 Loop Divider Ratio Update …\nField <code>DPLL1LTO</code> reader - DPLL1 Lock Timeout\nField <code>DPLL1LTO</code> writer - DPLL1 Lock Timeout\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nField <code>XOSCFAIL0</code> reader - XOSC 0 Clock Failure Detector\nField <code>XOSCFAIL0</code> writer - XOSC 0 Clock Failure Detector\nField <code>XOSCFAIL1</code> reader - XOSC 1 Clock Failure Detector\nField <code>XOSCFAIL1</code> writer - XOSC 1 Clock Failure Detector\nField <code>XOSCRDY0</code> reader - XOSC 0 Ready\nField <code>XOSCRDY0</code> writer - XOSC 0 Ready\nField <code>XOSCRDY1</code> reader - XOSC 1 Ready\nField <code>XOSCRDY1</code> writer - XOSC 1 Ready\nBit 11 - DFLL Lock Coarse\nBit 11 - DFLL Lock Coarse\nBit 10 - DFLL Lock Fine\nBit 10 - DFLL Lock Fine\nBit 9 - DFLL Out Of Bounds\nBit 9 - DFLL Out Of Bounds\nBit 12 - DFLL Reference Clock Stopped\nBit 12 - DFLL Reference Clock Stopped\nBit 8 - DFLL Ready\nBit 8 - DFLL Ready\nBit 17 - DPLL0 Lock Fall\nBit 17 - DPLL0 Lock Fall\nBit 16 - DPLL0 Lock Rise\nBit 16 - DPLL0 Lock Rise\nBit 19 - DPLL0 Loop Divider Ratio Update Complete\nBit 19 - DPLL0 Loop Divider Ratio Update Complete\nBit 18 - DPLL0 Lock Timeout\nBit 18 - DPLL0 Lock Timeout\nBit 25 - DPLL1 Lock Fall\nBit 25 - DPLL1 Lock Fall\nBit 24 - DPLL1 Lock Rise\nBit 24 - DPLL1 Lock Rise\nBit 27 - DPLL1 Loop Divider Ratio Update Complete\nBit 27 - DPLL1 Loop Divider Ratio Update Complete\nBit 26 - DPLL1 Lock Timeout\nBit 26 - DPLL1 Lock Timeout\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - XOSC 0 Clock Failure Detector\nBit 2 - XOSC 0 Clock Failure Detector\nBit 3 - XOSC 1 Clock Failure Detector\nBit 3 - XOSC 1 Clock Failure Detector\nBit 0 - XOSC 0 Ready\nBit 0 - XOSC 0 Ready\nBit 1 - XOSC 1 Ready\nBit 1 - XOSC 1 Ready\nField <code>DFLLLCKC</code> reader - DFLL Lock Coarse\nField <code>DFLLLCKF</code> reader - DFLL Lock Fine\nField <code>DFLLOOB</code> reader - DFLL Out Of Bounds\nField <code>DFLLRCS</code> reader - DFLL Reference Clock Stopped\nField <code>DFLLRDY</code> reader - DFLL Ready\nField <code>DPLL0LCKF</code> reader - DPLL0 Lock Fall\nField <code>DPLL0LCKR</code> reader - DPLL0 Lock Rise\nField <code>DPLL0LDRTO</code> reader - DPLL0 Loop Divider Ratio Update …\nField <code>DPLL0TO</code> reader - DPLL0 Timeout\nField <code>DPLL1LCKF</code> reader - DPLL1 Lock Fall\nField <code>DPLL1LCKR</code> reader - DPLL1 Lock Rise\nField <code>DPLL1LDRTO</code> reader - DPLL1 Loop Divider Ratio Update …\nField <code>DPLL1TO</code> reader - DPLL1 Timeout\nRegister <code>STATUS</code> reader\nStatus\nField <code>XOSCCKSW0</code> reader - XOSC 0 Clock Switch\nField <code>XOSCCKSW1</code> reader - XOSC 1 Clock Switch\nField <code>XOSCFAIL0</code> reader - XOSC 0 Clock Failure Detector\nField <code>XOSCFAIL1</code> reader - XOSC 1 Clock Failure Detector\nField <code>XOSCRDY0</code> reader - XOSC 0 Ready\nField <code>XOSCRDY1</code> reader - XOSC 1 Ready\nBit 11 - DFLL Lock Coarse\nBit 10 - DFLL Lock Fine\nBit 9 - DFLL Out Of Bounds\nBit 12 - DFLL Reference Clock Stopped\nBit 8 - DFLL Ready\nBit 17 - DPLL0 Lock Fall\nBit 16 - DPLL0 Lock Rise\nBit 19 - DPLL0 Loop Divider Ratio Update Complete\nBit 18 - DPLL0 Timeout\nBit 25 - DPLL1 Lock Fall\nBit 24 - DPLL1 Lock Rise\nBit 27 - DPLL1 Loop Divider Ratio Update Complete\nBit 26 - DPLL1 Timeout\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - XOSC 0 Clock Switch\nBit 5 - XOSC 1 Clock Switch\nBit 2 - XOSC 0 Clock Failure Detector\nBit 3 - XOSC 1 Clock Failure Detector\nBit 0 - XOSC 0 Ready\nBit 1 - XOSC 1 Ready\nField <code>CFDEN</code> reader - Clock Failure Detector Enable\nField <code>CFDEN</code> writer - Clock Failure Detector Enable\nField <code>CFDPRESC</code> reader - Clock Failure Detector Prescaler\nField <code>CFDPRESC</code> writer - Clock Failure Detector Prescaler\nClock Failure Detector Prescaler\n0: 31 us\n10: 31250 us\n7: 3906 us\n4: 488 us\n14: 500000 us\n1: 61 us\n11: 62500 us\n8: 7813 us\n5: 977 us\n15: 1000000 us\n2: 122 us\n12: 125000 us\n9: 15625 us\n6: 1953 us\n3: 244 us\n13: 250000 us\n0: 48 MHz\n7: 0.3125 MHz\n4: 3 MHz\n1: 24 MHz\n5: 1.5 MHz\n2: 12 MHz\n6: 0.75 MHz\n3: 6 MHz\nField <code>ENABLE</code> reader - Oscillator Enable\nField <code>ENABLE</code> writer - Oscillator Enable\nField <code>ENALC</code> reader - Automatic Loop Control Enable\nField <code>ENALC</code> writer - Automatic Loop Control Enable\nField <code>IMULT</code> reader - Oscillator Current Multiplier\nField <code>IMULT</code> writer - Oscillator Current Multiplier\nField <code>IPTAT</code> reader - Oscillator Current Reference\nField <code>IPTAT</code> writer - Oscillator Current Reference\nField <code>LOWBUFGAIN</code> reader - Low Buffer Gain Enable\nField <code>LOWBUFGAIN</code> writer - Low Buffer Gain Enable\nField <code>ONDEMAND</code> reader - On Demand Control\nField <code>ONDEMAND</code> writer - On Demand Control\nRegister <code>XOSCCTRL[%s]</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>STARTUP</code> reader - Start-Up Time\nField <code>STARTUP</code> writer - Start-Up Time\nStart-Up Time\nField <code>SWBEN</code> reader - Xosc Clock Switch Enable\nField <code>SWBEN</code> writer - Xosc Clock Switch Enable\nRegister <code>XOSCCTRL[%s]</code> writer\nExternal Multipurpose Crystal Oscillator Control\nField <code>XTALEN</code> reader - Crystal Oscillator Enable\nField <code>XTALEN</code> writer - Crystal Oscillator Enable\nBit 16 - Clock Failure Detector Enable\nBit 16 - Clock Failure Detector Enable\nBits 24:27 - Clock Failure Detector Prescaler\nBits 24:27 - Clock Failure Detector Prescaler\n31 us\n31250 us\n3906 us\n488 us\n500000 us\n61 us\n62500 us\n7813 us\n977 us\n1000000 us\n122 us\n125000 us\n15625 us\n1953 us\n244 us\n250000 us\n48 MHz\n0.3125 MHz\n3 MHz\n24 MHz\n1.5 MHz\n12 MHz\n0.75 MHz\n6 MHz\nBit 1 - Oscillator Enable\nBit 1 - Oscillator Enable\nBit 15 - Automatic Loop Control Enable\nBit 15 - Automatic Loop Control Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 11:14 - Oscillator Current Multiplier\nBits 11:14 - Oscillator Current Multiplier\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBits 9:10 - Oscillator Current Reference\nBits 9:10 - Oscillator Current Reference\n31 us\n31250 us\n3906 us\n488 us\n500000 us\n61 us\n62500 us\n7813 us\n977 us\n1000000 us\n122 us\n125000 us\n15625 us\n1953 us\n244 us\n250000 us\n48 MHz\n0.3125 MHz\n3 MHz\n24 MHz\n1.5 MHz\n12 MHz\n0.75 MHz\n6 MHz\nBit 8 - Low Buffer Gain Enable\nBit 8 - Low Buffer Gain Enable\nBit 7 - On Demand Control\nBit 7 - On Demand Control\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nBits 20:23 - Start-Up Time\nBits 20:23 - Start-Up Time\nBit 17 - Xosc Clock Switch Enable\nBit 17 - Xosc Clock Switch Enable\nGet enumerated values variant\nGet enumerated values variant\nBit 2 - Crystal Oscillator Enable\nBit 2 - Crystal Oscillator Enable\nEVCTRL (rw) register accessor: Event control\nINTENCLR (rw) register accessor: Interrupt enable clear\nINTENSET (rw) register accessor: Interrupt enable set\nINTFLAGA (rw) register accessor: Peripheral interrupt flag …\nINTFLAGAHB (rw) register accessor: Bridge interrupt flag …\nINTFLAGB (rw) register accessor: Peripheral interrupt flag …\nINTFLAGC (rw) register accessor: Peripheral interrupt flag …\nINTFLAGD (rw) register accessor: Peripheral interrupt flag …\nRegister block\nSTATUSA (r) register accessor: Peripheral write protection …\nSTATUSB (r) register accessor: Peripheral write protection …\nSTATUSC (r) register accessor: Peripheral write protection …\nSTATUSD (r) register accessor: Peripheral write protection …\nWRCTRL (rw) register accessor: Write control\nEvent control\n0x04 - Event control\nReturns the argument unchanged.\nInterrupt enable clear\n0x08 - Interrupt enable clear\nInterrupt enable set\n0x09 - Interrupt enable set\nPeripheral interrupt flag status - Bridge A\n0x14 - Peripheral interrupt flag status - Bridge A\nBridge interrupt flag status\n0x10 - Bridge interrupt flag status\nPeripheral interrupt flag status - Bridge B\n0x18 - Peripheral interrupt flag status - Bridge B\nPeripheral interrupt flag status - Bridge C\n0x1c - Peripheral interrupt flag status - Bridge C\nPeripheral interrupt flag status - Bridge D\n0x20 - Peripheral interrupt flag status - Bridge D\nCalls <code>U::from(self)</code>.\nPeripheral write protection status - Bridge A\n0x34 - Peripheral write protection status - Bridge A\nPeripheral write protection status - Bridge B\n0x38 - Peripheral write protection status - Bridge B\nPeripheral write protection status - Bridge C\n0x3c - Peripheral write protection status - Bridge C\nPeripheral write protection status - Bridge D\n0x40 - Peripheral write protection status - Bridge D\nWrite control\n0x00 - Write control\nField <code>ERREO</code> reader - Peripheral acess error event output\nField <code>ERREO</code> writer - Peripheral acess error event output\nEvent control\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBit 0 - Peripheral acess error event output\nBit 0 - Peripheral acess error event output\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ERR</code> reader - Peripheral access error interrupt …\nField <code>ERR</code> writer - Peripheral access error interrupt …\nInterrupt enable clear\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nBit 0 - Peripheral access error interrupt disable\nBit 0 - Peripheral access error interrupt disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ERR</code> reader - Peripheral access error interrupt enable\nField <code>ERR</code> writer - Peripheral access error interrupt enable\nInterrupt enable set\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nBit 0 - Peripheral access error interrupt enable\nBit 0 - Peripheral access error interrupt enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EIC_</code> reader - EIC\nField <code>EIC_</code> writer - EIC\nField <code>FREQM_</code> reader - FREQM\nField <code>FREQM_</code> writer - FREQM\nField <code>GCLK_</code> reader - GCLK\nField <code>GCLK_</code> writer - GCLK\nPeripheral interrupt flag status - Bridge A\nField <code>MCLK_</code> reader - MCLK\nField <code>MCLK_</code> writer - MCLK\nField <code>OSC32KCTRL_</code> reader - OSC32KCTRL\nField <code>OSC32KCTRL_</code> writer - OSC32KCTRL\nField <code>OSCCTRL_</code> reader - OSCCTRL\nField <code>OSCCTRL_</code> writer - OSCCTRL\nField <code>PAC_</code> reader - PAC\nField <code>PAC_</code> writer - PAC\nField <code>PM_</code> reader - PM\nField <code>PM_</code> writer - PM\nRegister <code>INTFLAGA</code> reader\nField <code>RSTC_</code> reader - RSTC\nField <code>RSTC_</code> writer - RSTC\nField <code>RTC_</code> reader - RTC\nField <code>RTC_</code> writer - RTC\nField <code>SERCOM0_</code> reader - SERCOM0\nField <code>SERCOM0_</code> writer - SERCOM0\nField <code>SERCOM1_</code> reader - SERCOM1\nField <code>SERCOM1_</code> writer - SERCOM1\nField <code>SUPC_</code> reader - SUPC\nField <code>SUPC_</code> writer - SUPC\nField <code>TC0_</code> reader - TC0\nField <code>TC0_</code> writer - TC0\nField <code>TC1_</code> reader - TC1\nField <code>TC1_</code> writer - TC1\nRegister <code>INTFLAGA</code> writer\nField <code>WDT_</code> reader - WDT\nField <code>WDT_</code> writer - WDT\nBit 10 - EIC\nBit 10 - EIC\nBit 11 - FREQM\nBit 11 - FREQM\nReturns the argument unchanged.\nBit 7 - GCLK\nBit 7 - GCLK\nCalls <code>U::from(self)</code>.\nBit 2 - MCLK\nBit 2 - MCLK\nBit 5 - OSC32KCTRL\nBit 5 - OSC32KCTRL\nBit 4 - OSCCTRL\nBit 4 - OSCCTRL\nBit 0 - PAC\nBit 0 - PAC\nBit 1 - PM\nBit 1 - PM\nBit 3 - RSTC\nBit 3 - RSTC\nBit 9 - RTC\nBit 9 - RTC\nBit 12 - SERCOM0\nBit 12 - SERCOM0\nBit 13 - SERCOM1\nBit 13 - SERCOM1\nBit 6 - SUPC\nBit 6 - SUPC\nBit 14 - TC0\nBit 14 - TC0\nBit 15 - TC1\nBit 15 - TC1\nBit 8 - WDT\nBit 8 - WDT\nField <code>FLASH_ALT_</code> reader - FLASH_ALT\nField <code>FLASH_ALT_</code> writer - FLASH_ALT\nField <code>FLASH_</code> reader - FLASH\nField <code>FLASH_</code> writer - FLASH\nField <code>HPB0_</code> reader - HPB0\nField <code>HPB0_</code> writer - HPB0\nField <code>HPB1_</code> reader - HPB1\nField <code>HPB1_</code> writer - HPB1\nField <code>HPB2_</code> reader - HPB2\nField <code>HPB2_</code> writer - HPB2\nField <code>HPB3_</code> reader - HPB3\nField <code>HPB3_</code> writer - HPB3\nBridge interrupt flag status\nField <code>PUKCC_</code> reader - PUKCC\nField <code>PUKCC_</code> writer - PUKCC\nField <code>QSPI_</code> reader - QSPI\nField <code>QSPI_</code> writer - QSPI\nRegister <code>INTFLAGAHB</code> reader\nField <code>RAMCM4S_</code> reader - RAMCM4S\nField <code>RAMCM4S_</code> writer - RAMCM4S\nField <code>RAMDMACICM_</code> reader - RAMDMACICM\nField <code>RAMDMACICM_</code> writer - RAMDMACICM\nField <code>RAMDMAWR_</code> reader - RAMDMAWR\nField <code>RAMDMAWR_</code> writer - RAMDMAWR\nField <code>RAMPPPDSU_</code> reader - RAMPPPDSU\nField <code>RAMPPPDSU_</code> writer - RAMPPPDSU\nField <code>SDHC0_</code> reader - SDHC0\nField <code>SDHC0_</code> writer - SDHC0\nField <code>SEEPROM_</code> reader - SEEPROM\nField <code>SEEPROM_</code> writer - SEEPROM\nRegister <code>INTFLAGAHB</code> writer\nBit 0 - FLASH\nBit 0 - FLASH\nBit 1 - FLASH_ALT\nBit 1 - FLASH_ALT\nReturns the argument unchanged.\nBit 7 - HPB0\nBit 7 - HPB0\nBit 8 - HPB1\nBit 8 - HPB1\nBit 9 - HPB2\nBit 9 - HPB2\nBit 10 - HPB3\nBit 10 - HPB3\nCalls <code>U::from(self)</code>.\nBit 11 - PUKCC\nBit 11 - PUKCC\nBit 14 - QSPI\nBit 14 - QSPI\nBit 3 - RAMCM4S\nBit 3 - RAMCM4S\nBit 6 - RAMDMACICM\nBit 6 - RAMDMACICM\nBit 5 - RAMDMAWR\nBit 5 - RAMDMAWR\nBit 4 - RAMPPPDSU\nBit 4 - RAMPPPDSU\nBit 12 - SDHC0\nBit 12 - SDHC0\nBit 2 - SEEPROM\nBit 2 - SEEPROM\nField <code>CMCC_</code> reader - CMCC\nField <code>CMCC_</code> writer - CMCC\nField <code>DMAC_</code> reader - DMAC\nField <code>DMAC_</code> writer - DMAC\nField <code>DSU_</code> reader - DSU\nField <code>DSU_</code> writer - DSU\nField <code>EVSYS_</code> reader - EVSYS\nField <code>EVSYS_</code> writer - EVSYS\nPeripheral interrupt flag status - Bridge B\nField <code>NVMCTRL_</code> reader - NVMCTRL\nField <code>NVMCTRL_</code> writer - NVMCTRL\nField <code>PORT_</code> reader - PORT\nField <code>PORT_</code> writer - PORT\nRegister <code>INTFLAGB</code> reader\nField <code>RAMECC_</code> reader - RAMECC\nField <code>RAMECC_</code> writer - RAMECC\nField <code>SERCOM2_</code> reader - SERCOM2\nField <code>SERCOM2_</code> writer - SERCOM2\nField <code>SERCOM3_</code> reader - SERCOM3\nField <code>SERCOM3_</code> writer - SERCOM3\nField <code>TC2_</code> reader - TC2\nField <code>TC2_</code> writer - TC2\nField <code>TC3_</code> reader - TC3\nField <code>TC3_</code> writer - TC3\nField <code>TCC0_</code> reader - TCC0\nField <code>TCC0_</code> writer - TCC0\nField <code>TCC1_</code> reader - TCC1\nField <code>TCC1_</code> writer - TCC1\nField <code>USB_</code> reader - USB\nField <code>USB_</code> writer - USB\nRegister <code>INTFLAGB</code> writer\nBit 3 - CMCC\nBit 3 - CMCC\nBit 5 - DMAC\nBit 5 - DMAC\nBit 1 - DSU\nBit 1 - DSU\nBit 7 - EVSYS\nBit 7 - EVSYS\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - NVMCTRL\nBit 2 - NVMCTRL\nBit 4 - PORT\nBit 4 - PORT\nBit 16 - RAMECC\nBit 16 - RAMECC\nBit 9 - SERCOM2\nBit 9 - SERCOM2\nBit 10 - SERCOM3\nBit 10 - SERCOM3\nBit 13 - TC2\nBit 13 - TC2\nBit 14 - TC3\nBit 14 - TC3\nBit 11 - TCC0\nBit 11 - TCC0\nBit 12 - TCC1\nBit 12 - TCC1\nBit 0 - USB\nBit 0 - USB\nField <code>AC_</code> reader - AC\nField <code>AC_</code> writer - AC\nField <code>AES_</code> reader - AES\nField <code>AES_</code> writer - AES\nField <code>CCL_</code> reader - CCL\nField <code>CCL_</code> writer - CCL\nField <code>ICM_</code> reader - ICM\nField <code>ICM_</code> writer - ICM\nPeripheral interrupt flag status - Bridge C\nField <code>PDEC_</code> reader - PDEC\nField <code>PDEC_</code> writer - PDEC\nField <code>PUKCC_</code> reader - PUKCC\nField <code>PUKCC_</code> writer - PUKCC\nField <code>QSPI_</code> reader - QSPI\nField <code>QSPI_</code> writer - QSPI\nRegister <code>INTFLAGC</code> reader\nField <code>TCC2_</code> reader - TCC2\nField <code>TCC2_</code> writer - TCC2\nField <code>TRNG_</code> reader - TRNG\nField <code>TRNG_</code> writer - TRNG\nRegister <code>INTFLAGC</code> writer\nBit 8 - AC\nBit 8 - AC\nBit 9 - AES\nBit 9 - AES\nBit 14 - CCL\nBit 14 - CCL\nReturns the argument unchanged.\nBit 11 - ICM\nBit 11 - ICM\nCalls <code>U::from(self)</code>.\nBit 7 - PDEC\nBit 7 - PDEC\nBit 12 - PUKCC\nBit 12 - PUKCC\nBit 13 - QSPI\nBit 13 - QSPI\nBit 3 - TCC2\nBit 3 - TCC2\nBit 10 - TRNG\nBit 10 - TRNG\nField <code>ADC0_</code> reader - ADC0\nField <code>ADC0_</code> writer - ADC0\nField <code>ADC1_</code> reader - ADC1\nField <code>ADC1_</code> writer - ADC1\nField <code>DAC_</code> reader - DAC\nField <code>DAC_</code> writer - DAC\nPeripheral interrupt flag status - Bridge D\nField <code>PCC_</code> reader - PCC\nField <code>PCC_</code> writer - PCC\nRegister <code>INTFLAGD</code> reader\nField <code>SERCOM4_</code> reader - SERCOM4\nField <code>SERCOM4_</code> writer - SERCOM4\nField <code>SERCOM5_</code> reader - SERCOM5\nField <code>SERCOM5_</code> writer - SERCOM5\nRegister <code>INTFLAGD</code> writer\nBit 7 - ADC0\nBit 7 - ADC0\nBit 8 - ADC1\nBit 8 - ADC1\nBit 9 - DAC\nBit 9 - DAC\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 11 - PCC\nBit 11 - PCC\nBit 0 - SERCOM4\nBit 0 - SERCOM4\nBit 1 - SERCOM5\nBit 1 - SERCOM5\nField <code>EIC_</code> reader - EIC APB Protect Enable\nField <code>FREQM_</code> reader - FREQM APB Protect Enable\nField <code>GCLK_</code> reader - GCLK APB Protect Enable\nField <code>MCLK_</code> reader - MCLK APB Protect Enable\nField <code>OSC32KCTRL_</code> reader - OSC32KCTRL APB Protect Enable\nField <code>OSCCTRL_</code> reader - OSCCTRL APB Protect Enable\nField <code>PAC_</code> reader - PAC APB Protect Enable\nField <code>PM_</code> reader - PM APB Protect Enable\nRegister <code>STATUSA</code> reader\nField <code>RSTC_</code> reader - RSTC APB Protect Enable\nField <code>RTC_</code> reader - RTC APB Protect Enable\nField <code>SERCOM0_</code> reader - SERCOM0 APB Protect Enable\nField <code>SERCOM1_</code> reader - SERCOM1 APB Protect Enable\nPeripheral write protection status - Bridge A\nField <code>SUPC_</code> reader - SUPC APB Protect Enable\nField <code>TC0_</code> reader - TC0 APB Protect Enable\nField <code>TC1_</code> reader - TC1 APB Protect Enable\nField <code>WDT_</code> reader - WDT APB Protect Enable\nBit 10 - EIC APB Protect Enable\nBit 11 - FREQM APB Protect Enable\nReturns the argument unchanged.\nBit 7 - GCLK APB Protect Enable\nCalls <code>U::from(self)</code>.\nBit 2 - MCLK APB Protect Enable\nBit 5 - OSC32KCTRL APB Protect Enable\nBit 4 - OSCCTRL APB Protect Enable\nBit 0 - PAC APB Protect Enable\nBit 1 - PM APB Protect Enable\nBit 3 - RSTC APB Protect Enable\nBit 9 - RTC APB Protect Enable\nBit 12 - SERCOM0 APB Protect Enable\nBit 13 - SERCOM1 APB Protect Enable\nBit 6 - SUPC APB Protect Enable\nBit 14 - TC0 APB Protect Enable\nBit 15 - TC1 APB Protect Enable\nBit 8 - WDT APB Protect Enable\nField <code>CMCC_</code> reader - CMCC APB Protect Enable\nField <code>DMAC_</code> reader - DMAC APB Protect Enable\nField <code>DSU_</code> reader - DSU APB Protect Enable\nField <code>EVSYS_</code> reader - EVSYS APB Protect Enable\nField <code>NVMCTRL_</code> reader - NVMCTRL APB Protect Enable\nField <code>PORT_</code> reader - PORT APB Protect Enable\nRegister <code>STATUSB</code> reader\nField <code>RAMECC_</code> reader - RAMECC APB Protect Enable\nField <code>SERCOM2_</code> reader - SERCOM2 APB Protect Enable\nField <code>SERCOM3_</code> reader - SERCOM3 APB Protect Enable\nPeripheral write protection status - Bridge B\nField <code>TC2_</code> reader - TC2 APB Protect Enable\nField <code>TC3_</code> reader - TC3 APB Protect Enable\nField <code>TCC0_</code> reader - TCC0 APB Protect Enable\nField <code>TCC1_</code> reader - TCC1 APB Protect Enable\nField <code>USB_</code> reader - USB APB Protect Enable\nBit 3 - CMCC APB Protect Enable\nBit 5 - DMAC APB Protect Enable\nBit 1 - DSU APB Protect Enable\nBit 7 - EVSYS APB Protect Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - NVMCTRL APB Protect Enable\nBit 4 - PORT APB Protect Enable\nBit 16 - RAMECC APB Protect Enable\nBit 9 - SERCOM2 APB Protect Enable\nBit 10 - SERCOM3 APB Protect Enable\nBit 13 - TC2 APB Protect Enable\nBit 14 - TC3 APB Protect Enable\nBit 11 - TCC0 APB Protect Enable\nBit 12 - TCC1 APB Protect Enable\nBit 0 - USB APB Protect Enable\nField <code>AC_</code> reader - AC APB Protect Enable\nField <code>AES_</code> reader - AES APB Protect Enable\nField <code>CCL_</code> reader - CCL APB Protect Enable\nField <code>ICM_</code> reader - ICM APB Protect Enable\nField <code>PDEC_</code> reader - PDEC APB Protect Enable\nField <code>PUKCC_</code> reader - PUKCC APB Protect Enable\nField <code>QSPI_</code> reader - QSPI APB Protect Enable\nRegister <code>STATUSC</code> reader\nPeripheral write protection status - Bridge C\nField <code>TCC2_</code> reader - TCC2 APB Protect Enable\nField <code>TRNG_</code> reader - TRNG APB Protect Enable\nBit 8 - AC APB Protect Enable\nBit 9 - AES APB Protect Enable\nBit 14 - CCL APB Protect Enable\nReturns the argument unchanged.\nBit 11 - ICM APB Protect Enable\nCalls <code>U::from(self)</code>.\nBit 7 - PDEC APB Protect Enable\nBit 12 - PUKCC APB Protect Enable\nBit 13 - QSPI APB Protect Enable\nBit 3 - TCC2 APB Protect Enable\nBit 10 - TRNG APB Protect Enable\nField <code>ADC0_</code> reader - ADC0 APB Protect Enable\nField <code>ADC1_</code> reader - ADC1 APB Protect Enable\nField <code>DAC_</code> reader - DAC APB Protect Enable\nField <code>PCC_</code> reader - PCC APB Protect Enable\nRegister <code>STATUSD</code> reader\nField <code>SERCOM4_</code> reader - SERCOM4 APB Protect Enable\nField <code>SERCOM5_</code> reader - SERCOM5 APB Protect Enable\nPeripheral write protection status - Bridge D\nBit 7 - ADC0 APB Protect Enable\nBit 8 - ADC1 APB Protect Enable\nBit 9 - DAC APB Protect Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 11 - PCC APB Protect Enable\nBit 0 - SERCOM4 APB Protect Enable\nBit 1 - SERCOM5 APB Protect Enable\n1: Clear protection\nField <code>KEY</code> reader - Peripheral access control key\nField <code>KEY</code> writer - Peripheral access control key\nPeripheral access control key\n0: No action\nField <code>PERID</code> reader - Peripheral identifier\nField <code>PERID</code> writer - Peripheral identifier\nRegister <code>WRCTRL</code> reader\n2: Set protection\n3: Set and lock protection\nRegister <code>WRCTRL</code> writer\nWrite control\nClear protection\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear protection\nNo action\nSet protection\nSet and lock protection\nBits 16:23 - Peripheral access control key\nBits 16:23 - Peripheral access control key\nNo action\nBits 0:15 - Peripheral identifier\nBits 0:15 - Peripheral identifier\nSet protection\nSet and lock protection\nGet enumerated values variant\nIDR (w) register accessor: Interrupt Disable Register\nIER (w) register accessor: Interrupt Enable Register\nIMR (r) register accessor: Interrupt Mask Register\nISR (r) register accessor: Interrupt Status Register\nMR (rw) register accessor: Mode Register\nRegister block\nRHR (r) register accessor: Reception Holding Register\nWPMR (rw) register accessor: Write Protection Mode Register\nWPSR (r) register accessor: Write Protection Status …\nReturns the argument unchanged.\nInterrupt Disable Register\n0x08 - Interrupt Disable Register\nInterrupt Enable Register\n0x04 - Interrupt Enable Register\nInterrupt Mask Register\n0x0c - Interrupt Mask Register\nCalls <code>U::from(self)</code>.\nInterrupt Status Register\n0x10 - Interrupt Status Register\nMode Register\n0x00 - Mode Register\nReception Holding Register\n0x14 - Reception Holding Register\nWrite Protection Mode Register\n0xe0 - Write Protection Mode Register\nWrite Protection Status Register\n0xe4 - Write Protection Status Register\nField <code>DRDY</code> writer - Data Ready Interrupt Disable\nInterrupt Disable Register\nField <code>OVRE</code> writer - Overrun Error Interrupt Disable\nRegister <code>IDR</code> writer\nBit 0 - Data Ready Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Overrun Error Interrupt Disable\nField <code>DRDY</code> writer - Data Ready Interrupt Enable\nInterrupt Enable Register\nField <code>OVRE</code> writer - Overrun Error Interrupt Enable\nRegister <code>IER</code> writer\nBit 0 - Data Ready Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Overrun Error Interrupt Enable\nField <code>DRDY</code> reader - Data Ready Interrupt Mask\nInterrupt Mask Register\nField <code>OVRE</code> reader - Overrun Error Interrupt Mask\nRegister <code>IMR</code> reader\nBit 0 - Data Ready Interrupt Mask\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Overrun Error Interrupt Mask\nField <code>DRDY</code> reader - Data Ready Interrupt Status\nInterrupt Status Register\nField <code>OVRE</code> reader - Overrun Error Interrupt Status\nRegister <code>ISR</code> reader\nBit 0 - Data Ready Interrupt Status\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Overrun Error Interrupt Status\nField <code>ALWYS</code> reader - Always Sampling\nField <code>ALWYS</code> writer - Always Sampling\nField <code>CID</code> reader - Clear If Disabled\nField <code>CID</code> writer - Clear If Disabled\nField <code>DSIZE</code> reader - Data size\nField <code>DSIZE</code> writer - Data size\nData size\nField <code>FRSTS</code> reader - First sample\nField <code>FRSTS</code> writer - First sample\nField <code>HALFS</code> reader - Half Sampling\nField <code>HALFS</code> writer - Half Sampling\nField <code>ISIZE</code> reader - Input Data Size\nField <code>ISIZE</code> writer - Input Data Size\nInput Data Size\nMode Register\nField <code>PCEN</code> reader - Parallel Capture Enable\nField <code>PCEN</code> writer - Parallel Capture Enable\nRegister <code>MR</code> reader\nField <code>SCALE</code> reader - Scale data\nField <code>SCALE</code> writer - Scale data\nRegister <code>MR</code> writer\nInput data bus size is 10 bits\n1: Input data bus size is 10 bits\nInput data bus size is 12 bits\n2: Input data bus size is 12 bits\nInput data bus size is 14 bits\n3: Input data bus size is 14 bits\n1 data is read in the PCC_RHR\n0: 1 data is read in the PCC_RHR\n2 data is read in the PCC_RHR\n1: 2 data is read in the PCC_RHR\n4 data are read in the PCC_RHR (only for 8 bits data size, …\n2: 4 data are read in the PCC_RHR (only for 8 bits data …\nInput data bus size is 8 bits\n0: Input data bus size is 8 bits\nBit 9 - Always Sampling\nBit 9 - Always Sampling\nBits 30:31 - Clear If Disabled\nBits 30:31 - Clear If Disabled\nBits 4:5 - Data size\nBits 4:5 - Data size\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 11 - First sample\nBit 11 - First sample\nBit 10 - Half Sampling\nBit 10 - Half Sampling\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInput data bus size is 10 bits\nInput data bus size is 12 bits\nInput data bus size is 14 bits\n1 data is read in the PCC_RHR\n2 data is read in the PCC_RHR\n4 data are read in the PCC_RHR (only for 8 bits data size, …\nInput data bus size is 8 bits\nBits 16:18 - Input Data Size\nBits 16:18 - Input Data Size\nBit 0 - Parallel Capture Enable\nBit 0 - Parallel Capture Enable\nBit 8 - Scale data\nBit 8 - Scale data\nGet enumerated values variant\nGet enumerated values variant\nRegister <code>RHR</code> reader\nField <code>RDATA</code> reader - Reception Data\nReception Holding Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Reception Data\n5260099: Write Protection Key\nRegister <code>WPMR</code> reader\nRegister <code>WPMR</code> writer\nField <code>WPEN</code> reader - Write Protection Enable\nField <code>WPEN</code> writer - Write Protection Enable\nField <code>WPKEY</code> reader - Write Protection Key\nField <code>WPKEY</code> writer - Write Protection Key\nWrite Protection Key\nWrite Protection Mode Register\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWrite Protection Key\nWrite Protection Key\nGet enumerated values variant\nBit 0 - Write Protection Enable\nBit 0 - Write Protection Enable\nBits 8:31 - Write Protection Key\nBits 8:31 - Write Protection Key\nRegister <code>WPSR</code> reader\nWrite Protection Status Register\nField <code>WPVS</code> reader - Write Protection Violation Source\nField <code>WPVSRC</code> reader - Write Protection Violation Status\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Write Protection Violation Source\nBits 8:23 - Write Protection Violation Status\nCC (rw) register accessor: Channel n Compare Value\nCCBUF (rw) register accessor: Channel Compare Buffer Value\nCOUNT (rw) register accessor: Counter Value\nCTRLA (rw) register accessor: Control A\nCTRLBCLR (rw) register accessor: Control B Clear\nCTRLBSET (rw) register accessor: Control B Set\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: Event Control\nFILTER (rw) register accessor: Filter Value\nFILTERBUF (rw) register accessor: Filter Buffer Value\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nPRESC (rw) register accessor: Prescaler Value\nPRESCBUF (rw) register accessor: Prescaler Buffer Value\nRegister block\nSTATUS (rw) register accessor: Status\nSYNCBUSY (r) register accessor: Synchronization Status\nChannel n Compare Value\n0x20..0x28 - Channel n Compare Value\nIterator for array of: 0x20..0x28 - Channel n Compare Value\nChannel Compare Buffer Value\n0x30..0x38 - Channel Compare Buffer Value\nIterator for array of: 0x30..0x38 - Channel Compare Buffer …\nCounter Value\n0x1c - Counter Value\nControl A\n0x00 - Control A\nControl B Clear\n0x04 - Control B Clear\nControl B Set\n0x05 - Control B Set\nDebug Control\n0x0f - Debug Control\nEvent Control\n0x06 - Event Control\nFilter Value\n0x15 - Filter Value\nFilter Buffer Value\n0x19 - Filter Buffer Value\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x08 - Interrupt Enable Clear\nInterrupt Enable Set\n0x09 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x0a - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nPrescaler Value\n0x14 - Prescaler Value\nPrescaler Buffer Value\n0x18 - Prescaler Buffer Value\nStatus\n0x0c - Status\nSynchronization Status\n0x10 - Synchronization Status\nField <code>CC</code> reader - Channel Compare Value\nChannel n Compare Value\nField <code>CC</code> writer - Channel Compare Value\nRegister <code>CC[%s]</code> reader\nRegister <code>CC[%s]</code> writer\nBits 0:15 - Channel Compare Value\nBits 0:15 - Channel Compare Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CCBUF</code> reader - Channel Compare Buffer Value\nChannel Compare Buffer Value\nField <code>CCBUF</code> writer - Channel Compare Buffer Value\nRegister <code>CCBUF[%s]</code> reader\nRegister <code>CCBUF[%s]</code> writer\nBits 0:15 - Channel Compare Buffer Value\nBits 0:15 - Channel Compare Buffer Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nCounter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:15 - Counter Value\nBits 0:15 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ALOCK</code> reader - Auto Lock\nField <code>ALOCK</code> writer - Auto Lock\nField <code>ANGULAR</code> reader - Angular Counter Length\nField <code>ANGULAR</code> writer - Angular Counter Length\n4: Auto correction mode\nField <code>CONF</code> reader - PDEC Configuration\nField <code>CONF</code> writer - PDEC Configuration\nPDEC Configuration\n2: COUNTER operating mode\nControl A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\n1: HALL operating mode\nField <code>MAXCMP</code> reader - Maximum Consecutive Missing Pulses\nField <code>MAXCMP</code> writer - Maximum Consecutive Missing Pulses\nField <code>MODE</code> reader - Operation Mode\nField <code>MODE</code> writer - Operation Mode\nOperation Mode\nField <code>PEREN</code> reader - Period Enable\nField <code>PEREN</code> writer - Period Enable\nField <code>PINEN0</code> reader - PDEC Input From Pin 0 Enable\nField <code>PINEN0</code> writer - PDEC Input From Pin 0 Enable\nField <code>PINEN1</code> reader - PDEC Input From Pin 1 Enable\nField <code>PINEN1</code> writer - PDEC Input From Pin 1 Enable\nField <code>PINEN2</code> reader - PDEC Input From Pin 2 Enable\nField <code>PINEN2</code> writer - PDEC Input From Pin 2 Enable\nField <code>PINVEN0</code> reader - IO Pin 0 Invert Enable\nField <code>PINVEN0</code> writer - IO Pin 0 Invert Enable\nField <code>PINVEN1</code> reader - IO Pin 1 Invert Enable\nField <code>PINVEN1</code> writer - IO Pin 1 Invert Enable\nField <code>PINVEN2</code> reader - IO Pin 2 Invert Enable\nField <code>PINVEN2</code> writer - IO Pin 2 Invert Enable\n0: QDEC operating mode\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SWAP</code> reader - PDEC Phase A and B Swap\nField <code>SWAP</code> writer - PDEC Phase A and B Swap\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\n2: Decoder direction\n3: Secure decoder direction\n0: Quadrature decoder direction\n1: Secure Quadrature decoder direction\nBit 11 - Auto Lock\nBit 11 - Auto Lock\nBits 24:26 - Angular Counter Length\nBits 24:26 - Angular Counter Length\nAuto correction mode\nBits 8:10 - PDEC Configuration\nBits 8:10 - PDEC Configuration\nCOUNTER operating mode\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHALL operating mode\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAuto correction mode\nCOUNTER operating mode\nHALL operating mode\nQDEC operating mode\nDecoder direction\nSecure decoder direction\nQuadrature decoder direction\nSecure Quadrature decoder direction\nBits 28:31 - Maximum Consecutive Missing Pulses\nBits 28:31 - Maximum Consecutive Missing Pulses\nBits 2:3 - Operation Mode\nBits 2:3 - Operation Mode\nBit 15 - Period Enable\nBit 15 - Period Enable\nBit 16 - PDEC Input From Pin 0 Enable\nBit 16 - PDEC Input From Pin 0 Enable\nBit 17 - PDEC Input From Pin 1 Enable\nBit 17 - PDEC Input From Pin 1 Enable\nBit 18 - PDEC Input From Pin 2 Enable\nBit 18 - PDEC Input From Pin 2 Enable\nBit 20 - IO Pin 0 Invert Enable\nBit 20 - IO Pin 0 Invert Enable\nBit 21 - IO Pin 1 Invert Enable\nBit 21 - IO Pin 1 Invert Enable\nBit 22 - IO Pin 2 Invert Enable\nBit 22 - IO Pin 2 Invert Enable\nQDEC operating mode\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nBit 14 - PDEC Phase A and B Swap\nBit 14 - PDEC Phase A and B Swap\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nDecoder direction\nSecure decoder direction\nQuadrature decoder direction\nSecure Quadrature decoder direction\nField <code>CMD</code> reader - Command\nField <code>CMD</code> writer - Command\nCommand\nControl B Clear\nField <code>LUPD</code> reader - Lock Update\nField <code>LUPD</code> writer - Lock Update\n0: No action\nRegister <code>CTRLBCLR</code> reader\n3: Force a read synchronization of COUNT\n1: Force a counter restart or retrigger\n4: Start QDEC/HALL\n5: Stop QDEC/HALL\n2: Force update of double buffered registers\nRegister <code>CTRLBCLR</code> writer\nBits 5:7 - Command\nBits 5:7 - Command\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo action\nForce a read synchronization of COUNT\nForce a counter restart or retrigger\nStart QDEC/HALL\nStop QDEC/HALL\nForce update of double buffered registers\nBit 1 - Lock Update\nBit 1 - Lock Update\nNo action\nForce a read synchronization of COUNT\nForce a counter restart or retrigger\nStart QDEC/HALL\nStop QDEC/HALL\nForce update of double buffered registers\nGet enumerated values variant\nField <code>CMD</code> reader - Command\nField <code>CMD</code> writer - Command\nCommand\nControl B Set\nField <code>LUPD</code> reader - Lock Update\nField <code>LUPD</code> writer - Lock Update\n0: No action\nRegister <code>CTRLBSET</code> reader\n3: Force a read synchronization of COUNT\n1: Force a counter restart or retrigger\n4: Start QDEC/HALL\n5: Stop QDEC/HALL\n2: Force update of double buffered registers\nRegister <code>CTRLBSET</code> writer\nBits 5:7 - Command\nBits 5:7 - Command\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo action\nForce a read synchronization of COUNT\nForce a counter restart or retrigger\nStart QDEC/HALL\nStop QDEC/HALL\nForce update of double buffered registers\nBit 1 - Lock Update\nBit 1 - Lock Update\nNo action\nForce a read synchronization of COUNT\nForce a counter restart or retrigger\nStart QDEC/HALL\nStop QDEC/HALL\nForce update of double buffered registers\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Debug Run Mode\nField <code>DBGRUN</code> writer - Debug Run Mode\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Run Mode\nBit 0 - Debug Run Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Count on event\nField <code>DIREO</code> reader - Direction Output Event Enable\nField <code>DIREO</code> writer - Direction Output Event Enable\nField <code>ERREO</code> reader - Error Output Event Enable\nField <code>ERREO</code> writer - Error Output Event Enable\nField <code>EVACT</code> reader - Event Action\nField <code>EVACT</code> writer - Event Action\nEvent Action\nEvent Control\nField <code>EVEI</code> reader - Event Input Enable\nField <code>EVEI</code> writer - Event Input Enable\nField <code>EVINV</code> reader - Inverted Event Input Enable\nField <code>EVINV</code> writer - Inverted Event Input Enable\nField <code>MCEO0</code> reader - Match Channel 0 Event Output Enable\nField <code>MCEO0</code> writer - Match Channel 0 Event Output Enable\nField <code>MCEO1</code> reader - Match Channel 1 Event Output Enable\nField <code>MCEO1</code> writer - Match Channel 1 Event Output Enable\n0: Event action disabled\nField <code>OVFEO</code> reader - Overflow/Underflow Output Event Enable\nField <code>OVFEO</code> writer - Overflow/Underflow Output Event Enable\nRegister <code>EVCTRL</code> reader\n1: Start, restart or retrigger on event\nField <code>VLCEO</code> reader - Velocity Output Event Enable\nField <code>VLCEO</code> writer - Velocity Output Event Enable\nRegister <code>EVCTRL</code> writer\nCount on event\nBit 10 - Direction Output Event Enable\nBit 10 - Direction Output Event Enable\nBit 9 - Error Output Event Enable\nBit 9 - Error Output Event Enable\nBits 0:1 - Event Action\nBits 0:1 - Event Action\nBits 5:7 - Event Input Enable\nBits 5:7 - Event Input Enable\nBits 2:4 - Inverted Event Input Enable\nBits 2:4 - Inverted Event Input Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCount on event\nEvent action disabled\nStart, restart or retrigger on event\nBit 12 - Match Channel 0 Event Output Enable\nBit 12 - Match Channel 0 Event Output Enable\nBit 13 - Match Channel 1 Event Output Enable\nBit 13 - Match Channel 1 Event Output Enable\nEvent action disabled\nBit 8 - Overflow/Underflow Output Event Enable\nBit 8 - Overflow/Underflow Output Event Enable\nStart, restart or retrigger on event\nGet enumerated values variant\nBit 11 - Velocity Output Event Enable\nBit 11 - Velocity Output Event Enable\nField <code>FILTER</code> reader - Filter Value\nFilter Value\nField <code>FILTER</code> writer - Filter Value\nRegister <code>FILTER</code> reader\nRegister <code>FILTER</code> writer\nBits 0:7 - Filter Value\nBits 0:7 - Filter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>FILTERBUF</code> reader - Filter Buffer Value\nFilter Buffer Value\nField <code>FILTERBUF</code> writer - Filter Buffer Value\nRegister <code>FILTERBUF</code> reader\nRegister <code>FILTERBUF</code> writer\nBits 0:7 - Filter Buffer Value\nBits 0:7 - Filter Buffer Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIR</code> reader - Direction Interrupt Disable\nField <code>DIR</code> writer - Direction Interrupt Disable\nField <code>ERR</code> reader - Error Interrupt Disable\nField <code>ERR</code> writer - Error Interrupt Disable\nInterrupt Enable Clear\nField <code>MC0</code> reader - Channel 0 Compare Match Disable\nField <code>MC0</code> writer - Channel 0 Compare Match Disable\nField <code>MC1</code> reader - Channel 1 Compare Match Disable\nField <code>MC1</code> writer - Channel 1 Compare Match Disable\nField <code>OVF</code> reader - Overflow/Underflow Interrupt Disable\nField <code>OVF</code> writer - Overflow/Underflow Interrupt Disable\nRegister <code>INTENCLR</code> reader\nField <code>VLC</code> reader - Velocity Interrupt Disable\nField <code>VLC</code> writer - Velocity Interrupt Disable\nRegister <code>INTENCLR</code> writer\nBit 2 - Direction Interrupt Disable\nBit 2 - Direction Interrupt Disable\nBit 1 - Error Interrupt Disable\nBit 1 - Error Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Channel 0 Compare Match Disable\nBit 4 - Channel 0 Compare Match Disable\nBit 5 - Channel 1 Compare Match Disable\nBit 5 - Channel 1 Compare Match Disable\nBit 0 - Overflow/Underflow Interrupt Disable\nBit 0 - Overflow/Underflow Interrupt Disable\nBit 3 - Velocity Interrupt Disable\nBit 3 - Velocity Interrupt Disable\nField <code>DIR</code> reader - Direction Interrupt Enable\nField <code>DIR</code> writer - Direction Interrupt Enable\nField <code>ERR</code> reader - Error Interrupt Enable\nField <code>ERR</code> writer - Error Interrupt Enable\nInterrupt Enable Set\nField <code>MC0</code> reader - Channel 0 Compare Match Enable\nField <code>MC0</code> writer - Channel 0 Compare Match Enable\nField <code>MC1</code> reader - Channel 1 Compare Match Enable\nField <code>MC1</code> writer - Channel 1 Compare Match Enable\nField <code>OVF</code> reader - Overflow/Underflow Interrupt Enable\nField <code>OVF</code> writer - Overflow/Underflow Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>VLC</code> reader - Velocity Interrupt Enable\nField <code>VLC</code> writer - Velocity Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 2 - Direction Interrupt Enable\nBit 2 - Direction Interrupt Enable\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Channel 0 Compare Match Enable\nBit 4 - Channel 0 Compare Match Enable\nBit 5 - Channel 1 Compare Match Enable\nBit 5 - Channel 1 Compare Match Enable\nBit 0 - Overflow/Underflow Interrupt Enable\nBit 0 - Overflow/Underflow Interrupt Enable\nBit 3 - Velocity Interrupt Enable\nBit 3 - Velocity Interrupt Enable\nField <code>DIR</code> reader - Direction Change\nField <code>DIR</code> writer - Direction Change\nField <code>ERR</code> reader - Error\nField <code>ERR</code> writer - Error\nInterrupt Flag Status and Clear\nField <code>MC0</code> reader - Channel 0 Compare Match\nField <code>MC0</code> writer - Channel 0 Compare Match\nField <code>MC1</code> reader - Channel 1 Compare Match\nField <code>MC1</code> writer - Channel 1 Compare Match\nField <code>OVF</code> reader - Overflow/Underflow\nField <code>OVF</code> writer - Overflow/Underflow\nRegister <code>INTFLAG</code> reader\nField <code>VLC</code> reader - Velocity\nField <code>VLC</code> writer - Velocity\nRegister <code>INTFLAG</code> writer\nBit 2 - Direction Change\nBit 2 - Direction Change\nBit 1 - Error\nBit 1 - Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Channel 0 Compare Match\nBit 4 - Channel 0 Compare Match\nBit 5 - Channel 1 Compare Match\nBit 5 - Channel 1 Compare Match\nBit 0 - Overflow/Underflow\nBit 0 - Overflow/Underflow\nBit 3 - Velocity\nBit 3 - Velocity\n0: No division\n10: Divide by 1024\n7: Divide by 128\n4: Divide by 16\n1: Divide by 2\n8: Divide by 256\n5: Divide by 32\n2: Divide by 4\n9: Divide by 512\n6: Divide by 64\n3: Divide by 8\nField <code>PRESC</code> reader - Prescaler Value\nPrescaler Value\nField <code>PRESC</code> writer - Prescaler Value\nPrescaler Value\nRegister <code>PRESC</code> reader\nRegister <code>PRESC</code> writer\nNo division\nDivide by 1024\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 256\nDivide by 32\nDivide by 4\nDivide by 512\nDivide by 64\nDivide by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo division\nDivide by 1024\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 256\nDivide by 32\nDivide by 4\nDivide by 512\nDivide by 64\nDivide by 8\nBits 0:3 - Prescaler Value\nBits 0:3 - Prescaler Value\nGet enumerated values variant\n0: No division\n10: Divide by 1024\n7: Divide by 128\n4: Divide by 16\n1: Divide by 2\n8: Divide by 256\n5: Divide by 32\n2: Divide by 4\n9: Divide by 512\n6: Divide by 64\n3: Divide by 8\nField <code>PRESCBUF</code> reader - Prescaler Buffer Value\nPrescaler Buffer Value\nField <code>PRESCBUF</code> writer - Prescaler Buffer Value\nPrescaler Buffer Value\nRegister <code>PRESCBUF</code> reader\nRegister <code>PRESCBUF</code> writer\nNo division\nDivide by 1024\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 256\nDivide by 32\nDivide by 4\nDivide by 512\nDivide by 64\nDivide by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo division\nDivide by 1024\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 256\nDivide by 32\nDivide by 4\nDivide by 512\nDivide by 64\nDivide by 8\nBits 0:3 - Prescaler Buffer Value\nBits 0:3 - Prescaler Buffer Value\nGet enumerated values variant\nField <code>CCBUFV0</code> reader - Compare Channel 0 Buffer Valid\nField <code>CCBUFV0</code> writer - Compare Channel 0 Buffer Valid\nField <code>CCBUFV1</code> reader - Compare Channel 1 Buffer Valid\nField <code>CCBUFV1</code> writer - Compare Channel 1 Buffer Valid\nField <code>DIR</code> reader - Direction Status Flag\nField <code>DIR</code> writer - Direction Status Flag\nField <code>FILTERBUFV</code> reader - Filter Buffer Valid\nField <code>FILTERBUFV</code> writer - Filter Buffer Valid\nField <code>HERR</code> reader - Hall Error Flag\nField <code>HERR</code> writer - Hall Error Flag\nField <code>IDXERR</code> reader - Index Error Flag\nField <code>IDXERR</code> writer - Index Error Flag\nField <code>MPERR</code> reader - Missing Pulse Error flag\nField <code>MPERR</code> writer - Missing Pulse Error flag\nField <code>PRESCBUFV</code> reader - Prescaler Buffer Valid\nField <code>PRESCBUFV</code> writer - Prescaler Buffer Valid\nField <code>QERR</code> reader - Quadrature Error Flag\nField <code>QERR</code> writer - Quadrature Error Flag\nRegister <code>STATUS</code> reader\nStatus\nField <code>STOP</code> reader - Stop\nField <code>STOP</code> writer - Stop\nRegister <code>STATUS</code> writer\nField <code>WINERR</code> reader - Window Error Flag\nField <code>WINERR</code> writer - Window Error Flag\nBit 12 - Compare Channel 0 Buffer Valid\nBit 12 - Compare Channel 0 Buffer Valid\nBit 13 - Compare Channel 1 Buffer Valid\nBit 13 - Compare Channel 1 Buffer Valid\nBit 7 - Direction Status Flag\nBit 7 - Direction Status Flag\nBit 9 - Filter Buffer Valid\nBit 9 - Filter Buffer Valid\nReturns the argument unchanged.\nBit 5 - Hall Error Flag\nBit 5 - Hall Error Flag\nBit 1 - Index Error Flag\nBit 1 - Index Error Flag\nCalls <code>U::from(self)</code>.\nBit 2 - Missing Pulse Error flag\nBit 2 - Missing Pulse Error flag\nBit 8 - Prescaler Buffer Valid\nBit 8 - Prescaler Buffer Valid\nBit 0 - Quadrature Error Flag\nBit 0 - Quadrature Error Flag\nBit 6 - Stop\nBit 6 - Stop\nBit 4 - Window Error Flag\nBit 4 - Window Error Flag\nField <code>CC0</code> reader - Compare Channel 0 Synchronization Busy\nField <code>CC1</code> reader - Compare Channel 1 Synchronization Busy\nField <code>COUNT</code> reader - Count Synchronization Busy\nField <code>CTRLB</code> reader - Control B Synchronization Busy\nField <code>ENABLE</code> reader - Enable Synchronization Busy\nField <code>FILTER</code> reader - Filter Synchronization Busy\nField <code>PRESC</code> reader - Prescaler Synchronization Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>STATUS</code> reader - Status Synchronization Busy\nField <code>SWRST</code> reader - Software Reset Synchronization Busy\nSynchronization Status\nBit 7 - Compare Channel 0 Synchronization Busy\nBit 8 - Compare Channel 1 Synchronization Busy\nBit 6 - Count Synchronization Busy\nBit 2 - Control B Synchronization Busy\nBit 1 - Enable Synchronization Busy\nBit 5 - Filter Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Prescaler Synchronization Busy\nBit 3 - Status Synchronization Busy\nBit 0 - Software Reset Synchronization Busy\nBKUPCFG (rw) register accessor: Backup Configuration\nCTRLA (rw) register accessor: Control A\nHIBCFG (rw) register accessor: Hibernate Configuration\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nPWSAKDLY (rw) register accessor: Power Switch Acknowledge …\nRegister block\nSLEEPCFG (rw) register accessor: Sleep Configuration\nSTDBYCFG (rw) register accessor: Standby Configuration\nBackup Configuration\n0x0a - Backup Configuration\nControl A\n0x00 - Control A\nReturns the argument unchanged.\nHibernate Configuration\n0x09 - Hibernate Configuration\nInterrupt Enable Clear\n0x04 - Interrupt Enable Clear\nInterrupt Enable Set\n0x05 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x06 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nPower Switch Acknowledge Delay\n0x12 - Power Switch Acknowledge Delay\nSleep Configuration\n0x01 - Sleep Configuration\nStandby Configuration\n0x08 - Standby Configuration\nBackup Configuration\nField <code>BRAMCFG</code> reader - Ram Configuration\nField <code>BRAMCFG</code> writer - Ram Configuration\nRam Configuration\n2: All the backup RAM is turned OFF\n1: Only the first 4Kbytes of the backup RAM is retained\nRegister <code>BKUPCFG</code> reader\n0: All the backup RAM is retained\nRegister <code>BKUPCFG</code> writer\nBits 0:1 - Ram Configuration\nBits 0:1 - Ram Configuration\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll the backup RAM is turned OFF\nOnly the first 4Kbytes of the backup RAM is retained\nAll the backup RAM is retained\nAll the backup RAM is turned OFF\nOnly the first 4Kbytes of the backup RAM is retained\nAll the backup RAM is retained\nGet enumerated values variant\nControl A\nField <code>IORET</code> reader - I/O Retention\nField <code>IORET</code> writer - I/O Retention\nRegister <code>CTRLA</code> reader\nRegister <code>CTRLA</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - I/O Retention\nBit 2 - I/O Retention\nField <code>BRAMCFG</code> reader - Backup Ram Configuration\nField <code>BRAMCFG</code> writer - Backup Ram Configuration\nBackup Ram Configuration\nHibernate Configuration\n2: All the system RAM is turned OFF\n2: All the backup RAM is turned OFF\n1: Only the first 32Kbytes of the system RAM is retained\n1: Only the first 4Kbytes of the backup RAM is retained\nRegister <code>HIBCFG</code> reader\nField <code>RAMCFG</code> reader - Ram Configuration\nField <code>RAMCFG</code> writer - Ram Configuration\nRam Configuration\n0: All the system RAM is retained\n0: All the backup RAM is retained\nRegister <code>HIBCFG</code> writer\nBits 2:3 - Backup Ram Configuration\nBits 2:3 - Backup Ram Configuration\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll the system RAM is turned OFF\nAll the backup RAM is turned OFF\nOnly the first 32Kbytes of the system RAM is retained\nOnly the first 4Kbytes of the backup RAM is retained\nAll the system RAM is retained\nAll the backup RAM is retained\nAll the system RAM is turned OFF\nAll the backup RAM is turned OFF\nOnly the first 32Kbytes of the system RAM is retained\nOnly the first 4Kbytes of the backup RAM is retained\nBits 0:1 - Ram Configuration\nBits 0:1 - Ram Configuration\nAll the system RAM is retained\nAll the backup RAM is retained\nGet enumerated values variant\nGet enumerated values variant\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>SLEEPRDY</code> reader - Sleep Mode Entry Ready Enable\nField <code>SLEEPRDY</code> writer - Sleep Mode Entry Ready Enable\nRegister <code>INTENCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Sleep Mode Entry Ready Enable\nBit 0 - Sleep Mode Entry Ready Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>SLEEPRDY</code> reader - Sleep Mode Entry Ready Enable\nField <code>SLEEPRDY</code> writer - Sleep Mode Entry Ready Enable\nRegister <code>INTENSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Sleep Mode Entry Ready Enable\nBit 0 - Sleep Mode Entry Ready Enable\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>SLEEPRDY</code> reader - Sleep Mode Entry Ready\nField <code>SLEEPRDY</code> writer - Sleep Mode Entry Ready\nRegister <code>INTFLAG</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Sleep Mode Entry Ready\nBit 0 - Sleep Mode Entry Ready\nField <code>DLYVAL</code> reader - Delay Value\nField <code>DLYVAL</code> writer - Delay Value\nField <code>IGNACK</code> reader - Ignore Acknowledge\nField <code>IGNACK</code> writer - Ignore Acknowledge\nPower Switch Acknowledge Delay\nRegister <code>PWSAKDLY</code> reader\nRegister <code>PWSAKDLY</code> writer\nBits 0:6 - Delay Value\nBits 0:6 - Delay Value\nReturns the argument unchanged.\nBit 7 - Ignore Acknowledge\nBit 7 - Ignore Acknowledge\nCalls <code>U::from(self)</code>.\n6: Only Backup domain is powered ON\n5: Backup domain is ON as well as some PDRAMs\n2: CPU, AHBx, and APBx clocks are OFF\n7: All power domains are powered OFF\nRegister <code>SLEEPCFG</code> reader\nSleep Configuration\nField <code>SLEEPMODE</code> reader - Sleep Mode\nField <code>SLEEPMODE</code> writer - Sleep Mode\nSleep Mode\n4: All Clocks are OFF\nRegister <code>SLEEPCFG</code> writer\nOnly Backup domain is powered ON\nReturns the argument unchanged.\nReturns the argument unchanged.\nBackup domain is ON as well as some PDRAMs\nCPU, AHBx, and APBx clocks are OFF\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOnly Backup domain is powered ON\nBackup domain is ON as well as some PDRAMs\nCPU, AHBx, and APBx clocks are OFF\nAll power domains are powered OFF\nAll Clocks are OFF\nAll power domains are powered OFF\nBits 0:2 - Sleep Mode\nBits 0:2 - Sleep Mode\nAll Clocks are OFF\nGet enumerated values variant\n3: Fast Wakeup is enabled on both NVM and MAINVREG\nField <code>FASTWKUP</code> reader - Fast Wakeup\nField <code>FASTWKUP</code> writer - Fast Wakeup\nFast Wakeup\n2: Fast Wakeup is enabled on the main voltage regulator …\n0: Fast Wakeup is disabled\n1: Fast Wakeup is enabled on NVM\n2: All the system RAM is turned OFF\n1: Only the first 32Kbytes of the system RAM is retained\nRegister <code>STDBYCFG</code> reader\nField <code>RAMCFG</code> reader - Ram Configuration\nField <code>RAMCFG</code> writer - Ram Configuration\nRam Configuration\n0: All the system RAM is retained\nStandby Configuration\nRegister <code>STDBYCFG</code> writer\nFast Wakeup is enabled on both NVM and MAINVREG\nBits 4:5 - Fast Wakeup\nBits 4:5 - Fast Wakeup\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFast Wakeup is enabled on both NVM and MAINVREG\nFast Wakeup is enabled on the main voltage regulator …\nFast Wakeup is disabled\nFast Wakeup is enabled on NVM\nAll the system RAM is turned OFF\nOnly the first 32Kbytes of the system RAM is retained\nAll the system RAM is retained\nFast Wakeup is enabled on the main voltage regulator …\nFast Wakeup is disabled\nFast Wakeup is enabled on NVM\nAll the system RAM is turned OFF\nOnly the first 32Kbytes of the system RAM is retained\nBits 0:1 - Ram Configuration\nBits 0:1 - Ram Configuration\nAll the system RAM is retained\nGet enumerated values variant\nGet enumerated values variant\nGROUP[%s]\nRegister block\nReturns the argument unchanged.\nCluster GROUP[%s]\n0x00..0xc0 - GROUP[%s]\nIterator for array of: 0x00..0xc0 - GROUP[%s]\nCalls <code>U::from(self)</code>.\nCTRL (rw) register accessor: Control\nDIR (rw) register accessor: Data Direction\nDIRCLR (rw) register accessor: Data Direction Clear\nDIRSET (rw) register accessor: Data Direction Set\nDIRTGL (rw) register accessor: Data Direction Toggle\nEVCTRL (rw) register accessor: Event Input Control\nGROUP[%s]\nIN (r) register accessor: Data Input Value\nOUT (rw) register accessor: Data Output Value\nOUTCLR (rw) register accessor: Data Output Value Clear\nOUTSET (rw) register accessor: Data Output Value Set\nOUTTGL (rw) register accessor: Data Output Value Toggle\nPINCFG (rw) register accessor: Pin Configuration\nPMUX (rw) register accessor: Peripheral Multiplexing\nWRCONFIG (w) register accessor: Write Configuration\nControl\n0x24 - Control\nData Direction\n0x00 - Data Direction\nData Direction Clear\n0x04 - Data Direction Clear\nData Direction Set\n0x08 - Data Direction Set\nData Direction Toggle\n0x0c - Data Direction Toggle\nEvent Input Control\n0x2c - Event Input Control\nReturns the argument unchanged.\nData Input Value\n0x20 - Data Input Value\nCalls <code>U::from(self)</code>.\nData Output Value\n0x10 - Data Output Value\nData Output Value Clear\n0x14 - Data Output Value Clear\nData Output Value Set\n0x18 - Data Output Value Set\nData Output Value Toggle\n0x1c - Data Output Value Toggle\nPin Configuration\n0x40..0x60 - Pin Configuration\nIterator for array of: 0x40..0x60 - Pin Configuration\nPeripheral Multiplexing\n0x30..0x40 - Peripheral Multiplexing\nIterator for array of: 0x30..0x40 - Peripheral Multiplexing\nWrite Configuration\n0x28 - Write Configuration\nControl\nRegister <code>CTRL</code> reader\nField <code>SAMPLING</code> reader - Input Sampling Mode\nField <code>SAMPLING</code> writer - Input Sampling Mode\nRegister <code>CTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Input Sampling Mode\nBits 0:31 - Input Sampling Mode\nField <code>DIR</code> reader - Port Data Direction\nData Direction\nField <code>DIR</code> writer - Port Data Direction\nRegister <code>DIR</code> reader\nRegister <code>DIR</code> writer\nBits 0:31 - Port Data Direction\nBits 0:31 - Port Data Direction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRCLR</code> reader - Port Data Direction Clear\nData Direction Clear\nField <code>DIRCLR</code> writer - Port Data Direction Clear\nRegister <code>DIRCLR</code> reader\nRegister <code>DIRCLR</code> writer\nBits 0:31 - Port Data Direction Clear\nBits 0:31 - Port Data Direction Clear\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRSET</code> reader - Port Data Direction Set\nData Direction Set\nField <code>DIRSET</code> writer - Port Data Direction Set\nRegister <code>DIRSET</code> reader\nRegister <code>DIRSET</code> writer\nBits 0:31 - Port Data Direction Set\nBits 0:31 - Port Data Direction Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRTGL</code> reader - Port Data Direction Toggle\nData Direction Toggle\nField <code>DIRTGL</code> writer - Port Data Direction Toggle\nRegister <code>DIRTGL</code> reader\nRegister <code>DIRTGL</code> writer\nBits 0:31 - Port Data Direction Toggle\nBits 0:31 - Port Data Direction Toggle\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Clear output register of pin on event\nField <code>EVACT0</code> reader - PORT Event Action 0\nField <code>EVACT0</code> writer - PORT Event Action 0\nPORT Event Action 0\nField <code>EVACT1</code> reader - PORT Event Action 1\nField <code>EVACT1</code> writer - PORT Event Action 1\nField <code>EVACT2</code> reader - PORT Event Action 2\nField <code>EVACT2</code> writer - PORT Event Action 2\nField <code>EVACT3</code> reader - PORT Event Action 3\nField <code>EVACT3</code> writer - PORT Event Action 3\nEvent Input Control\n0: Event output to pin\nField <code>PID0</code> reader - PORT Event Pin Identifier 0\nField <code>PID0</code> writer - PORT Event Pin Identifier 0\nField <code>PID1</code> reader - PORT Event Pin Identifier 1\nField <code>PID1</code> writer - PORT Event Pin Identifier 1\nField <code>PID2</code> reader - PORT Event Pin Identifier 2\nField <code>PID2</code> writer - PORT Event Pin Identifier 2\nField <code>PID3</code> reader - PORT Event Pin Identifier 3\nField <code>PID3</code> writer - PORT Event Pin Identifier 3\nField <code>PORTEI0</code> reader - PORT Event Input Enable 0\nField <code>PORTEI0</code> writer - PORT Event Input Enable 0\nField <code>PORTEI1</code> reader - PORT Event Input Enable 1\nField <code>PORTEI1</code> writer - PORT Event Input Enable 1\nField <code>PORTEI2</code> reader - PORT Event Input Enable 2\nField <code>PORTEI2</code> writer - PORT Event Input Enable 2\nField <code>PORTEI3</code> reader - PORT Event Input Enable 3\nField <code>PORTEI3</code> writer - PORT Event Input Enable 3\nRegister <code>EVCTRL</code> reader\n1: Set output register of pin on event\n3: Toggle output register of pin on event\nRegister <code>EVCTRL</code> writer\nClear output register of pin on event\nBits 5:6 - PORT Event Action 0\nBits 5:6 - PORT Event Action 0\nBits 13:14 - PORT Event Action 1\nBits 13:14 - PORT Event Action 1\nBits 21:22 - PORT Event Action 2\nBits 21:22 - PORT Event Action 2\nBits 29:30 - PORT Event Action 3\nBits 29:30 - PORT Event Action 3\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear output register of pin on event\nEvent output to pin\nSet output register of pin on event\nToggle output register of pin on event\nEvent output to pin\nBits 0:4 - PORT Event Pin Identifier 0\nBits 0:4 - PORT Event Pin Identifier 0\nBits 8:12 - PORT Event Pin Identifier 1\nBits 8:12 - PORT Event Pin Identifier 1\nBits 16:20 - PORT Event Pin Identifier 2\nBits 16:20 - PORT Event Pin Identifier 2\nBits 24:28 - PORT Event Pin Identifier 3\nBits 24:28 - PORT Event Pin Identifier 3\nBit 7 - PORT Event Input Enable 0\nBit 7 - PORT Event Input Enable 0\nBit 15 - PORT Event Input Enable 1\nBit 15 - PORT Event Input Enable 1\nBit 23 - PORT Event Input Enable 2\nBit 23 - PORT Event Input Enable 2\nBit 31 - PORT Event Input Enable 3\nBit 31 - PORT Event Input Enable 3\nSet output register of pin on event\nToggle output register of pin on event\nGet enumerated values variant\nField <code>IN</code> reader - PORT Data Input Value\nData Input Value\nRegister <code>IN</code> reader\nReturns the argument unchanged.\nBits 0:31 - PORT Data Input Value\nCalls <code>U::from(self)</code>.\nField <code>OUT</code> reader - PORT Data Output Value\nData Output Value\nField <code>OUT</code> writer - PORT Data Output Value\nRegister <code>OUT</code> reader\nRegister <code>OUT</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - PORT Data Output Value\nBits 0:31 - PORT Data Output Value\nField <code>OUTCLR</code> reader - PORT Data Output Value Clear\nData Output Value Clear\nField <code>OUTCLR</code> writer - PORT Data Output Value Clear\nRegister <code>OUTCLR</code> reader\nRegister <code>OUTCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - PORT Data Output Value Clear\nBits 0:31 - PORT Data Output Value Clear\nField <code>OUTSET</code> reader - PORT Data Output Value Set\nData Output Value Set\nField <code>OUTSET</code> writer - PORT Data Output Value Set\nRegister <code>OUTSET</code> reader\nRegister <code>OUTSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - PORT Data Output Value Set\nBits 0:31 - PORT Data Output Value Set\nField <code>OUTTGL</code> reader - PORT Data Output Value Toggle\nData Output Value Toggle\nField <code>OUTTGL</code> writer - PORT Data Output Value Toggle\nRegister <code>OUTTGL</code> reader\nRegister <code>OUTTGL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - PORT Data Output Value Toggle\nBits 0:31 - PORT Data Output Value Toggle\nField <code>DRVSTR</code> reader - Output Driver Strength Selection\nField <code>DRVSTR</code> writer - Output Driver Strength Selection\nField <code>INEN</code> reader - Input Enable\nField <code>INEN</code> writer - Input Enable\nPin Configuration\nField <code>PMUXEN</code> reader - Peripheral Multiplexer Enable\nField <code>PMUXEN</code> writer - Peripheral Multiplexer Enable\nField <code>PULLEN</code> reader - Pull Enable\nField <code>PULLEN</code> writer - Pull Enable\nRegister <code>PINCFG[%s]</code> reader\nRegister <code>PINCFG[%s]</code> writer\nBit 6 - Output Driver Strength Selection\nBit 6 - Output Driver Strength Selection\nReturns the argument unchanged.\nBit 1 - Input Enable\nBit 1 - Input Enable\nCalls <code>U::from(self)</code>.\nBit 0 - Peripheral Multiplexer Enable\nBit 0 - Peripheral Multiplexer Enable\nBit 2 - Pull Enable\nBit 2 - Pull Enable\n0: Peripheral function A selected\n0: Peripheral function A selected\n1: Peripheral function B selected\n1: Peripheral function B selected\n2: Peripheral function C selected\n2: Peripheral function C selected\n3: Peripheral function D selected\n3: Peripheral function D selected\n4: Peripheral function E selected\n4: Peripheral function E selected\n5: Peripheral function F selected\n5: Peripheral function F selected\n6: Peripheral function G selected\n6: Peripheral function G selected\n7: Peripheral function H selected\n7: Peripheral function H selected\n8: Peripheral function I selected\n8: Peripheral function I selected\n9: Peripheral function J selected\n9: Peripheral function J selected\n10: Peripheral function K selected\n10: Peripheral function K selected\n11: Peripheral function L selected\n11: Peripheral function L selected\n12: Peripheral function M selected\n12: Peripheral function M selected\n13: Peripheral function N selected\n13: Peripheral function N selected\nPeripheral Multiplexing\nField <code>PMUXE</code> reader - Peripheral Multiplexing for …\nField <code>PMUXE</code> writer - Peripheral Multiplexing for …\nPeripheral Multiplexing for Even-Numbered Pin\nField <code>PMUXO</code> reader - Peripheral Multiplexing for …\nField <code>PMUXO</code> writer - Peripheral Multiplexing for …\nPeripheral Multiplexing for Odd-Numbered Pin\nRegister <code>PMUX[%s]</code> reader\nRegister <code>PMUX[%s]</code> writer\nPeripheral function A selected\nPeripheral function A selected\nPeripheral function B selected\nPeripheral function B selected\nPeripheral function C selected\nPeripheral function C selected\nPeripheral function D selected\nPeripheral function D selected\nPeripheral function E selected\nPeripheral function E selected\nPeripheral function F selected\nPeripheral function F selected\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPeripheral function G selected\nPeripheral function G selected\nPeripheral function H selected\nPeripheral function H selected\nPeripheral function I selected\nPeripheral function I selected\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPeripheral function A selected\nPeripheral function A selected\nPeripheral function B selected\nPeripheral function B selected\nPeripheral function C selected\nPeripheral function C selected\nPeripheral function D selected\nPeripheral function D selected\nPeripheral function E selected\nPeripheral function E selected\nPeripheral function F selected\nPeripheral function F selected\nPeripheral function G selected\nPeripheral function G selected\nPeripheral function H selected\nPeripheral function H selected\nPeripheral function I selected\nPeripheral function I selected\nPeripheral function J selected\nPeripheral function J selected\nPeripheral function K selected\nPeripheral function K selected\nPeripheral function L selected\nPeripheral function L selected\nPeripheral function M selected\nPeripheral function M selected\nPeripheral function N selected\nPeripheral function N selected\nPeripheral function J selected\nPeripheral function J selected\nPeripheral function K selected\nPeripheral function K selected\nPeripheral function L selected\nPeripheral function L selected\nPeripheral function M selected\nPeripheral function M selected\nPeripheral function N selected\nPeripheral function N selected\nBits 0:3 - Peripheral Multiplexing for Even-Numbered Pin\nBits 0:3 - Peripheral Multiplexing for Even-Numbered Pin\nBits 4:7 - Peripheral Multiplexing for Odd-Numbered Pin\nBits 4:7 - Peripheral Multiplexing for Odd-Numbered Pin\nGet enumerated values variant\nGet enumerated values variant\nField <code>DRVSTR</code> writer - Output Driver Strength Selection\nField <code>HWSEL</code> writer - Half-Word Select\nField <code>INEN</code> writer - Input Enable\nField <code>PINMASK</code> writer - Pin Mask for Multiple Pin …\nField <code>PMUX</code> writer - Peripheral Multiplexing\nField <code>PMUXEN</code> writer - Peripheral Multiplexer Enable\nField <code>PULLEN</code> writer - Pull Enable\nRegister <code>WRCONFIG</code> writer\nWrite Configuration\nField <code>WRPINCFG</code> writer - Write PINCFG\nField <code>WRPMUX</code> writer - Write PMUX\nBit 22 - Output Driver Strength Selection\nReturns the argument unchanged.\nBit 31 - Half-Word Select\nBit 17 - Input Enable\nCalls <code>U::from(self)</code>.\nBits 0:15 - Pin Mask for Multiple Pin Configuration\nBits 24:27 - Peripheral Multiplexing\nBit 16 - Peripheral Multiplexer Enable\nBit 18 - Pull Enable\nBit 30 - Write PINCFG\nBit 28 - Write PMUX\nBAUD (rw) register accessor: Baud Rate\nCTRLA (rw) register accessor: Control A\nCTRLB (rw) register accessor: Control B\nINSTRADDR (rw) register accessor: Instruction Address\nINSTRCTRL (rw) register accessor: Instruction Code\nINSTRFRAME (rw) register accessor: Instruction Frame\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRegister block\nRXDATA (r) register accessor: Receive Data\nSCRAMBCTRL (rw) register accessor: Scrambling Mode\nSCRAMBKEY (w) register accessor: Scrambling Key\nSTATUS (r) register accessor: Status Register\nTXDATA (w) register accessor: Transmit Data\nBaud Rate\n0x08 - Baud Rate\nControl A\n0x00 - Control A\nControl B\n0x04 - Control B\nReturns the argument unchanged.\nInstruction Address\n0x30 - Instruction Address\nInstruction Code\n0x34 - Instruction Code\nInstruction Frame\n0x38 - Instruction Frame\nInterrupt Enable Clear\n0x14 - Interrupt Enable Clear\nInterrupt Enable Set\n0x18 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x1c - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nReceive Data\n0x0c - Receive Data\nScrambling Mode\n0x40 - Scrambling Mode\nScrambling Key\n0x44 - Scrambling Key\nStatus Register\n0x20 - Status Register\nTransmit Data\n0x10 - Transmit Data\nField <code>BAUD</code> reader - Serial Clock Baud Rate\nBaud Rate\nField <code>BAUD</code> writer - Serial Clock Baud Rate\nField <code>CPHA</code> reader - Clock Phase\nField <code>CPHA</code> writer - Clock Phase\nField <code>CPOL</code> reader - Clock Polarity\nField <code>CPOL</code> writer - Clock Polarity\nField <code>DLYBS</code> reader - Delay Before SCK\nField <code>DLYBS</code> writer - Delay Before SCK\nRegister <code>BAUD</code> reader\nRegister <code>BAUD</code> writer\nBits 8:15 - Serial Clock Baud Rate\nBits 8:15 - Serial Clock Baud Rate\nBit 1 - Clock Phase\nBit 1 - Clock Phase\nBit 0 - Clock Polarity\nBit 0 - Clock Polarity\nBits 16:23 - Delay Before SCK\nBits 16:23 - Delay Before SCK\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nControl A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>LASTXFER</code> reader - Last Transfer\nField <code>LASTXFER</code> writer - Last Transfer\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 24 - Last Transfer\nBit 24 - Last Transfer\nBit 0 - Software Reset\nBit 0 - Software Reset\nField <code>CSMODE</code> reader - Chip Select Mode\nField <code>CSMODE</code> writer - Chip Select Mode\nChip Select Mode\nControl B\nField <code>DATALEN</code> reader - Data Length\nField <code>DATALEN</code> writer - Data Length\nData Length\n0: Local Loopback is disabled\nField <code>DLYBCT</code> reader - Delay Between Consecutive Transfers\nField <code>DLYBCT</code> writer - Delay Between Consecutive Transfers\nField <code>DLYCS</code> reader - Minimum Inactive CS Delay\nField <code>DLYCS</code> writer - Minimum Inactive CS Delay\n1: Local Loopback is enabled\n1: The chip select is deasserted when the bit LASTXFER is …\nField <code>LOOPEN</code> reader - Local Loopback Enable\nField <code>LOOPEN</code> writer - Local Loopback Enable\nLocal Loopback Enable\n1: Serial Memory operating mode\nField <code>MODE</code> reader - Serial Memory Mode\nField <code>MODE</code> writer - Serial Memory Mode\nSerial Memory Mode\n0: The chip select is deasserted if TD has not been …\nRegister <code>CTRLB</code> reader\nField <code>SMEMREG</code> reader - Serial Memory reg\nField <code>SMEMREG</code> writer - Serial Memory reg\n0: SPI operating mode\n2: The chip select is deasserted systematically after each …\nRegister <code>CTRLB</code> writer\nField <code>WDRBT</code> reader - Wait Data Read Before Transfer\nField <code>WDRBT</code> writer - Wait Data Read Before Transfer\n10-bits transfer\n2: 10-bits transfer\n11-bits transfer\n3: 11-bits transfer\n12-bits transfer\n4: 12-bits transfer\n13-bits transfer\n5: 13-bits transfer\n14-bits transfer\n6: 14-bits transfer\n15-bits transfer\n7: 15-bits transfer\n16-bits transfer\n8: 16-bits transfer\n8-bits transfer\n0: 8-bits transfer\n9 bits transfer\n1: 9 bits transfer\nBits 4:5 - Chip Select Mode\nBits 4:5 - Chip Select Mode\nBits 8:11 - Data Length\nBits 8:11 - Data Length\nLocal Loopback is disabled\nBits 16:23 - Delay Between Consecutive Transfers\nBits 16:23 - Delay Between Consecutive Transfers\nBits 24:31 - Minimum Inactive CS Delay\nBits 24:31 - Minimum Inactive CS Delay\nLocal Loopback is enabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n10-bits transfer\n11-bits transfer\n12-bits transfer\n13-bits transfer\n14-bits transfer\n15-bits transfer\n16-bits transfer\n8-bits transfer\n9 bits transfer\nLocal Loopback is disabled\nLocal Loopback is enabled\nThe chip select is deasserted when the bit LASTXFER is …\nSerial Memory operating mode\nThe chip select is deasserted if TD has not been reloaded …\nSPI operating mode\nThe chip select is deasserted systematically after each …\nThe chip select is deasserted when the bit LASTXFER is …\nBit 1 - Local Loopback Enable\nBit 1 - Local Loopback Enable\nSerial Memory operating mode\nBit 0 - Serial Memory Mode\nBit 0 - Serial Memory Mode\nThe chip select is deasserted if TD has not been reloaded …\nBit 3 - Serial Memory reg\nBit 3 - Serial Memory reg\nSPI operating mode\nThe chip select is deasserted systematically after each …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBit 2 - Wait Data Read Before Transfer\nBit 2 - Wait Data Read Before Transfer\nField <code>ADDR</code> reader - Instruction Address\nField <code>ADDR</code> writer - Instruction Address\nInstruction Address\nRegister <code>INSTRADDR</code> reader\nRegister <code>INSTRADDR</code> writer\nBits 0:31 - Instruction Address\nBits 0:31 - Instruction Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>INSTR</code> reader - Instruction Code\nField <code>INSTR</code> writer - Instruction Code\nInstruction Code\nField <code>OPTCODE</code> reader - Option Code\nField <code>OPTCODE</code> writer - Option Code\nRegister <code>INSTRCTRL</code> reader\nRegister <code>INSTRCTRL</code> writer\nReturns the argument unchanged.\nBits 0:7 - Instruction Code\nBits 0:7 - Instruction Code\nCalls <code>U::from(self)</code>.\nBits 16:23 - Option Code\nBits 16:23 - Option Code\nField <code>ADDREN</code> reader - Address Enable\nField <code>ADDREN</code> writer - Address Enable\nField <code>ADDRLEN</code> reader - Address Length\nField <code>ADDRLEN</code> writer - Address Length\nAddress Length\nField <code>CRMODE</code> reader - Continuous Read Mode\nField <code>CRMODE</code> writer - Continuous Read Mode\nField <code>DATAEN</code> reader - Data Enable\nField <code>DATAEN</code> writer - Data Enable\nField <code>DDREN</code> reader - Double Data Rate Enable\nField <code>DDREN</code> writer - Double Data Rate Enable\n5: Instruction: Dual SPI / Address-Option: Dual SPI / …\n3: Instruction: Single-bit SPI / Address-Option: Dual SPI …\n1: Instruction: Single-bit SPI / Address-Option: …\nField <code>DUMMYLEN</code> reader - Dummy Cycles Length\nField <code>DUMMYLEN</code> writer - Dummy Cycles Length\nField <code>INSTREN</code> reader - Instruction Enable\nField <code>INSTREN</code> writer - Instruction Enable\nInstruction Frame\nField <code>OPTCODEEN</code> reader - Option Enable\nField <code>OPTCODEEN</code> writer - Option Enable\nField <code>OPTCODELEN</code> reader - Option Code Length\nField <code>OPTCODELEN</code> writer - Option Code Length\nOption Code Length\n6: Instruction: Quad SPI / Address-Option: Quad SPI / …\n4: Instruction: Single-bit SPI / Address-Option: Quad SPI …\n2: Instruction: Single-bit SPI / Address-Option: …\nRegister <code>INSTRFRAME</code> reader\n0: Read transfer from the serial memory.Scrambling is not …\n1: Read data transfer from the serial memory.If enabled, …\n0: Instruction: Single-bit SPI / Address-Option: …\nField <code>TFRTYPE</code> reader - Data Transfer Type\nField <code>TFRTYPE</code> writer - Data Transfer Type\nData Transfer Type\nRegister <code>INSTRFRAME</code> writer\nField <code>WIDTH</code> reader - Instruction Code, Address, Option …\nField <code>WIDTH</code> writer - Instruction Code, Address, Option …\nInstruction Code, Address, Option Code and Data Width\n2: Write transfer into the serial memory.Scrambling is not …\n3: Write data transfer into the serial memory.If enabled, …\n1-bit length option code\n0: 1-bit length option code\n24-bits address length\n0: 24-bits address length\n2-bits length option code\n1: 2-bits length option code\n32-bits address length\n1: 32-bits address length\n4-bits length option code\n2: 4-bits length option code\n8-bits length option code\n3: 8-bits length option code\nBit 5 - Address Enable\nBit 5 - Address Enable\nBit 10 - Address Length\nBit 10 - Address Length\nBit 14 - Continuous Read Mode\nBit 14 - Continuous Read Mode\nBit 7 - Data Enable\nBit 7 - Data Enable\nBit 15 - Double Data Rate Enable\nBit 15 - Double Data Rate Enable\nInstruction: Dual SPI / Address-Option: Dual SPI / Data: …\nInstruction: Single-bit SPI / Address-Option: Dual SPI / …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nBits 16:20 - Dummy Cycles Length\nBits 16:20 - Dummy Cycles Length\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 4 - Instruction Enable\nBit 4 - Instruction Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1-bit length option code\n24-bits address length\n2-bits length option code\n32-bits address length\n4-bits length option code\n8-bits length option code\nInstruction: Dual SPI / Address-Option: Dual SPI / Data: …\nInstruction: Single-bit SPI / Address-Option: Dual SPI / …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nInstruction: Quad SPI / Address-Option: Quad SPI / Data: …\nInstruction: Single-bit SPI / Address-Option: Quad SPI / …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nRead transfer from the serial memory.Scrambling is not …\nRead data transfer from the serial memory.If enabled, …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nWrite transfer into the serial memory.Scrambling is not …\nWrite data transfer into the serial memory.If enabled, …\nBit 6 - Option Enable\nBit 6 - Option Enable\nBits 8:9 - Option Code Length\nBits 8:9 - Option Code Length\nInstruction: Quad SPI / Address-Option: Quad SPI / Data: …\nInstruction: Single-bit SPI / Address-Option: Quad SPI / …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nRead transfer from the serial memory.Scrambling is not …\nRead data transfer from the serial memory.If enabled, …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nBits 12:13 - Data Transfer Type\nBits 12:13 - Data Transfer Type\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBits 0:2 - Instruction Code, Address, Option Code and Data …\nBits 0:2 - Instruction Code, Address, Option Code and Data …\nWrite transfer into the serial memory.Scrambling is not …\nWrite data transfer into the serial memory.If enabled, …\nField <code>CSRISE</code> reader - Chip Select Rise Interrupt Disable\nField <code>CSRISE</code> writer - Chip Select Rise Interrupt Disable\nField <code>DRE</code> reader - Transmit Data Register Empty Interrupt …\nField <code>DRE</code> writer - Transmit Data Register Empty Interrupt …\nField <code>ERROR</code> reader - Overrun Error Interrupt Disable\nField <code>ERROR</code> writer - Overrun Error Interrupt Disable\nField <code>INSTREND</code> reader - Instruction End Interrupt Disable\nField <code>INSTREND</code> writer - Instruction End Interrupt Disable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>RXC</code> reader - Receive Data Register Full Interrupt …\nField <code>RXC</code> writer - Receive Data Register Full Interrupt …\nField <code>TXC</code> reader - Transmission Complete Interrupt Disable\nField <code>TXC</code> writer - Transmission Complete Interrupt Disable\nRegister <code>INTENCLR</code> writer\nBit 8 - Chip Select Rise Interrupt Disable\nBit 8 - Chip Select Rise Interrupt Disable\nBit 1 - Transmit Data Register Empty Interrupt Disable\nBit 1 - Transmit Data Register Empty Interrupt Disable\nBit 3 - Overrun Error Interrupt Disable\nBit 3 - Overrun Error Interrupt Disable\nReturns the argument unchanged.\nBit 10 - Instruction End Interrupt Disable\nBit 10 - Instruction End Interrupt Disable\nCalls <code>U::from(self)</code>.\nBit 0 - Receive Data Register Full Interrupt Disable\nBit 0 - Receive Data Register Full Interrupt Disable\nBit 2 - Transmission Complete Interrupt Disable\nBit 2 - Transmission Complete Interrupt Disable\nField <code>CSRISE</code> reader - Chip Select Rise Interrupt Enable\nField <code>CSRISE</code> writer - Chip Select Rise Interrupt Enable\nField <code>DRE</code> reader - Transmit Data Register Empty Interrupt …\nField <code>DRE</code> writer - Transmit Data Register Empty Interrupt …\nField <code>ERROR</code> reader - Overrun Error Interrupt Enable\nField <code>ERROR</code> writer - Overrun Error Interrupt Enable\nField <code>INSTREND</code> reader - Instruction End Interrupt Enable\nField <code>INSTREND</code> writer - Instruction End Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>RXC</code> reader - Receive Data Register Full Interrupt …\nField <code>RXC</code> writer - Receive Data Register Full Interrupt …\nField <code>TXC</code> reader - Transmission Complete Interrupt Enable\nField <code>TXC</code> writer - Transmission Complete Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 8 - Chip Select Rise Interrupt Enable\nBit 8 - Chip Select Rise Interrupt Enable\nBit 1 - Transmit Data Register Empty Interrupt Enable\nBit 1 - Transmit Data Register Empty Interrupt Enable\nBit 3 - Overrun Error Interrupt Enable\nBit 3 - Overrun Error Interrupt Enable\nReturns the argument unchanged.\nBit 10 - Instruction End Interrupt Enable\nBit 10 - Instruction End Interrupt Enable\nCalls <code>U::from(self)</code>.\nBit 0 - Receive Data Register Full Interrupt Enable\nBit 0 - Receive Data Register Full Interrupt Enable\nBit 2 - Transmission Complete Interrupt Enable\nBit 2 - Transmission Complete Interrupt Enable\nField <code>CSRISE</code> reader - Chip Select Rise\nField <code>CSRISE</code> writer - Chip Select Rise\nField <code>DRE</code> reader - Transmit Data Register Empty\nField <code>DRE</code> writer - Transmit Data Register Empty\nField <code>ERROR</code> reader - Overrun Error\nField <code>ERROR</code> writer - Overrun Error\nField <code>INSTREND</code> reader - Instruction End\nField <code>INSTREND</code> writer - Instruction End\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>RXC</code> reader - Receive Data Register Full\nField <code>RXC</code> writer - Receive Data Register Full\nField <code>TXC</code> reader - Transmission Complete\nField <code>TXC</code> writer - Transmission Complete\nRegister <code>INTFLAG</code> writer\nBit 8 - Chip Select Rise\nBit 8 - Chip Select Rise\nBit 1 - Transmit Data Register Empty\nBit 1 - Transmit Data Register Empty\nBit 3 - Overrun Error\nBit 3 - Overrun Error\nReturns the argument unchanged.\nBit 10 - Instruction End\nBit 10 - Instruction End\nCalls <code>U::from(self)</code>.\nBit 0 - Receive Data Register Full\nBit 0 - Receive Data Register Full\nBit 2 - Transmission Complete")