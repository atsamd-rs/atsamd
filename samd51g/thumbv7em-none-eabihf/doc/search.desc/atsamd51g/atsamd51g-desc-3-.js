searchState.loadedDescShard("atsamd51g", 3, "Bit 2 - Transmission Complete\nField <code>DATA</code> reader - Receive Data\nRegister <code>RXDATA</code> reader\nReceive Data\nBits 0:15 - Receive Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ENABLE</code> reader - Scrambling/Unscrambling Enable\nField <code>ENABLE</code> writer - Scrambling/Unscrambling Enable\nRegister <code>SCRAMBCTRL</code> reader\nField <code>RANDOMDIS</code> reader - Scrambling/Unscrambling Random …\nField <code>RANDOMDIS</code> writer - Scrambling/Unscrambling Random …\nScrambling Mode\nRegister <code>SCRAMBCTRL</code> writer\nBit 0 - Scrambling/Unscrambling Enable\nBit 0 - Scrambling/Unscrambling Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Scrambling/Unscrambling Random Value Disable\nBit 1 - Scrambling/Unscrambling Random Value Disable\nField <code>KEY</code> writer - Scrambling User Key\nScrambling Key\nRegister <code>SCRAMBKEY</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Scrambling User Key\nField <code>CSSTATUS</code> reader - Chip Select\nField <code>ENABLE</code> reader - Enable\nRegister <code>STATUS</code> reader\nStatus Register\nBit 9 - Chip Select\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DATA</code> writer - Transmit Data\nTransmit Data\nRegister <code>TXDATA</code> writer\nBits 0:15 - Transmit Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDBGCTRL (rw) register accessor: Debug Control\nERRADDR (r) register accessor: Error Address\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag\nRegister block\nSTATUS (r) register accessor: Status\nDebug Control\n0x0f - Debug Control\nError Address\n0x04 - Error Address\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x00 - Interrupt Enable Clear\nInterrupt Enable Set\n0x01 - Interrupt Enable Set\nInterrupt Flag\n0x02 - Interrupt Flag\nCalls <code>U::from(self)</code>.\nStatus\n0x03 - Status\nDebug Control\nField <code>ECCDIS</code> reader - ECC Disable\nField <code>ECCDIS</code> writer - ECC Disable\nField <code>ECCELOG</code> reader - ECC Error Log\nField <code>ECCELOG</code> writer - ECC Error Log\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - ECC Disable\nBit 0 - ECC Disable\nBit 1 - ECC Error Log\nBit 1 - ECC Error Log\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ERRADDR</code> reader - Error Address\nError Address\nRegister <code>ERRADDR</code> reader\nBits 0:16 - Error Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DUALE</code> reader - Dual Bit ECC Error Interrupt Enable …\nField <code>DUALE</code> writer - Dual Bit ECC Error Interrupt Enable …\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>SINGLEE</code> reader - Single Bit ECC Error Interrupt …\nField <code>SINGLEE</code> writer - Single Bit ECC Error Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 1 - Dual Bit ECC Error Interrupt Enable Clear\nBit 1 - Dual Bit ECC Error Interrupt Enable Clear\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Single Bit ECC Error Interrupt Enable Clear\nBit 0 - Single Bit ECC Error Interrupt Enable Clear\nField <code>DUALE</code> reader - Dual Bit ECC Error Interrupt Enable …\nField <code>DUALE</code> writer - Dual Bit ECC Error Interrupt Enable …\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>SINGLEE</code> reader - Single Bit ECC Error Interrupt …\nField <code>SINGLEE</code> writer - Single Bit ECC Error Interrupt …\nRegister <code>INTENSET</code> writer\nBit 1 - Dual Bit ECC Error Interrupt Enable Set\nBit 1 - Dual Bit ECC Error Interrupt Enable Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Single Bit ECC Error Interrupt Enable Set\nBit 0 - Single Bit ECC Error Interrupt Enable Set\nField <code>DUALE</code> reader - Dual Bit ECC Error Interrupt\nField <code>DUALE</code> writer - Dual Bit ECC Error Interrupt\nInterrupt Flag\nRegister <code>INTFLAG</code> reader\nField <code>SINGLEE</code> reader - Single Bit ECC Error Interrupt\nField <code>SINGLEE</code> writer - Single Bit ECC Error Interrupt\nRegister <code>INTFLAG</code> writer\nBit 1 - Dual Bit ECC Error Interrupt\nBit 1 - Dual Bit ECC Error Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Single Bit ECC Error Interrupt\nBit 0 - Single Bit ECC Error Interrupt\nField <code>ECCDIS</code> reader - ECC Disable\nRegister <code>STATUS</code> reader\nStatus\nBit 0 - ECC Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBKUPEXIT (r) register accessor: Backup Exit Source\nRCAUSE (r) register accessor: Reset Cause\nRegister block\nBackup Exit Source\n0x02 - Backup Exit Source\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReset Cause\n0x00 - Reset Cause\nField <code>BBPS</code> reader - Battery Backup Power Switch\nBackup Exit Source\nField <code>HIB</code> reader - Hibernate\nRegister <code>BKUPEXIT</code> reader\nField <code>RTC</code> reader - Real Timer Counter Interrupt\nBit 2 - Battery Backup Power Switch\nReturns the argument unchanged.\nBit 7 - Hibernate\nCalls <code>U::from(self)</code>.\nBit 1 - Real Timer Counter Interrupt\nField <code>BACKUP</code> reader - Backup Reset\nField <code>BODCORE</code> reader - Brown Out CORE Detector Reset\nField <code>BODVDD</code> reader - Brown Out VDD Detector Reset\nField <code>EXT</code> reader - External Reset\nField <code>NVM</code> reader - NVM Reset\nField <code>POR</code> reader - Power On Reset\nRegister <code>RCAUSE</code> reader\nReset Cause\nField <code>SYST</code> reader - System Reset Request\nField <code>WDT</code> reader - Watchdog Reset\nBit 7 - Backup Reset\nBit 1 - Brown Out CORE Detector Reset\nBit 2 - Brown Out VDD Detector Reset\nBit 4 - External Reset\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 3 - NVM Reset\nBit 0 - Power On Reset\nBit 6 - System Reset Request\nBit 5 - Watchdog Reset\n32-bit Counter with Single 32-bit Compare\n16-bit Counter with Two 16-bit Compares\nClock/Calendar with Alarm\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCluster 32-bit Counter with Single 32-bit Compare\n0x00..0xa0 - 32-bit Counter with Single 32-bit Compare\nCluster 16-bit Counter with Two 16-bit Compares\n0x00..0xa0 - 16-bit Counter with Two 16-bit Compares\nCluster Clock/Calendar with Alarm\n0x00..0xa0 - Clock/Calendar with Alarm\nBKUP (rw) register accessor: Backup\nCOMP (rw) register accessor: MODE0 Compare n Value\nCOUNT (rw) register accessor: MODE0 Counter Value\nCTRLA (rw) register accessor: MODE0 Control A\nCTRLB (rw) register accessor: MODE0 Control B\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE0 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nGP (rw) register accessor: General Purpose\nINTENCLR (rw) register accessor: MODE0 Interrupt Enable …\nINTENSET (rw) register accessor: MODE0 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE0 Interrupt Flag …\n32-bit Counter with Single 32-bit Compare\nSYNCBUSY (r) register accessor: MODE0 Synchronization Busy …\nTAMPCTRL (rw) register accessor: Tamper Control\nTAMPID (rw) register accessor: Tamper ID\nTIMESTAMP (r) register accessor: MODE0 Timestamp\nBackup\n0x80..0xa0 - Backup\nIterator for array of: 0x80..0xa0 - Backup\nMODE0 Compare n Value\n0x20..0x28 - MODE0 Compare n Value\nIterator for array of: 0x20..0x28 - MODE0 Compare n Value\nMODE0 Counter Value\n0x18 - MODE0 Counter Value\nMODE0 Control A\n0x00 - MODE0 Control A\nMODE0 Control B\n0x02 - MODE0 Control B\nDebug Control\n0x0e - Debug Control\nMODE0 Event Control\n0x04 - MODE0 Event Control\nFrequency Correction\n0x14 - Frequency Correction\nReturns the argument unchanged.\nGeneral Purpose\n0x40..0x50 - General Purpose\nIterator for array of: 0x40..0x50 - General Purpose\nMODE0 Interrupt Enable Clear\n0x08 - MODE0 Interrupt Enable Clear\nMODE0 Interrupt Enable Set\n0x0a - MODE0 Interrupt Enable Set\nMODE0 Interrupt Flag Status and Clear\n0x0c - MODE0 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nMODE0 Synchronization Busy Status\n0x10 - MODE0 Synchronization Busy Status\nTamper Control\n0x60 - Tamper Control\nTamper ID\n0x68 - Tamper ID\nMODE0 Timestamp\n0x64 - MODE0 Timestamp\nField <code>BKUP</code> reader - Backup\nBackup\nField <code>BKUP</code> writer - Backup\nRegister <code>BKUP[%s]</code> reader\nRegister <code>BKUP[%s]</code> writer\nBits 0:31 - Backup\nBits 0:31 - Backup\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COMP</code> reader - Compare Value\nMODE0 Compare n Value\nField <code>COMP</code> writer - Compare Value\nRegister <code>COMP[%s]</code> reader\nRegister <code>COMP[%s]</code> writer\nBits 0:31 - Compare Value\nBits 0:31 - Compare Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nMODE0 Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:31 - Counter Value\nBits 0:31 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BKTRST</code> reader - BKUP Registers Reset On Tamper Enable\nField <code>BKTRST</code> writer - BKUP Registers Reset On Tamper Enable\n2: Mode 2: Clock/Calendar\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nField <code>COUNTSYNC</code> reader - Count Read Synchronization Enable\nField <code>COUNTSYNC</code> writer - Count Read Synchronization Enable\nMODE0 Control A\n1: CLK_RTC_CNT = GCLK_RTC/1\n11: CLK_RTC_CNT = GCLK_RTC/1024\n8: CLK_RTC_CNT = GCLK_RTC/128\n5: CLK_RTC_CNT = GCLK_RTC/16\n2: CLK_RTC_CNT = GCLK_RTC/2\n9: CLK_RTC_CNT = GCLK_RTC/256\n6: CLK_RTC_CNT = GCLK_RTC/32\n3: CLK_RTC_CNT = GCLK_RTC/4\n10: CLK_RTC_CNT = GCLK_RTC/512\n7: CLK_RTC_CNT = GCLK_RTC/64\n4: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>GPTRST</code> reader - GP Registers Reset On Tamper Enable\nField <code>GPTRST</code> writer - GP Registers Reset On Tamper Enable\nField <code>MATCHCLR</code> reader - Clear on Match\nField <code>MATCHCLR</code> writer - Clear on Match\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\n0: CLK_RTC_CNT = GCLK_RTC/1\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 13 - BKUP Registers Reset On Tamper Enable\nBit 13 - BKUP Registers Reset On Tamper Enable\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nBit 15 - Count Read Synchronization Enable\nBit 15 - Count Read Synchronization Enable\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 14 - GP Registers Reset On Tamper Enable\nBit 14 - GP Registers Reset On Tamper Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nCLK_RTC_CNT = GCLK_RTC/1\nBit 7 - Clear on Match\nBit 7 - Clear on Match\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nCLK_RTC_CNT = GCLK_RTC/1\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nField <code>ACTF</code> reader - Active Layer Freqnuency\nField <code>ACTF</code> writer - Active Layer Freqnuency\nActive Layer Freqnuency\nMODE0 Control B\nField <code>DEBASYNC</code> reader - Debouncer Asynchronous Enable\nField <code>DEBASYNC</code> writer - Debouncer Asynchronous Enable\nField <code>DEBF</code> reader - Debounce Freqnuency\nField <code>DEBF</code> writer - Debounce Freqnuency\nDebounce Freqnuency\nField <code>DEBMAJ</code> reader - Debouncer Majority Enable\nField <code>DEBMAJ</code> writer - Debouncer Majority Enable\n6: CLK_RTC_DEB = CLK_RTC/128\n6: CLK_RTC_OUT = CLK_RTC/128\n3: CLK_RTC_DEB = CLK_RTC/16\n3: CLK_RTC_OUT = CLK_RTC/16\n0: CLK_RTC_DEB = CLK_RTC/2\n0: CLK_RTC_OUT = CLK_RTC/2\n7: CLK_RTC_DEB = CLK_RTC/256\n7: CLK_RTC_OUT = CLK_RTC/256\n4: CLK_RTC_DEB = CLK_RTC/32\n4: CLK_RTC_OUT = CLK_RTC/32\n1: CLK_RTC_DEB = CLK_RTC/4\n1: CLK_RTC_OUT = CLK_RTC/4\n5: CLK_RTC_DEB = CLK_RTC/64\n5: CLK_RTC_OUT = CLK_RTC/64\n2: CLK_RTC_DEB = CLK_RTC/8\n2: CLK_RTC_OUT = CLK_RTC/8\nField <code>DMAEN</code> reader - DMA Enable\nField <code>DMAEN</code> writer - DMA Enable\nField <code>GP0EN</code> reader - General Purpose 0 Enable\nField <code>GP0EN</code> writer - General Purpose 0 Enable\nField <code>GP2EN</code> reader - General Purpose 2 Enable\nField <code>GP2EN</code> writer - General Purpose 2 Enable\nRegister <code>CTRLB</code> reader\nField <code>RTCOUT</code> reader - RTC Output Enable\nField <code>RTCOUT</code> writer - RTC Output Enable\nRegister <code>CTRLB</code> writer\nBits 12:14 - Active Layer Freqnuency\nBits 12:14 - Active Layer Freqnuency\nBit 5 - Debouncer Asynchronous Enable\nBit 5 - Debouncer Asynchronous Enable\nBits 8:10 - Debounce Freqnuency\nBits 8:10 - Debounce Freqnuency\nBit 4 - Debouncer Majority Enable\nBit 4 - Debouncer Majority Enable\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 7 - DMA Enable\nBit 7 - DMA Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - General Purpose 0 Enable\nBit 0 - General Purpose 0 Enable\nBit 1 - General Purpose 2 Enable\nBit 1 - General Purpose 2 Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 6 - RTC Output Enable\nBit 6 - RTC Output Enable\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMPEO0</code> reader - Compare 0 Event Output Enable\nField <code>CMPEO0</code> writer - Compare 0 Event Output Enable\nField <code>CMPEO1</code> reader - Compare 1 Event Output Enable\nField <code>CMPEO1</code> writer - Compare 1 Event Output Enable\nMODE0 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nField <code>TAMPEREO</code> reader - Tamper Event Output Enable\nField <code>TAMPEREO</code> writer - Tamper Event Output Enable\nField <code>TAMPEVEI</code> reader - Tamper Event Input Enable\nField <code>TAMPEVEI</code> writer - Tamper Event Input Enable\nRegister <code>EVCTRL</code> writer\nBit 8 - Compare 0 Event Output Enable\nBit 8 - Compare 0 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 16 - Tamper Event Input Enable\nBit 16 - Tamper Event Input Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>GP</code> reader - General Purpose\nGeneral Purpose\nField <code>GP</code> writer - General Purpose\nRegister <code>GP[%s]</code> reader\nRegister <code>GP[%s]</code> writer\nReturns the argument unchanged.\nBits 0:31 - General Purpose\nBits 0:31 - General Purpose\nCalls <code>U::from(self)</code>.\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nMODE0 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Interrupt Enable\nField <code>PER0</code> writer - Periodic Interval 0 Interrupt Enable\nField <code>PER1</code> reader - Periodic Interval 1 Interrupt Enable\nField <code>PER1</code> writer - Periodic Interval 1 Interrupt Enable\nField <code>PER2</code> reader - Periodic Interval 2 Interrupt Enable\nField <code>PER2</code> writer - Periodic Interval 2 Interrupt Enable\nField <code>PER3</code> reader - Periodic Interval 3 Interrupt Enable\nField <code>PER3</code> writer - Periodic Interval 3 Interrupt Enable\nField <code>PER4</code> reader - Periodic Interval 4 Interrupt Enable\nField <code>PER4</code> writer - Periodic Interval 4 Interrupt Enable\nField <code>PER5</code> reader - Periodic Interval 5 Interrupt Enable\nField <code>PER5</code> writer - Periodic Interval 5 Interrupt Enable\nField <code>PER6</code> reader - Periodic Interval 6 Interrupt Enable\nField <code>PER6</code> writer - Periodic Interval 6 Interrupt Enable\nField <code>PER7</code> reader - Periodic Interval 7 Interrupt Enable\nField <code>PER7</code> writer - Periodic Interval 7 Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENCLR</code> writer\nBit 8 - Compare 0 Interrupt Enable\nBit 8 - Compare 0 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nMODE0 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Interrupt Enable\nField <code>PER0</code> writer - Periodic Interval 0 Interrupt Enable\nField <code>PER1</code> reader - Periodic Interval 1 Interrupt Enable\nField <code>PER1</code> writer - Periodic Interval 1 Interrupt Enable\nField <code>PER2</code> reader - Periodic Interval 2 Interrupt Enable\nField <code>PER2</code> writer - Periodic Interval 2 Interrupt Enable\nField <code>PER3</code> reader - Periodic Interval 3 Interrupt Enable\nField <code>PER3</code> writer - Periodic Interval 3 Interrupt Enable\nField <code>PER4</code> reader - Periodic Interval 4 Interrupt Enable\nField <code>PER4</code> writer - Periodic Interval 4 Interrupt Enable\nField <code>PER5</code> reader - Periodic Interval 5 Interrupt Enable\nField <code>PER5</code> writer - Periodic Interval 5 Interrupt Enable\nField <code>PER6</code> reader - Periodic Interval 6 Interrupt Enable\nField <code>PER6</code> writer - Periodic Interval 6 Interrupt Enable\nField <code>PER7</code> reader - Periodic Interval 7 Interrupt Enable\nField <code>PER7</code> writer - Periodic Interval 7 Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENSET</code> writer\nBit 8 - Compare 0 Interrupt Enable\nBit 8 - Compare 0 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>CMP0</code> reader - Compare 0\nField <code>CMP0</code> writer - Compare 0\nField <code>CMP1</code> reader - Compare 1\nField <code>CMP1</code> writer - Compare 1\nMODE0 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nField <code>PER0</code> reader - Periodic Interval 0\nField <code>PER0</code> writer - Periodic Interval 0\nField <code>PER1</code> reader - Periodic Interval 1\nField <code>PER1</code> writer - Periodic Interval 1\nField <code>PER2</code> reader - Periodic Interval 2\nField <code>PER2</code> writer - Periodic Interval 2\nField <code>PER3</code> reader - Periodic Interval 3\nField <code>PER3</code> writer - Periodic Interval 3\nField <code>PER4</code> reader - Periodic Interval 4\nField <code>PER4</code> writer - Periodic Interval 4\nField <code>PER5</code> reader - Periodic Interval 5\nField <code>PER5</code> writer - Periodic Interval 5\nField <code>PER6</code> reader - Periodic Interval 6\nField <code>PER6</code> writer - Periodic Interval 6\nField <code>PER7</code> reader - Periodic Interval 7\nField <code>PER7</code> writer - Periodic Interval 7\nRegister <code>INTFLAG</code> reader\nField <code>TAMPER</code> reader - Tamper\nField <code>TAMPER</code> writer - Tamper\nRegister <code>INTFLAG</code> writer\nBit 8 - Compare 0\nBit 8 - Compare 0\nBit 9 - Compare 1\nBit 9 - Compare 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow\nBit 15 - Overflow\nBit 0 - Periodic Interval 0\nBit 0 - Periodic Interval 0\nBit 1 - Periodic Interval 1\nBit 1 - Periodic Interval 1\nBit 2 - Periodic Interval 2\nBit 2 - Periodic Interval 2\nBit 3 - Periodic Interval 3\nBit 3 - Periodic Interval 3\nBit 4 - Periodic Interval 4\nBit 4 - Periodic Interval 4\nBit 5 - Periodic Interval 5\nBit 5 - Periodic Interval 5\nBit 6 - Periodic Interval 6\nBit 6 - Periodic Interval 6\nBit 7 - Periodic Interval 7\nBit 7 - Periodic Interval 7\nBit 14 - Tamper\nBit 14 - Tamper\nField <code>COMP0</code> reader - COMP 0 Register Busy\nField <code>COMP1</code> reader - COMP 1 Register Busy\nField <code>COUNT</code> reader - COUNT Register Busy\nField <code>COUNTSYNC</code> reader - Count Synchronization Enable Bit …\nField <code>ENABLE</code> reader - Enable Bit Busy\nField <code>FREQCORR</code> reader - FREQCORR Register Busy\nField <code>GP0</code> reader - General Purpose 0 Register Busy\nField <code>GP1</code> reader - General Purpose 1 Register Busy\nField <code>GP2</code> reader - General Purpose 2 Register Busy\nField <code>GP3</code> reader - General Purpose 3 Register Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Busy\nMODE0 Synchronization Busy Status\nBit 5 - COMP 0 Register Busy\nBit 6 - COMP 1 Register Busy\nBit 3 - COUNT Register Busy\nBit 15 - Count Synchronization Enable Bit Busy\nBit 1 - Enable Bit Busy\nBit 2 - FREQCORR Register Busy\nReturns the argument unchanged.\nBit 16 - General Purpose 0 Register Busy\nBit 17 - General Purpose 1 Register Busy\nBit 18 - General Purpose 2 Register Busy\nBit 19 - General Purpose 3 Register Busy\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Busy\n3: Compare IN0 to OUT\n3: Compare IN1 to OUT\n3: Compare IN2 to OUT\n3: Compare IN3 to OUT\n3: Compare IN4 to OUT\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\nField <code>DEBNC0</code> reader - Debouncer Enable 0\nField <code>DEBNC0</code> writer - Debouncer Enable 0\nField <code>DEBNC1</code> reader - Debouncer Enable 1\nField <code>DEBNC1</code> writer - Debouncer Enable 1\nField <code>DEBNC2</code> reader - Debouncer Enable 2\nField <code>DEBNC2</code> writer - Debouncer Enable 2\nField <code>DEBNC3</code> reader - Debouncer Enable 3\nField <code>DEBNC3</code> writer - Debouncer Enable 3\nField <code>DEBNC4</code> reader - Debouncer Enable 4\nField <code>DEBNC4</code> writer - Debouncer Enable 4\nField <code>IN0ACT</code> reader - Tamper Input 0 Action\nField <code>IN0ACT</code> writer - Tamper Input 0 Action\nTamper Input 0 Action\nField <code>IN1ACT</code> reader - Tamper Input 1 Action\nField <code>IN1ACT</code> writer - Tamper Input 1 Action\nTamper Input 1 Action\nField <code>IN2ACT</code> reader - Tamper Input 2 Action\nField <code>IN2ACT</code> writer - Tamper Input 2 Action\nTamper Input 2 Action\nField <code>IN3ACT</code> reader - Tamper Input 3 Action\nField <code>IN3ACT</code> writer - Tamper Input 3 Action\nTamper Input 3 Action\nField <code>IN4ACT</code> reader - Tamper Input 4 Action\nField <code>IN4ACT</code> writer - Tamper Input 4 Action\nTamper Input 4 Action\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\nRegister <code>TAMPCTRL</code> reader\nField <code>TAMLVL0</code> reader - Tamper Level Select 0\nField <code>TAMLVL0</code> writer - Tamper Level Select 0\nField <code>TAMLVL1</code> reader - Tamper Level Select 1\nField <code>TAMLVL1</code> writer - Tamper Level Select 1\nField <code>TAMLVL2</code> reader - Tamper Level Select 2\nField <code>TAMLVL2</code> writer - Tamper Level Select 2\nField <code>TAMLVL3</code> reader - Tamper Level Select 3\nField <code>TAMLVL3</code> writer - Tamper Level Select 3\nField <code>TAMLVL4</code> reader - Tamper Level Select 4\nField <code>TAMLVL4</code> writer - Tamper Level Select 4\nTamper Control\nRegister <code>TAMPCTRL</code> writer\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nBit 24 - Debouncer Enable 0\nBit 24 - Debouncer Enable 0\nBit 25 - Debouncer Enable 1\nBit 25 - Debouncer Enable 1\nBit 26 - Debouncer Enable 2\nBit 26 - Debouncer Enable 2\nBit 27 - Debouncer Enable 3\nBit 27 - Debouncer Enable 3\nBit 28 - Debouncer Enable 4\nBit 28 - Debouncer Enable 4\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:1 - Tamper Input 0 Action\nBits 0:1 - Tamper Input 0 Action\nBits 2:3 - Tamper Input 1 Action\nBits 2:3 - Tamper Input 1 Action\nBits 4:5 - Tamper Input 2 Action\nBits 4:5 - Tamper Input 2 Action\nBits 6:7 - Tamper Input 3 Action\nBits 6:7 - Tamper Input 3 Action\nBits 8:9 - Tamper Input 4 Action\nBits 8:9 - Tamper Input 4 Action\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nBit 16 - Tamper Level Select 0\nBit 16 - Tamper Level Select 0\nBit 17 - Tamper Level Select 1\nBit 17 - Tamper Level Select 1\nBit 18 - Tamper Level Select 2\nBit 18 - Tamper Level Select 2\nBit 19 - Tamper Level Select 3\nBit 19 - Tamper Level Select 3\nBit 20 - Tamper Level Select 4\nBit 20 - Tamper Level Select 4\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nRegister <code>TAMPID</code> reader\nField <code>TAMPEVT</code> reader - Tamper Event Detected\nField <code>TAMPEVT</code> writer - Tamper Event Detected\nField <code>TAMPID0</code> reader - Tamper Input 0 Detected\nField <code>TAMPID0</code> writer - Tamper Input 0 Detected\nField <code>TAMPID1</code> reader - Tamper Input 1 Detected\nField <code>TAMPID1</code> writer - Tamper Input 1 Detected\nField <code>TAMPID2</code> reader - Tamper Input 2 Detected\nField <code>TAMPID2</code> writer - Tamper Input 2 Detected\nField <code>TAMPID3</code> reader - Tamper Input 3 Detected\nField <code>TAMPID3</code> writer - Tamper Input 3 Detected\nField <code>TAMPID4</code> reader - Tamper Input 4 Detected\nField <code>TAMPID4</code> writer - Tamper Input 4 Detected\nTamper ID\nRegister <code>TAMPID</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 31 - Tamper Event Detected\nBit 31 - Tamper Event Detected\nBit 0 - Tamper Input 0 Detected\nBit 0 - Tamper Input 0 Detected\nBit 1 - Tamper Input 1 Detected\nBit 1 - Tamper Input 1 Detected\nBit 2 - Tamper Input 2 Detected\nBit 2 - Tamper Input 2 Detected\nBit 3 - Tamper Input 3 Detected\nBit 3 - Tamper Input 3 Detected\nBit 4 - Tamper Input 4 Detected\nBit 4 - Tamper Input 4 Detected\nField <code>COUNT</code> reader - Count Timestamp Value\nRegister <code>TIMESTAMP</code> reader\nMODE0 Timestamp\nBits 0:31 - Count Timestamp Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBKUP (rw) register accessor: Backup\nCOMP (rw) register accessor: MODE1 Compare n Value\nCOUNT (rw) register accessor: MODE1 Counter Value\nCTRLA (rw) register accessor: MODE1 Control A\nCTRLB (rw) register accessor: MODE1 Control B\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE1 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nGP (rw) register accessor: General Purpose\nINTENCLR (rw) register accessor: MODE1 Interrupt Enable …\nINTENSET (rw) register accessor: MODE1 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE1 Interrupt Flag …\n16-bit Counter with Two 16-bit Compares\nPER (rw) register accessor: MODE1 Counter Period\nSYNCBUSY (r) register accessor: MODE1 Synchronization Busy …\nTAMPCTRL (rw) register accessor: Tamper Control\nTAMPID (rw) register accessor: Tamper ID\nTIMESTAMP (r) register accessor: MODE1 Timestamp\nBackup\n0x80..0xa0 - Backup\nIterator for array of: 0x80..0xa0 - Backup\nMODE1 Compare n Value\n0x20..0x28 - MODE1 Compare n Value\nIterator for array of: 0x20..0x28 - MODE1 Compare n Value\nMODE1 Counter Value\n0x18 - MODE1 Counter Value\nMODE1 Control A\n0x00 - MODE1 Control A\nMODE1 Control B\n0x02 - MODE1 Control B\nDebug Control\n0x0e - Debug Control\nMODE1 Event Control\n0x04 - MODE1 Event Control\nFrequency Correction\n0x14 - Frequency Correction\nReturns the argument unchanged.\nGeneral Purpose\n0x40..0x50 - General Purpose\nIterator for array of: 0x40..0x50 - General Purpose\nMODE1 Interrupt Enable Clear\n0x08 - MODE1 Interrupt Enable Clear\nMODE1 Interrupt Enable Set\n0x0a - MODE1 Interrupt Enable Set\nMODE1 Interrupt Flag Status and Clear\n0x0c - MODE1 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nMODE1 Counter Period\n0x1c - MODE1 Counter Period\nMODE1 Synchronization Busy Status\n0x10 - MODE1 Synchronization Busy Status\nTamper Control\n0x60 - Tamper Control\nTamper ID\n0x68 - Tamper ID\nMODE1 Timestamp\n0x64 - MODE1 Timestamp\nField <code>BKUP</code> reader - Backup\nBackup\nField <code>BKUP</code> writer - Backup\nRegister <code>BKUP[%s]</code> reader\nRegister <code>BKUP[%s]</code> writer\nBits 0:31 - Backup\nBits 0:31 - Backup\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COMP</code> reader - Compare Value\nMODE1 Compare n Value\nField <code>COMP</code> writer - Compare Value\nRegister <code>COMP[%s]</code> reader\nRegister <code>COMP[%s]</code> writer\nBits 0:15 - Compare Value\nBits 0:15 - Compare Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nMODE1 Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:15 - Counter Value\nBits 0:15 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BKTRST</code> reader - BKUP Registers Reset On Tamper Enable\nField <code>BKTRST</code> writer - BKUP Registers Reset On Tamper Enable\n2: Mode 2: Clock/Calendar\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nField <code>COUNTSYNC</code> reader - Count Read Synchronization Enable\nField <code>COUNTSYNC</code> writer - Count Read Synchronization Enable\nMODE1 Control A\n1: CLK_RTC_CNT = GCLK_RTC/1\n11: CLK_RTC_CNT = GCLK_RTC/1024\n8: CLK_RTC_CNT = GCLK_RTC/128\n5: CLK_RTC_CNT = GCLK_RTC/16\n2: CLK_RTC_CNT = GCLK_RTC/2\n9: CLK_RTC_CNT = GCLK_RTC/256\n6: CLK_RTC_CNT = GCLK_RTC/32\n3: CLK_RTC_CNT = GCLK_RTC/4\n10: CLK_RTC_CNT = GCLK_RTC/512\n7: CLK_RTC_CNT = GCLK_RTC/64\n4: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>GPTRST</code> reader - GP Registers Reset On Tamper Enable\nField <code>GPTRST</code> writer - GP Registers Reset On Tamper Enable\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\n0: CLK_RTC_CNT = GCLK_RTC/1\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 13 - BKUP Registers Reset On Tamper Enable\nBit 13 - BKUP Registers Reset On Tamper Enable\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nBit 15 - Count Read Synchronization Enable\nBit 15 - Count Read Synchronization Enable\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 14 - GP Registers Reset On Tamper Enable\nBit 14 - GP Registers Reset On Tamper Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nCLK_RTC_CNT = GCLK_RTC/1\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nCLK_RTC_CNT = GCLK_RTC/1\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nField <code>ACTF</code> reader - Active Layer Freqnuency\nField <code>ACTF</code> writer - Active Layer Freqnuency\nActive Layer Freqnuency\nMODE1 Control B\nField <code>DEBASYNC</code> reader - Debouncer Asynchronous Enable\nField <code>DEBASYNC</code> writer - Debouncer Asynchronous Enable\nField <code>DEBF</code> reader - Debounce Freqnuency\nField <code>DEBF</code> writer - Debounce Freqnuency\nDebounce Freqnuency\nField <code>DEBMAJ</code> reader - Debouncer Majority Enable\nField <code>DEBMAJ</code> writer - Debouncer Majority Enable\n6: CLK_RTC_DEB = CLK_RTC/128\n6: CLK_RTC_OUT = CLK_RTC/128\n3: CLK_RTC_DEB = CLK_RTC/16\n3: CLK_RTC_OUT = CLK_RTC/16\n0: CLK_RTC_DEB = CLK_RTC/2\n0: CLK_RTC_OUT = CLK_RTC/2\n7: CLK_RTC_DEB = CLK_RTC/256\n7: CLK_RTC_OUT = CLK_RTC/256\n4: CLK_RTC_DEB = CLK_RTC/32\n4: CLK_RTC_OUT = CLK_RTC/32\n1: CLK_RTC_DEB = CLK_RTC/4\n1: CLK_RTC_OUT = CLK_RTC/4\n5: CLK_RTC_DEB = CLK_RTC/64\n5: CLK_RTC_OUT = CLK_RTC/64\n2: CLK_RTC_DEB = CLK_RTC/8\n2: CLK_RTC_OUT = CLK_RTC/8\nField <code>DMAEN</code> reader - DMA Enable\nField <code>DMAEN</code> writer - DMA Enable\nField <code>GP0EN</code> reader - General Purpose 0 Enable\nField <code>GP0EN</code> writer - General Purpose 0 Enable\nField <code>GP2EN</code> reader - General Purpose 2 Enable\nField <code>GP2EN</code> writer - General Purpose 2 Enable\nRegister <code>CTRLB</code> reader\nField <code>RTCOUT</code> reader - RTC Output Enable\nField <code>RTCOUT</code> writer - RTC Output Enable\nRegister <code>CTRLB</code> writer\nBits 12:14 - Active Layer Freqnuency\nBits 12:14 - Active Layer Freqnuency\nBit 5 - Debouncer Asynchronous Enable\nBit 5 - Debouncer Asynchronous Enable\nBits 8:10 - Debounce Freqnuency\nBits 8:10 - Debounce Freqnuency\nBit 4 - Debouncer Majority Enable\nBit 4 - Debouncer Majority Enable\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 7 - DMA Enable\nBit 7 - DMA Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - General Purpose 0 Enable\nBit 0 - General Purpose 0 Enable\nBit 1 - General Purpose 2 Enable\nBit 1 - General Purpose 2 Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 6 - RTC Output Enable\nBit 6 - RTC Output Enable\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMPEO0</code> reader - Compare 0 Event Output Enable\nField <code>CMPEO0</code> writer - Compare 0 Event Output Enable\nField <code>CMPEO1</code> reader - Compare 1 Event Output Enable\nField <code>CMPEO1</code> writer - Compare 1 Event Output Enable\nField <code>CMPEO2</code> reader - Compare 2 Event Output Enable\nField <code>CMPEO2</code> writer - Compare 2 Event Output Enable\nField <code>CMPEO3</code> reader - Compare 3 Event Output Enable\nField <code>CMPEO3</code> writer - Compare 3 Event Output Enable\nMODE1 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nField <code>TAMPEREO</code> reader - Tamper Event Output Enable\nField <code>TAMPEREO</code> writer - Tamper Event Output Enable\nField <code>TAMPEVEI</code> reader - Tamper Event Input Enable\nField <code>TAMPEVEI</code> writer - Tamper Event Input Enable\nRegister <code>EVCTRL</code> writer\nBit 8 - Compare 0 Event Output Enable\nBit 8 - Compare 0 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nBit 10 - Compare 2 Event Output Enable\nBit 10 - Compare 2 Event Output Enable\nBit 11 - Compare 3 Event Output Enable\nBit 11 - Compare 3 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 16 - Tamper Event Input Enable\nBit 16 - Tamper Event Input Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>GP</code> reader - General Purpose\nGeneral Purpose\nField <code>GP</code> writer - General Purpose\nRegister <code>GP[%s]</code> reader\nRegister <code>GP[%s]</code> writer\nReturns the argument unchanged.\nBits 0:31 - General Purpose\nBits 0:31 - General Purpose\nCalls <code>U::from(self)</code>.\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nField <code>CMP2</code> reader - Compare 2 Interrupt Enable\nField <code>CMP2</code> writer - Compare 2 Interrupt Enable\nField <code>CMP3</code> reader - Compare 3 Interrupt Enable\nField <code>CMP3</code> writer - Compare 3 Interrupt Enable\nMODE1 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Interrupt Enable\nField <code>PER0</code> writer - Periodic Interval 0 Interrupt Enable\nField <code>PER1</code> reader - Periodic Interval 1 Interrupt Enable\nField <code>PER1</code> writer - Periodic Interval 1 Interrupt Enable\nField <code>PER2</code> reader - Periodic Interval 2 Interrupt Enable\nField <code>PER2</code> writer - Periodic Interval 2 Interrupt Enable\nField <code>PER3</code> reader - Periodic Interval 3 Interrupt Enable\nField <code>PER3</code> writer - Periodic Interval 3 Interrupt Enable\nField <code>PER4</code> reader - Periodic Interval 4 Interrupt Enable\nField <code>PER4</code> writer - Periodic Interval 4 Interrupt Enable\nField <code>PER5</code> reader - Periodic Interval 5 Interrupt Enable\nField <code>PER5</code> writer - Periodic Interval 5 Interrupt Enable\nField <code>PER6</code> reader - Periodic Interval 6 Interrupt Enable\nField <code>PER6</code> writer - Periodic Interval 6 Interrupt Enable\nField <code>PER7</code> reader - Periodic Interval 7 Interrupt Enable\nField <code>PER7</code> writer - Periodic Interval 7 Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENCLR</code> writer\nBit 8 - Compare 0 Interrupt Enable\nBit 8 - Compare 0 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 10 - Compare 2 Interrupt Enable\nBit 10 - Compare 2 Interrupt Enable\nBit 11 - Compare 3 Interrupt Enable\nBit 11 - Compare 3 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nField <code>CMP2</code> reader - Compare 2 Interrupt Enable\nField <code>CMP2</code> writer - Compare 2 Interrupt Enable\nField <code>CMP3</code> reader - Compare 3 Interrupt Enable\nField <code>CMP3</code> writer - Compare 3 Interrupt Enable\nMODE1 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Interrupt Enable\nField <code>PER0</code> writer - Periodic Interval 0 Interrupt Enable\nField <code>PER1</code> reader - Periodic Interval 1 Interrupt Enable\nField <code>PER1</code> writer - Periodic Interval 1 Interrupt Enable\nField <code>PER2</code> reader - Periodic Interval 2 Interrupt Enable\nField <code>PER2</code> writer - Periodic Interval 2 Interrupt Enable\nField <code>PER3</code> reader - Periodic Interval 3 Interrupt Enable\nField <code>PER3</code> writer - Periodic Interval 3 Interrupt Enable\nField <code>PER4</code> reader - Periodic Interval 4 Interrupt Enable\nField <code>PER4</code> writer - Periodic Interval 4 Interrupt Enable\nField <code>PER5</code> reader - Periodic Interval 5 Interrupt Enable\nField <code>PER5</code> writer - Periodic Interval 5 Interrupt Enable\nField <code>PER6</code> reader - Periodic Interval 6 Interrupt Enable\nField <code>PER6</code> writer - Periodic Interval 6 Interrupt Enable\nField <code>PER7</code> reader - Periodic Interval 7 Interrupt Enable\nField <code>PER7</code> writer - Periodic Interval 7 Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENSET</code> writer\nBit 8 - Compare 0 Interrupt Enable\nBit 8 - Compare 0 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 10 - Compare 2 Interrupt Enable\nBit 10 - Compare 2 Interrupt Enable\nBit 11 - Compare 3 Interrupt Enable\nBit 11 - Compare 3 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>CMP0</code> reader - Compare 0\nField <code>CMP0</code> writer - Compare 0\nField <code>CMP1</code> reader - Compare 1\nField <code>CMP1</code> writer - Compare 1\nField <code>CMP2</code> reader - Compare 2\nField <code>CMP2</code> writer - Compare 2\nField <code>CMP3</code> reader - Compare 3\nField <code>CMP3</code> writer - Compare 3\nMODE1 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nField <code>PER0</code> reader - Periodic Interval 0\nField <code>PER0</code> writer - Periodic Interval 0\nField <code>PER1</code> reader - Periodic Interval 1\nField <code>PER1</code> writer - Periodic Interval 1\nField <code>PER2</code> reader - Periodic Interval 2\nField <code>PER2</code> writer - Periodic Interval 2\nField <code>PER3</code> reader - Periodic Interval 3\nField <code>PER3</code> writer - Periodic Interval 3\nField <code>PER4</code> reader - Periodic Interval 4\nField <code>PER4</code> writer - Periodic Interval 4\nField <code>PER5</code> reader - Periodic Interval 5\nField <code>PER5</code> writer - Periodic Interval 5\nField <code>PER6</code> reader - Periodic Interval 6\nField <code>PER6</code> writer - Periodic Interval 6\nField <code>PER7</code> reader - Periodic Interval 7\nField <code>PER7</code> writer - Periodic Interval 7\nRegister <code>INTFLAG</code> reader\nField <code>TAMPER</code> reader - Tamper\nField <code>TAMPER</code> writer - Tamper\nRegister <code>INTFLAG</code> writer\nBit 8 - Compare 0\nBit 8 - Compare 0\nBit 9 - Compare 1\nBit 9 - Compare 1\nBit 10 - Compare 2\nBit 10 - Compare 2\nBit 11 - Compare 3\nBit 11 - Compare 3\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow\nBit 15 - Overflow\nBit 0 - Periodic Interval 0\nBit 0 - Periodic Interval 0\nBit 1 - Periodic Interval 1\nBit 1 - Periodic Interval 1\nBit 2 - Periodic Interval 2\nBit 2 - Periodic Interval 2\nBit 3 - Periodic Interval 3\nBit 3 - Periodic Interval 3\nBit 4 - Periodic Interval 4\nBit 4 - Periodic Interval 4\nBit 5 - Periodic Interval 5\nBit 5 - Periodic Interval 5\nBit 6 - Periodic Interval 6\nBit 6 - Periodic Interval 6\nBit 7 - Periodic Interval 7\nBit 7 - Periodic Interval 7\nBit 14 - Tamper\nBit 14 - Tamper\nField <code>PER</code> reader - Counter Period\nMODE1 Counter Period\nField <code>PER</code> writer - Counter Period\nRegister <code>PER</code> reader\nRegister <code>PER</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Counter Period\nBits 0:15 - Counter Period\nField <code>COMP0</code> reader - COMP 0 Register Busy\nField <code>COMP1</code> reader - COMP 1 Register Busy\nField <code>COMP2</code> reader - COMP 2 Register Busy\nField <code>COMP3</code> reader - COMP 3 Register Busy\nField <code>COUNT</code> reader - COUNT Register Busy\nField <code>COUNTSYNC</code> reader - Count Synchronization Enable Bit …\nField <code>ENABLE</code> reader - Enable Bit Busy\nField <code>FREQCORR</code> reader - FREQCORR Register Busy\nField <code>GP0</code> reader - General Purpose 0 Register Busy\nField <code>GP1</code> reader - General Purpose 1 Register Busy\nField <code>GP2</code> reader - General Purpose 2 Register Busy\nField <code>GP3</code> reader - General Purpose 3 Register Busy\nField <code>PER</code> reader - PER Register Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Bit Busy\nMODE1 Synchronization Busy Status\nBit 5 - COMP 0 Register Busy\nBit 6 - COMP 1 Register Busy\nBit 7 - COMP 2 Register Busy\nBit 8 - COMP 3 Register Busy\nBit 3 - COUNT Register Busy\nBit 15 - Count Synchronization Enable Bit Busy\nBit 1 - Enable Bit Busy\nBit 2 - FREQCORR Register Busy\nReturns the argument unchanged.\nBit 16 - General Purpose 0 Register Busy\nBit 17 - General Purpose 1 Register Busy\nBit 18 - General Purpose 2 Register Busy\nBit 19 - General Purpose 3 Register Busy\nCalls <code>U::from(self)</code>.\nBit 4 - PER Register Busy\nBit 0 - Software Reset Bit Busy\n3: Compare IN0 to OUT\n3: Compare IN1 to OUT\n3: Compare IN2 to OUT\n3: Compare IN3 to OUT\n3: Compare IN4 to OUT\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\nField <code>DEBNC0</code> reader - Debouncer Enable 0\nField <code>DEBNC0</code> writer - Debouncer Enable 0\nField <code>DEBNC1</code> reader - Debouncer Enable 1\nField <code>DEBNC1</code> writer - Debouncer Enable 1\nField <code>DEBNC2</code> reader - Debouncer Enable 2\nField <code>DEBNC2</code> writer - Debouncer Enable 2\nField <code>DEBNC3</code> reader - Debouncer Enable 3\nField <code>DEBNC3</code> writer - Debouncer Enable 3\nField <code>DEBNC4</code> reader - Debouncer Enable 4\nField <code>DEBNC4</code> writer - Debouncer Enable 4\nField <code>IN0ACT</code> reader - Tamper Input 0 Action\nField <code>IN0ACT</code> writer - Tamper Input 0 Action\nTamper Input 0 Action\nField <code>IN1ACT</code> reader - Tamper Input 1 Action\nField <code>IN1ACT</code> writer - Tamper Input 1 Action\nTamper Input 1 Action\nField <code>IN2ACT</code> reader - Tamper Input 2 Action\nField <code>IN2ACT</code> writer - Tamper Input 2 Action\nTamper Input 2 Action\nField <code>IN3ACT</code> reader - Tamper Input 3 Action\nField <code>IN3ACT</code> writer - Tamper Input 3 Action\nTamper Input 3 Action\nField <code>IN4ACT</code> reader - Tamper Input 4 Action\nField <code>IN4ACT</code> writer - Tamper Input 4 Action\nTamper Input 4 Action\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\nRegister <code>TAMPCTRL</code> reader\nField <code>TAMLVL0</code> reader - Tamper Level Select 0\nField <code>TAMLVL0</code> writer - Tamper Level Select 0\nField <code>TAMLVL1</code> reader - Tamper Level Select 1\nField <code>TAMLVL1</code> writer - Tamper Level Select 1\nField <code>TAMLVL2</code> reader - Tamper Level Select 2\nField <code>TAMLVL2</code> writer - Tamper Level Select 2\nField <code>TAMLVL3</code> reader - Tamper Level Select 3\nField <code>TAMLVL3</code> writer - Tamper Level Select 3\nField <code>TAMLVL4</code> reader - Tamper Level Select 4\nField <code>TAMLVL4</code> writer - Tamper Level Select 4\nTamper Control\nRegister <code>TAMPCTRL</code> writer\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nBit 24 - Debouncer Enable 0\nBit 24 - Debouncer Enable 0\nBit 25 - Debouncer Enable 1\nBit 25 - Debouncer Enable 1\nBit 26 - Debouncer Enable 2\nBit 26 - Debouncer Enable 2\nBit 27 - Debouncer Enable 3\nBit 27 - Debouncer Enable 3\nBit 28 - Debouncer Enable 4\nBit 28 - Debouncer Enable 4\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:1 - Tamper Input 0 Action\nBits 0:1 - Tamper Input 0 Action\nBits 2:3 - Tamper Input 1 Action\nBits 2:3 - Tamper Input 1 Action\nBits 4:5 - Tamper Input 2 Action\nBits 4:5 - Tamper Input 2 Action\nBits 6:7 - Tamper Input 3 Action\nBits 6:7 - Tamper Input 3 Action\nBits 8:9 - Tamper Input 4 Action\nBits 8:9 - Tamper Input 4 Action\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nBit 16 - Tamper Level Select 0\nBit 16 - Tamper Level Select 0\nBit 17 - Tamper Level Select 1\nBit 17 - Tamper Level Select 1\nBit 18 - Tamper Level Select 2\nBit 18 - Tamper Level Select 2\nBit 19 - Tamper Level Select 3\nBit 19 - Tamper Level Select 3\nBit 20 - Tamper Level Select 4\nBit 20 - Tamper Level Select 4\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nRegister <code>TAMPID</code> reader\nField <code>TAMPEVT</code> reader - Tamper Event Detected\nField <code>TAMPEVT</code> writer - Tamper Event Detected\nField <code>TAMPID0</code> reader - Tamper Input 0 Detected\nField <code>TAMPID0</code> writer - Tamper Input 0 Detected\nField <code>TAMPID1</code> reader - Tamper Input 1 Detected\nField <code>TAMPID1</code> writer - Tamper Input 1 Detected\nField <code>TAMPID2</code> reader - Tamper Input 2 Detected\nField <code>TAMPID2</code> writer - Tamper Input 2 Detected\nField <code>TAMPID3</code> reader - Tamper Input 3 Detected\nField <code>TAMPID3</code> writer - Tamper Input 3 Detected\nField <code>TAMPID4</code> reader - Tamper Input 4 Detected\nField <code>TAMPID4</code> writer - Tamper Input 4 Detected\nTamper ID\nRegister <code>TAMPID</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 31 - Tamper Event Detected\nBit 31 - Tamper Event Detected\nBit 0 - Tamper Input 0 Detected\nBit 0 - Tamper Input 0 Detected\nBit 1 - Tamper Input 1 Detected\nBit 1 - Tamper Input 1 Detected\nBit 2 - Tamper Input 2 Detected\nBit 2 - Tamper Input 2 Detected\nBit 3 - Tamper Input 3 Detected\nBit 3 - Tamper Input 3 Detected\nBit 4 - Tamper Input 4 Detected\nBit 4 - Tamper Input 4 Detected\nField <code>COUNT</code> reader - Count Timestamp Value\nRegister <code>TIMESTAMP</code> reader\nMODE1 Timestamp\nBits 0:15 - Count Timestamp Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nALARM0 (rw) register accessor: MODE2_ALARM Alarm n Value\nALARM1 (rw) register accessor: MODE2_ALARM Alarm n Value\nBKUP (rw) register accessor: Backup\nCLOCK (rw) register accessor: MODE2 Clock Value\nCTRLA (rw) register accessor: MODE2 Control A\nCTRLB (rw) register accessor: MODE2 Control B\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE2 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nGP (rw) register accessor: General Purpose\nINTENCLR (rw) register accessor: MODE2 Interrupt Enable …\nINTENSET (rw) register accessor: MODE2 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE2 Interrupt Flag …\nMASK0 (rw) register accessor: MODE2_ALARM Alarm n Mask\nMASK1 (rw) register accessor: MODE2_ALARM Alarm n Mask\nClock/Calendar with Alarm\nSYNCBUSY (r) register accessor: MODE2 Synchronization Busy …\nTAMPCTRL (rw) register accessor: Tamper Control\nTAMPID (rw) register accessor: Tamper ID\nTIMESTAMP (r) register accessor: MODE2 Timestamp\nMODE2_ALARM Alarm n Value\n0x20 - MODE2_ALARM Alarm n Value\nMODE2_ALARM Alarm n Value\n0x28 - MODE2_ALARM Alarm n Value\nBackup\n0x80..0xa0 - Backup\nIterator for array of: 0x80..0xa0 - Backup\nMODE2 Clock Value\n0x18 - MODE2 Clock Value\nMODE2 Control A\n0x00 - MODE2 Control A\nMODE2 Control B\n0x02 - MODE2 Control B\nDebug Control\n0x0e - Debug Control\nMODE2 Event Control\n0x04 - MODE2 Event Control\nFrequency Correction\n0x14 - Frequency Correction\nReturns the argument unchanged.\nGeneral Purpose\n0x40..0x50 - General Purpose\nIterator for array of: 0x40..0x50 - General Purpose\nMODE2 Interrupt Enable Clear\n0x08 - MODE2 Interrupt Enable Clear\nMODE2 Interrupt Enable Set\n0x0a - MODE2 Interrupt Enable Set\nMODE2 Interrupt Flag Status and Clear\n0x0c - MODE2 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nMODE2_ALARM Alarm n Mask\n0x24 - MODE2_ALARM Alarm n Mask\nMODE2_ALARM Alarm n Mask\n0x2c - MODE2_ALARM Alarm n Mask\nMODE2 Synchronization Busy Status\n0x10 - MODE2 Synchronization Busy Status\nTamper Control\n0x60 - Tamper Control\nTamper ID\n0x68 - Tamper ID\nMODE2 Timestamp\n0x64 - MODE2 Timestamp\nMODE2_ALARM Alarm n Value\n0: Morning hour\nField <code>DAY</code> reader - Day\nField <code>DAY</code> writer - Day\nField <code>HOUR</code> reader - Hour\nField <code>HOUR</code> writer - Hour\nHour\nField <code>MINUTE</code> reader - Minute\nField <code>MINUTE</code> writer - Minute\nField <code>MONTH</code> reader - Month\nField <code>MONTH</code> writer - Month\n16: Afternoon hour\nRegister <code>ALARM0</code> reader\nField <code>SECOND</code> reader - Second\nField <code>SECOND</code> writer - Second\nRegister <code>ALARM0</code> writer\nField <code>YEAR</code> reader - Year\nField <code>YEAR</code> writer - Year\nMorning hour\nBits 17:21 - Day\nBits 17:21 - Day\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour\nBits 12:16 - Hour\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMorning hour\nAfternoon hour\nBits 6:11 - Minute\nBits 6:11 - Minute\nBits 22:25 - Month\nBits 22:25 - Month\nAfternoon hour\nBits 0:5 - Second\nBits 0:5 - Second\nGet enumerated values variant\nBits 26:31 - Year\nBits 26:31 - Year\nMODE2_ALARM Alarm n Value\n0: Morning hour\nField <code>DAY</code> reader - Day\nField <code>DAY</code> writer - Day\nField <code>HOUR</code> reader - Hour\nField <code>HOUR</code> writer - Hour\nHour\nField <code>MINUTE</code> reader - Minute\nField <code>MINUTE</code> writer - Minute\nField <code>MONTH</code> reader - Month\nField <code>MONTH</code> writer - Month\n16: Afternoon hour\nRegister <code>ALARM1</code> reader\nField <code>SECOND</code> reader - Second\nField <code>SECOND</code> writer - Second\nRegister <code>ALARM1</code> writer\nField <code>YEAR</code> reader - Year\nField <code>YEAR</code> writer - Year\nMorning hour\nBits 17:21 - Day\nBits 17:21 - Day\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour\nBits 12:16 - Hour\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMorning hour\nAfternoon hour\nBits 6:11 - Minute\nBits 6:11 - Minute\nBits 22:25 - Month\nBits 22:25 - Month\nAfternoon hour\nBits 0:5 - Second\nBits 0:5 - Second\nGet enumerated values variant\nBits 26:31 - Year\nBits 26:31 - Year\nField <code>BKUP</code> reader - Backup\nBackup\nField <code>BKUP</code> writer - Backup\nRegister <code>BKUP[%s]</code> reader\nRegister <code>BKUP[%s]</code> writer\nBits 0:31 - Backup\nBits 0:31 - Backup\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n0: AM when CLKREP in 12-hour\nMODE2 Clock Value\nField <code>DAY</code> reader - Day\nField <code>DAY</code> writer - Day\nField <code>HOUR</code> reader - Hour\nField <code>HOUR</code> writer - Hour\nHour\nField <code>MINUTE</code> reader - Minute\nField <code>MINUTE</code> writer - Minute\nField <code>MONTH</code> reader - Month\nField <code>MONTH</code> writer - Month\n16: PM when CLKREP in 12-hour\nRegister <code>CLOCK</code> reader\nField <code>SECOND</code> reader - Second\nField <code>SECOND</code> writer - Second\nRegister <code>CLOCK</code> writer\nField <code>YEAR</code> reader - Year\nField <code>YEAR</code> writer - Year\nAM when CLKREP in 12-hour\nBits 17:21 - Day\nBits 17:21 - Day\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour\nBits 12:16 - Hour\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAM when CLKREP in 12-hour\nPM when CLKREP in 12-hour\nBits 6:11 - Minute\nBits 6:11 - Minute\nBits 22:25 - Month\nBits 22:25 - Month\nPM when CLKREP in 12-hour\nBits 0:5 - Second\nBits 0:5 - Second\nGet enumerated values variant\nBits 26:31 - Year\nBits 26:31 - Year\nField <code>BKTRST</code> reader - BKUP Registers Reset On Tamper Enable\nField <code>BKTRST</code> writer - BKUP Registers Reset On Tamper Enable\nField <code>CLKREP</code> reader - Clock Representation\nField <code>CLKREP</code> writer - Clock Representation\n2: Mode 2: Clock/Calendar\nField <code>CLOCKSYNC</code> reader - Clock Read Synchronization Enable\nField <code>CLOCKSYNC</code> writer - Clock Read Synchronization Enable\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nMODE2 Control A\n1: CLK_RTC_CNT = GCLK_RTC/1\n11: CLK_RTC_CNT = GCLK_RTC/1024\n8: CLK_RTC_CNT = GCLK_RTC/128\n5: CLK_RTC_CNT = GCLK_RTC/16\n2: CLK_RTC_CNT = GCLK_RTC/2\n9: CLK_RTC_CNT = GCLK_RTC/256\n6: CLK_RTC_CNT = GCLK_RTC/32\n3: CLK_RTC_CNT = GCLK_RTC/4\n10: CLK_RTC_CNT = GCLK_RTC/512\n7: CLK_RTC_CNT = GCLK_RTC/64\n4: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>GPTRST</code> reader - GP Registers Reset On Tamper Enable\nField <code>GPTRST</code> writer - GP Registers Reset On Tamper Enable\nField <code>MATCHCLR</code> reader - Clear on Match\nField <code>MATCHCLR</code> writer - Clear on Match\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\n0: CLK_RTC_CNT = GCLK_RTC/1\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 13 - BKUP Registers Reset On Tamper Enable\nBit 13 - BKUP Registers Reset On Tamper Enable\nBit 6 - Clock Representation\nBit 6 - Clock Representation\nMode 2: Clock/Calendar\nBit 15 - Clock Read Synchronization Enable\nBit 15 - Clock Read Synchronization Enable\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 14 - GP Registers Reset On Tamper Enable\nBit 14 - GP Registers Reset On Tamper Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nCLK_RTC_CNT = GCLK_RTC/1\nBit 7 - Clear on Match\nBit 7 - Clear on Match\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nCLK_RTC_CNT = GCLK_RTC/1\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nField <code>ACTF</code> reader - Active Layer Freqnuency\nField <code>ACTF</code> writer - Active Layer Freqnuency\nActive Layer Freqnuency\nMODE2 Control B\nField <code>DEBASYNC</code> reader - Debouncer Asynchronous Enable\nField <code>DEBASYNC</code> writer - Debouncer Asynchronous Enable\nField <code>DEBF</code> reader - Debounce Freqnuency\nField <code>DEBF</code> writer - Debounce Freqnuency\nDebounce Freqnuency\nField <code>DEBMAJ</code> reader - Debouncer Majority Enable\nField <code>DEBMAJ</code> writer - Debouncer Majority Enable\n6: CLK_RTC_DEB = CLK_RTC/128\n6: CLK_RTC_OUT = CLK_RTC/128\n3: CLK_RTC_DEB = CLK_RTC/16\n3: CLK_RTC_OUT = CLK_RTC/16\n0: CLK_RTC_DEB = CLK_RTC/2\n0: CLK_RTC_OUT = CLK_RTC/2\n7: CLK_RTC_DEB = CLK_RTC/256\n7: CLK_RTC_OUT = CLK_RTC/256\n4: CLK_RTC_DEB = CLK_RTC/32\n4: CLK_RTC_OUT = CLK_RTC/32\n1: CLK_RTC_DEB = CLK_RTC/4\n1: CLK_RTC_OUT = CLK_RTC/4\n5: CLK_RTC_DEB = CLK_RTC/64\n5: CLK_RTC_OUT = CLK_RTC/64\n2: CLK_RTC_DEB = CLK_RTC/8\n2: CLK_RTC_OUT = CLK_RTC/8\nField <code>DMAEN</code> reader - DMA Enable\nField <code>DMAEN</code> writer - DMA Enable\nField <code>GP0EN</code> reader - General Purpose 0 Enable\nField <code>GP0EN</code> writer - General Purpose 0 Enable\nField <code>GP2EN</code> reader - General Purpose 2 Enable\nField <code>GP2EN</code> writer - General Purpose 2 Enable\nRegister <code>CTRLB</code> reader\nField <code>RTCOUT</code> reader - RTC Output Enable\nField <code>RTCOUT</code> writer - RTC Output Enable\nRegister <code>CTRLB</code> writer\nBits 12:14 - Active Layer Freqnuency\nBits 12:14 - Active Layer Freqnuency\nBit 5 - Debouncer Asynchronous Enable\nBit 5 - Debouncer Asynchronous Enable\nBits 8:10 - Debounce Freqnuency\nBits 8:10 - Debounce Freqnuency\nBit 4 - Debouncer Majority Enable\nBit 4 - Debouncer Majority Enable\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 7 - DMA Enable\nBit 7 - DMA Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - General Purpose 0 Enable\nBit 0 - General Purpose 0 Enable\nBit 1 - General Purpose 2 Enable\nBit 1 - General Purpose 2 Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 6 - RTC Output Enable\nBit 6 - RTC Output Enable\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ALARMEO0</code> reader - Alarm 0 Event Output Enable\nField <code>ALARMEO0</code> writer - Alarm 0 Event Output Enable\nField <code>ALARMEO1</code> reader - Alarm 1 Event Output Enable\nField <code>ALARMEO1</code> writer - Alarm 1 Event Output Enable\nMODE2 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nField <code>TAMPEREO</code> reader - Tamper Event Output Enable\nField <code>TAMPEREO</code> writer - Tamper Event Output Enable\nField <code>TAMPEVEI</code> reader - Tamper Event Input Enable\nField <code>TAMPEVEI</code> writer - Tamper Event Input Enable\nRegister <code>EVCTRL</code> writer\nBit 8 - Alarm 0 Event Output Enable\nBit 8 - Alarm 0 Event Output Enable\nBit 9 - Alarm 1 Event Output Enable\nBit 9 - Alarm 1 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 16 - Tamper Event Input Enable\nBit 16 - Tamper Event Input Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>GP</code> reader - General Purpose\nGeneral Purpose\nField <code>GP</code> writer - General Purpose\nRegister <code>GP[%s]</code> reader\nRegister <code>GP[%s]</code> writer\nReturns the argument unchanged.\nBits 0:31 - General Purpose\nBits 0:31 - General Purpose\nCalls <code>U::from(self)</code>.\nField <code>ALARM0</code> reader - Alarm 0 Interrupt Enable\nField <code>ALARM0</code> writer - Alarm 0 Interrupt Enable\nField <code>ALARM1</code> reader - Alarm 1 Interrupt Enable\nField <code>ALARM1</code> writer - Alarm 1 Interrupt Enable\nMODE2 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Interrupt Enable\nField <code>PER0</code> writer - Periodic Interval 0 Interrupt Enable\nField <code>PER1</code> reader - Periodic Interval 1 Interrupt Enable\nField <code>PER1</code> writer - Periodic Interval 1 Interrupt Enable\nField <code>PER2</code> reader - Periodic Interval 2 Interrupt Enable\nField <code>PER2</code> writer - Periodic Interval 2 Interrupt Enable\nField <code>PER3</code> reader - Periodic Interval 3 Interrupt Enable\nField <code>PER3</code> writer - Periodic Interval 3 Interrupt Enable\nField <code>PER4</code> reader - Periodic Interval 4 Interrupt Enable\nField <code>PER4</code> writer - Periodic Interval 4 Interrupt Enable\nField <code>PER5</code> reader - Periodic Interval 5 Interrupt Enable\nField <code>PER5</code> writer - Periodic Interval 5 Interrupt Enable\nField <code>PER6</code> reader - Periodic Interval 6 Interrupt Enable\nField <code>PER6</code> writer - Periodic Interval 6 Interrupt Enable\nField <code>PER7</code> reader - Periodic Interval 7 Interrupt Enable\nField <code>PER7</code> writer - Periodic Interval 7 Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENCLR</code> writer\nBit 8 - Alarm 0 Interrupt Enable\nBit 8 - Alarm 0 Interrupt Enable\nBit 9 - Alarm 1 Interrupt Enable\nBit 9 - Alarm 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>ALARM0</code> reader - Alarm 0 Interrupt Enable\nField <code>ALARM0</code> writer - Alarm 0 Interrupt Enable\nField <code>ALARM1</code> reader - Alarm 1 Interrupt Enable\nField <code>ALARM1</code> writer - Alarm 1 Interrupt Enable\nMODE2 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Enable\nField <code>PER0</code> writer - Periodic Interval 0 Enable\nField <code>PER1</code> reader - Periodic Interval 1 Enable\nField <code>PER1</code> writer - Periodic Interval 1 Enable\nField <code>PER2</code> reader - Periodic Interval 2 Enable\nField <code>PER2</code> writer - Periodic Interval 2 Enable\nField <code>PER3</code> reader - Periodic Interval 3 Enable\nField <code>PER3</code> writer - Periodic Interval 3 Enable\nField <code>PER4</code> reader - Periodic Interval 4 Enable\nField <code>PER4</code> writer - Periodic Interval 4 Enable\nField <code>PER5</code> reader - Periodic Interval 5 Enable\nField <code>PER5</code> writer - Periodic Interval 5 Enable\nField <code>PER6</code> reader - Periodic Interval 6 Enable\nField <code>PER6</code> writer - Periodic Interval 6 Enable\nField <code>PER7</code> reader - Periodic Interval 7 Enable\nField <code>PER7</code> writer - Periodic Interval 7 Enable\nRegister <code>INTENSET</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENSET</code> writer\nBit 8 - Alarm 0 Interrupt Enable\nBit 8 - Alarm 0 Interrupt Enable\nBit 9 - Alarm 1 Interrupt Enable\nBit 9 - Alarm 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Enable\nBit 0 - Periodic Interval 0 Enable\nBit 1 - Periodic Interval 1 Enable\nBit 1 - Periodic Interval 1 Enable\nBit 2 - Periodic Interval 2 Enable\nBit 2 - Periodic Interval 2 Enable\nBit 3 - Periodic Interval 3 Enable\nBit 3 - Periodic Interval 3 Enable\nBit 4 - Periodic Interval 4 Enable\nBit 4 - Periodic Interval 4 Enable\nBit 5 - Periodic Interval 5 Enable\nBit 5 - Periodic Interval 5 Enable\nBit 6 - Periodic Interval 6 Enable\nBit 6 - Periodic Interval 6 Enable\nBit 7 - Periodic Interval 7 Enable\nBit 7 - Periodic Interval 7 Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>ALARM0</code> reader - Alarm 0\nField <code>ALARM0</code> writer - Alarm 0\nField <code>ALARM1</code> reader - Alarm 1\nField <code>ALARM1</code> writer - Alarm 1\nMODE2 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nField <code>PER0</code> reader - Periodic Interval 0\nField <code>PER0</code> writer - Periodic Interval 0\nField <code>PER1</code> reader - Periodic Interval 1\nField <code>PER1</code> writer - Periodic Interval 1\nField <code>PER2</code> reader - Periodic Interval 2\nField <code>PER2</code> writer - Periodic Interval 2\nField <code>PER3</code> reader - Periodic Interval 3\nField <code>PER3</code> writer - Periodic Interval 3\nField <code>PER4</code> reader - Periodic Interval 4\nField <code>PER4</code> writer - Periodic Interval 4\nField <code>PER5</code> reader - Periodic Interval 5\nField <code>PER5</code> writer - Periodic Interval 5\nField <code>PER6</code> reader - Periodic Interval 6\nField <code>PER6</code> writer - Periodic Interval 6\nField <code>PER7</code> reader - Periodic Interval 7\nField <code>PER7</code> writer - Periodic Interval 7\nRegister <code>INTFLAG</code> reader\nField <code>TAMPER</code> reader - Tamper\nField <code>TAMPER</code> writer - Tamper\nRegister <code>INTFLAG</code> writer\nBit 8 - Alarm 0\nBit 8 - Alarm 0\nBit 9 - Alarm 1\nBit 9 - Alarm 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow\nBit 15 - Overflow\nBit 0 - Periodic Interval 0\nBit 0 - Periodic Interval 0\nBit 1 - Periodic Interval 1\nBit 1 - Periodic Interval 1\nBit 2 - Periodic Interval 2\nBit 2 - Periodic Interval 2\nBit 3 - Periodic Interval 3\nBit 3 - Periodic Interval 3\nBit 4 - Periodic Interval 4\nBit 4 - Periodic Interval 4\nBit 5 - Periodic Interval 5\nBit 5 - Periodic Interval 5\nBit 6 - Periodic Interval 6\nBit 6 - Periodic Interval 6\nBit 7 - Periodic Interval 7\nBit 7 - Periodic Interval 7\nBit 14 - Tamper\nBit 14 - Tamper\n4: Match seconds, minutes, hours, and days only\n3: Match seconds, minutes, and hours only\nMODE2_ALARM Alarm n Mask\n5: Match seconds, minutes, hours, days, and months only\n2: Match seconds and minutes only\n0: Alarm Disabled\nRegister <code>MASK0</code> reader\nField <code>SEL</code> reader - Alarm Mask Selection\nField <code>SEL</code> writer - Alarm Mask Selection\nAlarm Mask Selection\n1: Match seconds only\nRegister <code>MASK0</code> writer\n6: Match seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, and days only\nReturns the argument unchanged.\nReturns the argument unchanged.\nMatch seconds, minutes, and hours only\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMatch seconds, minutes, hours, and days only\nMatch seconds, minutes, and hours only\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nMatch seconds only\nMatch seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nBits 0:2 - Alarm Mask Selection\nBits 0:2 - Alarm Mask Selection\nMatch seconds only\nGet enumerated values variant\nMatch seconds, minutes, hours, days, months, and years\n4: Match seconds, minutes, hours, and days only\n3: Match seconds, minutes, and hours only\nMODE2_ALARM Alarm n Mask\n5: Match seconds, minutes, hours, days, and months only\n2: Match seconds and minutes only\n0: Alarm Disabled\nRegister <code>MASK1</code> reader\nField <code>SEL</code> reader - Alarm Mask Selection\nField <code>SEL</code> writer - Alarm Mask Selection\nAlarm Mask Selection\n1: Match seconds only\nRegister <code>MASK1</code> writer\n6: Match seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, and days only\nReturns the argument unchanged.\nReturns the argument unchanged.\nMatch seconds, minutes, and hours only\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMatch seconds, minutes, hours, and days only\nMatch seconds, minutes, and hours only\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nMatch seconds only\nMatch seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nBits 0:2 - Alarm Mask Selection\nBits 0:2 - Alarm Mask Selection\nMatch seconds only\nGet enumerated values variant\nMatch seconds, minutes, hours, days, months, and years\nField <code>ALARM0</code> reader - ALARM 0 Register Busy\nField <code>ALARM1</code> reader - ALARM 1 Register Busy\nField <code>CLOCK</code> reader - CLOCK Register Busy\nField <code>CLOCKSYNC</code> reader - Clock Synchronization Enable Bit …\nField <code>ENABLE</code> reader - Enable Bit Busy\nField <code>FREQCORR</code> reader - FREQCORR Register Busy\nField <code>GP0</code> reader - General Purpose 0 Register Busy\nField <code>GP1</code> reader - General Purpose 1 Register Busy\nField <code>GP2</code> reader - General Purpose 2 Register Busy\nField <code>GP3</code> reader - General Purpose 3 Register Busy\nField <code>MASK0</code> reader - MASK 0 Register Busy\nField <code>MASK1</code> reader - MASK 1 Register Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Bit Busy\nMODE2 Synchronization Busy Status\nBit 5 - ALARM 0 Register Busy\nBit 6 - ALARM 1 Register Busy\nBit 3 - CLOCK Register Busy\nBit 15 - Clock Synchronization Enable Bit Busy\nBit 1 - Enable Bit Busy\nBit 2 - FREQCORR Register Busy\nReturns the argument unchanged.\nBit 16 - General Purpose 0 Register Busy\nBit 17 - General Purpose 1 Register Busy\nBit 18 - General Purpose 2 Register Busy\nBit 19 - General Purpose 3 Register Busy\nCalls <code>U::from(self)</code>.\nBit 11 - MASK 0 Register Busy\nBit 12 - MASK 1 Register Busy\nBit 0 - Software Reset Bit Busy\n3: Compare IN0 to OUT\n3: Compare IN1 to OUT\n3: Compare IN2 to OUT\n3: Compare IN3 to OUT\n3: Compare IN4 to OUT\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\nField <code>DEBNC0</code> reader - Debouncer Enable 0\nField <code>DEBNC0</code> writer - Debouncer Enable 0\nField <code>DEBNC1</code> reader - Debouncer Enable 1\nField <code>DEBNC1</code> writer - Debouncer Enable 1\nField <code>DEBNC2</code> reader - Debouncer Enable 2\nField <code>DEBNC2</code> writer - Debouncer Enable 2\nField <code>DEBNC3</code> reader - Debouncer Enable 3\nField <code>DEBNC3</code> writer - Debouncer Enable 3\nField <code>DEBNC4</code> reader - Debouncer Enable 4\nField <code>DEBNC4</code> writer - Debouncer Enable 4\nField <code>IN0ACT</code> reader - Tamper Input 0 Action\nField <code>IN0ACT</code> writer - Tamper Input 0 Action\nTamper Input 0 Action\nField <code>IN1ACT</code> reader - Tamper Input 1 Action\nField <code>IN1ACT</code> writer - Tamper Input 1 Action\nTamper Input 1 Action\nField <code>IN2ACT</code> reader - Tamper Input 2 Action\nField <code>IN2ACT</code> writer - Tamper Input 2 Action\nTamper Input 2 Action\nField <code>IN3ACT</code> reader - Tamper Input 3 Action\nField <code>IN3ACT</code> writer - Tamper Input 3 Action\nTamper Input 3 Action\nField <code>IN4ACT</code> reader - Tamper Input 4 Action\nField <code>IN4ACT</code> writer - Tamper Input 4 Action\nTamper Input 4 Action\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\nRegister <code>TAMPCTRL</code> reader\nField <code>TAMLVL0</code> reader - Tamper Level Select 0\nField <code>TAMLVL0</code> writer - Tamper Level Select 0\nField <code>TAMLVL1</code> reader - Tamper Level Select 1\nField <code>TAMLVL1</code> writer - Tamper Level Select 1\nField <code>TAMLVL2</code> reader - Tamper Level Select 2\nField <code>TAMLVL2</code> writer - Tamper Level Select 2\nField <code>TAMLVL3</code> reader - Tamper Level Select 3\nField <code>TAMLVL3</code> writer - Tamper Level Select 3\nField <code>TAMLVL4</code> reader - Tamper Level Select 4\nField <code>TAMLVL4</code> writer - Tamper Level Select 4\nTamper Control\nRegister <code>TAMPCTRL</code> writer\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nBit 24 - Debouncer Enable 0\nBit 24 - Debouncer Enable 0\nBit 25 - Debouncer Enable 1\nBit 25 - Debouncer Enable 1\nBit 26 - Debouncer Enable 2\nBit 26 - Debouncer Enable 2\nBit 27 - Debouncer Enable 3\nBit 27 - Debouncer Enable 3\nBit 28 - Debouncer Enable 4\nBit 28 - Debouncer Enable 4\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:1 - Tamper Input 0 Action\nBits 0:1 - Tamper Input 0 Action\nBits 2:3 - Tamper Input 1 Action\nBits 2:3 - Tamper Input 1 Action\nBits 4:5 - Tamper Input 2 Action\nBits 4:5 - Tamper Input 2 Action\nBits 6:7 - Tamper Input 3 Action\nBits 6:7 - Tamper Input 3 Action\nBits 8:9 - Tamper Input 4 Action\nBits 8:9 - Tamper Input 4 Action\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nBit 16 - Tamper Level Select 0\nBit 16 - Tamper Level Select 0\nBit 17 - Tamper Level Select 1\nBit 17 - Tamper Level Select 1\nBit 18 - Tamper Level Select 2\nBit 18 - Tamper Level Select 2\nBit 19 - Tamper Level Select 3\nBit 19 - Tamper Level Select 3\nBit 20 - Tamper Level Select 4\nBit 20 - Tamper Level Select 4\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nRegister <code>TAMPID</code> reader\nField <code>TAMPEVT</code> reader - Tamper Event Detected\nField <code>TAMPEVT</code> writer - Tamper Event Detected\nField <code>TAMPID0</code> reader - Tamper Input 0 Detected\nField <code>TAMPID0</code> writer - Tamper Input 0 Detected\nField <code>TAMPID1</code> reader - Tamper Input 1 Detected\nField <code>TAMPID1</code> writer - Tamper Input 1 Detected\nField <code>TAMPID2</code> reader - Tamper Input 2 Detected\nField <code>TAMPID2</code> writer - Tamper Input 2 Detected\nField <code>TAMPID3</code> reader - Tamper Input 3 Detected\nField <code>TAMPID3</code> writer - Tamper Input 3 Detected\nField <code>TAMPID4</code> reader - Tamper Input 4 Detected\nField <code>TAMPID4</code> writer - Tamper Input 4 Detected\nTamper ID\nRegister <code>TAMPID</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 31 - Tamper Event Detected\nBit 31 - Tamper Event Detected\nBit 0 - Tamper Input 0 Detected\nBit 0 - Tamper Input 0 Detected\nBit 1 - Tamper Input 1 Detected\nBit 1 - Tamper Input 1 Detected\nBit 2 - Tamper Input 2 Detected\nBit 2 - Tamper Input 2 Detected\nBit 3 - Tamper Input 3 Detected\nBit 3 - Tamper Input 3 Detected\nBit 4 - Tamper Input 4 Detected\nBit 4 - Tamper Input 4 Detected\n0: AM when CLKREP in 12-hour\nField <code>DAY</code> reader - Day Timestamp Value\nField <code>HOUR</code> reader - Hour Timestamp Value\nHour Timestamp Value\nField <code>MINUTE</code> reader - Minute Timestamp Value\nField <code>MONTH</code> reader - Month Timestamp Value\n16: PM when CLKREP in 12-hour\nRegister <code>TIMESTAMP</code> reader\nField <code>SECOND</code> reader - Second Timestamp Value\nMODE2 Timestamp\nField <code>YEAR</code> reader - Year Timestamp Value\nBits 17:21 - Day Timestamp Value\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour Timestamp Value\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAM when CLKREP in 12-hour\nPM when CLKREP in 12-hour\nBits 6:11 - Minute Timestamp Value\nBits 22:25 - Month Timestamp Value\nBits 0:5 - Second Timestamp Value\nGet enumerated values variant\nBits 26:31 - Year Timestamp Value\nACESR (r) register accessor: Auto CMD Error Status\nACR (rw) register accessor: AHB Control\nAESR (r) register accessor: ADMA Error Status\nAPSR (r) register accessor: Additional Present State …\nARG1R (rw) register accessor: Argument 1\nASAR (rw) register accessor: ADMA System Address\nBCR (rw) register accessor: Block Count\nBDPR (rw) register accessor: Buffer Data Port\nBGCR (rw) register accessor: Block Gap Control\nBGCR_EMMC_MODE (rw) register accessor: Block Gap Control\nBSR (rw) register accessor: Block Size\nCA0R (r) register accessor: Capabilities 0\nCA1R (r) register accessor: Capabilities 1\nCACR (rw) register accessor: Capabilities Control\nCC2R (rw) register accessor: Clock Control 2\nCCR (rw) register accessor: Clock Control\nCR (rw) register accessor: Command\nDBGR (rw) register accessor: Debug\nEISIER (rw) register accessor: Error Interrupt Signal …\nEISIER_EMMC_MODE (rw) register accessor: Error Interrupt …\nEISTER (rw) register accessor: Error Interrupt Status …\nEISTER_EMMC_MODE (rw) register accessor: Error Interrupt …\nEISTR (rw) register accessor: Error Interrupt Status\nEISTR_EMMC_MODE (rw) register accessor: Error Interrupt …\nFERACES (w) register accessor: Force Event for Auto CMD …\nFEREIS (w) register accessor: Force Event for Error …\nHC1R (rw) register accessor: Host Control 1\nHC1R_EMMC_MODE (rw) register accessor: Host Control 1\nHC2R (rw) register accessor: Host Control 2\nHC2R_EMMC_MODE (rw) register accessor: Host Control 2\nHCVR (r) register accessor: Host Controller Version\nMC1R (rw) register accessor: MMC Control 1\nMC2R (w) register accessor: MMC Control 2\nMCCAR (r) register accessor: Maximum Current Capabilities\nNISIER (rw) register accessor: Normal Interrupt Signal …\nNISIER_EMMC_MODE (rw) register accessor: Normal Interrupt …\nNISTER (rw) register accessor: Normal Interrupt Status …\nNISTER_EMMC_MODE (rw) register accessor: Normal Interrupt …\nNISTR (rw) register accessor: Normal Interrupt Status\nNISTR_EMMC_MODE (rw) register accessor: Normal Interrupt …\nPCR (rw) register accessor: Power Control\nPSR (r) register accessor: Present State\nPVR (rw) register accessor: Preset Value n\nRegister block\nRR (r) register accessor: Response\nSISR (r) register accessor: Slot Interrupt Status\nSRR (rw) register accessor: Software Reset\nSSAR (rw) register accessor: SDMA System Address / …\nSSAR_CMD23_MODE (rw) register accessor: SDMA System …\nTCR (rw) register accessor: Timeout Control\nTMR (rw) register accessor: Transfer Mode\nWCR (rw) register accessor: Wakeup Control\nAuto CMD Error Status\n0x3c - Auto CMD Error Status\nAHB Control\n0x208 - AHB Control\nADMA Error Status\n0x54 - ADMA Error Status\nAdditional Present State Register\n0x200 - Additional Present State Register\nArgument 1\n0x08 - Argument 1\nADMA System Address\n0x58 - ADMA System Address\nIterator for array of: 0x58 - ADMA System Address\nBlock Count\n0x06 - Block Count\nBuffer Data Port\n0x20 - Buffer Data Port\nBlock Gap Control\n0x2a - Block Gap Control\nBlock Gap Control\n0x2a - Block Gap Control\nBlock Size\n0x04 - Block Size\nCapabilities 0\n0x40 - Capabilities 0\nCapabilities 1\n0x44 - Capabilities 1\nCapabilities Control\n0x230 - Capabilities Control\nClock Control 2\n0x20c - Clock Control 2\nClock Control\n0x2c - Clock Control\nCommand\n0x0e - Command\nDebug\n0x234 - Debug\nError Interrupt Signal Enable\n0x3a - Error Interrupt Signal Enable\nError Interrupt Signal Enable\n0x3a - Error Interrupt Signal Enable\nError Interrupt Status Enable\n0x36 - Error Interrupt Status Enable\nError Interrupt Status Enable\n0x36 - Error Interrupt Status Enable\nError Interrupt Status\n0x32 - Error Interrupt Status\nError Interrupt Status\n0x32 - Error Interrupt Status\nForce Event for Auto CMD Error Status\n0x50 - Force Event for Auto CMD Error Status\nForce Event for Error Interrupt Status\n0x52 - Force Event for Error Interrupt Status\nReturns the argument unchanged.\nHost Control 1\n0x28 - Host Control 1\nHost Control 1\n0x28 - Host Control 1\nHost Control 2\n0x3e - Host Control 2\nHost Control 2\n0x3e - Host Control 2\nHost Controller Version\n0xfe - Host Controller Version\nCalls <code>U::from(self)</code>.\nMMC Control 1\n0x204 - MMC Control 1\nMMC Control 2\n0x205 - MMC Control 2\nMaximum Current Capabilities\n0x48 - Maximum Current Capabilities\nNormal Interrupt Signal Enable\n0x38 - Normal Interrupt Signal Enable\nNormal Interrupt Signal Enable\n0x38 - Normal Interrupt Signal Enable\nNormal Interrupt Status Enable\n0x34 - Normal Interrupt Status Enable\nNormal Interrupt Status Enable\n0x34 - Normal Interrupt Status Enable\nNormal Interrupt Status\n0x30 - Normal Interrupt Status\nNormal Interrupt Status\n0x30 - Normal Interrupt Status\nPower Control\n0x29 - Power Control\nPresent State\n0x24 - Present State\nPreset Value n\n0x60..0x70 - Preset Value n\nIterator for array of: 0x60..0x70 - Preset Value n\nResponse\n0x10..0x20 - Response\nIterator for array of: 0x10..0x20 - Response\nSlot Interrupt Status\n0xfc - Slot Interrupt Status\nSoftware Reset\n0x2f - Software Reset\nSDMA System Address / Argument 2\n0x00 - SDMA System Address / Argument 2\nSDMA System Address / Argument 2\n0x00 - SDMA System Address / Argument 2\nTimeout Control\n0x2e - Timeout Control\nTransfer Mode\n0x0c - Transfer Mode\nWakeup Control\n0x2b - Wakeup Control\nAuto CMD Error Status\nField <code>ACMD12NE</code> reader - Auto CMD12 Not Executed\nAuto CMD12 Not Executed\nField <code>ACMDCRC</code> reader - Auto CMD CRC Error\nAuto CMD CRC Error\nField <code>ACMDEND</code> reader - Auto CMD End Bit Error\nAuto CMD End Bit Error\nField <code>ACMDIDX</code> reader - Auto CMD Index Error\nAuto CMD Index Error\nField <code>ACMDTEO</code> reader - Auto CMD Timeout Error\nAuto CMD Timeout Error\nField <code>CMDNI</code> reader - Command not Issued By Auto CMD12 Error\nCommand not Issued By Auto CMD12 Error\n0: Executed\n0: No error\n0: No error\n0: No error\n0: No error\n1: Not executed\n1: Not Issued\n0: No error\nRegister <code>ACESR</code> reader\n1: Timeout\n1: CRC Error Generated\n1: End Bit Error Generated\n1: Error\nBit 0 - Auto CMD12 Not Executed\nBit 2 - Auto CMD CRC Error\nBit 3 - Auto CMD End Bit Error\nBit 4 - Auto CMD Index Error\nBit 1 - Auto CMD Timeout Error\nBit 7 - Command not Issued By Auto CMD12 Error\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExecuted\nNo error\nNo error\nNo error\nNo error\nNot executed\nNot Issued\nNo error\nTimeout\nCRC Error Generated\nEnd Bit Error Generated\nError\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nAHB Control\nField <code>BMAX</code> reader - AHB Maximum Burst\nField <code>BMAX</code> writer - AHB Maximum Burst\nAHB Maximum Burst\n0: <code>0</code>\n2: <code>10</code>\n1: <code>1</code>\nRegister <code>ACR</code> reader\n3: <code>11</code>\nRegister <code>ACR</code> writer\nBits 0:1 - AHB Maximum Burst\nBits 0:1 - AHB Maximum Burst\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>0</code>\n<code>10</code>\n<code>1</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>0</code>\n<code>10</code>\n<code>1</code>\n<code>11</code>\n<code>11</code>\nGet enumerated values variant\nADMA Error Status\nField <code>ERRST</code> reader - ADMA Error State\nADMA Error State\n1: ST_FDS (Fetch Descriptor)\nField <code>LMIS</code> reader - ADMA Length Mismatch Error\nADMA Length Mismatch Error\n0: No Error\nRegister <code>AESR</code> reader\n0: ST_STOP (Stop DMA)\n3: ST_TFR (Transfer Data)\n1: Error\nBits 0:1 - ADMA Error State\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nST_FDS (Fetch Descriptor)\nNo Error\nST_STOP (Stop DMA)\nST_TFR (Transfer Data)\nError\nBit 2 - ADMA Length Mismatch Error\nGet enumerated values variant\nGet enumerated values variant\nAdditional Present State Register\nField <code>HDATLL</code> reader - High Line Level\nRegister <code>APSR</code> reader\nReturns the argument unchanged.\nBits 0:3 - High Line Level\nCalls <code>U::from(self)</code>.\nArgument 1\nField <code>ARG</code> reader - Argument 1\nField <code>ARG</code> writer - Argument 1\nRegister <code>ARG1R</code> reader\nRegister <code>ARG1R</code> writer\nBits 0:31 - Argument 1\nBits 0:31 - Argument 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ADMASA</code> reader - ADMA System Address\nField <code>ADMASA</code> writer - ADMA System Address\nADMA System Address\nRegister <code>ASAR[%s]</code> reader\nRegister <code>ASAR[%s]</code> writer\nBits 0:31 - ADMA System Address\nBits 0:31 - ADMA System Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BCNT</code> reader - Blocks Count for Current Transfer\nField <code>BCNT</code> writer - Blocks Count for Current Transfer\nBlock Count\nRegister <code>BCR</code> reader\nRegister <code>BCR</code> writer\nBits 0:15 - Blocks Count for Current Transfer\nBits 0:15 - Blocks Count for Current Transfer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBuffer Data Port\nField <code>BUFDATA</code> reader - Buffer Data\nField <code>BUFDATA</code> writer - Buffer Data\nRegister <code>BDPR</code> reader\nRegister <code>BDPR</code> writer\nBits 0:31 - Buffer Data\nBits 0:31 - Buffer Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBlock Gap Control\nField <code>CONTR</code> reader - Continue Request\nField <code>CONTR</code> writer - Continue Request\nContinue Request\n0: Disable Read Wait Control\n0: Disabled\n1: Enable Read Wait Control\n1: Enabled\n0: Not affected\nField <code>INTBG</code> reader - Interrupt at Block Gap\nField <code>INTBG</code> writer - Interrupt at Block Gap\nInterrupt at Block Gap\nRegister <code>BGCR</code> reader\n1: Restart\nField <code>RWCTRL</code> reader - Read Wait Control\nField <code>RWCTRL</code> writer - Read Wait Control\nRead Wait Control\n1: Stop\nField <code>STPBGR</code> reader - Stop at Block Gap Request\nField <code>STPBGR</code> writer - Stop at Block Gap Request\nStop at Block Gap Request\n0: Transfer\nRegister <code>BGCR</code> writer\nBit 1 - Continue Request\nBit 1 - Continue Request\nDisable Read Wait Control\nDisabled\nEnable Read Wait Control\nEnabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNot affected\nBit 3 - Interrupt at Block Gap\nBit 3 - Interrupt at Block Gap\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDisable Read Wait Control\nDisabled\nEnable Read Wait Control\nEnabled\nNot affected\nRestart\nStop\nTransfer\nRestart\nBit 2 - Read Wait Control\nBit 2 - Read Wait Control\nStop\nBit 0 - Stop at Block Gap Request\nBit 0 - Stop at Block Gap Request\nTransfer\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBlock Gap Control\nField <code>CONTR</code> reader - Continue Request\nField <code>CONTR</code> writer - Continue Request\nContinue Request\n0: Not affected\nRegister <code>BGCR_EMMC_MODE</code> reader\n1: Restart\n1: Stop\nField <code>STPBGR</code> reader - Stop at Block Gap Request\nField <code>STPBGR</code> writer - Stop at Block Gap Request\nStop at Block Gap Request\n0: Transfer\nRegister <code>BGCR_EMMC_MODE</code> writer\nBit 1 - Continue Request\nBit 1 - Continue Request\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nNot affected\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNot affected\nRestart\nStop\nTransfer\nRestart\nStop\nBit 0 - Stop at Block Gap Request\nBit 0 - Stop at Block Gap Request\nTransfer\nGet enumerated values variant\nGet enumerated values variant\nField <code>BLOCKSIZE</code> reader - Transfer Block Size\nField <code>BLOCKSIZE</code> writer - Transfer Block Size\nField <code>BOUNDARY</code> reader - SDMA Buffer Boundary\nField <code>BOUNDARY</code> writer - SDMA Buffer Boundary\nSDMA Buffer Boundary\nBlock Size\nRegister <code>BSR</code> reader\nRegister <code>BSR</code> writer\n128k bytes\n5: 128k bytes\n16k bytes\n2: 16k bytes\n256k bytes\n6: 256k bytes\n32k bytes\n3: 32k bytes\n4k bytes\n0: 4k bytes\n512k bytes\n7: 512k bytes\n64k bytes\n4: 64k bytes\n8k bytes\n1: 8k bytes\nBits 0:9 - Transfer Block Size\nBits 0:9 - Transfer Block Size\nBits 12:14 - SDMA Buffer Boundary\nBits 12:14 - SDMA Buffer Boundary\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n128k bytes\n16k bytes\n256k bytes\n32k bytes\n4k bytes\n512k bytes\n64k bytes\n8k bytes\nGet enumerated values variant\nField <code>ADMA2SUP</code> reader - ADMA2 Support\nADMA2 Support\nField <code>ASINTSUP</code> reader - Asynchronous Interrupt Support\nAsynchronous Interrupt Support\nField <code>BASECLKF</code> reader - Base Clock Frequency\nBase Clock Frequency\nCapabilities 0\nField <code>ED8SUP</code> reader - 8-bit Support for Embedded Device\n8-bit Support for Embedded Device\n1: Embedded Slot for One Device\nField <code>HSSUP</code> reader - High Speed Support\nHigh Speed Support\n0: KHz\nField <code>MAXBLKL</code> reader - Max Block Length\nMax Block Length\n1: MHz\n0: 8-bit Bus Width not Supported\n0: ADMA2 not Supported\n0: High Speed not Supported\n0: SDMA not Supported\n0: Suspend/Resume not Supported\n0: 3.3V Not Supported\n0: 3.0V Not Supported\n0: 1.8V Not Supported\n0: 32-bit Address Descriptors and System Bus\n0: Asynchronous Interrupt not Supported\n0: Get information via another method\n0: Get information via another method\nRegister <code>CA0R</code> reader\n0: Removable Card Slot\nField <code>SB64SUP</code> reader - 64-Bit System Bus Support\n64-Bit System Bus Support\nField <code>SDMASUP</code> reader - SDMA Support\nSDMA Support\nField <code>SLTYPE</code> reader - Slot Type\nSlot Type\nField <code>SRSUP</code> reader - Suspend/Resume Support\nSuspend/Resume Support\nField <code>TEOCLKF</code> reader - Timeout Clock Frequency\nTimeout Clock Frequency\nField <code>TEOCLKU</code> reader - Timeout Clock Unit\nTimeout Clock Unit\nField <code>V18VSUP</code> reader - Voltage Support 1.8V\nVoltage Support 1.8V\nField <code>V30VSUP</code> reader - Voltage Support 3.0V\nVoltage Support 3.0V\nField <code>V33VSUP</code> reader - Voltage Support 3.3V\nVoltage Support 3.3V\n1: 8-bit Bus Width Supported\n1: ADMA2 Supported\n1: High Speed Supported\n1: SDMA Supported\n1: Suspend/Resume Supported\n1: 3.3V Supported\n1: 3.0V Supported\n1: 1.8V Supported\n1: 64-bit Address Descriptors and System Bus\n1: Asynchronous Interrupt supported\n0: 512 bytes\nBit 19 - ADMA2 Support\nBit 29 - Asynchronous Interrupt Support\nBits 8:15 - Base Clock Frequency\nBit 18 - 8-bit Support for Embedded Device\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 21 - High Speed Support\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n512 bytes\nEmbedded Slot for One Device\nKHz\nMHz\n8-bit Bus Width not Supported\nADMA2 not Supported\nHigh Speed not Supported\nSDMA not Supported\nSuspend/Resume not Supported\n3.3V Not Supported\n3.0V Not Supported\n1.8V Not Supported\n32-bit Address Descriptors and System Bus\nAsynchronous Interrupt not Supported\nGet information via another method\nGet information via another method\nRemovable Card Slot\n8-bit Bus Width Supported\nADMA2 Supported\nHigh Speed Supported\nSDMA Supported\nSuspend/Resume Supported\n3.3V Supported\n3.0V Supported\n1.8V Supported\n64-bit Address Descriptors and System Bus\nAsynchronous Interrupt supported\nBits 16:17 - Max Block Length\nBit 28 - 64-Bit System Bus Support\nBit 22 - SDMA Support\nBits 30:31 - Slot Type\nBit 23 - Suspend/Resume Support\nBits 0:5 - Timeout Clock Frequency\nBit 7 - Timeout Clock Unit\nBit 26 - Voltage Support 1.8V\nBit 25 - Voltage Support 3.0V\nBit 24 - Voltage Support 3.3V\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nCapabilities 1\nField <code>CLKMULT</code> reader - Clock Multiplier\nClock Multiplier\nField <code>DDR50SUP</code> reader - DDR50 Support\nDDR50 Support\n0: Re-Tuning Timer disabled\nField <code>DRVASUP</code> reader - Driver Type A Support\nDriver Type A Support\nField <code>DRVCSUP</code> reader - Driver Type C Support\nDriver Type C Support\nField <code>DRVDSUP</code> reader - Driver Type D Support\nDriver Type D Support\n0: SDR50 is Not Supported\n0: SDR104 is Not Supported\n0: DDR50 is Not Supported\n0: Driver Type A is Not Supported\n0: Driver Type C is Not Supported\n0: Driver Type D is Not Supported\n0: SDR50 does not require tuning\n0: Clock Multiplier is Not Supported\n15: Get information from other source\nRegister <code>CA1R</code> reader\nField <code>SDR104SUP</code> reader - SDR104 Support\nSDR104 Support\nField <code>SDR50SUP</code> reader - SDR50 Support\nSDR50 Support\nField <code>TCNTRT</code> reader - Timer Count for Re-Tuning\nTimer Count for Re-Tuning\nField <code>TSDR50</code> reader - Use Tuning for SDR50\nUse Tuning for SDR50\n1: SDR50 is Supported\n1: SDR104 is Supported\n1: DDR50 is Supported\n1: Driver Type A is Supported\n1: Driver Type C is Supported\n1: Driver Type D is Supported\n1: SDR50 requires tuning\n11: 1024 seconds\n8: 128 seconds\n5: 16 seconds\n1: 1 second\n9: 256 seconds\n2: 2 seconds\n6: 32 seconds\n3: 4 seconds\n10: 512 seconds\n7: 64 seconds\n4: 8 seconds\nBits 16:23 - Clock Multiplier\nBit 2 - DDR50 Support\nBit 4 - Driver Type A Support\nBit 5 - Driver Type C Support\nBit 6 - Driver Type D Support\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1024 seconds\n128 seconds\n16 seconds\n1 second\n256 seconds\n2 seconds\n32 seconds\n4 seconds\n512 seconds\n64 seconds\n8 seconds\nRe-Tuning Timer disabled\nSDR50 is Not Supported\nSDR104 is Not Supported\nDDR50 is Not Supported\nDriver Type A is Not Supported\nDriver Type C is Not Supported\nDriver Type D is Not Supported\nSDR50 does not require tuning\nClock Multiplier is Not Supported\nGet information from other source\nSDR50 is Supported\nSDR104 is Supported\nDDR50 is Supported\nDriver Type A is Supported\nDriver Type C is Supported\nDriver Type D is Supported\nSDR50 requires tuning\nBit 1 - SDR104 Support\nBit 0 - SDR50 Support\nBits 8:11 - Timer Count for Re-Tuning\nBit 13 - Use Tuning for SDR50\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nCapabilities Control\nField <code>CAPWREN</code> reader - Capabilities Registers Write Enable …\nField <code>CAPWREN</code> writer - Capabilities Registers Write Enable …\n70: Key\nField <code>KEY</code> reader - Key (0x46)\nField <code>KEY</code> writer - Key (0x46)\nKey (0x46)\nRegister <code>CACR</code> reader\nRegister <code>CACR</code> writer\nBit 0 - Capabilities Registers Write Enable (Required to …\nBit 0 - Capabilities Registers Write Enable (Required to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKey\nBits 8:15 - Key (0x46)\nBits 8:15 - Key (0x46)\nKey\nGet enumerated values variant\nClock Control 2\n1: SDCLK can be stopped at any time after DATA …\nField <code>FSDCLKD</code> reader - Force SDCK Disabled\nField <code>FSDCLKD</code> writer - Force SDCK Disabled\nForce SDCK Disabled\n0: No effect\nRegister <code>CC2R</code> reader\nRegister <code>CC2R</code> writer\nSDCLK can be stopped at any time after DATA transfer.SDCLK …\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - Force SDCK Disabled\nBit 0 - Force SDCK Disabled\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSDCLK can be stopped at any time after DATA transfer.SDCLK …\nNo effect\nNo effect\nGet enumerated values variant\nClock Control\nField <code>CLKGSEL</code> reader - Clock Generator Select\nField <code>CLKGSEL</code> writer - Clock Generator Select\nClock Generator Select\n0: Disable\n0: Divided Clock Mode\n1: Enable\nField <code>INTCLKEN</code> reader - Internal Clock Enable\nField <code>INTCLKEN</code> writer - Internal Clock Enable\nInternal Clock Enable\nField <code>INTCLKS</code> reader - Internal Clock Stable\nField <code>INTCLKS</code> writer - Internal Clock Stable\nInternal Clock Stable\n0: Not Ready\n0: Stop\n1: Oscillate\n1: Programmable Clock Mode\nRegister <code>CCR</code> reader\n1: Ready\nField <code>SDCLKEN</code> reader - SD Clock Enable\nField <code>SDCLKEN</code> writer - SD Clock Enable\nSD Clock Enable\nField <code>SDCLKFSEL</code> reader - SDCLK Frequency Select\nField <code>SDCLKFSEL</code> writer - SDCLK Frequency Select\nField <code>USDCLKFSEL</code> reader - Upper Bits of SDCLK Frequency …\nField <code>USDCLKFSEL</code> writer - Upper Bits of SDCLK Frequency …\nRegister <code>CCR</code> writer\nBit 5 - Clock Generator Select\nBit 5 - Clock Generator Select\nDisable\nDivided Clock Mode\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - Internal Clock Enable\nBit 0 - Internal Clock Enable\nBit 1 - Internal Clock Stable\nBit 1 - Internal Clock Stable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDisable\nDivided Clock Mode\nEnable\nNot Ready\nStop\nOscillate\nProgrammable Clock Mode\nReady\nNot Ready\nStop\nOscillate\nProgrammable Clock Mode\nReady\nBit 2 - SD Clock Enable\nBit 2 - SD Clock Enable\nBits 8:15 - SDCLK Frequency Select\nBits 8:15 - SDCLK Frequency Select\nBits 6:7 - Upper Bits of SDCLK Frequency Select\nBits 6:7 - Upper Bits of SDCLK Frequency Select\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n3: CMD12, CMD52 for writing I/O Abort in CCCR\nField <code>CMDCCEN</code> reader - Command CRC Check Enable\nField <code>CMDCCEN</code> writer - Command CRC Check Enable\nCommand CRC Check Enable\nField <code>CMDICEN</code> reader - Command Index Check Enable\nField <code>CMDICEN</code> writer - Command Index Check Enable\nCommand Index Check Enable\nField <code>CMDIDX</code> reader - Command Index\nField <code>CMDIDX</code> writer - Command Index\nField <code>CMDTYP</code> reader - Command Type\nField <code>CMDTYP</code> writer - Command Type\nCommand Type\nCommand\n1: Data Present\n0: Disable\n0: Disable\nField <code>DPSEL</code> reader - Data Present Select\nField <code>DPSEL</code> writer - Data Present Select\nData Present Select\n1: Enable\n1: Enable\n0: No Data Present\n0: No response\n0: Other commands\nRegister <code>CR</code> reader\nField <code>RESPTYP</code> reader - Response Type\nField <code>RESPTYP</code> writer - Response Type\nResponse Type\n2: CMD52 for writing Function Select in CCCR\n1: CMD52 for writing Bus Suspend in CCCR\nRegister <code>CR</code> writer\n1: 136-bit response\n136-bit response\n2: 48-bit response\n3: 48-bit response check busy after response\n48-bit response\n48-bit response check busy after response\nCMD12, CMD52 for writing I/O Abort in CCCR\nBit 3 - Command CRC Check Enable\nBit 3 - Command CRC Check Enable\nBit 4 - Command Index Check Enable\nBit 4 - Command Index Check Enable\nBits 8:13 - Command Index\nBits 8:13 - Command Index\nBits 6:7 - Command Type\nBits 6:7 - Command Type\nData Present\nDisable\nDisable\nBit 5 - Data Present Select\nBit 5 - Data Present Select\nEnable\nEnable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n136-bit response\n48-bit response\n48-bit response check busy after response\nCMD12, CMD52 for writing I/O Abort in CCCR\nData Present\nDisable\nDisable\nEnable\nEnable\nNo Data Present\nNo response\nOther commands\nCMD52 for writing Function Select in CCCR\nCMD52 for writing Bus Suspend in CCCR\nNo Data Present\nNo response\nOther commands\nBits 0:1 - Response Type\nBits 0:1 - Response Type\nCMD52 for writing Function Select in CCCR\nCMD52 for writing Bus Suspend in CCCR\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nDebug\n0: Debugging is intrusive (reads of BDPR from debugger are …\n1: Debugging is not intrusive (reads of BDPR from debugger …\nField <code>NIDBG</code> reader - Non-intrusive debug enable\nField <code>NIDBG</code> writer - Non-intrusive debug enable\nNon-intrusive debug enable\nRegister <code>DBGR</code> reader\nRegister <code>DBGR</code> writer\nReturns the argument unchanged.\nReturns the argument unchanged.\nDebugging is intrusive (reads of BDPR from debugger are …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDebugging is intrusive (reads of BDPR from debugger are …\nDebugging is not intrusive (reads of BDPR from debugger …\nBit 0 - Non-intrusive debug enable\nBit 0 - Non-intrusive debug enable\nDebugging is not intrusive (reads of BDPR from debugger …\nGet enumerated values variant\nField <code>ACMD</code> reader - Auto CMD Error Signal Enable\nField <code>ACMD</code> writer - Auto CMD Error Signal Enable\nAuto CMD Error Signal Enable\nField <code>ADMA</code> reader - ADMA Error Signal Enable\nField <code>ADMA</code> writer - ADMA Error Signal Enable\nADMA Error Signal Enable\nField <code>CMDCRC</code> reader - Command CRC Error Signal Enable\nField <code>CMDCRC</code> writer - Command CRC Error Signal Enable\nCommand CRC Error Signal Enable\nField <code>CMDEND</code> reader - Command End Bit Error Signal Enable\nField <code>CMDEND</code> writer - Command End Bit Error Signal Enable\nCommand End Bit Error Signal Enable\nField <code>CMDIDX</code> reader - Command Index Error Signal Enable\nField <code>CMDIDX</code> writer - Command Index Error Signal Enable\nCommand Index Error Signal Enable\nField <code>CMDTEO</code> reader - Command Timeout Error Signal Enable\nField <code>CMDTEO</code> writer - Command Timeout Error Signal Enable\nCommand Timeout Error Signal Enable\nField <code>CURLIM</code> reader - Current Limit Error Signal Enable\nField <code>CURLIM</code> writer - Current Limit Error Signal Enable\nCurrent Limit Error Signal Enable\nField <code>DATCRC</code> reader - Data CRC Error Signal Enable\nField <code>DATCRC</code> writer - Data CRC Error Signal Enable\nData CRC Error Signal Enable\nField <code>DATEND</code> reader - Data End Bit Error Signal Enable\nField <code>DATEND</code> writer - Data End Bit Error Signal Enable\nData End Bit Error Signal Enable\nField <code>DATTEO</code> reader - Data Timeout Error Signal Enable\nField <code>DATTEO</code> writer - Data Timeout Error Signal Enable\nData Timeout Error Signal Enable\nError Interrupt Signal Enable\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\nRegister <code>EISIER</code> reader\nRegister <code>EISIER</code> writer\nBit 8 - Auto CMD Error Signal Enable\nBit 8 - Auto CMD Error Signal Enable\nBit 9 - ADMA Error Signal Enable\nBit 9 - ADMA Error Signal Enable\nBit 1 - Command CRC Error Signal Enable\nBit 1 - Command CRC Error Signal Enable\nBit 2 - Command End Bit Error Signal Enable\nBit 2 - Command End Bit Error Signal Enable\nBit 3 - Command Index Error Signal Enable\nBit 3 - Command Index Error Signal Enable\nBit 0 - Command Timeout Error Signal Enable\nBit 0 - Command Timeout Error Signal Enable\nBit 7 - Current Limit Error Signal Enable\nBit 7 - Current Limit Error Signal Enable\nBit 5 - Data CRC Error Signal Enable\nBit 5 - Data CRC Error Signal Enable\nBit 6 - Data End Bit Error Signal Enable\nBit 6 - Data End Bit Error Signal Enable\nBit 4 - Data Timeout Error Signal Enable\nBit 4 - Data Timeout Error Signal Enable\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nEnabled\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nMasked\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>ACMD</code> reader - Auto CMD Error Signal Enable\nField <code>ACMD</code> writer - Auto CMD Error Signal Enable\nAuto CMD Error Signal Enable\nField <code>ADMA</code> reader - ADMA Error Signal Enable\nField <code>ADMA</code> writer - ADMA Error Signal Enable\nADMA Error Signal Enable\nField <code>BOOTAE</code> reader - Boot Acknowledge Error Signal Enable\nField <code>BOOTAE</code> writer - Boot Acknowledge Error Signal Enable\nField <code>CMDCRC</code> reader - Command CRC Error Signal Enable\nField <code>CMDCRC</code> writer - Command CRC Error Signal Enable\nCommand CRC Error Signal Enable\nField <code>CMDEND</code> reader - Command End Bit Error Signal Enable\nField <code>CMDEND</code> writer - Command End Bit Error Signal Enable\nCommand End Bit Error Signal Enable\nField <code>CMDIDX</code> reader - Command Index Error Signal Enable\nField <code>CMDIDX</code> writer - Command Index Error Signal Enable\nCommand Index Error Signal Enable\nField <code>CMDTEO</code> reader - Command Timeout Error Signal Enable\nField <code>CMDTEO</code> writer - Command Timeout Error Signal Enable\nCommand Timeout Error Signal Enable\nField <code>CURLIM</code> reader - Current Limit Error Signal Enable\nField <code>CURLIM</code> writer - Current Limit Error Signal Enable\nCurrent Limit Error Signal Enable\nField <code>DATCRC</code> reader - Data CRC Error Signal Enable\nField <code>DATCRC</code> writer - Data CRC Error Signal Enable\nData CRC Error Signal Enable\nField <code>DATEND</code> reader - Data End Bit Error Signal Enable\nField <code>DATEND</code> writer - Data End Bit Error Signal Enable\nData End Bit Error Signal Enable\nField <code>DATTEO</code> reader - Data Timeout Error Signal Enable\nField <code>DATTEO</code> writer - Data Timeout Error Signal Enable\nData Timeout Error Signal Enable\nError Interrupt Signal Enable\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n1: Enabled\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\n0: Masked\nRegister <code>EISIER_EMMC_MODE</code> reader\nRegister <code>EISIER_EMMC_MODE</code> writer\nBit 8 - Auto CMD Error Signal Enable\nBit 8 - Auto CMD Error Signal Enable\nBit 9 - ADMA Error Signal Enable\nBit 9 - ADMA Error Signal Enable\nBit 12 - Boot Acknowledge Error Signal Enable\nBit 12 - Boot Acknowledge Error Signal Enable\nBit 1 - Command CRC Error Signal Enable\nBit 1 - Command CRC Error Signal Enable\nBit 2 - Command End Bit Error Signal Enable\nBit 2 - Command End Bit Error Signal Enable\nBit 3 - Command Index Error Signal Enable")