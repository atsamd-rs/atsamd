searchState.loadedDescShard("atsamd21j", 2, "I2CS Data\n0x28 - I2CS Data\nReturns the argument unchanged.\nI2CS Interrupt Enable Clear\n0x14 - I2CS Interrupt Enable Clear\nI2CS Interrupt Enable Set\n0x16 - I2CS Interrupt Enable Set\nI2CS Interrupt Flag Status and Clear\n0x18 - I2CS Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nI2CS Status\n0x1a - I2CS Status\nI2CS Syncbusy\n0x1c - I2CS Syncbusy\nField <code>ADDR</code> reader - Address Value\nI2CS Address\nField <code>ADDR</code> writer - Address Value\nField <code>ADDRMASK</code> reader - Address Mask\nField <code>ADDRMASK</code> writer - Address Mask\nField <code>GENCEN</code> reader - General Call Address Enable\nField <code>GENCEN</code> writer - General Call Address Enable\nRegister <code>ADDR</code> reader\nField <code>TENBITEN</code> reader - Ten Bit Addressing Enable\nField <code>TENBITEN</code> writer - Ten Bit Addressing Enable\nRegister <code>ADDR</code> writer\nBits 1:10 - Address Value\nBits 1:10 - Address Value\nBits 17:26 - Address Mask\nBits 17:26 - Address Mask\nReturns the argument unchanged.\nBit 0 - General Call Address Enable\nBit 0 - General Call Address Enable\nCalls <code>U::from(self)</code>.\nBit 15 - Ten Bit Addressing Enable\nBit 15 - Ten Bit Addressing Enable\nI2CS Control A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\n5: I2C mode with internal clock\n4: I2C mode with external clock\nField <code>LOWTOUTEN</code> reader - SCL Low Timeout Enable\nField <code>LOWTOUTEN</code> writer - SCL Low Timeout Enable\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nField <code>PINOUT</code> reader - Pin Usage\nField <code>PINOUT</code> writer - Pin Usage\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run during Standby\nField <code>RUNSTDBY</code> writer - Run during Standby\nField <code>SCLSM</code> reader - SCL Clock Stretch Mode\nField <code>SCLSM</code> writer - SCL Clock Stretch Mode\nField <code>SDAHOLD</code> reader - SDA Hold Time\nField <code>SDAHOLD</code> writer - SDA Hold Time\nField <code>SEXTTOEN</code> reader - Slave SCL Low Extend Timeout\nField <code>SEXTTOEN</code> writer - Slave SCL Low Extend Timeout\nField <code>SPEED</code> reader - Transfer Speed\nField <code>SPEED</code> writer - Transfer Speed\n3: SPI mode with internal clock\n2: SPI mode with external clock\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\n0: USART mode with external clock\n1: USART mode with internal clock\nRegister <code>CTRLA</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nI2C mode with internal clock\nI2C mode with external clock\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI2C mode with internal clock\nI2C mode with external clock\nSPI mode with internal clock\nSPI mode with external clock\nUSART mode with external clock\nUSART mode with internal clock\nBit 30 - SCL Low Timeout Enable\nBit 30 - SCL Low Timeout Enable\nBits 2:4 - Operating Mode\nBits 2:4 - Operating Mode\nBit 16 - Pin Usage\nBit 16 - Pin Usage\nBit 7 - Run during Standby\nBit 7 - Run during Standby\nBit 27 - SCL Clock Stretch Mode\nBit 27 - SCL Clock Stretch Mode\nBits 20:21 - SDA Hold Time\nBits 20:21 - SDA Hold Time\nBit 23 - Slave SCL Low Extend Timeout\nBit 23 - Slave SCL Low Extend Timeout\nBits 24:25 - Transfer Speed\nBits 24:25 - Transfer Speed\nSPI mode with internal clock\nSPI mode with external clock\nBit 0 - Software Reset\nBit 0 - Software Reset\nUSART mode with external clock\nUSART mode with internal clock\nGet enumerated values variant\nField <code>AACKEN</code> reader - Automatic Address Acknowledge\nField <code>AACKEN</code> writer - Automatic Address Acknowledge\nField <code>ACKACT</code> reader - Acknowledge Action\nField <code>ACKACT</code> writer - Acknowledge Action\nField <code>AMODE</code> reader - Address Mode\nField <code>AMODE</code> writer - Address Mode\nField <code>CMD</code> writer - Command\nI2CS Control B\nField <code>GCMD</code> reader - PMBus Group Command\nField <code>GCMD</code> writer - PMBus Group Command\nRegister <code>CTRLB</code> reader\nField <code>SMEN</code> reader - Smart Mode Enable\nField <code>SMEN</code> writer - Smart Mode Enable\nRegister <code>CTRLB</code> writer\nBit 10 - Automatic Address Acknowledge\nBit 10 - Automatic Address Acknowledge\nBit 18 - Acknowledge Action\nBit 18 - Acknowledge Action\nBits 14:15 - Address Mode\nBits 14:15 - Address Mode\nBits 16:17 - Command\nReturns the argument unchanged.\nBit 9 - PMBus Group Command\nBit 9 - PMBus Group Command\nCalls <code>U::from(self)</code>.\nBit 8 - Smart Mode Enable\nBit 8 - Smart Mode Enable\nField <code>DATA</code> reader - Data Value\nI2CS Data\nField <code>DATA</code> writer - Data Value\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:7 - Data Value\nBits 0:7 - Data Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>AMATCH</code> reader - Address Match Interrupt Disable\nField <code>AMATCH</code> writer - Address Match Interrupt Disable\nField <code>DRDY</code> reader - Data Interrupt Disable\nField <code>DRDY</code> writer - Data Interrupt Disable\nField <code>ERROR</code> reader - Combined Error Interrupt Disable\nField <code>ERROR</code> writer - Combined Error Interrupt Disable\nI2CS Interrupt Enable Clear\nField <code>PREC</code> reader - Stop Received Interrupt Disable\nField <code>PREC</code> writer - Stop Received Interrupt Disable\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nBit 1 - Address Match Interrupt Disable\nBit 1 - Address Match Interrupt Disable\nBit 2 - Data Interrupt Disable\nBit 2 - Data Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop Received Interrupt Disable\nBit 0 - Stop Received Interrupt Disable\nField <code>AMATCH</code> reader - Address Match Interrupt Enable\nField <code>AMATCH</code> writer - Address Match Interrupt Enable\nField <code>DRDY</code> reader - Data Interrupt Enable\nField <code>DRDY</code> writer - Data Interrupt Enable\nField <code>ERROR</code> reader - Combined Error Interrupt Enable\nField <code>ERROR</code> writer - Combined Error Interrupt Enable\nI2CS Interrupt Enable Set\nField <code>PREC</code> reader - Stop Received Interrupt Enable\nField <code>PREC</code> writer - Stop Received Interrupt Enable\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nBit 1 - Address Match Interrupt Enable\nBit 1 - Address Match Interrupt Enable\nBit 2 - Data Interrupt Enable\nBit 2 - Data Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop Received Interrupt Enable\nBit 0 - Stop Received Interrupt Enable\nField <code>AMATCH</code> reader - Address Match Interrupt\nField <code>AMATCH</code> writer - Address Match Interrupt\nField <code>DRDY</code> reader - Data Interrupt\nField <code>DRDY</code> writer - Data Interrupt\nField <code>ERROR</code> reader - Combined Error Interrupt\nField <code>ERROR</code> writer - Combined Error Interrupt\nI2CS Interrupt Flag Status and Clear\nField <code>PREC</code> reader - Stop Received Interrupt\nField <code>PREC</code> writer - Stop Received Interrupt\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nBit 1 - Address Match Interrupt\nBit 1 - Address Match Interrupt\nBit 2 - Data Interrupt\nBit 2 - Data Interrupt\nBit 7 - Combined Error Interrupt\nBit 7 - Combined Error Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop Received Interrupt\nBit 0 - Stop Received Interrupt\nField <code>BUSERR</code> reader - Bus Error\nField <code>BUSERR</code> writer - Bus Error\nField <code>CLKHOLD</code> reader - Clock Hold\nField <code>COLL</code> reader - Transmit Collision\nField <code>COLL</code> writer - Transmit Collision\nField <code>DIR</code> reader - Read/Write Direction\nField <code>HS</code> reader - High Speed\nField <code>HS</code> writer - High Speed\nField <code>LOWTOUT</code> reader - SCL Low Timeout\nField <code>LOWTOUT</code> writer - SCL Low Timeout\nRegister <code>STATUS</code> reader\nField <code>RXNACK</code> reader - Received Not Acknowledge\nField <code>SEXTTOUT</code> reader - Slave SCL Low Extend Timeout\nField <code>SEXTTOUT</code> writer - Slave SCL Low Extend Timeout\nField <code>SR</code> reader - Repeated Start\nI2CS Status\nRegister <code>STATUS</code> writer\nBit 0 - Bus Error\nBit 0 - Bus Error\nBit 7 - Clock Hold\nBit 1 - Transmit Collision\nBit 1 - Transmit Collision\nBit 3 - Read/Write Direction\nReturns the argument unchanged.\nBit 10 - High Speed\nBit 10 - High Speed\nCalls <code>U::from(self)</code>.\nBit 6 - SCL Low Timeout\nBit 6 - SCL Low Timeout\nBit 2 - Received Not Acknowledge\nBit 9 - Slave SCL Low Extend Timeout\nBit 9 - Slave SCL Low Extend Timeout\nBit 4 - Repeated Start\nField <code>ENABLE</code> reader - SERCOM Enable Synchronization Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchronization Busy\nI2CS Syncbusy\nBit 1 - SERCOM Enable Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Synchronization Busy\nADDR (rw) register accessor: SPI Address\nBAUD (rw) register accessor: SPI Baud Rate\nCTRLA (rw) register accessor: SPI Control A\nCTRLB (rw) register accessor: SPI Control B\nDATA (rw) register accessor: SPI Data\nDBGCTRL (rw) register accessor: SPI Debug Control\nINTENCLR (rw) register accessor: SPI Interrupt Enable Clear\nINTENSET (rw) register accessor: SPI Interrupt Enable Set\nINTFLAG (rw) register accessor: SPI Interrupt Flag Status …\nSPI Mode\nSTATUS (rw) register accessor: SPI Status\nSYNCBUSY (r) register accessor: SPI Syncbusy\nSPI Address\n0x24 - SPI Address\nSPI Baud Rate\n0x0c - SPI Baud Rate\nSPI Control A\n0x00 - SPI Control A\nSPI Control B\n0x04 - SPI Control B\nSPI Data\n0x28 - SPI Data\nSPI Debug Control\n0x30 - SPI Debug Control\nReturns the argument unchanged.\nSPI Interrupt Enable Clear\n0x14 - SPI Interrupt Enable Clear\nSPI Interrupt Enable Set\n0x16 - SPI Interrupt Enable Set\nSPI Interrupt Flag Status and Clear\n0x18 - SPI Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nSPI Status\n0x1a - SPI Status\nSPI Syncbusy\n0x1c - SPI Syncbusy\nField <code>ADDR</code> reader - Address Value\nSPI Address\nField <code>ADDR</code> writer - Address Value\nField <code>ADDRMASK</code> reader - Address Mask\nField <code>ADDRMASK</code> writer - Address Mask\nRegister <code>ADDR</code> reader\nRegister <code>ADDR</code> writer\nBits 0:7 - Address Value\nBits 0:7 - Address Value\nBits 16:23 - Address Mask\nBits 16:23 - Address Mask\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BAUD</code> reader - Baud Rate Value\nSPI Baud Rate\nField <code>BAUD</code> writer - Baud Rate Value\nRegister <code>BAUD</code> reader\nRegister <code>BAUD</code> writer\nBits 0:7 - Baud Rate Value\nBits 0:7 - Baud Rate Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CPHA</code> reader - Clock Phase\nField <code>CPHA</code> writer - Clock Phase\nField <code>CPOL</code> reader - Clock Polarity\nField <code>CPOL</code> writer - Clock Polarity\nSPI Control A\nField <code>DIPO</code> reader - Data In Pinout\nField <code>DIPO</code> writer - Data In Pinout\nField <code>DOPO</code> reader - Data Out Pinout\nField <code>DOPO</code> writer - Data Out Pinout\nField <code>DORD</code> reader - Data Order\nField <code>DORD</code> writer - Data Order\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>FORM</code> reader - Frame Format\nField <code>FORM</code> writer - Frame Format\n5: I2C mode with internal clock\n4: I2C mode with external clock\nField <code>IBON</code> reader - Immediate Buffer Overflow Notification\nField <code>IBON</code> writer - Immediate Buffer Overflow Notification\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run during Standby\nField <code>RUNSTDBY</code> writer - Run during Standby\n3: SPI mode with internal clock\n2: SPI mode with external clock\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\n0: USART mode with external clock\n1: USART mode with internal clock\nRegister <code>CTRLA</code> writer\nBit 28 - Clock Phase\nBit 28 - Clock Phase\nBit 29 - Clock Polarity\nBit 29 - Clock Polarity\nBits 20:21 - Data In Pinout\nBits 20:21 - Data In Pinout\nBits 16:17 - Data Out Pinout\nBits 16:17 - Data Out Pinout\nBit 30 - Data Order\nBit 30 - Data Order\nBit 1 - Enable\nBit 1 - Enable\nBits 24:27 - Frame Format\nBits 24:27 - Frame Format\nReturns the argument unchanged.\nReturns the argument unchanged.\nI2C mode with internal clock\nI2C mode with external clock\nBit 8 - Immediate Buffer Overflow Notification\nBit 8 - Immediate Buffer Overflow Notification\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI2C mode with internal clock\nI2C mode with external clock\nSPI mode with internal clock\nSPI mode with external clock\nUSART mode with external clock\nUSART mode with internal clock\nBits 2:4 - Operating Mode\nBits 2:4 - Operating Mode\nBit 7 - Run during Standby\nBit 7 - Run during Standby\nSPI mode with internal clock\nSPI mode with external clock\nBit 0 - Software Reset\nBit 0 - Software Reset\nUSART mode with external clock\nUSART mode with internal clock\nGet enumerated values variant\nField <code>AMODE</code> reader - Address Mode\nField <code>AMODE</code> writer - Address Mode\nField <code>CHSIZE</code> reader - Character Size\nField <code>CHSIZE</code> writer - Character Size\nSPI Control B\nField <code>MSSEN</code> reader - Master Slave Select Enable\nField <code>MSSEN</code> writer - Master Slave Select Enable\nField <code>PLOADEN</code> reader - Data Preload Enable\nField <code>PLOADEN</code> writer - Data Preload Enable\nRegister <code>CTRLB</code> reader\nField <code>RXEN</code> reader - Receiver Enable\nField <code>RXEN</code> writer - Receiver Enable\nField <code>SSDE</code> reader - Slave Select Low Detect Enable\nField <code>SSDE</code> writer - Slave Select Low Detect Enable\nRegister <code>CTRLB</code> writer\nBits 14:15 - Address Mode\nBits 14:15 - Address Mode\nBits 0:2 - Character Size\nBits 0:2 - Character Size\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 13 - Master Slave Select Enable\nBit 13 - Master Slave Select Enable\nBit 6 - Data Preload Enable\nBit 6 - Data Preload Enable\nBit 17 - Receiver Enable\nBit 17 - Receiver Enable\nBit 9 - Slave Select Low Detect Enable\nBit 9 - Slave Select Low Detect Enable\nField <code>DATA</code> reader - Data Value\nSPI Data\nField <code>DATA</code> writer - Data Value\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:8 - Data Value\nBits 0:8 - Data Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSPI Debug Control\nField <code>DBGSTOP</code> reader - Debug Mode\nField <code>DBGSTOP</code> writer - Debug Mode\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Mode\nBit 0 - Debug Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DRE</code> reader - Data Register Empty Interrupt Disable\nField <code>DRE</code> writer - Data Register Empty Interrupt Disable\nField <code>ERROR</code> reader - Combined Error Interrupt Disable\nField <code>ERROR</code> writer - Combined Error Interrupt Disable\nSPI Interrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>RXC</code> reader - Receive Complete Interrupt Disable\nField <code>RXC</code> writer - Receive Complete Interrupt Disable\nField <code>SSL</code> reader - Slave Select Low Interrupt Disable\nField <code>SSL</code> writer - Slave Select Low Interrupt Disable\nField <code>TXC</code> reader - Transmit Complete Interrupt Disable\nField <code>TXC</code> writer - Transmit Complete Interrupt Disable\nRegister <code>INTENCLR</code> writer\nBit 0 - Data Register Empty Interrupt Disable\nBit 0 - Data Register Empty Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Receive Complete Interrupt Disable\nBit 2 - Receive Complete Interrupt Disable\nBit 3 - Slave Select Low Interrupt Disable\nBit 3 - Slave Select Low Interrupt Disable\nBit 1 - Transmit Complete Interrupt Disable\nBit 1 - Transmit Complete Interrupt Disable\nField <code>DRE</code> reader - Data Register Empty Interrupt Enable\nField <code>DRE</code> writer - Data Register Empty Interrupt Enable\nField <code>ERROR</code> reader - Combined Error Interrupt Enable\nField <code>ERROR</code> writer - Combined Error Interrupt Enable\nSPI Interrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>RXC</code> reader - Receive Complete Interrupt Enable\nField <code>RXC</code> writer - Receive Complete Interrupt Enable\nField <code>SSL</code> reader - Slave Select Low Interrupt Enable\nField <code>SSL</code> writer - Slave Select Low Interrupt Enable\nField <code>TXC</code> reader - Transmit Complete Interrupt Enable\nField <code>TXC</code> writer - Transmit Complete Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 0 - Data Register Empty Interrupt Enable\nBit 0 - Data Register Empty Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Receive Complete Interrupt Enable\nBit 2 - Receive Complete Interrupt Enable\nBit 3 - Slave Select Low Interrupt Enable\nBit 3 - Slave Select Low Interrupt Enable\nBit 1 - Transmit Complete Interrupt Enable\nBit 1 - Transmit Complete Interrupt Enable\nField <code>DRE</code> reader - Data Register Empty Interrupt\nField <code>ERROR</code> reader - Combined Error Interrupt\nField <code>ERROR</code> writer - Combined Error Interrupt\nSPI Interrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>RXC</code> reader - Receive Complete Interrupt\nField <code>SSL</code> reader - Slave Select Low Interrupt Flag\nField <code>SSL</code> writer - Slave Select Low Interrupt Flag\nField <code>TXC</code> reader - Transmit Complete Interrupt\nField <code>TXC</code> writer - Transmit Complete Interrupt\nRegister <code>INTFLAG</code> writer\nBit 0 - Data Register Empty Interrupt\nBit 7 - Combined Error Interrupt\nBit 7 - Combined Error Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Receive Complete Interrupt\nBit 3 - Slave Select Low Interrupt Flag\nBit 3 - Slave Select Low Interrupt Flag\nBit 1 - Transmit Complete Interrupt\nBit 1 - Transmit Complete Interrupt\nField <code>BUFOVF</code> reader - Buffer Overflow\nField <code>BUFOVF</code> writer - Buffer Overflow\nRegister <code>STATUS</code> reader\nSPI Status\nRegister <code>STATUS</code> writer\nBit 2 - Buffer Overflow\nBit 2 - Buffer Overflow\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CTRLB</code> reader - CTRLB Synchronization Busy\nField <code>ENABLE</code> reader - SERCOM Enable Synchronization Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchronization Busy\nSPI Syncbusy\nBit 2 - CTRLB Synchronization Busy\nBit 1 - SERCOM Enable Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Synchronization Busy\nBAUD (rw) register accessor: USART Baud Rate\nBAUD_FRAC_MODE (rw) register accessor: USART Baud Rate\nBAUD_FRACFP_MODE (rw) register accessor: USART Baud Rate\nBAUD_USARTFP_MODE (rw) register accessor: USART Baud Rate\nCTRLA (rw) register accessor: USART Control A\nCTRLB (rw) register accessor: USART Control B\nDATA (rw) register accessor: USART Data\nDBGCTRL (rw) register accessor: USART Debug Control\nINTENCLR (rw) register accessor: USART Interrupt Enable …\nINTENSET (rw) register accessor: USART Interrupt Enable Set\nINTFLAG (rw) register accessor: USART Interrupt Flag …\nRXPL (rw) register accessor: USART Receive Pulse Length\nSTATUS (rw) register accessor: USART Status\nSYNCBUSY (r) register accessor: USART Syncbusy\nUSART Mode\nUSART Baud Rate\n0x0c - USART Baud Rate\nUSART Baud Rate\n0x0c - USART Baud Rate\nUSART Baud Rate\n0x0c - USART Baud Rate\nUSART Baud Rate\n0x0c - USART Baud Rate\nUSART Control A\n0x00 - USART Control A\nUSART Control B\n0x04 - USART Control B\nUSART Data\n0x28 - USART Data\nUSART Debug Control\n0x30 - USART Debug Control\nReturns the argument unchanged.\nUSART Interrupt Enable Clear\n0x14 - USART Interrupt Enable Clear\nUSART Interrupt Enable Set\n0x16 - USART Interrupt Enable Set\nUSART Interrupt Flag Status and Clear\n0x18 - USART Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nUSART Receive Pulse Length\n0x0e - USART Receive Pulse Length\nUSART Status\n0x1a - USART Status\nUSART Syncbusy\n0x1c - USART Syncbusy\nField <code>BAUD</code> reader - Baud Rate Value\nUSART Baud Rate\nField <code>BAUD</code> writer - Baud Rate Value\nRegister <code>BAUD</code> reader\nRegister <code>BAUD</code> writer\nBits 0:15 - Baud Rate Value\nBits 0:15 - Baud Rate Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUSART Baud Rate\nField <code>BAUD</code> reader - Baud Rate Value\nField <code>BAUD</code> writer - Baud Rate Value\nField <code>FP</code> reader - Fractional Part\nField <code>FP</code> writer - Fractional Part\nRegister <code>BAUD_FRAC_MODE</code> reader\nRegister <code>BAUD_FRAC_MODE</code> writer\nBits 0:12 - Baud Rate Value\nBits 0:12 - Baud Rate Value\nBits 13:15 - Fractional Part\nBits 13:15 - Fractional Part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUSART Baud Rate\nField <code>BAUD</code> reader - Baud Rate Value\nField <code>BAUD</code> writer - Baud Rate Value\nField <code>FP</code> reader - Fractional Part\nField <code>FP</code> writer - Fractional Part\nRegister <code>BAUD_FRACFP_MODE</code> reader\nRegister <code>BAUD_FRACFP_MODE</code> writer\nBits 0:12 - Baud Rate Value\nBits 0:12 - Baud Rate Value\nBits 13:15 - Fractional Part\nBits 13:15 - Fractional Part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BAUD</code> reader - Baud Rate Value\nUSART Baud Rate\nField <code>BAUD</code> writer - Baud Rate Value\nRegister <code>BAUD_USARTFP_MODE</code> reader\nRegister <code>BAUD_USARTFP_MODE</code> writer\nBits 0:15 - Baud Rate Value\nBits 0:15 - Baud Rate Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMODE</code> reader - Communication Mode\nField <code>CMODE</code> writer - Communication Mode\nField <code>CPOL</code> reader - Clock Polarity\nField <code>CPOL</code> writer - Clock Polarity\nUSART Control A\nField <code>DORD</code> reader - Data Order\nField <code>DORD</code> writer - Data Order\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>FORM</code> reader - Frame Format\nField <code>FORM</code> writer - Frame Format\n5: I2C mode with internal clock\n4: I2C mode with external clock\nField <code>IBON</code> reader - Immediate Buffer Overflow Notification\nField <code>IBON</code> writer - Immediate Buffer Overflow Notification\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run during Standby\nField <code>RUNSTDBY</code> writer - Run during Standby\nField <code>RXPO</code> reader - Receive Data Pinout\nField <code>RXPO</code> writer - Receive Data Pinout\nField <code>SAMPA</code> reader - Sample Adjustment\nField <code>SAMPA</code> writer - Sample Adjustment\nField <code>SAMPR</code> reader - Sample\nField <code>SAMPR</code> writer - Sample\n3: SPI mode with internal clock\n2: SPI mode with external clock\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nField <code>TXPO</code> reader - Transmit Data Pinout\nField <code>TXPO</code> writer - Transmit Data Pinout\n0: USART mode with external clock\n1: USART mode with internal clock\nRegister <code>CTRLA</code> writer\nBit 28 - Communication Mode\nBit 28 - Communication Mode\nBit 29 - Clock Polarity\nBit 29 - Clock Polarity\nBit 30 - Data Order\nBit 30 - Data Order\nBit 1 - Enable\nBit 1 - Enable\nBits 24:27 - Frame Format\nBits 24:27 - Frame Format\nReturns the argument unchanged.\nReturns the argument unchanged.\nI2C mode with internal clock\nI2C mode with external clock\nBit 8 - Immediate Buffer Overflow Notification\nBit 8 - Immediate Buffer Overflow Notification\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI2C mode with internal clock\nI2C mode with external clock\nSPI mode with internal clock\nSPI mode with external clock\nUSART mode with external clock\nUSART mode with internal clock\nBits 2:4 - Operating Mode\nBits 2:4 - Operating Mode\nBit 7 - Run during Standby\nBit 7 - Run during Standby\nBits 20:21 - Receive Data Pinout\nBits 20:21 - Receive Data Pinout\nBits 22:23 - Sample Adjustment\nBits 22:23 - Sample Adjustment\nBits 13:15 - Sample\nBits 13:15 - Sample\nSPI mode with internal clock\nSPI mode with external clock\nBit 0 - Software Reset\nBit 0 - Software Reset\nBits 16:17 - Transmit Data Pinout\nBits 16:17 - Transmit Data Pinout\nUSART mode with external clock\nUSART mode with internal clock\nGet enumerated values variant\nField <code>CHSIZE</code> reader - Character Size\nField <code>CHSIZE</code> writer - Character Size\nField <code>COLDEN</code> reader - Collision Detection Enable\nField <code>COLDEN</code> writer - Collision Detection Enable\nUSART Control B\nField <code>ENC</code> reader - Encoding Format\nField <code>ENC</code> writer - Encoding Format\nField <code>PMODE</code> reader - Parity Mode\nField <code>PMODE</code> writer - Parity Mode\nRegister <code>CTRLB</code> reader\nField <code>RXEN</code> reader - Receiver Enable\nField <code>RXEN</code> writer - Receiver Enable\nField <code>SBMODE</code> reader - Stop Bit Mode\nField <code>SBMODE</code> writer - Stop Bit Mode\nField <code>SFDE</code> reader - Start of Frame Detection Enable\nField <code>SFDE</code> writer - Start of Frame Detection Enable\nField <code>TXEN</code> reader - Transmitter Enable\nField <code>TXEN</code> writer - Transmitter Enable\nRegister <code>CTRLB</code> writer\nBits 0:2 - Character Size\nBits 0:2 - Character Size\nBit 8 - Collision Detection Enable\nBit 8 - Collision Detection Enable\nBit 10 - Encoding Format\nBit 10 - Encoding Format\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 13 - Parity Mode\nBit 13 - Parity Mode\nBit 17 - Receiver Enable\nBit 17 - Receiver Enable\nBit 6 - Stop Bit Mode\nBit 6 - Stop Bit Mode\nBit 9 - Start of Frame Detection Enable\nBit 9 - Start of Frame Detection Enable\nBit 16 - Transmitter Enable\nBit 16 - Transmitter Enable\nField <code>DATA</code> reader - Data Value\nUSART Data\nField <code>DATA</code> writer - Data Value\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:8 - Data Value\nBits 0:8 - Data Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUSART Debug Control\nField <code>DBGSTOP</code> reader - Debug Mode\nField <code>DBGSTOP</code> writer - Debug Mode\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Mode\nBit 0 - Debug Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CTSIC</code> reader - Clear To Send Input Change Interrupt …\nField <code>CTSIC</code> writer - Clear To Send Input Change Interrupt …\nField <code>DRE</code> reader - Data Register Empty Interrupt Disable\nField <code>DRE</code> writer - Data Register Empty Interrupt Disable\nField <code>ERROR</code> reader - Combined Error Interrupt Disable\nField <code>ERROR</code> writer - Combined Error Interrupt Disable\nUSART Interrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>RXBRK</code> reader - Break Received Interrupt Disable\nField <code>RXBRK</code> writer - Break Received Interrupt Disable\nField <code>RXC</code> reader - Receive Complete Interrupt Disable\nField <code>RXC</code> writer - Receive Complete Interrupt Disable\nField <code>RXS</code> reader - Receive Start Interrupt Disable\nField <code>RXS</code> writer - Receive Start Interrupt Disable\nField <code>TXC</code> reader - Transmit Complete Interrupt Disable\nField <code>TXC</code> writer - Transmit Complete Interrupt Disable\nRegister <code>INTENCLR</code> writer\nBit 4 - Clear To Send Input Change Interrupt Disable\nBit 4 - Clear To Send Input Change Interrupt Disable\nBit 0 - Data Register Empty Interrupt Disable\nBit 0 - Data Register Empty Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 5 - Break Received Interrupt Disable\nBit 5 - Break Received Interrupt Disable\nBit 2 - Receive Complete Interrupt Disable\nBit 2 - Receive Complete Interrupt Disable\nBit 3 - Receive Start Interrupt Disable\nBit 3 - Receive Start Interrupt Disable\nBit 1 - Transmit Complete Interrupt Disable\nBit 1 - Transmit Complete Interrupt Disable\nField <code>CTSIC</code> reader - Clear To Send Input Change Interrupt …\nField <code>CTSIC</code> writer - Clear To Send Input Change Interrupt …\nField <code>DRE</code> reader - Data Register Empty Interrupt Enable\nField <code>DRE</code> writer - Data Register Empty Interrupt Enable\nField <code>ERROR</code> reader - Combined Error Interrupt Enable\nField <code>ERROR</code> writer - Combined Error Interrupt Enable\nUSART Interrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>RXBRK</code> reader - Break Received Interrupt Enable\nField <code>RXBRK</code> writer - Break Received Interrupt Enable\nField <code>RXC</code> reader - Receive Complete Interrupt Enable\nField <code>RXC</code> writer - Receive Complete Interrupt Enable\nField <code>RXS</code> reader - Receive Start Interrupt Enable\nField <code>RXS</code> writer - Receive Start Interrupt Enable\nField <code>TXC</code> reader - Transmit Complete Interrupt Enable\nField <code>TXC</code> writer - Transmit Complete Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 4 - Clear To Send Input Change Interrupt Enable\nBit 4 - Clear To Send Input Change Interrupt Enable\nBit 0 - Data Register Empty Interrupt Enable\nBit 0 - Data Register Empty Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 5 - Break Received Interrupt Enable\nBit 5 - Break Received Interrupt Enable\nBit 2 - Receive Complete Interrupt Enable\nBit 2 - Receive Complete Interrupt Enable\nBit 3 - Receive Start Interrupt Enable\nBit 3 - Receive Start Interrupt Enable\nBit 1 - Transmit Complete Interrupt Enable\nBit 1 - Transmit Complete Interrupt Enable\nField <code>CTSIC</code> reader - Clear To Send Input Change Interrupt\nField <code>CTSIC</code> writer - Clear To Send Input Change Interrupt\nField <code>DRE</code> reader - Data Register Empty Interrupt\nField <code>ERROR</code> reader - Combined Error Interrupt\nField <code>ERROR</code> writer - Combined Error Interrupt\nUSART Interrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>RXBRK</code> reader - Break Received Interrupt\nField <code>RXBRK</code> writer - Break Received Interrupt\nField <code>RXC</code> reader - Receive Complete Interrupt\nField <code>RXS</code> writer - Receive Start Interrupt\nField <code>TXC</code> reader - Transmit Complete Interrupt\nField <code>TXC</code> writer - Transmit Complete Interrupt\nRegister <code>INTFLAG</code> writer\nBit 4 - Clear To Send Input Change Interrupt\nBit 4 - Clear To Send Input Change Interrupt\nBit 0 - Data Register Empty Interrupt\nBit 7 - Combined Error Interrupt\nBit 7 - Combined Error Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 5 - Break Received Interrupt\nBit 5 - Break Received Interrupt\nBit 2 - Receive Complete Interrupt\nBit 3 - Receive Start Interrupt\nBit 1 - Transmit Complete Interrupt\nBit 1 - Transmit Complete Interrupt\nRegister <code>RXPL</code> reader\nField <code>RXPL</code> reader - Receive Pulse Length\nUSART Receive Pulse Length\nField <code>RXPL</code> writer - Receive Pulse Length\nRegister <code>RXPL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Receive Pulse Length\nBits 0:7 - Receive Pulse Length\nField <code>BUFOVF</code> reader - Buffer Overflow\nField <code>BUFOVF</code> writer - Buffer Overflow\nField <code>COLL</code> reader - Collision Detected\nField <code>COLL</code> writer - Collision Detected\nField <code>CTS</code> reader - Clear To Send\nField <code>FERR</code> reader - Frame Error\nField <code>FERR</code> writer - Frame Error\nField <code>ISF</code> reader - Inconsistent Sync Field\nField <code>ISF</code> writer - Inconsistent Sync Field\nField <code>PERR</code> reader - Parity Error\nField <code>PERR</code> writer - Parity Error\nRegister <code>STATUS</code> reader\nUSART Status\nRegister <code>STATUS</code> writer\nBit 2 - Buffer Overflow\nBit 2 - Buffer Overflow\nBit 5 - Collision Detected\nBit 5 - Collision Detected\nBit 3 - Clear To Send\nBit 1 - Frame Error\nBit 1 - Frame Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Inconsistent Sync Field\nBit 4 - Inconsistent Sync Field\nBit 0 - Parity Error\nBit 0 - Parity Error\nField <code>CTRLB</code> reader - CTRLB Synchronization Busy\nField <code>ENABLE</code> reader - SERCOM Enable Synchronization Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchronization Busy\nUSART Syncbusy\nBit 2 - CTRLB Synchronization Busy\nBit 1 - SERCOM Enable Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Synchronization Busy\nBOD33 (rw) register accessor: 3.3V Brown-Out Detector …\nDFLLCTRL (rw) register accessor: DFLL48M Control\nDFLLMUL (rw) register accessor: DFLL48M Multiplier\nDFLLSYNC (rw) register accessor: DFLL48M Synchronization\nDFLLVAL (rw) register accessor: DFLL48M Value\nDPLLCTRLA (rw) register accessor: DPLL Control A\nDPLLCTRLB (rw) register accessor: DPLL Control B\nDPLLRATIO (rw) register accessor: DPLL Ratio Control\nDPLLSTATUS (r) register accessor: DPLL Status\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nOSC32K (rw) register accessor: 32kHz Internal Oscillator …\nOSC8M (rw) register accessor: 8MHz Internal Oscillator …\nOSCULP32K (rw) register accessor: 32kHz Ultra Low Power …\nPCLKSR (r) register accessor: Power and Clocks Status\nRegister block\nVREF (rw) register accessor: Voltage References System …\nVREG (rw) register accessor: Voltage Regulator System …\nXOSC (rw) register accessor: External Multipurpose Crystal …\nXOSC32K (rw) register accessor: 32kHz External Crystal …\n3.3V Brown-Out Detector (BOD33) Control\n0x34 - 3.3V Brown-Out Detector (BOD33) Control\nDFLL48M Control\n0x24 - DFLL48M Control\nDFLL48M Multiplier\n0x2c - DFLL48M Multiplier\nDFLL48M Synchronization\n0x30 - DFLL48M Synchronization\nDFLL48M Value\n0x28 - DFLL48M Value\nDPLL Control A\n0x44 - DPLL Control A\nDPLL Control B\n0x4c - DPLL Control B\nDPLL Ratio Control\n0x48 - DPLL Ratio Control\nDPLL Status\n0x50 - DPLL Status\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x00 - Interrupt Enable Clear\nInterrupt Enable Set\n0x04 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x08 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\n32kHz Internal Oscillator (OSC32K) Control\n0x18 - 32kHz Internal Oscillator (OSC32K) Control\n8MHz Internal Oscillator (OSC8M) Control\n0x20 - 8MHz Internal Oscillator (OSC8M) Control\n32kHz Ultra Low Power Internal Oscillator (OSCULP32K) …\n0x1c - 32kHz Ultra Low Power Internal Oscillator …\nPower and Clocks Status\n0x0c - Power and Clocks Status\nVoltage References System (VREF) Control\n0x40 - Voltage References System (VREF) Control\nVoltage Regulator System (VREG) Control\n0x3c - Voltage Regulator System (VREG) Control\nExternal Multipurpose Crystal Oscillator (XOSC) Control\n0x10 - External Multipurpose Crystal Oscillator (XOSC) …\n32kHz External Crystal Oscillator (XOSC32K) Control\n0x14 - 32kHz External Crystal Oscillator (XOSC32K) Control\nField <code>ACTION</code> reader - BOD33 Action\nField <code>ACTION</code> writer - BOD33 Action\nBOD33 Action\n3.3V Brown-Out Detector (BOD33) Control\nField <code>CEN</code> reader - Clock Enable\nField <code>CEN</code> writer - Clock Enable\n6: Divide clock by 128\n3: Divide clock by 16\n13: Divide clock by 16384\n9: Divide clock by 1024\n0: Divide clock by 2\n7: Divide clock by 256\n10: Divide clock by 2048\n4: Divide clock by 32\n14: Divide clock by 32768\n1: Divide clock by 4\n11: Divide clock by 4096\n8: Divide clock by 512\n5: Divide clock by 64\n15: Divide clock by 65536\n2: Divide clock by 8\n12: Divide clock by 8192\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>HYST</code> reader - Hysteresis\nField <code>HYST</code> writer - Hysteresis\n2: The BOD33 generates an interrupt\nField <code>LEVEL</code> reader - BOD33 Threshold Level\nField <code>LEVEL</code> writer - BOD33 Threshold Level\nField <code>MODE</code> reader - Operation Mode\nField <code>MODE</code> writer - Operation Mode\n0: No action\nField <code>PSEL</code> reader - Prescaler Select\nField <code>PSEL</code> writer - Prescaler Select\nPrescaler Select\nRegister <code>BOD33</code> reader\n1: The BOD33 generates a reset\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nRegister <code>BOD33</code> writer\nBits 3:4 - BOD33 Action\nBits 3:4 - BOD33 Action\nBit 9 - Clock Enable\nBit 9 - Clock Enable\nDivide clock by 128\nDivide clock by 16\nDivide clock by 16384\nDivide clock by 1024\nDivide clock by 2\nDivide clock by 256\nDivide clock by 2048\nDivide clock by 32\nDivide clock by 32768\nDivide clock by 4\nDivide clock by 4096\nDivide clock by 512\nDivide clock by 64\nDivide clock by 65536\nDivide clock by 8\nDivide clock by 8192\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 2 - Hysteresis\nBit 2 - Hysteresis\nThe BOD33 generates an interrupt\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDivide clock by 128\nDivide clock by 16\nDivide clock by 16384\nDivide clock by 1024\nDivide clock by 2\nDivide clock by 256\nDivide clock by 2048\nDivide clock by 32\nDivide clock by 32768\nDivide clock by 4\nDivide clock by 4096\nDivide clock by 512\nDivide clock by 64\nDivide clock by 65536\nDivide clock by 8\nDivide clock by 8192\nThe BOD33 generates an interrupt\nNo action\nThe BOD33 generates a reset\nBits 16:21 - BOD33 Threshold Level\nBits 16:21 - BOD33 Threshold Level\nBit 8 - Operation Mode\nBit 8 - Operation Mode\nNo action\nBits 12:15 - Prescaler Select\nBits 12:15 - Prescaler Select\nThe BOD33 generates a reset\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nGet enumerated values variant\nGet enumerated values variant\nField <code>BPLCKC</code> reader - Bypass Coarse Lock\nField <code>BPLCKC</code> writer - Bypass Coarse Lock\nField <code>CCDIS</code> reader - Chill Cycle Disable\nField <code>CCDIS</code> writer - Chill Cycle Disable\nDFLL48M Control\nField <code>ENABLE</code> reader - DFLL Enable\nField <code>ENABLE</code> writer - DFLL Enable\nField <code>LLAW</code> reader - Lose Lock After Wake\nField <code>LLAW</code> writer - Lose Lock After Wake\nField <code>MODE</code> reader - Operating Mode Selection\nField <code>MODE</code> writer - Operating Mode Selection\nField <code>ONDEMAND</code> reader - On Demand Control\nField <code>ONDEMAND</code> writer - On Demand Control\nField <code>QLDIS</code> reader - Quick Lock Disable\nField <code>QLDIS</code> writer - Quick Lock Disable\nRegister <code>DFLLCTRL</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>STABLE</code> reader - Stable DFLL Frequency\nField <code>STABLE</code> writer - Stable DFLL Frequency\nField <code>USBCRM</code> reader - USB Clock Recovery Mode\nField <code>USBCRM</code> writer - USB Clock Recovery Mode\nRegister <code>DFLLCTRL</code> writer\nField <code>WAITLOCK</code> reader - Wait Lock\nField <code>WAITLOCK</code> writer - Wait Lock\nBit 10 - Bypass Coarse Lock\nBit 10 - Bypass Coarse Lock\nBit 8 - Chill Cycle Disable\nBit 8 - Chill Cycle Disable\nBit 1 - DFLL Enable\nBit 1 - DFLL Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Lose Lock After Wake\nBit 4 - Lose Lock After Wake\nBit 2 - Operating Mode Selection\nBit 2 - Operating Mode Selection\nBit 7 - On Demand Control\nBit 7 - On Demand Control\nBit 9 - Quick Lock Disable\nBit 9 - Quick Lock Disable\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nBit 3 - Stable DFLL Frequency\nBit 3 - Stable DFLL Frequency\nBit 5 - USB Clock Recovery Mode\nBit 5 - USB Clock Recovery Mode\nBit 11 - Wait Lock\nBit 11 - Wait Lock\nField <code>CSTEP</code> reader - Coarse Maximum Step\nField <code>CSTEP</code> writer - Coarse Maximum Step\nDFLL48M Multiplier\nField <code>FSTEP</code> reader - Fine Maximum Step\nField <code>FSTEP</code> writer - Fine Maximum Step\nField <code>MUL</code> reader - DFLL Multiply Factor\nField <code>MUL</code> writer - DFLL Multiply Factor\nRegister <code>DFLLMUL</code> reader\nRegister <code>DFLLMUL</code> writer\nBits 26:31 - Coarse Maximum Step\nBits 26:31 - Coarse Maximum Step\nReturns the argument unchanged.\nBits 16:25 - Fine Maximum Step\nBits 16:25 - Fine Maximum Step\nCalls <code>U::from(self)</code>.\nBits 0:15 - DFLL Multiply Factor\nBits 0:15 - DFLL Multiply Factor\nDFLL48M Synchronization\nRegister <code>DFLLSYNC</code> reader\nField <code>READREQ</code> writer - Read Request\nRegister <code>DFLLSYNC</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Read Request\nField <code>COARSE</code> reader - Coarse Value\nField <code>COARSE</code> writer - Coarse Value\nDFLL48M Value\nField <code>DIFF</code> reader - Multiplication Ratio Difference\nField <code>FINE</code> reader - Fine Value\nField <code>FINE</code> writer - Fine Value\nRegister <code>DFLLVAL</code> reader\nRegister <code>DFLLVAL</code> writer\nBits 10:15 - Coarse Value\nBits 10:15 - Coarse Value\nBits 16:31 - Multiplication Ratio Difference\nBits 0:9 - Fine Value\nBits 0:9 - Fine Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDPLL Control A\nField <code>ENABLE</code> reader - DPLL Enable\nField <code>ENABLE</code> writer - DPLL Enable\nField <code>ONDEMAND</code> reader - On Demand Clock Activation\nField <code>ONDEMAND</code> writer - On Demand Clock Activation\nRegister <code>DPLLCTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nRegister <code>DPLLCTRLA</code> writer\nBit 1 - DPLL Enable\nBit 1 - DPLL Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - On Demand Clock Activation\nBit 7 - On Demand Clock Activation\nBit 6 - Run in Standby\nBit 6 - Run in Standby\n0: Default filter mode\n0: No time-out\nField <code>DIV</code> reader - Clock Divider\nField <code>DIV</code> writer - Clock Divider\nDPLL Control B\nField <code>FILTER</code> reader - Proportional Integral Filter …\nField <code>FILTER</code> writer - Proportional Integral Filter …\nProportional Integral Filter Selection\n2: GCLK_DPLL clock reference\n2: High bandwidth filter\n3: High damping filter\n1: Low bandwidth filter\nField <code>LBYPASS</code> reader - Lock Bypass\nField <code>LBYPASS</code> writer - Lock Bypass\nField <code>LPEN</code> reader - Low-Power Enable\nField <code>LPEN</code> writer - Low-Power Enable\nField <code>LTIME</code> reader - Lock Time\nField <code>LTIME</code> writer - Lock Time\nLock Time\nRegister <code>DPLLCTRLB</code> reader\n0: CLK_DPLL_REF0 clock reference\n1: CLK_DPLL_REF1 clock reference\nField <code>REFCLK</code> reader - Reference Clock Selection\nField <code>REFCLK</code> writer - Reference Clock Selection\nReference Clock Selection\nRegister <code>DPLLCTRLB</code> writer\nField <code>WUF</code> reader - Wake Up Fast\nField <code>WUF</code> writer - Wake Up Fast\nTime-out if no lock within 10 ms\n6: Time-out if no lock within 10 ms\nTime-out if no lock within 11 ms\n7: Time-out if no lock within 11 ms\nTime-out if no lock within 8 ms\n4: Time-out if no lock within 8 ms\nTime-out if no lock within 9 ms\n5: Time-out if no lock within 9 ms\nDefault filter mode\nNo time-out\nBits 16:26 - Clock Divider\nBits 16:26 - Clock Divider\nBits 0:1 - Proportional Integral Filter Selection\nBits 0:1 - Proportional Integral Filter Selection\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGCLK_DPLL clock reference\nHigh bandwidth filter\nHigh damping filter\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTime-out if no lock within 10 ms\nTime-out if no lock within 11 ms\nTime-out if no lock within 8 ms\nTime-out if no lock within 9 ms\nDefault filter mode\nNo time-out\nGCLK_DPLL clock reference\nHigh bandwidth filter\nHigh damping filter\nLow bandwidth filter\nCLK_DPLL_REF0 clock reference\nCLK_DPLL_REF1 clock reference\nLow bandwidth filter\nBit 12 - Lock Bypass\nBit 12 - Lock Bypass\nBit 2 - Low-Power Enable\nBit 2 - Low-Power Enable\nBits 8:10 - Lock Time\nBits 8:10 - Lock Time\nCLK_DPLL_REF0 clock reference\nCLK_DPLL_REF1 clock reference\nBits 4:5 - Reference Clock Selection\nBits 4:5 - Reference Clock Selection\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBit 3 - Wake Up Fast\nBit 3 - Wake Up Fast\nDPLL Ratio Control\nField <code>LDR</code> reader - Loop Divider Ratio\nField <code>LDR</code> writer - Loop Divider Ratio\nField <code>LDRFRAC</code> reader - Loop Divider Ratio Fractional Part\nField <code>LDRFRAC</code> writer - Loop Divider Ratio Fractional Part\nRegister <code>DPLLRATIO</code> reader\nRegister <code>DPLLRATIO</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:11 - Loop Divider Ratio\nBits 0:11 - Loop Divider Ratio\nBits 16:19 - Loop Divider Ratio Fractional Part\nBits 16:19 - Loop Divider Ratio Fractional Part\nField <code>CLKRDY</code> reader - Output Clock Ready\nField <code>DIV</code> reader - Divider Enable\nDPLL Status\nField <code>ENABLE</code> reader - DPLL Enable\nField <code>LOCK</code> reader - DPLL Lock Status\nRegister <code>DPLLSTATUS</code> reader\nBit 1 - Output Clock Ready\nBit 3 - Divider Enable\nBit 2 - DPLL Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - DPLL Lock Status\nField <code>B33SRDY</code> reader - BOD33 Synchronization Ready …\nField <code>B33SRDY</code> writer - BOD33 Synchronization Ready …\nField <code>BOD33DET</code> reader - BOD33 Detection Interrupt Enable\nField <code>BOD33DET</code> writer - BOD33 Detection Interrupt Enable\nField <code>BOD33RDY</code> reader - BOD33 Ready Interrupt Enable\nField <code>BOD33RDY</code> writer - BOD33 Ready Interrupt Enable\nField <code>DFLLLCKC</code> reader - DFLL Lock Coarse Interrupt Enable\nField <code>DFLLLCKC</code> writer - DFLL Lock Coarse Interrupt Enable\nField <code>DFLLLCKF</code> reader - DFLL Lock Fine Interrupt Enable\nField <code>DFLLLCKF</code> writer - DFLL Lock Fine Interrupt Enable\nField <code>DFLLOOB</code> reader - DFLL Out Of Bounds Interrupt Enable\nField <code>DFLLOOB</code> writer - DFLL Out Of Bounds Interrupt Enable\nField <code>DFLLRCS</code> reader - DFLL Reference Clock Stopped …\nField <code>DFLLRCS</code> writer - DFLL Reference Clock Stopped …\nField <code>DFLLRDY</code> reader - DFLL Ready Interrupt Enable\nField <code>DFLLRDY</code> writer - DFLL Ready Interrupt Enable\nField <code>DPLLLCKF</code> reader - DPLL Lock Fall Interrupt Enable\nField <code>DPLLLCKF</code> writer - DPLL Lock Fall Interrupt Enable\nField <code>DPLLLCKR</code> reader - DPLL Lock Rise Interrupt Enable\nField <code>DPLLLCKR</code> writer - DPLL Lock Rise Interrupt Enable\nField <code>DPLLLTO</code> reader - DPLL Lock Timeout Interrupt Enable\nField <code>DPLLLTO</code> writer - DPLL Lock Timeout Interrupt Enable\nInterrupt Enable Clear\nField <code>OSC32KRDY</code> reader - OSC32K Ready Interrupt Enable\nField <code>OSC32KRDY</code> writer - OSC32K Ready Interrupt Enable\nField <code>OSC8MRDY</code> reader - OSC8M Ready Interrupt Enable\nField <code>OSC8MRDY</code> writer - OSC8M Ready Interrupt Enable\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nField <code>XOSC32KRDY</code> reader - XOSC32K Ready Interrupt Enable\nField <code>XOSC32KRDY</code> writer - XOSC32K Ready Interrupt Enable\nField <code>XOSCRDY</code> reader - XOSC Ready Interrupt Enable\nField <code>XOSCRDY</code> writer - XOSC Ready Interrupt Enable\nBit 11 - BOD33 Synchronization Ready Interrupt Enable\nBit 11 - BOD33 Synchronization Ready Interrupt Enable\nBit 10 - BOD33 Detection Interrupt Enable\nBit 10 - BOD33 Detection Interrupt Enable\nBit 9 - BOD33 Ready Interrupt Enable\nBit 9 - BOD33 Ready Interrupt Enable\nBit 7 - DFLL Lock Coarse Interrupt Enable\nBit 7 - DFLL Lock Coarse Interrupt Enable\nBit 6 - DFLL Lock Fine Interrupt Enable\nBit 6 - DFLL Lock Fine Interrupt Enable\nBit 5 - DFLL Out Of Bounds Interrupt Enable\nBit 5 - DFLL Out Of Bounds Interrupt Enable\nBit 8 - DFLL Reference Clock Stopped Interrupt Enable\nBit 8 - DFLL Reference Clock Stopped Interrupt Enable\nBit 4 - DFLL Ready Interrupt Enable\nBit 4 - DFLL Ready Interrupt Enable\nBit 16 - DPLL Lock Fall Interrupt Enable\nBit 16 - DPLL Lock Fall Interrupt Enable\nBit 15 - DPLL Lock Rise Interrupt Enable\nBit 15 - DPLL Lock Rise Interrupt Enable\nBit 17 - DPLL Lock Timeout Interrupt Enable\nBit 17 - DPLL Lock Timeout Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - OSC32K Ready Interrupt Enable\nBit 2 - OSC32K Ready Interrupt Enable\nBit 3 - OSC8M Ready Interrupt Enable\nBit 3 - OSC8M Ready Interrupt Enable\nBit 1 - XOSC32K Ready Interrupt Enable\nBit 1 - XOSC32K Ready Interrupt Enable\nBit 0 - XOSC Ready Interrupt Enable\nBit 0 - XOSC Ready Interrupt Enable\nField <code>B33SRDY</code> reader - BOD33 Synchronization Ready …\nField <code>B33SRDY</code> writer - BOD33 Synchronization Ready …\nField <code>BOD33DET</code> reader - BOD33 Detection Interrupt Enable\nField <code>BOD33DET</code> writer - BOD33 Detection Interrupt Enable\nField <code>BOD33RDY</code> reader - BOD33 Ready Interrupt Enable\nField <code>BOD33RDY</code> writer - BOD33 Ready Interrupt Enable\nField <code>DFLLLCKC</code> reader - DFLL Lock Coarse Interrupt Enable\nField <code>DFLLLCKC</code> writer - DFLL Lock Coarse Interrupt Enable\nField <code>DFLLLCKF</code> reader - DFLL Lock Fine Interrupt Enable\nField <code>DFLLLCKF</code> writer - DFLL Lock Fine Interrupt Enable\nField <code>DFLLOOB</code> reader - DFLL Out Of Bounds Interrupt Enable\nField <code>DFLLOOB</code> writer - DFLL Out Of Bounds Interrupt Enable\nField <code>DFLLRCS</code> reader - DFLL Reference Clock Stopped …\nField <code>DFLLRCS</code> writer - DFLL Reference Clock Stopped …\nField <code>DFLLRDY</code> reader - DFLL Ready Interrupt Enable\nField <code>DFLLRDY</code> writer - DFLL Ready Interrupt Enable\nField <code>DPLLLCKF</code> reader - DPLL Lock Fall Interrupt Enable\nField <code>DPLLLCKF</code> writer - DPLL Lock Fall Interrupt Enable\nField <code>DPLLLCKR</code> reader - DPLL Lock Rise Interrupt Enable\nField <code>DPLLLCKR</code> writer - DPLL Lock Rise Interrupt Enable\nField <code>DPLLLTO</code> reader - DPLL Lock Timeout Interrupt Enable\nField <code>DPLLLTO</code> writer - DPLL Lock Timeout Interrupt Enable\nInterrupt Enable Set\nField <code>OSC32KRDY</code> reader - OSC32K Ready Interrupt Enable\nField <code>OSC32KRDY</code> writer - OSC32K Ready Interrupt Enable\nField <code>OSC8MRDY</code> reader - OSC8M Ready Interrupt Enable\nField <code>OSC8MRDY</code> writer - OSC8M Ready Interrupt Enable\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nField <code>XOSC32KRDY</code> reader - XOSC32K Ready Interrupt Enable\nField <code>XOSC32KRDY</code> writer - XOSC32K Ready Interrupt Enable\nField <code>XOSCRDY</code> reader - XOSC Ready Interrupt Enable\nField <code>XOSCRDY</code> writer - XOSC Ready Interrupt Enable\nBit 11 - BOD33 Synchronization Ready Interrupt Enable\nBit 11 - BOD33 Synchronization Ready Interrupt Enable\nBit 10 - BOD33 Detection Interrupt Enable\nBit 10 - BOD33 Detection Interrupt Enable\nBit 9 - BOD33 Ready Interrupt Enable\nBit 9 - BOD33 Ready Interrupt Enable\nBit 7 - DFLL Lock Coarse Interrupt Enable\nBit 7 - DFLL Lock Coarse Interrupt Enable\nBit 6 - DFLL Lock Fine Interrupt Enable\nBit 6 - DFLL Lock Fine Interrupt Enable\nBit 5 - DFLL Out Of Bounds Interrupt Enable\nBit 5 - DFLL Out Of Bounds Interrupt Enable\nBit 8 - DFLL Reference Clock Stopped Interrupt Enable\nBit 8 - DFLL Reference Clock Stopped Interrupt Enable\nBit 4 - DFLL Ready Interrupt Enable\nBit 4 - DFLL Ready Interrupt Enable\nBit 16 - DPLL Lock Fall Interrupt Enable\nBit 16 - DPLL Lock Fall Interrupt Enable\nBit 15 - DPLL Lock Rise Interrupt Enable\nBit 15 - DPLL Lock Rise Interrupt Enable\nBit 17 - DPLL Lock Timeout Interrupt Enable\nBit 17 - DPLL Lock Timeout Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - OSC32K Ready Interrupt Enable\nBit 2 - OSC32K Ready Interrupt Enable\nBit 3 - OSC8M Ready Interrupt Enable\nBit 3 - OSC8M Ready Interrupt Enable\nBit 1 - XOSC32K Ready Interrupt Enable\nBit 1 - XOSC32K Ready Interrupt Enable\nBit 0 - XOSC Ready Interrupt Enable\nBit 0 - XOSC Ready Interrupt Enable\nField <code>B33SRDY</code> reader - BOD33 Synchronization Ready\nField <code>B33SRDY</code> writer - BOD33 Synchronization Ready\nField <code>BOD33DET</code> reader - BOD33 Detection\nField <code>BOD33DET</code> writer - BOD33 Detection\nField <code>BOD33RDY</code> reader - BOD33 Ready\nField <code>BOD33RDY</code> writer - BOD33 Ready\nField <code>DFLLLCKC</code> reader - DFLL Lock Coarse\nField <code>DFLLLCKC</code> writer - DFLL Lock Coarse\nField <code>DFLLLCKF</code> reader - DFLL Lock Fine\nField <code>DFLLLCKF</code> writer - DFLL Lock Fine\nField <code>DFLLOOB</code> reader - DFLL Out Of Bounds\nField <code>DFLLOOB</code> writer - DFLL Out Of Bounds\nField <code>DFLLRCS</code> reader - DFLL Reference Clock Stopped\nField <code>DFLLRCS</code> writer - DFLL Reference Clock Stopped\nField <code>DFLLRDY</code> reader - DFLL Ready\nField <code>DFLLRDY</code> writer - DFLL Ready\nField <code>DPLLLCKF</code> reader - DPLL Lock Fall\nField <code>DPLLLCKF</code> writer - DPLL Lock Fall\nField <code>DPLLLCKR</code> reader - DPLL Lock Rise\nField <code>DPLLLCKR</code> writer - DPLL Lock Rise\nField <code>DPLLLTO</code> reader - DPLL Lock Timeout\nField <code>DPLLLTO</code> writer - DPLL Lock Timeout\nInterrupt Flag Status and Clear\nField <code>OSC32KRDY</code> reader - OSC32K Ready\nField <code>OSC32KRDY</code> writer - OSC32K Ready\nField <code>OSC8MRDY</code> reader - OSC8M Ready\nField <code>OSC8MRDY</code> writer - OSC8M Ready\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nField <code>XOSC32KRDY</code> reader - XOSC32K Ready\nField <code>XOSC32KRDY</code> writer - XOSC32K Ready\nField <code>XOSCRDY</code> reader - XOSC Ready\nField <code>XOSCRDY</code> writer - XOSC Ready\nBit 11 - BOD33 Synchronization Ready\nBit 11 - BOD33 Synchronization Ready\nBit 10 - BOD33 Detection\nBit 10 - BOD33 Detection\nBit 9 - BOD33 Ready\nBit 9 - BOD33 Ready\nBit 7 - DFLL Lock Coarse\nBit 7 - DFLL Lock Coarse\nBit 6 - DFLL Lock Fine\nBit 6 - DFLL Lock Fine\nBit 5 - DFLL Out Of Bounds\nBit 5 - DFLL Out Of Bounds\nBit 8 - DFLL Reference Clock Stopped\nBit 8 - DFLL Reference Clock Stopped\nBit 4 - DFLL Ready\nBit 4 - DFLL Ready\nBit 16 - DPLL Lock Fall\nBit 16 - DPLL Lock Fall\nBit 15 - DPLL Lock Rise\nBit 15 - DPLL Lock Rise\nBit 17 - DPLL Lock Timeout\nBit 17 - DPLL Lock Timeout\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - OSC32K Ready\nBit 2 - OSC32K Ready\nBit 3 - OSC8M Ready\nBit 3 - OSC8M Ready\nBit 1 - XOSC32K Ready\nBit 1 - XOSC32K Ready\nBit 0 - XOSC Ready\nBit 0 - XOSC Ready\nField <code>CALIB</code> reader - Oscillator Calibration\nField <code>CALIB</code> writer - Oscillator Calibration\nField <code>EN1K</code> reader - 1kHz Output Enable\nField <code>EN1K</code> writer - 1kHz Output Enable\nField <code>EN32K</code> reader - 32kHz Output Enable\nField <code>EN32K</code> writer - 32kHz Output Enable\nField <code>ENABLE</code> reader - Oscillator Enable\nField <code>ENABLE</code> writer - Oscillator Enable\nField <code>ONDEMAND</code> reader - On Demand Control\nField <code>ONDEMAND</code> writer - On Demand Control\n32kHz Internal Oscillator (OSC32K) Control\nRegister <code>OSC32K</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>STARTUP</code> reader - Oscillator Start-Up Time\nField <code>STARTUP</code> writer - Oscillator Start-Up Time\nRegister <code>OSC32K</code> writer\nField <code>WRTLOCK</code> reader - Write Lock\nField <code>WRTLOCK</code> writer - Write Lock\nBits 16:22 - Oscillator Calibration\nBits 16:22 - Oscillator Calibration\nBit 3 - 1kHz Output Enable\nBit 3 - 1kHz Output Enable\nBit 2 - 32kHz Output Enable\nBit 2 - 32kHz Output Enable\nBit 1 - Oscillator Enable\nBit 1 - Oscillator Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - On Demand Control\nBit 7 - On Demand Control\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nBits 8:10 - Oscillator Start-Up Time\nBits 8:10 - Oscillator Start-Up Time\nBit 12 - Write Lock\nBit 12 - Write Lock\nField <code>CALIB</code> reader - Oscillator Calibration\nField <code>CALIB</code> writer - Oscillator Calibration\nField <code>ENABLE</code> reader - Oscillator Enable\nField <code>ENABLE</code> writer - Oscillator Enable\nField <code>FRANGE</code> reader - Oscillator Frequency Range\nField <code>FRANGE</code> writer - Oscillator Frequency Range\nOscillator Frequency Range\nField <code>ONDEMAND</code> reader - On Demand Control\nField <code>ONDEMAND</code> writer - On Demand Control\n8MHz Internal Oscillator (OSC8M) Control\nField <code>PRESC</code> reader - Oscillator Prescaler\nField <code>PRESC</code> writer - Oscillator Prescaler\nOscillator Prescaler\nRegister <code>OSC8M</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nRegister <code>OSC8M</code> writer\n1\n4 to 6MHz\n0: 1\n0: 4 to 6MHz\n2\n6 to 8MHz\n1: 2\n1: 6 to 8MHz\n4\n8 to 11MHz\n2: 4\n2: 8 to 11MHz\n8\n11 to 15MHz\n3: 8\n3: 11 to 15MHz\nBits 16:27 - Oscillator Calibration\nBits 16:27 - Oscillator Calibration\nBit 1 - Oscillator Enable\nBit 1 - Oscillator Enable\nBits 30:31 - Oscillator Frequency Range\nBits 30:31 - Oscillator Frequency Range\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1\n4 to 6MHz\n2\n6 to 8MHz\n4\n8 to 11MHz\n8\n11 to 15MHz\nBit 7 - On Demand Control\nBit 7 - On Demand Control\nBits 8:9 - Oscillator Prescaler\nBits 8:9 - Oscillator Prescaler\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nGet enumerated values variant\nGet enumerated values variant\nField <code>CALIB</code> reader - Oscillator Calibration\nField <code>CALIB</code> writer - Oscillator Calibration\n32kHz Ultra Low Power Internal Oscillator (OSCULP32K) …\nRegister <code>OSCULP32K</code> reader\nRegister <code>OSCULP32K</code> writer\nField <code>WRTLOCK</code> reader - Write Lock\nField <code>WRTLOCK</code> writer - Write Lock\nBits 0:4 - Oscillator Calibration\nBits 0:4 - Oscillator Calibration\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Write Lock\nBit 7 - Write Lock\nField <code>B33SRDY</code> reader - BOD33 Synchronization Ready\nField <code>BOD33DET</code> reader - BOD33 Detection\nField <code>BOD33RDY</code> reader - BOD33 Ready\nField <code>DFLLLCKC</code> reader - DFLL Lock Coarse\nField <code>DFLLLCKF</code> reader - DFLL Lock Fine\nField <code>DFLLOOB</code> reader - DFLL Out Of Bounds\nField <code>DFLLRCS</code> reader - DFLL Reference Clock Stopped\nField <code>DFLLRDY</code> reader - DFLL Ready\nField <code>DPLLLCKF</code> reader - DPLL Lock Fall\nField <code>DPLLLCKR</code> reader - DPLL Lock Rise\nField <code>DPLLLTO</code> reader - DPLL Lock Timeout\nField <code>OSC32KRDY</code> reader - OSC32K Ready\nField <code>OSC8MRDY</code> reader - OSC8M Ready\nPower and Clocks Status\nRegister <code>PCLKSR</code> reader\nField <code>XOSC32KRDY</code> reader - XOSC32K Ready\nField <code>XOSCRDY</code> reader - XOSC Ready\nBit 11 - BOD33 Synchronization Ready\nBit 10 - BOD33 Detection\nBit 9 - BOD33 Ready\nBit 7 - DFLL Lock Coarse\nBit 6 - DFLL Lock Fine\nBit 5 - DFLL Out Of Bounds\nBit 8 - DFLL Reference Clock Stopped\nBit 4 - DFLL Ready\nBit 16 - DPLL Lock Fall\nBit 15 - DPLL Lock Rise\nBit 17 - DPLL Lock Timeout\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - OSC32K Ready\nBit 3 - OSC8M Ready\nBit 1 - XOSC32K Ready\nBit 0 - XOSC Ready\nField <code>BGOUTEN</code> reader - Bandgap Output Enable\nField <code>BGOUTEN</code> writer - Bandgap Output Enable\nField <code>CALIB</code> reader - Bandgap Voltage Generator Calibration\nField <code>CALIB</code> writer - Bandgap Voltage Generator Calibration\nRegister <code>VREF</code> reader\nField <code>TSEN</code> reader - Temperature Sensor Enable\nField <code>TSEN</code> writer - Temperature Sensor Enable\nVoltage References System (VREF) Control\nRegister <code>VREF</code> writer\nBit 2 - Bandgap Output Enable\nBit 2 - Bandgap Output Enable\nBits 16:26 - Bandgap Voltage Generator Calibration\nBits 16:26 - Bandgap Voltage Generator Calibration\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Temperature Sensor Enable\nBit 1 - Temperature Sensor Enable\nField <code>FORCELDO</code> reader - Force LDO Voltage Regulator\nField <code>FORCELDO</code> writer - Force LDO Voltage Regulator\nRegister <code>VREG</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nVoltage Regulator System (VREG) Control\nRegister <code>VREG</code> writer\nBit 13 - Force LDO Voltage Regulator\nBit 13 - Force LDO Voltage Regulator\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nField <code>AMPGC</code> reader - Automatic Amplitude Gain Control\nField <code>AMPGC</code> writer - Automatic Amplitude Gain Control\nField <code>ENABLE</code> reader - Oscillator Enable\nField <code>ENABLE</code> writer - Oscillator Enable\nField <code>GAIN</code> reader - Oscillator Gain\nField <code>GAIN</code> writer - Oscillator Gain\nOscillator Gain\nField <code>ONDEMAND</code> reader - On Demand Control\nField <code>ONDEMAND</code> writer - On Demand Control\nRegister <code>XOSC</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>STARTUP</code> reader - Start-Up Time\nField <code>STARTUP</code> writer - Start-Up Time\nRegister <code>XOSC</code> writer\nExternal Multipurpose Crystal Oscillator (XOSC) Control\nField <code>XTALEN</code> reader - Crystal Oscillator Enable\nField <code>XTALEN</code> writer - Crystal Oscillator Enable\n2MHz\n0: 2MHz\n4MHz\n1: 4MHz\n8MHz\n2: 8MHz\n16MHz\n3: 16MHz\n30MHz\n4: 30MHz\nBit 11 - Automatic Amplitude Gain Control\nBit 11 - Automatic Amplitude Gain Control\nBit 1 - Oscillator Enable\nBit 1 - Oscillator Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 8:10 - Oscillator Gain\nBits 8:10 - Oscillator Gain\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n2MHz\n4MHz\n8MHz\n16MHz\n30MHz\nBit 7 - On Demand Control\nBit 7 - On Demand Control\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nBits 12:15 - Start-Up Time\nBits 12:15 - Start-Up Time\nGet enumerated values variant\nBit 2 - Crystal Oscillator Enable\nBit 2 - Crystal Oscillator Enable\nField <code>AAMPEN</code> reader - Automatic Amplitude Control Enable\nField <code>AAMPEN</code> writer - Automatic Amplitude Control Enable\nField <code>EN1K</code> reader - 1kHz Output Enable\nField <code>EN1K</code> writer - 1kHz Output Enable\nField <code>EN32K</code> reader - 32kHz Output Enable\nField <code>EN32K</code> writer - 32kHz Output Enable\nField <code>ENABLE</code> reader - Oscillator Enable\nField <code>ENABLE</code> writer - Oscillator Enable\nField <code>ONDEMAND</code> reader - On Demand Control\nField <code>ONDEMAND</code> writer - On Demand Control\nRegister <code>XOSC32K</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>STARTUP</code> reader - Oscillator Start-Up Time\nField <code>STARTUP</code> writer - Oscillator Start-Up Time\nRegister <code>XOSC32K</code> writer\nField <code>WRTLOCK</code> reader - Write Lock\nField <code>WRTLOCK</code> writer - Write Lock\n32kHz External Crystal Oscillator (XOSC32K) Control\nField <code>XTALEN</code> reader - Crystal Oscillator Enable\nField <code>XTALEN</code> writer - Crystal Oscillator Enable\nBit 5 - Automatic Amplitude Control Enable\nBit 5 - Automatic Amplitude Control Enable\nBit 4 - 1kHz Output Enable\nBit 4 - 1kHz Output Enable\nBit 3 - 32kHz Output Enable\nBit 3 - 32kHz Output Enable\nBit 1 - Oscillator Enable\nBit 1 - Oscillator Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - On Demand Control\nBit 7 - On Demand Control\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nBits 8:10 - Oscillator Start-Up Time\nBits 8:10 - Oscillator Start-Up Time\nBit 12 - Write Lock\nBit 12 - Write Lock\nBit 2 - Crystal Oscillator Enable\nBit 2 - Crystal Oscillator Enable\n16-bit Counter Mode\n32-bit Counter Mode\n8-bit Counter Mode\nRegister block\nCluster 16-bit Counter Mode\n0x00..0x1c - 16-bit Counter Mode\nCluster 32-bit Counter Mode\n0x00..0x20 - 32-bit Counter Mode\nCluster 8-bit Counter Mode\n0x00..0x1a - 8-bit Counter Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCC (rw) register accessor: COUNT16 Compare/Capture\nCOUNT (rw) register accessor: COUNT16 Counter Value\n16-bit Counter Mode\nCTRLA (rw) register accessor: Control A\nCTRLBCLR (rw) register accessor: Control B Clear\nCTRLBSET (rw) register accessor: Control B Set\nCTRLC (rw) register accessor: Control C\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: Event Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nREADREQ (rw) register accessor: Read Request\nSTATUS (r) register accessor: Status\nCOUNT16 Compare/Capture\n0x18 - COUNT16 Compare/Capture\nIterator for array of: 0x18 - COUNT16 Compare/Capture\nCOUNT16 Counter Value\n0x10 - COUNT16 Counter Value\nControl A\n0x00 - Control A\nControl B Clear\n0x04 - Control B Clear\nControl B Set\n0x05 - Control B Set\nControl C\n0x06 - Control C\nDebug Control\n0x08 - Debug Control\nEvent Control\n0x0a - Event Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x0c - Interrupt Enable Clear\nInterrupt Enable Set\n0x0d - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x0e - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nRead Request\n0x02 - Read Request\nStatus\n0x0f - Status\nField <code>CC</code> reader - Compare/Capture Value\nCOUNT16 Compare/Capture\nField <code>CC</code> writer - Compare/Capture Value\nRegister <code>CC%s</code> reader\nRegister <code>CC%s</code> writer\nBits 0:15 - Compare/Capture Value\nBits 0:15 - Compare/Capture Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Count Value\nCOUNT16 Counter Value\nField <code>COUNT</code> writer - Count Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:15 - Count Value\nBits 0:15 - Count Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n0: Counter in 16-bit mode\n2: Counter in 32-bit mode\n1: Counter in 8-bit mode\nControl A\n0: Prescaler: GCLK_TC\n7: Prescaler: GCLK_TC/1024\n4: Prescaler: GCLK_TC/16\n1: Prescaler: GCLK_TC/2\n6: Prescaler: GCLK_TC/256\n2: Prescaler: GCLK_TC/4\n5: Prescaler: GCLK_TC/64\n3: Prescaler: GCLK_TC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\n0: Reload or reset the counter on next generic clock\n1: <code>1</code>\nField <code>MODE</code> reader - TC Mode\nField <code>MODE</code> writer - TC Mode\nTC Mode\n3: <code>11</code>\n0: <code>0</code>\n2: <code>10</code>\n1: Reload or reset the counter on next prescaler clock\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nField <code>PRESCSYNC</code> reader - Prescaler and Counter …\nField <code>PRESCSYNC</code> writer - Prescaler and Counter …\nPrescaler and Counter Synchronization\nRegister <code>CTRLA</code> reader\n2: Reload or reset the counter on next generic clock. …\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nField <code>WAVEGEN</code> reader - Waveform Generation Operation\nField <code>WAVEGEN</code> writer - Waveform Generation Operation\nWaveform Generation Operation\nCounter in 16-bit mode\nCounter in 32-bit mode\nCounter in 8-bit mode\nPrescaler: GCLK_TC\nPrescaler: GCLK_TC/1024\nPrescaler: GCLK_TC/16\nPrescaler: GCLK_TC/2\nPrescaler: GCLK_TC/256\nPrescaler: GCLK_TC/4\nPrescaler: GCLK_TC/64\nPrescaler: GCLK_TC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReload or reset the counter on next generic clock\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCounter in 16-bit mode\nCounter in 32-bit mode\nCounter in 8-bit mode\nPrescaler: GCLK_TC\nPrescaler: GCLK_TC/1024\nPrescaler: GCLK_TC/16\nPrescaler: GCLK_TC/2\nPrescaler: GCLK_TC/256\nPrescaler: GCLK_TC/4\nPrescaler: GCLK_TC/64\nPrescaler: GCLK_TC/8\nReload or reset the counter on next generic clock\n<code>1</code>\n<code>11</code>\n<code>0</code>\n<code>10</code>\nReload or reset the counter on next prescaler clock\nReload or reset the counter on next generic clock. Reset …\n<code>1</code>\nBits 2:3 - TC Mode\nBits 2:3 - TC Mode\n<code>11</code>\n<code>0</code>\n<code>10</code>\nReload or reset the counter on next prescaler clock\nBits 8:10 - Prescaler\nBits 8:10 - Prescaler\nBits 12:13 - Prescaler and Counter Synchronization\nBits 12:13 - Prescaler and Counter Synchronization\nReload or reset the counter on next generic clock. Reset …\nBit 11 - Run in Standby\nBit 11 - Run in Standby\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBits 5:6 - Waveform Generation Operation\nBits 5:6 - Waveform Generation Operation\nField <code>CMD</code> reader - Command\nField <code>CMD</code> writer - Command\nCommand\nControl B Clear\nField <code>DIR</code> reader - Counter Direction\nField <code>DIR</code> writer - Counter Direction\n0: No action\nField <code>ONESHOT</code> reader - One-Shot\nField <code>ONESHOT</code> writer - One-Shot\nRegister <code>CTRLBCLR</code> reader\n1: Force a start, restart or retrigger\n2: Force a stop\nRegister <code>CTRLBCLR</code> writer\nBits 6:7 - Command\nBits 6:7 - Command\nBit 0 - Counter Direction\nBit 0 - Counter Direction\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo action\nForce a start, restart or retrigger\nForce a stop\nNo action\nBit 2 - One-Shot\nBit 2 - One-Shot\nForce a start, restart or retrigger\nForce a stop\nGet enumerated values variant\nField <code>CMD</code> reader - Command\nField <code>CMD</code> writer - Command\nCommand\nControl B Set\nField <code>DIR</code> reader - Counter Direction\nField <code>DIR</code> writer - Counter Direction\n0: No action\nField <code>ONESHOT</code> reader - One-Shot\nField <code>ONESHOT</code> writer - One-Shot\nRegister <code>CTRLBSET</code> reader\n1: Force a start, restart or retrigger\n2: Force a stop\nRegister <code>CTRLBSET</code> writer\nBits 6:7 - Command\nBits 6:7 - Command\nBit 0 - Counter Direction\nBit 0 - Counter Direction\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo action\nForce a start, restart or retrigger\nForce a stop\nNo action\nBit 2 - One-Shot\nBit 2 - One-Shot\nForce a start, restart or retrigger\nForce a stop\nGet enumerated values variant\nField <code>CPTEN0</code> reader - Capture Channel 0 Enable\nField <code>CPTEN0</code> writer - Capture Channel 0 Enable\nField <code>CPTEN1</code> reader - Capture Channel 1 Enable\nField <code>CPTEN1</code> writer - Capture Channel 1 Enable\nControl C\nField <code>INVEN0</code> reader - Output Waveform 0 Invert Enable\nField <code>INVEN0</code> writer - Output Waveform 0 Invert Enable\nField <code>INVEN1</code> reader - Output Waveform 1 Invert Enable\nField <code>INVEN1</code> writer - Output Waveform 1 Invert Enable\nRegister <code>CTRLC</code> reader\nRegister <code>CTRLC</code> writer\nBit 4 - Capture Channel 0 Enable\nBit 4 - Capture Channel 0 Enable\nBit 5 - Capture Channel 1 Enable\nBit 5 - Capture Channel 1 Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Output Waveform 0 Invert Enable\nBit 0 - Output Waveform 0 Invert Enable\nBit 1 - Output Waveform 1 Invert Enable\nBit 1 - Output Waveform 1 Invert Enable\nDebug Control\nField <code>DBGRUN</code> reader - Debug Run Mode\nField <code>DBGRUN</code> writer - Debug Run Mode\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Run Mode\nBit 0 - Debug Run Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Count on event\nField <code>EVACT</code> reader - Event Action\nField <code>EVACT</code> writer - Event Action\nEvent Action\nEvent Control\nField <code>MCEO0</code> reader - Match or Capture Channel 0 Event …\nField <code>MCEO0</code> writer - Match or Capture Channel 0 Event …\nField <code>MCEO1</code> reader - Match or Capture Channel 1 Event …\nField <code>MCEO1</code> writer - Match or Capture Channel 1 Event …\n0: Event action disabled\nField <code>OVFEO</code> reader - Overflow/Underflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow/Underflow Event Output Enable\n5: Period captured in CC0, pulse width in CC1\n6: Period captured in CC1, pulse width in CC0\nRegister <code>EVCTRL</code> reader\n1: Start, restart or retrigger TC on event\n3: Start TC on event\nField <code>TCEI</code> reader - TC Event Input\nField <code>TCEI</code> writer - TC Event Input\nField <code>TCINV</code> reader - TC Inverted Event Input\nField <code>TCINV</code> writer - TC Inverted Event Input\nRegister <code>EVCTRL</code> writer\nCount on event\nBits 0:2 - Event Action\nBits 0:2 - Event Action\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCount on event\nEvent action disabled\nPeriod captured in CC0, pulse width in CC1\nPeriod captured in CC1, pulse width in CC0\nStart, restart or retrigger TC on event\nStart TC on event\nBit 12 - Match or Capture Channel 0 Event Output Enable\nBit 12 - Match or Capture Channel 0 Event Output Enable\nBit 13 - Match or Capture Channel 1 Event Output Enable\nBit 13 - Match or Capture Channel 1 Event Output Enable\nEvent action disabled\nBit 8 - Overflow/Underflow Event Output Enable\nBit 8 - Overflow/Underflow Event Output Enable\nPeriod captured in CC0, pulse width in CC1\nPeriod captured in CC1, pulse width in CC0\nStart, restart or retrigger TC on event\nStart TC on event\nBit 5 - TC Event Input\nBit 5 - TC Event Input\nBit 4 - TC Inverted Event Input\nBit 4 - TC Inverted Event Input\nGet enumerated values variant\nField <code>ERR</code> reader - Error Interrupt Enable\nField <code>ERR</code> writer - Error Interrupt Enable\nInterrupt Enable Clear\nField <code>MC0</code> reader - Match or Capture Channel 0 Interrupt …\nField <code>MC0</code> writer - Match or Capture Channel 0 Interrupt …\nField <code>MC1</code> reader - Match or Capture Channel 1 Interrupt …\nField <code>MC1</code> writer - Match or Capture Channel 1 Interrupt …\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nField <code>ERR</code> reader - Error Interrupt Enable\nField <code>ERR</code> writer - Error Interrupt Enable\nInterrupt Enable Set\nField <code>MC0</code> reader - Match or Capture Channel 0 Interrupt …\nField <code>MC0</code> writer - Match or Capture Channel 0 Interrupt …\nField <code>MC1</code> reader - Match or Capture Channel 1 Interrupt …\nField <code>MC1</code> writer - Match or Capture Channel 1 Interrupt …\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENSET</code> writer\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nField <code>ERR</code> reader - Error\nField <code>ERR</code> writer - Error\nInterrupt Flag Status and Clear\nField <code>MC0</code> reader - Match or Capture Channel 0\nField <code>MC0</code> writer - Match or Capture Channel 0\nField <code>MC1</code> reader - Match or Capture Channel 1\nField <code>MC1</code> writer - Match or Capture Channel 1\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nRegister <code>INTFLAG</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nRegister <code>INTFLAG</code> writer\nBit 1 - Error\nBit 1 - Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Match or Capture Channel 0\nBit 4 - Match or Capture Channel 0\nBit 5 - Match or Capture Channel 1\nBit 5 - Match or Capture Channel 1\nBit 0 - Overflow\nBit 0 - Overflow\nBit 3 - Synchronization Ready\nBit 3 - Synchronization Ready\nField <code>ADDR</code> reader - Address\nField <code>ADDR</code> writer - Address\nRegister <code>READREQ</code> reader\nField <code>RCONT</code> reader - Read Continuously\nField <code>RCONT</code> writer - Read Continuously\nRead Request\nField <code>RREQ</code> reader - Read Request\nField <code>RREQ</code> writer - Read Request\nRegister <code>READREQ</code> writer\nBits 0:4 - Address\nBits 0:4 - Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 14 - Read Continuously\nBit 14 - Read Continuously\nBit 15 - Read Request\nBit 15 - Read Request\nRegister <code>STATUS</code> reader\nField <code>SLAVE</code> reader - Slave\nStatus\nField <code>STOP</code> reader - Stop\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Slave\nBit 3 - Stop\nBit 7 - Synchronization Busy\nCC (rw) register accessor: COUNT32 Compare/Capture\nCOUNT (rw) register accessor: COUNT32 Counter Value\n32-bit Counter Mode\nCTRLA (rw) register accessor: Control A\nCTRLBCLR (rw) register accessor: Control B Clear\nCTRLBSET (rw) register accessor: Control B Set\nCTRLC (rw) register accessor: Control C\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: Event Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nREADREQ (rw) register accessor: Read Request\nSTATUS (r) register accessor: Status\nCOUNT32 Compare/Capture\n0x18..0x20 - COUNT32 Compare/Capture\nIterator for array of: 0x18..0x20 - COUNT32 Compare/Capture\nCOUNT32 Counter Value\n0x10 - COUNT32 Counter Value\nControl A\n0x00 - Control A\nControl B Clear\n0x04 - Control B Clear\nControl B Set\n0x05 - Control B Set\nControl C\n0x06 - Control C\nDebug Control\n0x08 - Debug Control\nEvent Control\n0x0a - Event Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x0c - Interrupt Enable Clear\nInterrupt Enable Set\n0x0d - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x0e - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nRead Request\n0x02 - Read Request\nStatus\n0x0f - Status\nField <code>CC</code> reader - Compare/Capture Value\nCOUNT32 Compare/Capture\nField <code>CC</code> writer - Compare/Capture Value\nRegister <code>CC%s</code> reader\nRegister <code>CC%s</code> writer\nBits 0:31 - Compare/Capture Value\nBits 0:31 - Compare/Capture Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Count Value\nCOUNT32 Counter Value\nField <code>COUNT</code> writer - Count Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:31 - Count Value\nBits 0:31 - Count Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n0: Counter in 16-bit mode\n2: Counter in 32-bit mode\n1: Counter in 8-bit mode\nControl A\n0: Prescaler: GCLK_TC\n7: Prescaler: GCLK_TC/1024\n4: Prescaler: GCLK_TC/16\n1: Prescaler: GCLK_TC/2\n6: Prescaler: GCLK_TC/256\n2: Prescaler: GCLK_TC/4\n5: Prescaler: GCLK_TC/64\n3: Prescaler: GCLK_TC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\n0: Reload or reset the counter on next generic clock\n1: <code>1</code>\nField <code>MODE</code> reader - TC Mode\nField <code>MODE</code> writer - TC Mode\nTC Mode\n3: <code>11</code>\n0: <code>0</code>\n2: <code>10</code>\n1: Reload or reset the counter on next prescaler clock\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nField <code>PRESCSYNC</code> reader - Prescaler and Counter …\nField <code>PRESCSYNC</code> writer - Prescaler and Counter …\nPrescaler and Counter Synchronization\nRegister <code>CTRLA</code> reader\n2: Reload or reset the counter on next generic clock. …\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nField <code>WAVEGEN</code> reader - Waveform Generation Operation\nField <code>WAVEGEN</code> writer - Waveform Generation Operation\nWaveform Generation Operation\nCounter in 16-bit mode\nCounter in 32-bit mode\nCounter in 8-bit mode\nPrescaler: GCLK_TC\nPrescaler: GCLK_TC/1024\nPrescaler: GCLK_TC/16\nPrescaler: GCLK_TC/2\nPrescaler: GCLK_TC/256\nPrescaler: GCLK_TC/4\nPrescaler: GCLK_TC/64\nPrescaler: GCLK_TC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReload or reset the counter on next generic clock\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCounter in 16-bit mode\nCounter in 32-bit mode\nCounter in 8-bit mode\nPrescaler: GCLK_TC\nPrescaler: GCLK_TC/1024\nPrescaler: GCLK_TC/16\nPrescaler: GCLK_TC/2\nPrescaler: GCLK_TC/256\nPrescaler: GCLK_TC/4\nPrescaler: GCLK_TC/64\nPrescaler: GCLK_TC/8\nReload or reset the counter on next generic clock\n<code>1</code>\n<code>11</code>\n<code>0</code>\n<code>10</code>\nReload or reset the counter on next prescaler clock\nReload or reset the counter on next generic clock. Reset …\n<code>1</code>\nBits 2:3 - TC Mode\nBits 2:3 - TC Mode\n<code>11</code>\n<code>0</code>\n<code>10</code>\nReload or reset the counter on next prescaler clock\nBits 8:10 - Prescaler\nBits 8:10 - Prescaler\nBits 12:13 - Prescaler and Counter Synchronization\nBits 12:13 - Prescaler and Counter Synchronization\nReload or reset the counter on next generic clock. Reset …\nBit 11 - Run in Standby\nBit 11 - Run in Standby\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBits 5:6 - Waveform Generation Operation\nBits 5:6 - Waveform Generation Operation\nField <code>CMD</code> reader - Command\nField <code>CMD</code> writer - Command\nCommand\nControl B Clear\nField <code>DIR</code> reader - Counter Direction\nField <code>DIR</code> writer - Counter Direction\n0: No action\nField <code>ONESHOT</code> reader - One-Shot\nField <code>ONESHOT</code> writer - One-Shot\nRegister <code>CTRLBCLR</code> reader\n1: Force a start, restart or retrigger\n2: Force a stop\nRegister <code>CTRLBCLR</code> writer\nBits 6:7 - Command\nBits 6:7 - Command\nBit 0 - Counter Direction\nBit 0 - Counter Direction\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo action\nForce a start, restart or retrigger\nForce a stop\nNo action\nBit 2 - One-Shot\nBit 2 - One-Shot\nForce a start, restart or retrigger\nForce a stop\nGet enumerated values variant\nField <code>CMD</code> reader - Command\nField <code>CMD</code> writer - Command\nCommand\nControl B Set\nField <code>DIR</code> reader - Counter Direction\nField <code>DIR</code> writer - Counter Direction\n0: No action\nField <code>ONESHOT</code> reader - One-Shot\nField <code>ONESHOT</code> writer - One-Shot\nRegister <code>CTRLBSET</code> reader\n1: Force a start, restart or retrigger\n2: Force a stop\nRegister <code>CTRLBSET</code> writer\nBits 6:7 - Command\nBits 6:7 - Command\nBit 0 - Counter Direction\nBit 0 - Counter Direction\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo action\nForce a start, restart or retrigger\nForce a stop\nNo action\nBit 2 - One-Shot\nBit 2 - One-Shot\nForce a start, restart or retrigger\nForce a stop\nGet enumerated values variant\nField <code>CPTEN0</code> reader - Capture Channel 0 Enable\nField <code>CPTEN0</code> writer - Capture Channel 0 Enable\nField <code>CPTEN1</code> reader - Capture Channel 1 Enable\nField <code>CPTEN1</code> writer - Capture Channel 1 Enable\nControl C\nField <code>INVEN0</code> reader - Output Waveform 0 Invert Enable\nField <code>INVEN0</code> writer - Output Waveform 0 Invert Enable\nField <code>INVEN1</code> reader - Output Waveform 1 Invert Enable\nField <code>INVEN1</code> writer - Output Waveform 1 Invert Enable\nRegister <code>CTRLC</code> reader\nRegister <code>CTRLC</code> writer\nBit 4 - Capture Channel 0 Enable\nBit 4 - Capture Channel 0 Enable\nBit 5 - Capture Channel 1 Enable\nBit 5 - Capture Channel 1 Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Output Waveform 0 Invert Enable\nBit 0 - Output Waveform 0 Invert Enable\nBit 1 - Output Waveform 1 Invert Enable\nBit 1 - Output Waveform 1 Invert Enable\nDebug Control\nField <code>DBGRUN</code> reader - Debug Run Mode\nField <code>DBGRUN</code> writer - Debug Run Mode\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Run Mode\nBit 0 - Debug Run Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Count on event\nField <code>EVACT</code> reader - Event Action\nField <code>EVACT</code> writer - Event Action\nEvent Action\nEvent Control\nField <code>MCEO0</code> reader - Match or Capture Channel 0 Event …\nField <code>MCEO0</code> writer - Match or Capture Channel 0 Event …\nField <code>MCEO1</code> reader - Match or Capture Channel 1 Event …\nField <code>MCEO1</code> writer - Match or Capture Channel 1 Event …\n0: Event action disabled\nField <code>OVFEO</code> reader - Overflow/Underflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow/Underflow Event Output Enable\n5: Period captured in CC0, pulse width in CC1\n6: Period captured in CC1, pulse width in CC0\nRegister <code>EVCTRL</code> reader\n1: Start, restart or retrigger TC on event\n3: Start TC on event\nField <code>TCEI</code> reader - TC Event Input\nField <code>TCEI</code> writer - TC Event Input\nField <code>TCINV</code> reader - TC Inverted Event Input\nField <code>TCINV</code> writer - TC Inverted Event Input\nRegister <code>EVCTRL</code> writer\nCount on event\nBits 0:2 - Event Action\nBits 0:2 - Event Action\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCount on event\nEvent action disabled\nPeriod captured in CC0, pulse width in CC1\nPeriod captured in CC1, pulse width in CC0\nStart, restart or retrigger TC on event\nStart TC on event\nBit 12 - Match or Capture Channel 0 Event Output Enable\nBit 12 - Match or Capture Channel 0 Event Output Enable\nBit 13 - Match or Capture Channel 1 Event Output Enable\nBit 13 - Match or Capture Channel 1 Event Output Enable\nEvent action disabled\nBit 8 - Overflow/Underflow Event Output Enable\nBit 8 - Overflow/Underflow Event Output Enable\nPeriod captured in CC0, pulse width in CC1\nPeriod captured in CC1, pulse width in CC0\nStart, restart or retrigger TC on event\nStart TC on event\nBit 5 - TC Event Input\nBit 5 - TC Event Input\nBit 4 - TC Inverted Event Input\nBit 4 - TC Inverted Event Input\nGet enumerated values variant\nField <code>ERR</code> reader - Error Interrupt Enable\nField <code>ERR</code> writer - Error Interrupt Enable\nInterrupt Enable Clear\nField <code>MC0</code> reader - Match or Capture Channel 0 Interrupt …\nField <code>MC0</code> writer - Match or Capture Channel 0 Interrupt …\nField <code>MC1</code> reader - Match or Capture Channel 1 Interrupt …\nField <code>MC1</code> writer - Match or Capture Channel 1 Interrupt …\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nField <code>ERR</code> reader - Error Interrupt Enable\nField <code>ERR</code> writer - Error Interrupt Enable\nInterrupt Enable Set\nField <code>MC0</code> reader - Match or Capture Channel 0 Interrupt …\nField <code>MC0</code> writer - Match or Capture Channel 0 Interrupt …\nField <code>MC1</code> reader - Match or Capture Channel 1 Interrupt …\nField <code>MC1</code> writer - Match or Capture Channel 1 Interrupt …\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENSET</code> writer\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nField <code>ERR</code> reader - Error\nField <code>ERR</code> writer - Error\nInterrupt Flag Status and Clear\nField <code>MC0</code> reader - Match or Capture Channel 0\nField <code>MC0</code> writer - Match or Capture Channel 0\nField <code>MC1</code> reader - Match or Capture Channel 1\nField <code>MC1</code> writer - Match or Capture Channel 1\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nRegister <code>INTFLAG</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nRegister <code>INTFLAG</code> writer\nBit 1 - Error\nBit 1 - Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Match or Capture Channel 0\nBit 4 - Match or Capture Channel 0\nBit 5 - Match or Capture Channel 1\nBit 5 - Match or Capture Channel 1\nBit 0 - Overflow\nBit 0 - Overflow\nBit 3 - Synchronization Ready\nBit 3 - Synchronization Ready\nField <code>ADDR</code> reader - Address\nField <code>ADDR</code> writer - Address\nRegister <code>READREQ</code> reader\nField <code>RCONT</code> reader - Read Continuously\nField <code>RCONT</code> writer - Read Continuously\nRead Request\nField <code>RREQ</code> reader - Read Request\nField <code>RREQ</code> writer - Read Request\nRegister <code>READREQ</code> writer\nBits 0:4 - Address\nBits 0:4 - Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 14 - Read Continuously\nBit 14 - Read Continuously\nBit 15 - Read Request\nBit 15 - Read Request\nRegister <code>STATUS</code> reader\nField <code>SLAVE</code> reader - Slave\nStatus\nField <code>STOP</code> reader - Stop\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Slave\nBit 3 - Stop\nBit 7 - Synchronization Busy\nCC (rw) register accessor: COUNT8 Compare/Capture\nCOUNT (rw) register accessor: COUNT8 Counter Value\n8-bit Counter Mode\nCTRLA (rw) register accessor: Control A\nCTRLBCLR (rw) register accessor: Control B Clear\nCTRLBSET (rw) register accessor: Control B Set\nCTRLC (rw) register accessor: Control C\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: Event Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nPER (rw) register accessor: COUNT8 Period Value\nREADREQ (rw) register accessor: Read Request\nSTATUS (r) register accessor: Status\nCOUNT8 Compare/Capture\n0x18 - COUNT8 Compare/Capture\nIterator for array of: 0x18 - COUNT8 Compare/Capture\nCOUNT8 Counter Value\n0x10 - COUNT8 Counter Value\nControl A\n0x00 - Control A\nControl B Clear\n0x04 - Control B Clear\nControl B Set\n0x05 - Control B Set\nControl C\n0x06 - Control C\nDebug Control\n0x08 - Debug Control\nEvent Control\n0x0a - Event Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x0c - Interrupt Enable Clear\nInterrupt Enable Set\n0x0d - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x0e - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nCOUNT8 Period Value\n0x14 - COUNT8 Period Value\nRead Request\n0x02 - Read Request\nStatus\n0x0f - Status\nField <code>CC</code> reader - Compare/Capture Value\nCOUNT8 Compare/Capture\nField <code>CC</code> writer - Compare/Capture Value\nRegister <code>CC%s</code> reader\nRegister <code>CC%s</code> writer\nBits 0:7 - Compare/Capture Value\nBits 0:7 - Compare/Capture Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nCOUNT8 Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:7 - Counter Value\nBits 0:7 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n0: Counter in 16-bit mode\n2: Counter in 32-bit mode\n1: Counter in 8-bit mode\nControl A\n0: Prescaler: GCLK_TC\n7: Prescaler: GCLK_TC/1024\n4: Prescaler: GCLK_TC/16\n1: Prescaler: GCLK_TC/2\n6: Prescaler: GCLK_TC/256\n2: Prescaler: GCLK_TC/4\n5: Prescaler: GCLK_TC/64\n3: Prescaler: GCLK_TC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\n0: Reload or reset the counter on next generic clock\n1: <code>1</code>\nField <code>MODE</code> reader - TC Mode\nField <code>MODE</code> writer - TC Mode\nTC Mode\n3: <code>11</code>\n0: <code>0</code>\n2: <code>10</code>\n1: Reload or reset the counter on next prescaler clock\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nField <code>PRESCSYNC</code> reader - Prescaler and Counter …\nField <code>PRESCSYNC</code> writer - Prescaler and Counter …\nPrescaler and Counter Synchronization\nRegister <code>CTRLA</code> reader\n2: Reload or reset the counter on next generic clock. …\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nField <code>WAVEGEN</code> reader - Waveform Generation Operation\nField <code>WAVEGEN</code> writer - Waveform Generation Operation\nWaveform Generation Operation\nCounter in 16-bit mode\nCounter in 32-bit mode\nCounter in 8-bit mode\nPrescaler: GCLK_TC\nPrescaler: GCLK_TC/1024\nPrescaler: GCLK_TC/16\nPrescaler: GCLK_TC/2\nPrescaler: GCLK_TC/256\nPrescaler: GCLK_TC/4\nPrescaler: GCLK_TC/64\nPrescaler: GCLK_TC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReload or reset the counter on next generic clock\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCounter in 16-bit mode\nCounter in 32-bit mode\nCounter in 8-bit mode\nPrescaler: GCLK_TC\nPrescaler: GCLK_TC/1024\nPrescaler: GCLK_TC/16\nPrescaler: GCLK_TC/2\nPrescaler: GCLK_TC/256\nPrescaler: GCLK_TC/4\nPrescaler: GCLK_TC/64\nPrescaler: GCLK_TC/8\nReload or reset the counter on next generic clock\n<code>1</code>\n<code>11</code>\n<code>0</code>\n<code>10</code>\nReload or reset the counter on next prescaler clock\nReload or reset the counter on next generic clock. Reset …\n<code>1</code>\nBits 2:3 - TC Mode\nBits 2:3 - TC Mode\n<code>11</code>\n<code>0</code>\n<code>10</code>\nReload or reset the counter on next prescaler clock\nBits 8:10 - Prescaler\nBits 8:10 - Prescaler\nBits 12:13 - Prescaler and Counter Synchronization\nBits 12:13 - Prescaler and Counter Synchronization\nReload or reset the counter on next generic clock. Reset …\nBit 11 - Run in Standby\nBit 11 - Run in Standby\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBits 5:6 - Waveform Generation Operation\nBits 5:6 - Waveform Generation Operation\nField <code>CMD</code> reader - Command\nField <code>CMD</code> writer - Command\nCommand\nControl B Clear\nField <code>DIR</code> reader - Counter Direction\nField <code>DIR</code> writer - Counter Direction\n0: No action\nField <code>ONESHOT</code> reader - One-Shot\nField <code>ONESHOT</code> writer - One-Shot\nRegister <code>CTRLBCLR</code> reader\n1: Force a start, restart or retrigger\n2: Force a stop\nRegister <code>CTRLBCLR</code> writer\nBits 6:7 - Command\nBits 6:7 - Command\nBit 0 - Counter Direction\nBit 0 - Counter Direction\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo action\nForce a start, restart or retrigger\nForce a stop\nNo action\nBit 2 - One-Shot\nBit 2 - One-Shot\nForce a start, restart or retrigger\nForce a stop\nGet enumerated values variant\nField <code>CMD</code> reader - Command\nField <code>CMD</code> writer - Command\nCommand\nControl B Set\nField <code>DIR</code> reader - Counter Direction\nField <code>DIR</code> writer - Counter Direction\n0: No action\nField <code>ONESHOT</code> reader - One-Shot\nField <code>ONESHOT</code> writer - One-Shot\nRegister <code>CTRLBSET</code> reader\n1: Force a start, restart or retrigger\n2: Force a stop\nRegister <code>CTRLBSET</code> writer\nBits 6:7 - Command\nBits 6:7 - Command\nBit 0 - Counter Direction\nBit 0 - Counter Direction\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNo action\nForce a start, restart or retrigger\nForce a stop\nNo action\nBit 2 - One-Shot\nBit 2 - One-Shot\nForce a start, restart or retrigger\nForce a stop\nGet enumerated values variant\nField <code>CPTEN0</code> reader - Capture Channel 0 Enable\nField <code>CPTEN0</code> writer - Capture Channel 0 Enable\nField <code>CPTEN1</code> reader - Capture Channel 1 Enable\nField <code>CPTEN1</code> writer - Capture Channel 1 Enable\nControl C\nField <code>INVEN0</code> reader - Output Waveform 0 Invert Enable\nField <code>INVEN0</code> writer - Output Waveform 0 Invert Enable\nField <code>INVEN1</code> reader - Output Waveform 1 Invert Enable\nField <code>INVEN1</code> writer - Output Waveform 1 Invert Enable\nRegister <code>CTRLC</code> reader\nRegister <code>CTRLC</code> writer\nBit 4 - Capture Channel 0 Enable\nBit 4 - Capture Channel 0 Enable\nBit 5 - Capture Channel 1 Enable\nBit 5 - Capture Channel 1 Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Output Waveform 0 Invert Enable\nBit 0 - Output Waveform 0 Invert Enable\nBit 1 - Output Waveform 1 Invert Enable\nBit 1 - Output Waveform 1 Invert Enable\nDebug Control\nField <code>DBGRUN</code> reader - Debug Run Mode\nField <code>DBGRUN</code> writer - Debug Run Mode\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Run Mode\nBit 0 - Debug Run Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Count on event\nField <code>EVACT</code> reader - Event Action\nField <code>EVACT</code> writer - Event Action\nEvent Action\nEvent Control\nField <code>MCEO0</code> reader - Match or Capture Channel 0 Event …\nField <code>MCEO0</code> writer - Match or Capture Channel 0 Event …\nField <code>MCEO1</code> reader - Match or Capture Channel 1 Event …\nField <code>MCEO1</code> writer - Match or Capture Channel 1 Event …\n0: Event action disabled\nField <code>OVFEO</code> reader - Overflow/Underflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow/Underflow Event Output Enable\n5: Period captured in CC0, pulse width in CC1\n6: Period captured in CC1, pulse width in CC0\nRegister <code>EVCTRL</code> reader\n1: Start, restart or retrigger TC on event\n3: Start TC on event\nField <code>TCEI</code> reader - TC Event Input\nField <code>TCEI</code> writer - TC Event Input\nField <code>TCINV</code> reader - TC Inverted Event Input\nField <code>TCINV</code> writer - TC Inverted Event Input\nRegister <code>EVCTRL</code> writer\nCount on event\nBits 0:2 - Event Action\nBits 0:2 - Event Action\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCount on event\nEvent action disabled\nPeriod captured in CC0, pulse width in CC1\nPeriod captured in CC1, pulse width in CC0\nStart, restart or retrigger TC on event\nStart TC on event\nBit 12 - Match or Capture Channel 0 Event Output Enable\nBit 12 - Match or Capture Channel 0 Event Output Enable\nBit 13 - Match or Capture Channel 1 Event Output Enable\nBit 13 - Match or Capture Channel 1 Event Output Enable\nEvent action disabled\nBit 8 - Overflow/Underflow Event Output Enable\nBit 8 - Overflow/Underflow Event Output Enable\nPeriod captured in CC0, pulse width in CC1\nPeriod captured in CC1, pulse width in CC0\nStart, restart or retrigger TC on event\nStart TC on event\nBit 5 - TC Event Input\nBit 5 - TC Event Input\nBit 4 - TC Inverted Event Input\nBit 4 - TC Inverted Event Input\nGet enumerated values variant\nField <code>ERR</code> reader - Error Interrupt Enable\nField <code>ERR</code> writer - Error Interrupt Enable\nInterrupt Enable Clear\nField <code>MC0</code> reader - Match or Capture Channel 0 Interrupt …\nField <code>MC0</code> writer - Match or Capture Channel 0 Interrupt …\nField <code>MC1</code> reader - Match or Capture Channel 1 Interrupt …\nField <code>MC1</code> writer - Match or Capture Channel 1 Interrupt …\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nField <code>ERR</code> reader - Error Interrupt Enable\nField <code>ERR</code> writer - Error Interrupt Enable\nInterrupt Enable Set\nField <code>MC0</code> reader - Match or Capture Channel 0 Interrupt …\nField <code>MC0</code> writer - Match or Capture Channel 0 Interrupt …\nField <code>MC1</code> reader - Match or Capture Channel 1 Interrupt …\nField <code>MC1</code> writer - Match or Capture Channel 1 Interrupt …\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENSET</code> writer\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 4 - Match or Capture Channel 0 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 5 - Match or Capture Channel 1 Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 0 - Overflow Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nBit 3 - Synchronization Ready Interrupt Enable\nField <code>ERR</code> reader - Error\nField <code>ERR</code> writer - Error\nInterrupt Flag Status and Clear\nField <code>MC0</code> reader - Match or Capture Channel 0\nField <code>MC0</code> writer - Match or Capture Channel 0\nField <code>MC1</code> reader - Match or Capture Channel 1\nField <code>MC1</code> writer - Match or Capture Channel 1\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nRegister <code>INTFLAG</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nRegister <code>INTFLAG</code> writer\nBit 1 - Error\nBit 1 - Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Match or Capture Channel 0\nBit 4 - Match or Capture Channel 0\nBit 5 - Match or Capture Channel 1\nBit 5 - Match or Capture Channel 1\nBit 0 - Overflow\nBit 0 - Overflow\nBit 3 - Synchronization Ready\nBit 3 - Synchronization Ready\nField <code>PER</code> reader - Period Value\nCOUNT8 Period Value\nField <code>PER</code> writer - Period Value\nRegister <code>PER</code> reader\nRegister <code>PER</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Period Value\nBits 0:7 - Period Value\nField <code>ADDR</code> reader - Address\nField <code>ADDR</code> writer - Address\nRegister <code>READREQ</code> reader\nField <code>RCONT</code> reader - Read Continuously\nField <code>RCONT</code> writer - Read Continuously\nRead Request\nField <code>RREQ</code> reader - Read Request\nField <code>RREQ</code> writer - Read Request\nRegister <code>READREQ</code> writer\nBits 0:4 - Address\nBits 0:4 - Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 14 - Read Continuously\nBit 14 - Read Continuously\nBit 15 - Read Request\nBit 15 - Read Request\nRegister <code>STATUS</code> reader\nField <code>SLAVE</code> reader - Slave\nStatus\nField <code>STOP</code> reader - Stop\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Slave\nBit 3 - Stop\nBit 7 - Synchronization Busy\nCC (rw) register accessor: Compare and Capture\nCC_DITH4 (rw) register accessor: Compare and Capture\nCC_DITH5 (rw) register accessor: Compare and Capture\nCC_DITH6 (rw) register accessor: Compare and Capture\nCCB (rw) register accessor: Compare and Capture Buffer\nCCB_DITH4 (rw) register accessor: Compare and Capture …\nCCB_DITH5 (rw) register accessor: Compare and Capture …\nCCB_DITH6 (rw) register accessor: Compare and Capture …\nCOUNT (rw) register accessor: Count\nCOUNT_DITH4 (rw) register accessor: Count\nCOUNT_DITH5 (rw) register accessor: Count\nCOUNT_DITH6 (rw) register accessor: Count\nCTRLA (rw) register accessor: Control A\nCTRLBCLR (rw) register accessor: Control B Clear\nCTRLBSET (rw) register accessor: Control B Set\nDBGCTRL (rw) register accessor: Debug Control\nDRVCTRL (rw) register accessor: Driver Control\nEVCTRL (rw) register accessor: Event Control\nFCTRLA (rw) register accessor: Recoverable Fault A …\nFCTRLB (rw) register accessor: Recoverable Fault B …\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nPATT (rw) register accessor: Pattern\nPATTB (rw) register accessor: Pattern Buffer\nPER (rw) register accessor: Period\nPER_DITH4 (rw) register accessor: Period\nPER_DITH5 (rw) register accessor: Period\nPER_DITH6 (rw) register accessor: Period\nPERB (rw) register accessor: Period Buffer\nPERB_DITH4 (rw) register accessor: Period Buffer\nPERB_DITH5 (rw) register accessor: Period Buffer\nPERB_DITH6 (rw) register accessor: Period Buffer\nRegister block\nSTATUS (rw) register accessor: Status\nSYNCBUSY (r) register accessor: Synchronization Busy\nWAVE (rw) register accessor: Waveform Control\nWAVEB (rw) register accessor: Waveform Control Buffer\nWEXCTRL (rw) register accessor: Waveform Extension …\nCompare and Capture\n0x44..0x54 - Compare and Capture\n0x44 - Compare and Capture\n0x44 - Compare and Capture\n0x44 - Compare and Capture\n0x48 - Compare and Capture\n0x48 - Compare and Capture\n0x48 - Compare and Capture\n0x4c - Compare and Capture\n0x4c - Compare and Capture\n0x4c - Compare and Capture\n0x50 - Compare and Capture\n0x50 - Compare and Capture\n0x50 - Compare and Capture\nCompare and Capture\n0x44..0x54 - Compare and Capture\nIterator for array of: 0x44..0x54 - Compare and Capture\nCompare and Capture\n0x44..0x54 - Compare and Capture\nIterator for array of: 0x44..0x54 - Compare and Capture\nCompare and Capture\n0x44..0x54 - Compare and Capture\nIterator for array of: 0x44..0x54 - Compare and Capture\nIterator for array of: 0x44..0x54 - Compare and Capture\nCompare and Capture Buffer\n0x70..0x80 - Compare and Capture Buffer\n0x70 - Compare and Capture Buffer\n0x70 - Compare and Capture Buffer\n0x70 - Compare and Capture Buffer\n0x74 - Compare and Capture Buffer\n0x74 - Compare and Capture Buffer\n0x74 - Compare and Capture Buffer\n0x78 - Compare and Capture Buffer\n0x78 - Compare and Capture Buffer\n0x78 - Compare and Capture Buffer\n0x7c - Compare and Capture Buffer\n0x7c - Compare and Capture Buffer\n0x7c - Compare and Capture Buffer\nCompare and Capture Buffer\n0x70..0x80 - Compare and Capture Buffer\nIterator for array of: 0x70..0x80 - Compare and Capture …\nCompare and Capture Buffer\n0x70..0x80 - Compare and Capture Buffer\nIterator for array of: 0x70..0x80 - Compare and Capture …\nCompare and Capture Buffer\n0x70..0x80 - Compare and Capture Buffer\nIterator for array of: 0x70..0x80 - Compare and Capture …\nIterator for array of: 0x70..0x80 - Compare and Capture …\nCount\n0x34 - Count\nCount\n0x34 - Count\nCount\n0x34 - Count\nCount\n0x34 - Count\nControl A\n0x00 - Control A\nControl B Clear\n0x04 - Control B Clear\nControl B Set\n0x05 - Control B Set\nDebug Control\n0x1e - Debug Control\nDriver Control\n0x18 - Driver Control\nEvent Control\n0x20 - Event Control\nRecoverable Fault A Configuration\n0x0c - Recoverable Fault A Configuration\nRecoverable Fault B Configuration\n0x10 - Recoverable Fault B Configuration\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x24 - Interrupt Enable Clear\nInterrupt Enable Set\n0x28 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x2c - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nPattern\n0x38 - Pattern\nPattern Buffer\n0x64 - Pattern Buffer\nPeriod\n0x40 - Period\nPeriod\n0x40 - Period\nPeriod\n0x40 - Period\nPeriod\n0x40 - Period\nPeriod Buffer\n0x6c - Period Buffer\nPeriod Buffer\n0x6c - Period Buffer\nPeriod Buffer\n0x6c - Period Buffer\nPeriod Buffer\n0x6c - Period Buffer\nStatus\n0x30 - Status\nSynchronization Busy\n0x08 - Synchronization Busy\nWaveform Control\n0x3c - Waveform Control\nWaveform Control Buffer\n0x68 - Waveform Control Buffer\nWaveform Extension Configuration\n0x14 - Waveform Extension Configuration\nField <code>CC</code> reader - Channel Compare/Capture Value\nCompare and Capture\nField <code>CC</code> writer - Channel Compare/Capture Value\nRegister <code>CC%s</code> reader\nRegister <code>CC%s</code> writer\nBits 0:23 - Channel Compare/Capture Value\nBits 0:23 - Channel Compare/Capture Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCompare and Capture\nField <code>CC</code> reader - Channel Compare/Capture Value\nField <code>CC</code> writer - Channel Compare/Capture Value\nField <code>DITHERCY</code> reader - Dithering Cycle Number\nField <code>DITHERCY</code> writer - Dithering Cycle Number\nRegister <code>CC%s_DITH4</code> reader\nRegister <code>CC%s_DITH4</code> writer\nBits 4:23 - Channel Compare/Capture Value\nBits 4:23 - Channel Compare/Capture Value\nBits 0:3 - Dithering Cycle Number\nBits 0:3 - Dithering Cycle Number\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCompare and Capture\nField <code>CC</code> reader - Channel Compare/Capture Value\nField <code>CC</code> writer - Channel Compare/Capture Value\nField <code>DITHERCY</code> reader - Dithering Cycle Number\nField <code>DITHERCY</code> writer - Dithering Cycle Number\nRegister <code>CC%s_DITH5</code> reader\nRegister <code>CC%s_DITH5</code> writer\nBits 5:23 - Channel Compare/Capture Value\nBits 5:23 - Channel Compare/Capture Value\nBits 0:4 - Dithering Cycle Number\nBits 0:4 - Dithering Cycle Number\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCompare and Capture\nField <code>CC</code> reader - Channel Compare/Capture Value\nField <code>CC</code> writer - Channel Compare/Capture Value\nField <code>DITHERCY</code> reader - Dithering Cycle Number\nField <code>DITHERCY</code> writer - Dithering Cycle Number\nRegister <code>CC%s_DITH6</code> reader\nRegister <code>CC%s_DITH6</code> writer\nBits 6:23 - Channel Compare/Capture Value\nBits 6:23 - Channel Compare/Capture Value\nBits 0:5 - Dithering Cycle Number\nBits 0:5 - Dithering Cycle Number\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CCB</code> reader - Channel Compare/Capture Buffer Value\nCompare and Capture Buffer\nField <code>CCB</code> writer - Channel Compare/Capture Buffer Value\nRegister <code>CCB%s</code> reader\nRegister <code>CCB%s</code> writer\nBits 0:23 - Channel Compare/Capture Buffer Value\nBits 0:23 - Channel Compare/Capture Buffer Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCompare and Capture Buffer\nField <code>CCB</code> reader - Channel Compare/Capture Buffer Value\nField <code>CCB</code> writer - Channel Compare/Capture Buffer Value\nField <code>DITHERCYB</code> reader - Dithering Buffer Cycle Number\nField <code>DITHERCYB</code> writer - Dithering Buffer Cycle Number\nRegister <code>CCB%s_DITH4</code> reader\nRegister <code>CCB%s_DITH4</code> writer\nBits 4:23 - Channel Compare/Capture Buffer Value\nBits 4:23 - Channel Compare/Capture Buffer Value\nBits 0:3 - Dithering Buffer Cycle Number\nBits 0:3 - Dithering Buffer Cycle Number\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCompare and Capture Buffer\nField <code>CCB</code> reader - Channel Compare/Capture Buffer Value\nField <code>CCB</code> writer - Channel Compare/Capture Buffer Value\nField <code>DITHERCYB</code> reader - Dithering Buffer Cycle Number\nField <code>DITHERCYB</code> writer - Dithering Buffer Cycle Number\nRegister <code>CCB%s_DITH5</code> reader\nRegister <code>CCB%s_DITH5</code> writer\nBits 5:23 - Channel Compare/Capture Buffer Value\nBits 5:23 - Channel Compare/Capture Buffer Value\nBits 0:4 - Dithering Buffer Cycle Number\nBits 0:4 - Dithering Buffer Cycle Number\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCompare and Capture Buffer\nField <code>CCB</code> reader - Channel Compare/Capture Buffer Value\nField <code>CCB</code> writer - Channel Compare/Capture Buffer Value\nField <code>DITHERCYB</code> reader - Dithering Buffer Cycle Number\nField <code>DITHERCYB</code> writer - Dithering Buffer Cycle Number\nRegister <code>CCB%s_DITH6</code> reader\nRegister <code>CCB%s_DITH6</code> writer\nBits 6:23 - Channel Compare/Capture Buffer Value\nBits 6:23 - Channel Compare/Capture Buffer Value\nBits 0:5 - Dithering Buffer Cycle Number\nBits 0:5 - Dithering Buffer Cycle Number\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nCount\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:23 - Counter Value\nBits 0:23 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCount\nField <code>COUNT</code> reader - Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT_DITH4</code> reader\nRegister <code>COUNT_DITH4</code> writer\nBits 4:23 - Counter Value\nBits 4:23 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCount\nField <code>COUNT</code> reader - Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT_DITH5</code> reader\nRegister <code>COUNT_DITH5</code> writer\nBits 5:23 - Counter Value\nBits 5:23 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCount\nField <code>COUNT</code> reader - Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT_DITH6</code> reader\nRegister <code>COUNT_DITH6</code> writer\nBits 6:23 - Counter Value\nBits 6:23 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ALOCK</code> reader - Auto Lock\nField <code>ALOCK</code> writer - Auto Lock\nField <code>CPTEN0</code> reader - Capture Channel 0 Enable\nField <code>CPTEN0</code> writer - Capture Channel 0 Enable\nField <code>CPTEN1</code> reader - Capture Channel 1 Enable\nField <code>CPTEN1</code> writer - Capture Channel 1 Enable\nField <code>CPTEN2</code> reader - Capture Channel 2 Enable\nField <code>CPTEN2</code> writer - Capture Channel 2 Enable\nField <code>CPTEN3</code> reader - Capture Channel 3 Enable\nField <code>CPTEN3</code> writer - Capture Channel 3 Enable\nControl A\n1: Dithering is done every 16 PWM frames\n2: Dithering is done every 32 PWM frames\n3: Dithering is done every 64 PWM frames\n0: No division\n7: Divide by 1024\n4: Divide by 16\n1: Divide by 2\n6: Divide by 256\n2: Divide by 4\n5: Divide by 64\n3: Divide by 8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\n0: Reload or reset counter on next GCLK\n0: Dithering is disabled\n1: Reload or reset counter on next prescaler clock\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nField <code>PRESCSYNC</code> reader - Prescaler and Counter …\nField <code>PRESCSYNC</code> writer - Prescaler and Counter …\nPrescaler and Counter Synchronization Selection\nRegister <code>CTRLA</code> reader\nField <code>RESOLUTION</code> reader - Enhanced Resolution\nField <code>RESOLUTION</code> writer - Enhanced Resolution\nEnhanced Resolution\n2: Reload or reset counter on next GCLK and reset …\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 14 - Auto Lock\nBit 14 - Auto Lock\nBit 24 - Capture Channel 0 Enable\nBit 24 - Capture Channel 0 Enable\nBit 25 - Capture Channel 1 Enable\nBit 25 - Capture Channel 1 Enable\nBit 26 - Capture Channel 2 Enable\nBit 26 - Capture Channel 2 Enable\nBit 27 - Capture Channel 3 Enable\nBit 27 - Capture Channel 3 Enable\nDithering is done every 16 PWM frames\nDithering is done every 32 PWM frames\nDithering is done every 64 PWM frames\nNo division\nDivide by 1024\nDivide by 16\nDivide by 2\nDivide by 256\nDivide by 4\nDivide by 64\nDivide by 8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReload or reset counter on next GCLK\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDithering is done every 16 PWM frames\nDithering is done every 32 PWM frames\nDithering is done every 64 PWM frames\nNo division\nDivide by 1024\nDivide by 16\nDivide by 2\nDivide by 256\nDivide by 4\nDivide by 64\nDivide by 8\nReload or reset counter on next GCLK\nDithering is disabled\nReload or reset counter on next prescaler clock\nReload or reset counter on next GCLK and reset prescaler …\nDithering is disabled\nReload or reset counter on next prescaler clock\nBits 8:10 - Prescaler\nBits 8:10 - Prescaler\nBits 12:13 - Prescaler and Counter Synchronization …\nBits 12:13 - Prescaler and Counter Synchronization …\nBits 5:6 - Enhanced Resolution\nBits 5:6 - Enhanced Resolution\nReload or reset counter on next GCLK and reset prescaler …\nBit 11 - Run in Standby\nBit 11 - Run in Standby\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n2: Clear index: cycle A will be forced in the next cycle\nField <code>CMD</code> reader - TCC Command\nField <code>CMD</code> writer - TCC Command\nTCC Command\nControl B Clear\nField <code>DIR</code> reader - Counter Direction\nField <code>DIR</code> writer - Counter Direction\n0: Command disabled: Index toggles between cycles A and B\n3: Hold index: the next cycle will be the same as the …\nField <code>IDXCMD</code> reader - Ramp Index Command\nField <code>IDXCMD</code> writer - Ramp Index Command\nRamp Index Command\nField <code>LUPD</code> reader - Lock Update\nField <code>LUPD</code> writer - Lock Update\n0: No action\nField <code>ONESHOT</code> reader - One-Shot\nField <code>ONESHOT</code> writer - One-Shot\nRegister <code>CTRLBCLR</code> reader\n4: Force COUNT read synchronization\n1: Clear start, restart or retrigger\n1: Set index: cycle B will be forced in the next cycle\n2: Force stop\n3: Force update of double buffered registers\nRegister <code>CTRLBCLR</code> writer\nClear index: cycle A will be forced in the next cycle\nBits 5:7 - TCC Command\nBits 5:7 - TCC Command\nBit 0 - Counter Direction\nBit 0 - Counter Direction\nCommand disabled: Index toggles between cycles A and B\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHold index: the next cycle will be the same as the current …\nBits 3:4 - Ramp Index Command\nBits 3:4 - Ramp Index Command\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear index: cycle A will be forced in the next cycle\nCommand disabled: Index toggles between cycles A and B\nHold index: the next cycle will be the same as the current …\nNo action\nForce COUNT read synchronization\nClear start, restart or retrigger\nSet index: cycle B will be forced in the next cycle\nForce stop\nForce update of double buffered registers\nBit 1 - Lock Update\nBit 1 - Lock Update\nNo action\nBit 2 - One-Shot\nBit 2 - One-Shot\nForce COUNT read synchronization\nClear start, restart or retrigger\nSet index: cycle B will be forced in the next cycle\nForce stop\nForce update of double buffered registers\nGet enumerated values variant\nGet enumerated values variant\n2: Clear index: cycle A will be forced in the next cycle\nField <code>CMD</code> reader - TCC Command\nField <code>CMD</code> writer - TCC Command\nTCC Command\nControl B Set\nField <code>DIR</code> reader - Counter Direction\nField <code>DIR</code> writer - Counter Direction\n0: Command disabled: Index toggles between cycles A and B\n3: Hold index: the next cycle will be the same as the …\nField <code>IDXCMD</code> reader - Ramp Index Command\nField <code>IDXCMD</code> writer - Ramp Index Command\nRamp Index Command\nField <code>LUPD</code> reader - Lock Update\nField <code>LUPD</code> writer - Lock Update\n0: No action\nField <code>ONESHOT</code> reader - One-Shot\nField <code>ONESHOT</code> writer - One-Shot\nRegister <code>CTRLBSET</code> reader\n4: Force COUNT read synchronization\n1: Clear start, restart or retrigger\n1: Set index: cycle B will be forced in the next cycle\n2: Force stop\n3: Force update of double buffered registers\nRegister <code>CTRLBSET</code> writer\nClear index: cycle A will be forced in the next cycle\nBits 5:7 - TCC Command\nBits 5:7 - TCC Command\nBit 0 - Counter Direction\nBit 0 - Counter Direction\nCommand disabled: Index toggles between cycles A and B\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHold index: the next cycle will be the same as the current …\nBits 3:4 - Ramp Index Command\nBits 3:4 - Ramp Index Command\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear index: cycle A will be forced in the next cycle\nCommand disabled: Index toggles between cycles A and B\nHold index: the next cycle will be the same as the current …\nNo action\nForce COUNT read synchronization\nClear start, restart or retrigger\nSet index: cycle B will be forced in the next cycle\nForce stop\nForce update of double buffered registers\nBit 1 - Lock Update\nBit 1 - Lock Update\nNo action\nBit 2 - One-Shot\nBit 2 - One-Shot\nForce COUNT read synchronization\nClear start, restart or retrigger\nSet index: cycle B will be forced in the next cycle\nForce stop\nForce update of double buffered registers\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Debug Running Mode\nField <code>DBGRUN</code> writer - Debug Running Mode\nField <code>FDDBD</code> reader - Fault Detection on Debug Break …\nField <code>FDDBD</code> writer - Fault Detection on Debug Break …\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Running Mode\nBit 0 - Debug Running Mode\nBit 2 - Fault Detection on Debug Break Detection\nBit 2 - Fault Detection on Debug Break Detection\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDriver Control\nField <code>FILTERVAL0</code> reader - Non-Recoverable Fault Input 0 …\nField <code>FILTERVAL0</code> writer - Non-Recoverable Fault Input 0 …\nField <code>FILTERVAL1</code> reader - Non-Recoverable Fault Input 1 …\nField <code>FILTERVAL1</code> writer - Non-Recoverable Fault Input 1 …\nField <code>INVEN0</code> reader - Output Waveform 0 Inversion\nField <code>INVEN0</code> writer - Output Waveform 0 Inversion\nField <code>INVEN1</code> reader - Output Waveform 1 Inversion\nField <code>INVEN1</code> writer - Output Waveform 1 Inversion\nField <code>INVEN2</code> reader - Output Waveform 2 Inversion\nField <code>INVEN2</code> writer - Output Waveform 2 Inversion\nField <code>INVEN3</code> reader - Output Waveform 3 Inversion\nField <code>INVEN3</code> writer - Output Waveform 3 Inversion\nField <code>INVEN4</code> reader - Output Waveform 4 Inversion\nField <code>INVEN4</code> writer - Output Waveform 4 Inversion\nField <code>INVEN5</code> reader - Output Waveform 5 Inversion\nField <code>INVEN5</code> writer - Output Waveform 5 Inversion\nField <code>INVEN6</code> reader - Output Waveform 6 Inversion\nField <code>INVEN6</code> writer - Output Waveform 6 Inversion\nField <code>INVEN7</code> reader - Output Waveform 7 Inversion\nField <code>INVEN7</code> writer - Output Waveform 7 Inversion\nField <code>NRE0</code> reader - Non-Recoverable State 0 Output Enable\nField <code>NRE0</code> writer - Non-Recoverable State 0 Output Enable\nField <code>NRE1</code> reader - Non-Recoverable State 1 Output Enable\nField <code>NRE1</code> writer - Non-Recoverable State 1 Output Enable\nField <code>NRE2</code> reader - Non-Recoverable State 2 Output Enable\nField <code>NRE2</code> writer - Non-Recoverable State 2 Output Enable\nField <code>NRE3</code> reader - Non-Recoverable State 3 Output Enable\nField <code>NRE3</code> writer - Non-Recoverable State 3 Output Enable\nField <code>NRE4</code> reader - Non-Recoverable State 4 Output Enable\nField <code>NRE4</code> writer - Non-Recoverable State 4 Output Enable\nField <code>NRE5</code> reader - Non-Recoverable State 5 Output Enable\nField <code>NRE5</code> writer - Non-Recoverable State 5 Output Enable\nField <code>NRE6</code> reader - Non-Recoverable State 6 Output Enable\nField <code>NRE6</code> writer - Non-Recoverable State 6 Output Enable\nField <code>NRE7</code> reader - Non-Recoverable State 7 Output Enable\nField <code>NRE7</code> writer - Non-Recoverable State 7 Output Enable\nField <code>NRV0</code> reader - Non-Recoverable State 0 Output Value\nField <code>NRV0</code> writer - Non-Recoverable State 0 Output Value\nField <code>NRV1</code> reader - Non-Recoverable State 1 Output Value\nField <code>NRV1</code> writer - Non-Recoverable State 1 Output Value\nField <code>NRV2</code> reader - Non-Recoverable State 2 Output Value\nField <code>NRV2</code> writer - Non-Recoverable State 2 Output Value\nField <code>NRV3</code> reader - Non-Recoverable State 3 Output Value")