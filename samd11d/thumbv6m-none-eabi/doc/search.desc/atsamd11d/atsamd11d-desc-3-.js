searchState.loadedDescShard("atsamd11d", 3, "Synchronization Busy\nField <code>WAVE</code> reader - Wave Busy\nField <code>WAVEB</code> reader - Wave Buffer Busy\nBit 8 - Compare Channel 0 Busy\nBit 9 - Compare Channel 1 Busy\nBit 10 - Compare Channel 2 Busy\nBit 11 - Compare Channel 3 Busy\nBit 19 - Compare Channel Buffer 0 Busy\nBit 20 - Compare Channel Buffer 1 Busy\nBit 21 - Compare Channel Buffer 2 Busy\nBit 22 - Compare Channel Buffer 3 Busy\nBit 4 - Count Busy\nBit 2 - Ctrlb Busy\nBit 1 - Enable Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 5 - Pattern Busy\nBit 16 - Pattern Buffer Busy\nBit 7 - Period busy\nBit 18 - Period Buffer Busy\nBit 3 - Status Busy\nBit 0 - Swrst Busy\nBit 6 - Wave Busy\nBit 17 - Wave Buffer Busy\nField <code>CICCEN0</code> reader - Circular Channel 0 Enable\nField <code>CICCEN0</code> writer - Circular Channel 0 Enable\nField <code>CICCEN1</code> reader - Circular Channel 1 Enable\nField <code>CICCEN1</code> writer - Circular Channel 1 Enable\nField <code>CICCEN2</code> reader - Circular Channel 2 Enable\nField <code>CICCEN2</code> writer - Circular Channel 2 Enable\nField <code>CICCEN3</code> reader - Circular Channel 3 Enable\nField <code>CICCEN3</code> writer - Circular Channel 3 Enable\nField <code>CIPEREN</code> reader - Circular period Enable\nField <code>CIPEREN</code> writer - Circular period Enable\n6: Dual-slope with interrupt/event condition when COUNT …\n5: Dual-slope with interrupt/event condition when COUNT …\n4: Dual-slope critical\n7: Dual-slope with interrupt/event condition when COUNT …\n1: Match frequency\n0: Normal frequency\n2: Normal PWM\nField <code>POL0</code> reader - Channel 0 Polarity\nField <code>POL0</code> writer - Channel 0 Polarity\nField <code>POL1</code> reader - Channel 1 Polarity\nField <code>POL1</code> writer - Channel 1 Polarity\nField <code>POL2</code> reader - Channel 2 Polarity\nField <code>POL2</code> writer - Channel 2 Polarity\nField <code>POL3</code> reader - Channel 3 Polarity\nField <code>POL3</code> writer - Channel 3 Polarity\nRegister <code>WAVE</code> reader\n0: RAMP1 operation\n2: RAMP2 operation\n1: Alternative RAMP2 operation\n3: Critical RAMP2 operation\nField <code>RAMP</code> reader - Ramp Mode\nField <code>RAMP</code> writer - Ramp Mode\nRamp Mode\nField <code>SWAP0</code> reader - Swap DTI Output Pair 0\nField <code>SWAP0</code> writer - Swap DTI Output Pair 0\nField <code>SWAP1</code> reader - Swap DTI Output Pair 1\nField <code>SWAP1</code> writer - Swap DTI Output Pair 1\nField <code>SWAP2</code> reader - Swap DTI Output Pair 2\nField <code>SWAP2</code> writer - Swap DTI Output Pair 2\nField <code>SWAP3</code> reader - Swap DTI Output Pair 3\nField <code>SWAP3</code> writer - Swap DTI Output Pair 3\nRegister <code>WAVE</code> writer\nWaveform Control\nField <code>WAVEGEN</code> reader - Waveform Generation\nField <code>WAVEGEN</code> writer - Waveform Generation\nWaveform Generation\nBit 8 - Circular Channel 0 Enable\nBit 8 - Circular Channel 0 Enable\nBit 9 - Circular Channel 1 Enable\nBit 9 - Circular Channel 1 Enable\nBit 10 - Circular Channel 2 Enable\nBit 10 - Circular Channel 2 Enable\nBit 11 - Circular Channel 3 Enable\nBit 11 - Circular Channel 3 Enable\nBit 7 - Circular period Enable\nBit 7 - Circular period Enable\nDual-slope with interrupt/event condition when COUNT …\nDual-slope with interrupt/event condition when COUNT …\nDual-slope critical\nDual-slope with interrupt/event condition when COUNT …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDual-slope with interrupt/event condition when COUNT …\nDual-slope with interrupt/event condition when COUNT …\nDual-slope critical\nDual-slope with interrupt/event condition when COUNT …\nMatch frequency\nNormal frequency\nNormal PWM\nRAMP1 operation\nRAMP2 operation\nAlternative RAMP2 operation\nCritical RAMP2 operation\nMatch frequency\nNormal frequency\nNormal PWM\nBit 16 - Channel 0 Polarity\nBit 16 - Channel 0 Polarity\nBit 17 - Channel 1 Polarity\nBit 17 - Channel 1 Polarity\nBit 18 - Channel 2 Polarity\nBit 18 - Channel 2 Polarity\nBit 19 - Channel 3 Polarity\nBit 19 - Channel 3 Polarity\nBits 4:5 - Ramp Mode\nBits 4:5 - Ramp Mode\nRAMP1 operation\nRAMP2 operation\nAlternative RAMP2 operation\nCritical RAMP2 operation\nBit 24 - Swap DTI Output Pair 0\nBit 24 - Swap DTI Output Pair 0\nBit 25 - Swap DTI Output Pair 1\nBit 25 - Swap DTI Output Pair 1\nBit 26 - Swap DTI Output Pair 2\nBit 26 - Swap DTI Output Pair 2\nBit 27 - Swap DTI Output Pair 3\nBit 27 - Swap DTI Output Pair 3\nGet enumerated values variant\nGet enumerated values variant\nBits 0:2 - Waveform Generation\nBits 0:2 - Waveform Generation\nField <code>CICCENB0</code> reader - Circular Channel 0 Enable Buffer\nField <code>CICCENB0</code> writer - Circular Channel 0 Enable Buffer\nField <code>CICCENB1</code> reader - Circular Channel 1 Enable Buffer\nField <code>CICCENB1</code> writer - Circular Channel 1 Enable Buffer\nField <code>CICCENB2</code> reader - Circular Channel 2 Enable Buffer\nField <code>CICCENB2</code> writer - Circular Channel 2 Enable Buffer\nField <code>CICCENB3</code> reader - Circular Channel 3 Enable Buffer\nField <code>CICCENB3</code> writer - Circular Channel 3 Enable Buffer\nField <code>CIPERENB</code> reader - Circular Period Enable Buffer\nField <code>CIPERENB</code> writer - Circular Period Enable Buffer\n6: Dual-slope with interrupt/event condition when COUNT …\n5: Dual-slope with interrupt/event condition when COUNT …\n4: Dual-slope critical\n7: Dual-slope with interrupt/event condition when COUNT …\n1: Match frequency\n0: Normal frequency\n2: Normal PWM\nField <code>POLB0</code> reader - Channel 0 Polarity Buffer\nField <code>POLB0</code> writer - Channel 0 Polarity Buffer\nField <code>POLB1</code> reader - Channel 1 Polarity Buffer\nField <code>POLB1</code> writer - Channel 1 Polarity Buffer\nField <code>POLB2</code> reader - Channel 2 Polarity Buffer\nField <code>POLB2</code> writer - Channel 2 Polarity Buffer\nField <code>POLB3</code> reader - Channel 3 Polarity Buffer\nField <code>POLB3</code> writer - Channel 3 Polarity Buffer\nRegister <code>WAVEB</code> reader\n0: RAMP1 operation\n2: RAMP2 operation\n1: Alternative RAMP2 operation\nField <code>RAMPB</code> reader - Ramp Mode Buffer\nField <code>RAMPB</code> writer - Ramp Mode Buffer\nRamp Mode Buffer\nField <code>SWAPB0</code> reader - Swap DTI Output Pair 0 Buffer\nField <code>SWAPB0</code> writer - Swap DTI Output Pair 0 Buffer\nField <code>SWAPB1</code> reader - Swap DTI Output Pair 1 Buffer\nField <code>SWAPB1</code> writer - Swap DTI Output Pair 1 Buffer\nField <code>SWAPB2</code> reader - Swap DTI Output Pair 2 Buffer\nField <code>SWAPB2</code> writer - Swap DTI Output Pair 2 Buffer\nField <code>SWAPB3</code> reader - Swap DTI Output Pair 3 Buffer\nField <code>SWAPB3</code> writer - Swap DTI Output Pair 3 Buffer\nRegister <code>WAVEB</code> writer\nWaveform Control Buffer\nField <code>WAVEGENB</code> reader - Waveform Generation Buffer\nField <code>WAVEGENB</code> writer - Waveform Generation Buffer\nWaveform Generation Buffer\nBit 8 - Circular Channel 0 Enable Buffer\nBit 8 - Circular Channel 0 Enable Buffer\nBit 9 - Circular Channel 1 Enable Buffer\nBit 9 - Circular Channel 1 Enable Buffer\nBit 10 - Circular Channel 2 Enable Buffer\nBit 10 - Circular Channel 2 Enable Buffer\nBit 11 - Circular Channel 3 Enable Buffer\nBit 11 - Circular Channel 3 Enable Buffer\nBit 7 - Circular Period Enable Buffer\nBit 7 - Circular Period Enable Buffer\nDual-slope with interrupt/event condition when COUNT …\nDual-slope with interrupt/event condition when COUNT …\nDual-slope critical\nDual-slope with interrupt/event condition when COUNT …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDual-slope with interrupt/event condition when COUNT …\nDual-slope with interrupt/event condition when COUNT …\nDual-slope critical\nDual-slope with interrupt/event condition when COUNT …\nMatch frequency\nNormal frequency\nNormal PWM\nRAMP1 operation\nRAMP2 operation\nAlternative RAMP2 operation\nMatch frequency\nNormal frequency\nNormal PWM\nBit 16 - Channel 0 Polarity Buffer\nBit 16 - Channel 0 Polarity Buffer\nBit 17 - Channel 1 Polarity Buffer\nBit 17 - Channel 1 Polarity Buffer\nBit 18 - Channel 2 Polarity Buffer\nBit 18 - Channel 2 Polarity Buffer\nBit 19 - Channel 3 Polarity Buffer\nBit 19 - Channel 3 Polarity Buffer\nRAMP1 operation\nRAMP2 operation\nAlternative RAMP2 operation\nBits 4:5 - Ramp Mode Buffer\nBits 4:5 - Ramp Mode Buffer\nBit 24 - Swap DTI Output Pair 0 Buffer\nBit 24 - Swap DTI Output Pair 0 Buffer\nBit 25 - Swap DTI Output Pair 1 Buffer\nBit 25 - Swap DTI Output Pair 1 Buffer\nBit 26 - Swap DTI Output Pair 2 Buffer\nBit 26 - Swap DTI Output Pair 2 Buffer\nBit 27 - Swap DTI Output Pair 3 Buffer\nBit 27 - Swap DTI Output Pair 3 Buffer\nGet enumerated values variant\nGet enumerated values variant\nBits 0:2 - Waveform Generation Buffer\nBits 0:2 - Waveform Generation Buffer\nField <code>DTHS</code> reader - Dead-time High Side Outputs Value\nField <code>DTHS</code> writer - Dead-time High Side Outputs Value\nField <code>DTIEN0</code> reader - Dead-time Insertion Generator 0 …\nField <code>DTIEN0</code> writer - Dead-time Insertion Generator 0 …\nField <code>DTIEN1</code> reader - Dead-time Insertion Generator 1 …\nField <code>DTIEN1</code> writer - Dead-time Insertion Generator 1 …\nField <code>DTIEN2</code> reader - Dead-time Insertion Generator 2 …\nField <code>DTIEN2</code> writer - Dead-time Insertion Generator 2 …\nField <code>DTIEN3</code> reader - Dead-time Insertion Generator 3 …\nField <code>DTIEN3</code> writer - Dead-time Insertion Generator 3 …\nField <code>DTLS</code> reader - Dead-time Low Side Outputs Value\nField <code>DTLS</code> writer - Dead-time Low Side Outputs Value\nField <code>OTMX</code> reader - Output Matrix\nField <code>OTMX</code> writer - Output Matrix\nRegister <code>WEXCTRL</code> reader\nRegister <code>WEXCTRL</code> writer\nWaveform Extension Configuration\nBits 24:31 - Dead-time High Side Outputs Value\nBits 24:31 - Dead-time High Side Outputs Value\nBit 8 - Dead-time Insertion Generator 0 Enable\nBit 8 - Dead-time Insertion Generator 0 Enable\nBit 9 - Dead-time Insertion Generator 1 Enable\nBit 9 - Dead-time Insertion Generator 1 Enable\nBit 10 - Dead-time Insertion Generator 2 Enable\nBit 10 - Dead-time Insertion Generator 2 Enable\nBit 11 - Dead-time Insertion Generator 3 Enable\nBit 11 - Dead-time Insertion Generator 3 Enable\nBits 16:23 - Dead-time Low Side Outputs Value\nBits 16:23 - Dead-time Low Side Outputs Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:1 - Output Matrix\nBits 0:1 - Output Matrix\nUSB is Device\nRegister block\nCluster USB is Device\n0x00..0x109 - USB is Device\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCTRLA (rw) register accessor: Control A\nCTRLB (rw) register accessor: DEVICE Control B\nDADD (rw) register accessor: DEVICE Device Address\nDESCADD (rw) register accessor: Descriptor Address\nUSB is Device\nEPCFG (rw) register accessor: DEVICE End Point …\nEPINTENCLR (rw) register accessor: DEVICE End Point …\nEPINTENSET (rw) register accessor: DEVICE End Point …\nEPINTFLAG (rw) register accessor: DEVICE End Point …\nEPINTSMRY (r) register accessor: DEVICE End Point …\nEPSTATUS (r) register accessor: DEVICE End Point Pipe …\nEPSTATUSCLR (w) register accessor: DEVICE End Point Pipe …\nEPSTATUSSET (w) register accessor: DEVICE End Point Pipe …\nFNUM (r) register accessor: DEVICE Device Frame Number\nFSMSTATUS (r) register accessor: Finite State Machine …\nINTENCLR (rw) register accessor: DEVICE Device Interrupt …\nINTENSET (rw) register accessor: DEVICE Device Interrupt …\nINTFLAG (rw) register accessor: DEVICE Device Interrupt …\nPADCAL (rw) register accessor: USB PAD Calibration\nQOSCTRL (rw) register accessor: USB Quality Of Service\nSTATUS (r) register accessor: DEVICE Status\nSYNCBUSY (r) register accessor: Synchronization Busy\nControl A\n0x00 - Control A\nDEVICE Control B\n0x08 - DEVICE Control B\nDEVICE Device Address\n0x0a - DEVICE Device Address\nDescriptor Address\n0x24 - Descriptor Address\nDEVICE End Point Configuration\n0x100..0x108 - DEVICE End Point Configuration\nIterator for array of: 0x100..0x108 - DEVICE End Point …\nDEVICE End Point Interrupt Clear Flag\n0x108..0x110 - DEVICE End Point Interrupt Clear Flag\nIterator for array of: 0x108..0x110 - DEVICE End Point …\nDEVICE End Point Interrupt Set Flag\n0x109..0x111 - DEVICE End Point Interrupt Set Flag\nIterator for array of: 0x109..0x111 - DEVICE End Point …\nDEVICE End Point Interrupt Flag\n0x107..0x10f - DEVICE End Point Interrupt Flag\nIterator for array of: 0x107..0x10f - DEVICE End Point …\nDEVICE End Point Interrupt Summary\n0x20 - DEVICE End Point Interrupt Summary\nDEVICE End Point Pipe Status\n0x106..0x10e - DEVICE End Point Pipe Status\nIterator for array of: 0x106..0x10e - DEVICE End Point …\nDEVICE End Point Pipe Status Clear\n0x104..0x10c - DEVICE End Point Pipe Status Clear\nIterator for array of: 0x104..0x10c - DEVICE End Point …\nDEVICE End Point Pipe Status Set\n0x105..0x10d - DEVICE End Point Pipe Status Set\nIterator for array of: 0x105..0x10d - DEVICE End Point …\nDEVICE Device Frame Number\n0x10 - DEVICE Device Frame Number\nReturns the argument unchanged.\nFinite State Machine Status\n0x0d - Finite State Machine Status\nDEVICE Device Interrupt Enable Clear\n0x14 - DEVICE Device Interrupt Enable Clear\nDEVICE Device Interrupt Enable Set\n0x18 - DEVICE Device Interrupt Enable Set\nDEVICE Device Interrupt Flag\n0x1c - DEVICE Device Interrupt Flag\nCalls <code>U::from(self)</code>.\nUSB PAD Calibration\n0x28 - USB PAD Calibration\nUSB Quality Of Service\n0x03 - USB Quality Of Service\nDEVICE Status\n0x0c - DEVICE Status\nSynchronization Busy\n0x02 - Synchronization Busy\nControl A\n0: Device Mode\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby Mode\nField <code>RUNSTDBY</code> writer - Run in Standby Mode\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nDevice Mode\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDevice Mode\nBit 7 - Operating Mode\nBit 7 - Operating Mode\nBit 2 - Run in Standby Mode\nBit 2 - Run in Standby Mode\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\n1: ACK\nDEVICE Control B\nField <code>DETACH</code> reader - Detach\nField <code>DETACH</code> writer - Detach\n0: FS : Full Speed\nField <code>GNAK</code> reader - Global NAK\nField <code>GNAK</code> writer - Global NAK\n2: HS : High Speed capable\n3: HSTM: High Speed Test Mode (force high-speed mode for …\nField <code>LPMHDSK</code> reader - Link Power Management Handshake\nField <code>LPMHDSK</code> writer - Link Power Management Handshake\nLink Power Management Handshake\n1: LS : Low Speed\n0: No handshake. LPM is not supported\nField <code>NREPLY</code> reader - No Reply\nField <code>NREPLY</code> writer - No Reply\n2: NYET\nField <code>OPMODE2</code> reader - Specific Operational Mode\nField <code>OPMODE2</code> writer - Specific Operational Mode\nRegister <code>CTRLB</code> reader\nField <code>SPDCONF</code> reader - Speed Configuration\nField <code>SPDCONF</code> writer - Speed Configuration\nSpeed Configuration\n3: STALL\nField <code>TSTJ</code> reader - Test mode J\nField <code>TSTJ</code> writer - Test mode J\nField <code>TSTK</code> reader - Test mode K\nField <code>TSTK</code> writer - Test mode K\nField <code>TSTPCKT</code> reader - Test packet mode\nField <code>TSTPCKT</code> writer - Test packet mode\nField <code>UPRSM</code> reader - Upstream Resume\nField <code>UPRSM</code> writer - Upstream Resume\nRegister <code>CTRLB</code> writer\nACK\nBit 0 - Detach\nBit 0 - Detach\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFS : Full Speed\nBit 9 - Global NAK\nBit 9 - Global NAK\nHS : High Speed capable\nHSTM: High Speed Test Mode (force high-speed mode for test …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nACK\nFS : Full Speed\nHS : High Speed capable\nHSTM: High Speed Test Mode (force high-speed mode for test …\nLS : Low Speed\nNo handshake. LPM is not supported\nNYET\nSTALL\nBits 10:11 - Link Power Management Handshake\nBits 10:11 - Link Power Management Handshake\nLS : Low Speed\nNo handshake. LPM is not supported\nBit 4 - No Reply\nBit 4 - No Reply\nNYET\nBit 8 - Specific Operational Mode\nBit 8 - Specific Operational Mode\nBits 2:3 - Speed Configuration\nBits 2:3 - Speed Configuration\nSTALL\nBit 5 - Test mode J\nBit 5 - Test mode J\nBit 6 - Test mode K\nBit 6 - Test mode K\nBit 7 - Test packet mode\nBit 7 - Test packet mode\nBit 1 - Upstream Resume\nBit 1 - Upstream Resume\nGet enumerated values variant\nGet enumerated values variant\nField <code>ADDEN</code> reader - Device Address Enable\nField <code>ADDEN</code> writer - Device Address Enable\nField <code>DADD</code> reader - Device Address\nDEVICE Device Address\nField <code>DADD</code> writer - Device Address\nRegister <code>DADD</code> reader\nRegister <code>DADD</code> writer\nBit 7 - Device Address Enable\nBit 7 - Device Address Enable\nBits 0:6 - Device Address\nBits 0:6 - Device Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DESCADD</code> reader - Descriptor Address Value\nDescriptor Address\nField <code>DESCADD</code> writer - Descriptor Address Value\nRegister <code>DESCADD</code> reader\nRegister <code>DESCADD</code> writer\nBits 0:31 - Descriptor Address Value\nBits 0:31 - Descriptor Address Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDEVICE End Point Configuration\nField <code>EPTYPE0</code> reader - End Point Type0\nField <code>EPTYPE0</code> writer - End Point Type0\nField <code>EPTYPE1</code> reader - End Point Type1\nField <code>EPTYPE1</code> writer - End Point Type1\nField <code>NYETDIS</code> reader - NYET Token Disable\nField <code>NYETDIS</code> writer - NYET Token Disable\nRegister <code>EPCFG%s</code> reader\nRegister <code>EPCFG%s</code> writer\nBits 0:2 - End Point Type0\nBits 0:2 - End Point Type0\nBits 4:6 - End Point Type1\nBits 4:6 - End Point Type1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - NYET Token Disable\nBit 7 - NYET Token Disable\nDEVICE End Point Interrupt Clear Flag\nRegister <code>EPINTENCLR%s</code> reader\nField <code>RXSTP</code> reader - Received Setup Interrupt Disable\nField <code>RXSTP</code> writer - Received Setup Interrupt Disable\nField <code>STALL0</code> reader - Stall 0 In/Out Interrupt Disable\nField <code>STALL0</code> writer - Stall 0 In/Out Interrupt Disable\nField <code>STALL1</code> reader - Stall 1 In/Out Interrupt Disable\nField <code>STALL1</code> writer - Stall 1 In/Out Interrupt Disable\nField <code>TRCPT0</code> reader - Transfer Complete 0 Interrupt Disable\nField <code>TRCPT0</code> writer - Transfer Complete 0 Interrupt Disable\nField <code>TRCPT1</code> reader - Transfer Complete 1 Interrupt Disable\nField <code>TRCPT1</code> writer - Transfer Complete 1 Interrupt Disable\nField <code>TRFAIL0</code> reader - Error Flow 0 Interrupt Disable\nField <code>TRFAIL0</code> writer - Error Flow 0 Interrupt Disable\nField <code>TRFAIL1</code> reader - Error Flow 1 Interrupt Disable\nField <code>TRFAIL1</code> writer - Error Flow 1 Interrupt Disable\nRegister <code>EPINTENCLR%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Received Setup Interrupt Disable\nBit 4 - Received Setup Interrupt Disable\nBit 5 - Stall 0 In/Out Interrupt Disable\nBit 5 - Stall 0 In/Out Interrupt Disable\nBit 6 - Stall 1 In/Out Interrupt Disable\nBit 6 - Stall 1 In/Out Interrupt Disable\nBit 0 - Transfer Complete 0 Interrupt Disable\nBit 0 - Transfer Complete 0 Interrupt Disable\nBit 1 - Transfer Complete 1 Interrupt Disable\nBit 1 - Transfer Complete 1 Interrupt Disable\nBit 2 - Error Flow 0 Interrupt Disable\nBit 2 - Error Flow 0 Interrupt Disable\nBit 3 - Error Flow 1 Interrupt Disable\nBit 3 - Error Flow 1 Interrupt Disable\nDEVICE End Point Interrupt Set Flag\nRegister <code>EPINTENSET%s</code> reader\nField <code>RXSTP</code> reader - Received Setup Interrupt Enable\nField <code>RXSTP</code> writer - Received Setup Interrupt Enable\nField <code>STALL0</code> reader - Stall 0 In/out Interrupt enable\nField <code>STALL0</code> writer - Stall 0 In/out Interrupt enable\nField <code>STALL1</code> reader - Stall 1 In/out Interrupt enable\nField <code>STALL1</code> writer - Stall 1 In/out Interrupt enable\nField <code>TRCPT0</code> reader - Transfer Complete 0 Interrupt Enable\nField <code>TRCPT0</code> writer - Transfer Complete 0 Interrupt Enable\nField <code>TRCPT1</code> reader - Transfer Complete 1 Interrupt Enable\nField <code>TRCPT1</code> writer - Transfer Complete 1 Interrupt Enable\nField <code>TRFAIL0</code> reader - Error Flow 0 Interrupt Enable\nField <code>TRFAIL0</code> writer - Error Flow 0 Interrupt Enable\nField <code>TRFAIL1</code> reader - Error Flow 1 Interrupt Enable\nField <code>TRFAIL1</code> writer - Error Flow 1 Interrupt Enable\nRegister <code>EPINTENSET%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Received Setup Interrupt Enable\nBit 4 - Received Setup Interrupt Enable\nBit 5 - Stall 0 In/out Interrupt enable\nBit 5 - Stall 0 In/out Interrupt enable\nBit 6 - Stall 1 In/out Interrupt enable\nBit 6 - Stall 1 In/out Interrupt enable\nBit 0 - Transfer Complete 0 Interrupt Enable\nBit 0 - Transfer Complete 0 Interrupt Enable\nBit 1 - Transfer Complete 1 Interrupt Enable\nBit 1 - Transfer Complete 1 Interrupt Enable\nBit 2 - Error Flow 0 Interrupt Enable\nBit 2 - Error Flow 0 Interrupt Enable\nBit 3 - Error Flow 1 Interrupt Enable\nBit 3 - Error Flow 1 Interrupt Enable\nDEVICE End Point Interrupt Flag\nRegister <code>EPINTFLAG%s</code> reader\nField <code>RXSTP</code> reader - Received Setup\nField <code>RXSTP</code> writer - Received Setup\nField <code>STALL0</code> reader - Stall 0 In/out\nField <code>STALL0</code> writer - Stall 0 In/out\nField <code>STALL1</code> reader - Stall 1 In/out\nField <code>STALL1</code> writer - Stall 1 In/out\nField <code>TRCPT0</code> reader - Transfer Complete 0\nField <code>TRCPT0</code> writer - Transfer Complete 0\nField <code>TRCPT1</code> reader - Transfer Complete 1\nField <code>TRCPT1</code> writer - Transfer Complete 1\nField <code>TRFAIL0</code> reader - Error Flow 0\nField <code>TRFAIL0</code> writer - Error Flow 0\nField <code>TRFAIL1</code> reader - Error Flow 1\nField <code>TRFAIL1</code> writer - Error Flow 1\nRegister <code>EPINTFLAG%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Received Setup\nBit 4 - Received Setup\nBit 5 - Stall 0 In/out\nBit 5 - Stall 0 In/out\nBit 6 - Stall 1 In/out\nBit 6 - Stall 1 In/out\nBit 0 - Transfer Complete 0\nBit 0 - Transfer Complete 0\nBit 1 - Transfer Complete 1\nBit 1 - Transfer Complete 1\nBit 2 - Error Flow 0\nBit 2 - Error Flow 0\nBit 3 - Error Flow 1\nBit 3 - Error Flow 1\nField <code>EPINT0</code> reader - End Point 0 Interrupt\nField <code>EPINT1</code> reader - End Point 1 Interrupt\nField <code>EPINT2</code> reader - End Point 2 Interrupt\nField <code>EPINT3</code> reader - End Point 3 Interrupt\nField <code>EPINT4</code> reader - End Point 4 Interrupt\nField <code>EPINT5</code> reader - End Point 5 Interrupt\nField <code>EPINT6</code> reader - End Point 6 Interrupt\nField <code>EPINT7</code> reader - End Point 7 Interrupt\nDEVICE End Point Interrupt Summary\nRegister <code>EPINTSMRY</code> reader\nBit 0 - End Point 0 Interrupt\nBit 1 - End Point 1 Interrupt\nBit 2 - End Point 2 Interrupt\nBit 3 - End Point 3 Interrupt\nBit 4 - End Point 4 Interrupt\nBit 5 - End Point 5 Interrupt\nBit 6 - End Point 6 Interrupt\nBit 7 - End Point 7 Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BK0RDY</code> reader - Bank 0 ready\nField <code>BK1RDY</code> reader - Bank 1 ready\nField <code>CURBK</code> reader - Current Bank\nField <code>DTGLIN</code> reader - Data Toggle In\nField <code>DTGLOUT</code> reader - Data Toggle Out\nDEVICE End Point Pipe Status\nRegister <code>EPSTATUS%s</code> reader\nField <code>STALLRQ0</code> reader - Stall 0 Request\nField <code>STALLRQ1</code> reader - Stall 1 Request\nBit 6 - Bank 0 ready\nBit 7 - Bank 1 ready\nBit 2 - Current Bank\nBit 1 - Data Toggle In\nBit 0 - Data Toggle Out\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Stall 0 Request\nBit 5 - Stall 1 Request\nField <code>BK0RDY</code> writer - Bank 0 Ready Clear\nField <code>BK1RDY</code> writer - Bank 1 Ready Clear\nField <code>CURBK</code> writer - Current Bank Clear\nField <code>DTGLIN</code> writer - Data Toggle IN Clear\nField <code>DTGLOUT</code> writer - Data Toggle OUT Clear\nDEVICE End Point Pipe Status Clear\nField <code>STALLRQ0</code> writer - Stall 0 Request Clear\nField <code>STALLRQ1</code> writer - Stall 1 Request Clear\nRegister <code>EPSTATUSCLR%s</code> writer\nBit 6 - Bank 0 Ready Clear\nBit 7 - Bank 1 Ready Clear\nBit 2 - Current Bank Clear\nBit 1 - Data Toggle IN Clear\nBit 0 - Data Toggle OUT Clear\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Stall 0 Request Clear\nBit 5 - Stall 1 Request Clear\nField <code>BK0RDY</code> writer - Bank 0 Ready Set\nField <code>BK1RDY</code> writer - Bank 1 Ready Set\nField <code>CURBK</code> writer - Current Bank Set\nField <code>DTGLIN</code> writer - Data Toggle IN Set\nField <code>DTGLOUT</code> writer - Data Toggle OUT Set\nDEVICE End Point Pipe Status Set\nField <code>STALLRQ0</code> writer - Stall 0 Request Set\nField <code>STALLRQ1</code> writer - Stall 1 Request Set\nRegister <code>EPSTATUSSET%s</code> writer\nBit 6 - Bank 0 Ready Set\nBit 7 - Bank 1 Ready Set\nBit 2 - Current Bank Set\nBit 1 - Data Toggle IN Set\nBit 0 - Data Toggle OUT Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Stall 0 Request Set\nBit 5 - Stall 1 Request Set\nField <code>FNCERR</code> reader - Frame Number CRC Error\nField <code>FNUM</code> reader - Frame Number\nDEVICE Device Frame Number\nField <code>MFNUM</code> reader - Micro Frame Number\nRegister <code>FNUM</code> reader\nBit 15 - Frame Number CRC Error\nBits 3:13 - Frame Number\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:2 - Micro Frame Number\n16: DNRESUME. Down Stream Resume.\nField <code>FSMSTATE</code> reader - Fine State Machine Status\nFine State Machine Status\nFinite State Machine Status\n1: OFF (L3). It corresponds to the powered-off, …\n2: ON (L0). It corresponds to the Idle and Active states\nRegister <code>FSMSTATUS</code> reader\n64: RESET. USB lines Reset.\n8: SLEEP (L1)\n4: SUSPEND (L2)\n32: UPRESUME. Up Stream Resume.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:6 - Fine State Machine Status\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDNRESUME. Down Stream Resume.\nOFF (L3). It corresponds to the powered-off, disconnected, …\nON (L0). It corresponds to the Idle and Active states\nRESET. USB lines Reset.\nSLEEP (L1)\nSUSPEND (L2)\nUPRESUME. Up Stream Resume.\nGet enumerated values variant\nField <code>EORSM</code> reader - End Of Resume Interrupt Enable\nField <code>EORSM</code> writer - End Of Resume Interrupt Enable\nField <code>EORST</code> reader - End of Reset Interrupt Enable\nField <code>EORST</code> writer - End of Reset Interrupt Enable\nDEVICE Device Interrupt Enable Clear\nField <code>LPMNYET</code> reader - Link Power Management Not Yet …\nField <code>LPMNYET</code> writer - Link Power Management Not Yet …\nField <code>LPMSUSP</code> reader - Link Power Management Suspend …\nField <code>LPMSUSP</code> writer - Link Power Management Suspend …\nField <code>MSOF</code> reader - Micro Start of Frame Interrupt Enable …\nField <code>MSOF</code> writer - Micro Start of Frame Interrupt Enable …\nRegister <code>INTENCLR</code> reader\nField <code>RAMACER</code> reader - Ram Access Interrupt Enable\nField <code>RAMACER</code> writer - Ram Access Interrupt Enable\nField <code>SOF</code> reader - Start Of Frame Interrupt Enable\nField <code>SOF</code> writer - Start Of Frame Interrupt Enable\nField <code>SUSPEND</code> reader - Suspend Interrupt Enable\nField <code>SUSPEND</code> writer - Suspend Interrupt Enable\nField <code>UPRSM</code> reader - Upstream Resume Interrupt Enable\nField <code>UPRSM</code> writer - Upstream Resume Interrupt Enable\nRegister <code>INTENCLR</code> writer\nField <code>WAKEUP</code> reader - Wake Up Interrupt Enable\nField <code>WAKEUP</code> writer - Wake Up Interrupt Enable\nBit 5 - End Of Resume Interrupt Enable\nBit 5 - End Of Resume Interrupt Enable\nBit 3 - End of Reset Interrupt Enable\nBit 3 - End of Reset Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 8 - Link Power Management Not Yet Interrupt Enable\nBit 8 - Link Power Management Not Yet Interrupt Enable\nBit 9 - Link Power Management Suspend Interrupt Enable\nBit 9 - Link Power Management Suspend Interrupt Enable\nBit 1 - Micro Start of Frame Interrupt Enable in High …\nBit 1 - Micro Start of Frame Interrupt Enable in High …\nBit 7 - Ram Access Interrupt Enable\nBit 7 - Ram Access Interrupt Enable\nBit 2 - Start Of Frame Interrupt Enable\nBit 2 - Start Of Frame Interrupt Enable\nBit 0 - Suspend Interrupt Enable\nBit 0 - Suspend Interrupt Enable\nBit 6 - Upstream Resume Interrupt Enable\nBit 6 - Upstream Resume Interrupt Enable\nBit 4 - Wake Up Interrupt Enable\nBit 4 - Wake Up Interrupt Enable\nField <code>EORSM</code> reader - End Of Resume Interrupt Enable\nField <code>EORSM</code> writer - End Of Resume Interrupt Enable\nField <code>EORST</code> reader - End of Reset Interrupt Enable\nField <code>EORST</code> writer - End of Reset Interrupt Enable\nDEVICE Device Interrupt Enable Set\nField <code>LPMNYET</code> reader - Link Power Management Not Yet …\nField <code>LPMNYET</code> writer - Link Power Management Not Yet …\nField <code>LPMSUSP</code> reader - Link Power Management Suspend …\nField <code>LPMSUSP</code> writer - Link Power Management Suspend …\nField <code>MSOF</code> reader - Micro Start of Frame Interrupt Enable …\nField <code>MSOF</code> writer - Micro Start of Frame Interrupt Enable …\nRegister <code>INTENSET</code> reader\nField <code>RAMACER</code> reader - Ram Access Interrupt Enable\nField <code>RAMACER</code> writer - Ram Access Interrupt Enable\nField <code>SOF</code> reader - Start Of Frame Interrupt Enable\nField <code>SOF</code> writer - Start Of Frame Interrupt Enable\nField <code>SUSPEND</code> reader - Suspend Interrupt Enable\nField <code>SUSPEND</code> writer - Suspend Interrupt Enable\nField <code>UPRSM</code> reader - Upstream Resume Interrupt Enable\nField <code>UPRSM</code> writer - Upstream Resume Interrupt Enable\nRegister <code>INTENSET</code> writer\nField <code>WAKEUP</code> reader - Wake Up Interrupt Enable\nField <code>WAKEUP</code> writer - Wake Up Interrupt Enable\nBit 5 - End Of Resume Interrupt Enable\nBit 5 - End Of Resume Interrupt Enable\nBit 3 - End of Reset Interrupt Enable\nBit 3 - End of Reset Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 8 - Link Power Management Not Yet Interrupt Enable\nBit 8 - Link Power Management Not Yet Interrupt Enable\nBit 9 - Link Power Management Suspend Interrupt Enable\nBit 9 - Link Power Management Suspend Interrupt Enable\nBit 1 - Micro Start of Frame Interrupt Enable in High …\nBit 1 - Micro Start of Frame Interrupt Enable in High …\nBit 7 - Ram Access Interrupt Enable\nBit 7 - Ram Access Interrupt Enable\nBit 2 - Start Of Frame Interrupt Enable\nBit 2 - Start Of Frame Interrupt Enable\nBit 0 - Suspend Interrupt Enable\nBit 0 - Suspend Interrupt Enable\nBit 6 - Upstream Resume Interrupt Enable\nBit 6 - Upstream Resume Interrupt Enable\nBit 4 - Wake Up Interrupt Enable\nBit 4 - Wake Up Interrupt Enable\nField <code>EORSM</code> reader - End Of Resume\nField <code>EORSM</code> writer - End Of Resume\nField <code>EORST</code> reader - End of Reset\nField <code>EORST</code> writer - End of Reset\nDEVICE Device Interrupt Flag\nField <code>LPMNYET</code> reader - Link Power Management Not Yet\nField <code>LPMNYET</code> writer - Link Power Management Not Yet\nField <code>LPMSUSP</code> reader - Link Power Management Suspend\nField <code>LPMSUSP</code> writer - Link Power Management Suspend\nField <code>MSOF</code> reader - Micro Start of Frame in High Speed Mode\nField <code>MSOF</code> writer - Micro Start of Frame in High Speed Mode\nRegister <code>INTFLAG</code> reader\nField <code>RAMACER</code> reader - Ram Access\nField <code>RAMACER</code> writer - Ram Access\nField <code>SOF</code> reader - Start Of Frame\nField <code>SOF</code> writer - Start Of Frame\nField <code>SUSPEND</code> reader - Suspend\nField <code>SUSPEND</code> writer - Suspend\nField <code>UPRSM</code> reader - Upstream Resume\nField <code>UPRSM</code> writer - Upstream Resume\nRegister <code>INTFLAG</code> writer\nField <code>WAKEUP</code> reader - Wake Up\nField <code>WAKEUP</code> writer - Wake Up\nBit 5 - End Of Resume\nBit 5 - End Of Resume\nBit 3 - End of Reset\nBit 3 - End of Reset\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 8 - Link Power Management Not Yet\nBit 8 - Link Power Management Not Yet\nBit 9 - Link Power Management Suspend\nBit 9 - Link Power Management Suspend\nBit 1 - Micro Start of Frame in High Speed Mode\nBit 1 - Micro Start of Frame in High Speed Mode\nBit 7 - Ram Access\nBit 7 - Ram Access\nBit 2 - Start Of Frame\nBit 2 - Start Of Frame\nBit 0 - Suspend\nBit 0 - Suspend\nBit 6 - Upstream Resume\nBit 6 - Upstream Resume\nBit 4 - Wake Up\nBit 4 - Wake Up\nUSB PAD Calibration\nRegister <code>PADCAL</code> reader\nField <code>TRANSN</code> reader - USB Pad Transn calibration\nField <code>TRANSN</code> writer - USB Pad Transn calibration\nField <code>TRANSP</code> reader - USB Pad Transp calibration\nField <code>TRANSP</code> writer - USB Pad Transp calibration\nField <code>TRIM</code> reader - USB Pad Trim calibration\nField <code>TRIM</code> writer - USB Pad Trim calibration\nRegister <code>PADCAL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 6:10 - USB Pad Transn calibration\nBits 6:10 - USB Pad Transn calibration\nBits 0:4 - USB Pad Transp calibration\nBits 0:4 - USB Pad Transp calibration\nBits 12:14 - USB Pad Trim calibration\nBits 12:14 - USB Pad Trim calibration\nField <code>CQOS</code> reader - Configuration Quality of Service\nField <code>CQOS</code> writer - Configuration Quality of Service\nField <code>DQOS</code> reader - Data Quality of Service\nField <code>DQOS</code> writer - Data Quality of Service\nUSB Quality Of Service\nRegister <code>QOSCTRL</code> reader\nRegister <code>QOSCTRL</code> writer\nBits 0:1 - Configuration Quality of Service\nBits 0:1 - Configuration Quality of Service\nBits 2:3 - Data Quality of Service\nBits 2:3 - Data Quality of Service\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n0: Full-speed mode\n1: High-speed mode\nField <code>LINESTATE</code> reader - USB Line State Status\nUSB Line State Status\n2: Low-speed mode\nRegister <code>STATUS</code> reader\nField <code>SPEED</code> reader - Speed Status\nSpeed Status\nDEVICE Status\n0: SE0/RESET\n1: FS-J or LS-K State\n2: FS-K or LS-J State\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSE0/RESET\nFS-J or LS-K State\nFS-K or LS-J State\nFull-speed mode\nHigh-speed mode\nLow-speed mode\nBits 6:7 - USB Line State Status\nBits 2:3 - Speed Status\nGet enumerated values variant\nGet enumerated values variant\nField <code>ENABLE</code> reader - Enable Synchronization Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchronization Busy\nSynchronization Busy\nBit 1 - Enable Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Synchronization Busy\nCLEAR (w) register accessor: Clear\nCONFIG (rw) register accessor: Configuration\nCTRL (rw) register accessor: Control\nEWCTRL (rw) register accessor: Early Warning Interrupt …\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRegister block\nSTATUS (r) register accessor: Status\nClear\n0x08 - Clear\nConfiguration\n0x01 - Configuration\nControl\n0x00 - Control\nEarly Warning Interrupt Control\n0x02 - Early Warning Interrupt Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x04 - Interrupt Enable Clear\nInterrupt Enable Set\n0x05 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x06 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nStatus\n0x07 - Status\nClear\nField <code>CLEAR</code> writer - Watchdog Clear\nWatchdog Clear\n165: Clear Key\nRegister <code>CLEAR</code> writer\nBits 0:7 - Watchdog Clear\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear Key\nConfiguration\nField <code>PER</code> reader - Time-Out Period\nField <code>PER</code> writer - Time-Out Period\nTime-Out Period\nRegister <code>CONFIG</code> reader\nRegister <code>CONFIG</code> writer\nField <code>WINDOW</code> reader - Window Mode Time-Out Period\nField <code>WINDOW</code> writer - Window Mode Time-Out Period\nWindow Mode Time-Out Period\n128 clock cycles\n128 clock cycles\n4: 128 clock cycles\n4: 128 clock cycles\n16 clock cycles\n16 clock cycles\n1: 16 clock cycles\n1: 16 clock cycles\n16384 clock cycles\n16384 clock cycles\n11: 16384 clock cycles\n11: 16384 clock cycles\n1024 clock cycles\n1024 clock cycles\n7: 1024 clock cycles\n7: 1024 clock cycles\n256 clock cycles\n256 clock cycles\n5: 256 clock cycles\n5: 256 clock cycles\n2048 clock cycles\n2048 clock cycles\n8: 2048 clock cycles\n8: 2048 clock cycles\n32 clock cycles\n32 clock cycles\n2: 32 clock cycles\n2: 32 clock cycles\n4096 clock cycles\n4096 clock cycles\n9: 4096 clock cycles\n9: 4096 clock cycles\n512 clock cycles\n512 clock cycles\n6: 512 clock cycles\n6: 512 clock cycles\n64 clock cycles\n64 clock cycles\n3: 64 clock cycles\n3: 64 clock cycles\n8 clock cycles\n8 clock cycles\n0: 8 clock cycles\n0: 8 clock cycles\n8192 clock cycles\n8192 clock cycles\n10: 8192 clock cycles\n10: 8192 clock cycles\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n128 clock cycles\n128 clock cycles\n16 clock cycles\n16 clock cycles\n16384 clock cycles\n16384 clock cycles\n1024 clock cycles\n1024 clock cycles\n256 clock cycles\n256 clock cycles\n2048 clock cycles\n2048 clock cycles\n32 clock cycles\n32 clock cycles\n4096 clock cycles\n4096 clock cycles\n512 clock cycles\n512 clock cycles\n64 clock cycles\n64 clock cycles\n8 clock cycles\n8 clock cycles\n8192 clock cycles\n8192 clock cycles\nBits 0:3 - Time-Out Period\nBits 0:3 - Time-Out Period\nGet enumerated values variant\nGet enumerated values variant\nBits 4:7 - Window Mode Time-Out Period\nBits 4:7 - Window Mode Time-Out Period\nField <code>ALWAYSON</code> reader - Always-On\nField <code>ALWAYSON</code> writer - Always-On\nControl\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nRegister <code>CTRL</code> reader\nRegister <code>CTRL</code> writer\nField <code>WEN</code> reader - Watchdog Timer Window Mode Enable\nField <code>WEN</code> writer - Watchdog Timer Window Mode Enable\nBit 7 - Always-On\nBit 7 - Always-On\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Watchdog Timer Window Mode Enable\nBit 2 - Watchdog Timer Window Mode Enable\nEarly Warning Interrupt Control\nField <code>EWOFFSET</code> reader - Early Warning Interrupt Time Offset\nField <code>EWOFFSET</code> writer - Early Warning Interrupt Time Offset\nEarly Warning Interrupt Time Offset\nRegister <code>EWCTRL</code> reader\nRegister <code>EWCTRL</code> writer\n128 clock cycles\n4: 128 clock cycles\n16 clock cycles\n1: 16 clock cycles\n16384 clock cycles\n11: 16384 clock cycles\n1024 clock cycles\n7: 1024 clock cycles\n256 clock cycles\n5: 256 clock cycles\n2048 clock cycles\n8: 2048 clock cycles\n32 clock cycles\n2: 32 clock cycles\n4096 clock cycles\n9: 4096 clock cycles\n512 clock cycles\n6: 512 clock cycles\n64 clock cycles\n3: 64 clock cycles\n8 clock cycles\n0: 8 clock cycles\n8192 clock cycles\n10: 8192 clock cycles\nBits 0:3 - Early Warning Interrupt Time Offset\nBits 0:3 - Early Warning Interrupt Time Offset\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n128 clock cycles\n16 clock cycles\n16384 clock cycles\n1024 clock cycles\n256 clock cycles\n2048 clock cycles\n32 clock cycles\n4096 clock cycles\n512 clock cycles\n64 clock cycles\n8 clock cycles\n8192 clock cycles\nGet enumerated values variant\nField <code>EW</code> reader - Early Warning Interrupt Enable\nField <code>EW</code> writer - Early Warning Interrupt Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nBit 0 - Early Warning Interrupt Enable\nBit 0 - Early Warning Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EW</code> reader - Early Warning Interrupt Enable\nField <code>EW</code> writer - Early Warning Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nBit 0 - Early Warning Interrupt Enable\nBit 0 - Early Warning Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EW</code> reader - Early Warning\nField <code>EW</code> writer - Early Warning\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nBit 0 - Early Warning\nBit 0 - Early Warning\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy")