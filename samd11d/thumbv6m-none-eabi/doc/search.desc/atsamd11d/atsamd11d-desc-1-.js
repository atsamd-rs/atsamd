searchState.loadedDescShard("atsamd11d", 1, "PID3 (r) register accessor: CoreSight\nPID4 (r) register accessor: CoreSight\nPID5 (r) register accessor: CoreSight\nPID6 (r) register accessor: CoreSight\nPID7 (r) register accessor: CoreSight\nPOSITION (rw) register accessor: MTB Position\nRegister block\nMTB Authentication Status\n0xfb8 - MTB Authentication Status\nMTB Base\n0x0c - MTB Base\nCoreSight\n0xff0 - CoreSight\nCoreSight\n0xff4 - CoreSight\nCoreSight\n0xff8 - CoreSight\nCoreSight\n0xffc - CoreSight\nMTB Claim Clear\n0xfa4 - MTB Claim Clear\nMTB Claim Set\n0xfa0 - MTB Claim Set\nMTB Device Architecture\n0xfbc - MTB Device Architecture\nMTB Device Configuration\n0xfc8 - MTB Device Configuration\nMTB Device Type\n0xfcc - MTB Device Type\nMTB Flow\n0x08 - MTB Flow\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Integration Mode Control\n0xf00 - MTB Integration Mode Control\nMTB Lock Access\n0xfb0 - MTB Lock Access\nMTB Lock Status\n0xfb4 - MTB Lock Status\nMTB Master\n0x04 - MTB Master\nCoreSight\n0xfe0 - CoreSight\nCoreSight\n0xfe4 - CoreSight\nCoreSight\n0xfe8 - CoreSight\nCoreSight\n0xfec - CoreSight\nCoreSight\n0xfd0 - CoreSight\nCoreSight\n0xfd4 - CoreSight\nCoreSight\n0xfd8 - CoreSight\nCoreSight\n0xfdc - CoreSight\nMTB Position\n0x00 - MTB Position\nMTB Authentication Status\nRegister <code>AUTHSTATUS</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Base\nRegister <code>BASE</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>CID0</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>CID1</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>CID2</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>CID3</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Claim Clear\nRegister <code>CLAIMCLR</code> reader\nRegister <code>CLAIMCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Claim Set\nRegister <code>CLAIMSET</code> reader\nRegister <code>CLAIMSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Device Architecture\nRegister <code>DEVARCH</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Device Configuration\nRegister <code>DEVID</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Device Type\nRegister <code>DEVTYPE</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>AUTOHALT</code> reader - Auto Halt Request\nField <code>AUTOHALT</code> writer - Auto Halt Request\nField <code>AUTOSTOP</code> reader - Auto Stop Tracing\nField <code>AUTOSTOP</code> writer - Auto Stop Tracing\nMTB Flow\nRegister <code>FLOW</code> reader\nRegister <code>FLOW</code> writer\nField <code>WATERMARK</code> reader - Watermark value\nField <code>WATERMARK</code> writer - Watermark value\nBit 1 - Auto Halt Request\nBit 1 - Auto Halt Request\nBit 0 - Auto Stop Tracing\nBit 0 - Auto Stop Tracing\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 3:31 - Watermark value\nBits 3:31 - Watermark value\nMTB Integration Mode Control\nRegister <code>ITCTRL</code> reader\nRegister <code>ITCTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Lock Access\nRegister <code>LOCKACCESS</code> reader\nRegister <code>LOCKACCESS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMTB Lock Status\nRegister <code>LOCKSTATUS</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EN</code> reader - Main Trace Enable\nField <code>EN</code> writer - Main Trace Enable\nField <code>HALTREQ</code> reader - Halt Request\nField <code>HALTREQ</code> writer - Halt Request\nField <code>MASK</code> reader - Maximum Value of the Trace Buffer in …\nField <code>MASK</code> writer - Maximum Value of the Trace Buffer in …\nMTB Master\nRegister <code>MASTER</code> reader\nField <code>RAMPRIV</code> reader - SRAM Privilege\nField <code>RAMPRIV</code> writer - SRAM Privilege\nField <code>SFRWPRIV</code> reader - Special Function Register Write …\nField <code>SFRWPRIV</code> writer - Special Function Register Write …\nField <code>TSTARTEN</code> reader - Trace Start Input Enable\nField <code>TSTARTEN</code> writer - Trace Start Input Enable\nField <code>TSTOPEN</code> reader - Trace Stop Input Enable\nField <code>TSTOPEN</code> writer - Trace Stop Input Enable\nRegister <code>MASTER</code> writer\nBit 31 - Main Trace Enable\nBit 31 - Main Trace Enable\nReturns the argument unchanged.\nBit 9 - Halt Request\nBit 9 - Halt Request\nCalls <code>U::from(self)</code>.\nBits 0:4 - Maximum Value of the Trace Buffer in SRAM\nBits 0:4 - Maximum Value of the Trace Buffer in SRAM\nBit 8 - SRAM Privilege\nBit 8 - SRAM Privilege\nBit 7 - Special Function Register Write Privilege\nBit 7 - Special Function Register Write Privilege\nBit 5 - Trace Start Input Enable\nBit 5 - Trace Start Input Enable\nBit 6 - Trace Stop Input Enable\nBit 6 - Trace Stop Input Enable\nCoreSight\nRegister <code>PID0</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID1</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID2</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID3</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID4</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID5</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID6</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight\nRegister <code>PID7</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>POINTER</code> reader - Trace Packet Location Pointer\nField <code>POINTER</code> writer - Trace Packet Location Pointer\nMTB Position\nRegister <code>POSITION</code> reader\nRegister <code>POSITION</code> writer\nField <code>WRAP</code> reader - Pointer Value Wraps\nField <code>WRAP</code> writer - Pointer Value Wraps\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 3:31 - Trace Packet Location Pointer\nBits 3:31 - Trace Packet Location Pointer\nBit 2 - Pointer Value Wraps\nBit 2 - Pointer Value Wraps\nADDR (rw) register accessor: Address\nCTRLA (rw) register accessor: Control A\nCTRLB (rw) register accessor: Control B\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nLOCK (rw) register accessor: Lock Section\nPARAM (rw) register accessor: NVM Parameter\nRegister block\nSTATUS (rw) register accessor: Status\nAddress\n0x1c - Address\nControl A\n0x00 - Control A\nControl B\n0x04 - Control B\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x0c - Interrupt Enable Clear\nInterrupt Enable Set\n0x10 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x14 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nLock Section\n0x20 - Lock Section\nNVM Parameter\n0x08 - NVM Parameter\nStatus\n0x18 - Status\nField <code>ADDR</code> reader - NVM Address\nAddress\nField <code>ADDR</code> writer - NVM Address\nRegister <code>ADDR</code> reader\nRegister <code>ADDR</code> writer\nBits 0:21 - NVM Address\nBits 0:21 - NVM Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMD</code> reader - Command\nField <code>CMD</code> writer - Command\nField <code>CMDEX</code> reader - Command Execution\nField <code>CMDEX</code> writer - Command Execution\nCommand Execution\nCommand\n67: Clears the power reduction mode.\nControl A\n5: Erase Auxiliary Row - Erases the auxiliary row …\n2: Erase Row - Erases the row addressed by the ADDR …\n70: Invalidates all cache lines.\n165: Execution Key\n64: Lock Region - Locks the region containing the address …\n68: Page Buffer Clear - Clears the page buffer.\nRegister <code>CTRLA</code> reader\n10: Security Flow Command\n66: Sets the power reduction mode.\n69: Set Security Bit - Sets the security bit by writing …\n65: Unlock Region - Unlocks the region containing the …\nRegister <code>CTRLA</code> writer\n6: Write Auxiliary Page - Writes the contents of the page …\n15: Write lockbits\n4: Write Page - Writes the contents of the page buffer to …\nBits 0:6 - Command\nBits 0:6 - Command\nBits 8:15 - Command Execution\nBits 8:15 - Command Execution\nClears the power reduction mode.\nErase Auxiliary Row - Erases the auxiliary row addressed …\nErase Row - Erases the row addressed by the ADDR register.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvalidates all cache lines.\nClears the power reduction mode.\nErase Auxiliary Row - Erases the auxiliary row addressed …\nErase Row - Erases the row addressed by the ADDR register.\nInvalidates all cache lines.\nExecution Key\nLock Region - Locks the region containing the address …\nPage Buffer Clear - Clears the page buffer.\nSecurity Flow Command\nSets the power reduction mode.\nSet Security Bit - Sets the security bit by writing 0x00 …\nUnlock Region - Unlocks the region containing the address …\nWrite Auxiliary Page - Writes the contents of the page …\nWrite lockbits\nWrite Page - Writes the contents of the page buffer to the …\nExecution Key\nLock Region - Locks the region containing the address …\nPage Buffer Clear - Clears the page buffer.\nSecurity Flow Command\nSets the power reduction mode.\nSet Security Bit - Sets the security bit by writing 0x00 …\nUnlock Region - Unlocks the region containing the address …\nGet enumerated values variant\nGet enumerated values variant\nWrite Auxiliary Page - Writes the contents of the page …\nWrite lockbits\nWrite Page - Writes the contents of the page buffer to the …\nField <code>CACHEDIS</code> reader - Cache Disable\nField <code>CACHEDIS</code> writer - Cache Disable\nControl B\n2: The cache system ensures that a cache hit or miss takes …\n3: Auto power reduction disabled.\n2: Dual Auto Wait State\n1: Half Auto Wait State\n1: Reduces power consumption of the cache system, but …\nField <code>MANW</code> reader - Manual Write\nField <code>MANW</code> writer - Manual Write\n0: The NVM Controller (cache system) does not insert wait …\nRegister <code>CTRLB</code> reader\nField <code>READMODE</code> reader - NVMCTRL Read Mode\nField <code>READMODE</code> writer - NVMCTRL Read Mode\nNVMCTRL Read Mode\nField <code>RWS</code> reader - NVM Read Wait States\nField <code>RWS</code> writer - NVM Read Wait States\nNVM Read Wait States\n0: Single Auto Wait State\nField <code>SLEEPPRM</code> reader - Power Reduction Mode during Sleep\nField <code>SLEEPPRM</code> writer - Power Reduction Mode during Sleep\nPower Reduction Mode during Sleep\nRegister <code>CTRLB</code> writer\n0: NVM block enters low-power mode when entering sleep.NVM …\n1: NVM block enters low-power mode when entering sleep.NVM …\nBit 18 - Cache Disable\nBit 18 - Cache Disable\nThe cache system ensures that a cache hit or miss takes …\nAuto power reduction disabled.\nDual Auto Wait State\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHalf Auto Wait State\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe cache system ensures that a cache hit or miss takes …\nAuto power reduction disabled.\nDual Auto Wait State\nHalf Auto Wait State\nReduces power consumption of the cache system, but inserts …\nThe NVM Controller (cache system) does not insert wait …\nSingle Auto Wait State\nNVM block enters low-power mode when entering sleep.NVM …\nNVM block enters low-power mode when entering sleep.NVM …\nReduces power consumption of the cache system, but inserts …\nBit 7 - Manual Write\nBit 7 - Manual Write\nThe NVM Controller (cache system) does not insert wait …\nBits 16:17 - NVMCTRL Read Mode\nBits 16:17 - NVMCTRL Read Mode\nBits 1:4 - NVM Read Wait States\nBits 1:4 - NVM Read Wait States\nSingle Auto Wait State\nBits 8:9 - Power Reduction Mode during Sleep\nBits 8:9 - Power Reduction Mode during Sleep\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nNVM block enters low-power mode when entering sleep.NVM …\nNVM block enters low-power mode when entering sleep.NVM …\nField <code>ERROR</code> reader - Error Interrupt Enable\nField <code>ERROR</code> writer - Error Interrupt Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>READY</code> reader - NVM Ready Interrupt Enable\nField <code>READY</code> writer - NVM Ready Interrupt Enable\nRegister <code>INTENCLR</code> writer\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - NVM Ready Interrupt Enable\nBit 0 - NVM Ready Interrupt Enable\nField <code>ERROR</code> reader - Error Interrupt Enable\nField <code>ERROR</code> writer - Error Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>READY</code> reader - NVM Ready Interrupt Enable\nField <code>READY</code> writer - NVM Ready Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 1 - Error Interrupt Enable\nBit 1 - Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - NVM Ready Interrupt Enable\nBit 0 - NVM Ready Interrupt Enable\nField <code>ERROR</code> reader - Error\nField <code>ERROR</code> writer - Error\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>READY</code> reader - NVM Ready\nRegister <code>INTFLAG</code> writer\nBit 1 - Error\nBit 1 - Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - NVM Ready\nField <code>LOCK</code> reader - Region Lock Bits\nLock Section\nRegister <code>LOCK</code> reader\nRegister <code>LOCK</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Region Lock Bits\nField <code>NVMP</code> reader - NVM Pages\nNVM Parameter\nField <code>PSZ</code> reader - Page Size\nPage Size\nRegister <code>PARAM</code> reader\nRegister <code>PARAM</code> writer\n7: 1024 bytes\n4: 128 bytes\n1: 16 bytes\n5: 256 bytes\n2: 32 bytes\n6: 512 bytes\n3: 64 bytes\n0: 8 bytes\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1024 bytes\n128 bytes\n16 bytes\n256 bytes\n32 bytes\n512 bytes\n64 bytes\n8 bytes\nBits 0:15 - NVM Pages\nBits 16:18 - Page Size\nGet enumerated values variant\nField <code>LOAD</code> reader - NVM Page Buffer Active Loading\nField <code>LOAD</code> writer - NVM Page Buffer Active Loading\nField <code>LOCKE</code> reader - Lock Error Status\nField <code>LOCKE</code> writer - Lock Error Status\nField <code>NVME</code> reader - NVM Error\nField <code>NVME</code> writer - NVM Error\nField <code>PRM</code> reader - Power Reduction Mode\nField <code>PROGE</code> reader - Programming Error Status\nField <code>PROGE</code> writer - Programming Error Status\nRegister <code>STATUS</code> reader\nField <code>SB</code> reader - Security Bit Status\nStatus\nRegister <code>STATUS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - NVM Page Buffer Active Loading\nBit 1 - NVM Page Buffer Active Loading\nBit 3 - Lock Error Status\nBit 3 - Lock Error Status\nBit 4 - NVM Error\nBit 4 - NVM Error\nBit 0 - Power Reduction Mode\nBit 2 - Programming Error Status\nBit 2 - Programming Error Status\nBit 8 - Security Bit Status\nRegister block\nWPCLR (rw) register accessor: Write Protection Clear\nWPSET (rw) register accessor: Write Protection Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWrite Protection Clear\n0x00 - Write Protection Clear\nWrite Protection Set\n0x04 - Write Protection Set\nRegister <code>WPCLR</code> reader\nRegister <code>WPCLR</code> writer\nField <code>WP</code> reader - Write Protection Clear\nField <code>WP</code> writer - Write Protection Clear\nWrite Protection Clear\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 1:31 - Write Protection Clear\nBits 1:31 - Write Protection Clear\nRegister <code>WPSET</code> reader\nRegister <code>WPSET</code> writer\nField <code>WP</code> reader - Write Protection Set\nField <code>WP</code> writer - Write Protection Set\nWrite Protection Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 1:31 - Write Protection Set\nBits 1:31 - Write Protection Set\nAHBMASK (rw) register accessor: AHB Mask\nAPBAMASK (rw) register accessor: APBA Mask\nAPBASEL (rw) register accessor: APBA Clock Select\nAPBBMASK (rw) register accessor: APBB Mask\nAPBBSEL (rw) register accessor: APBB Clock Select\nAPBCMASK (rw) register accessor: APBC Mask\nAPBCSEL (rw) register accessor: APBC Clock Select\nCPUSEL (rw) register accessor: CPU Clock Select\nCTRL (rw) register accessor: Control\nEXTCTRL (rw) register accessor: External Reset Controller\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRCAUSE (r) register accessor: Reset Cause\nRegister block\nSLEEP (rw) register accessor: Sleep Mode\nAHB Mask\n0x14 - AHB Mask\nAPBA Mask\n0x18 - APBA Mask\nAPBA Clock Select\n0x09 - APBA Clock Select\nAPBB Mask\n0x1c - APBB Mask\nAPBB Clock Select\n0x0a - APBB Clock Select\nAPBC Mask\n0x20 - APBC Mask\nAPBC Clock Select\n0x0b - APBC Clock Select\nCPU Clock Select\n0x08 - CPU Clock Select\nControl\n0x00 - Control\nExternal Reset Controller\n0x02 - External Reset Controller\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x34 - Interrupt Enable Clear\nInterrupt Enable Set\n0x35 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x36 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nReset Cause\n0x38 - Reset Cause\nSleep Mode\n0x01 - Sleep Mode\nAHB Mask\nField <code>DMAC_</code> reader - DMAC AHB Clock Mask\nField <code>DMAC_</code> writer - DMAC AHB Clock Mask\nField <code>DSU_</code> reader - DSU AHB Clock Mask\nField <code>DSU_</code> writer - DSU AHB Clock Mask\nField <code>HPB0_</code> reader - HPB0 AHB Clock Mask\nField <code>HPB0_</code> writer - HPB0 AHB Clock Mask\nField <code>HPB1_</code> reader - HPB1 AHB Clock Mask\nField <code>HPB1_</code> writer - HPB1 AHB Clock Mask\nField <code>HPB2_</code> reader - HPB2 AHB Clock Mask\nField <code>HPB2_</code> writer - HPB2 AHB Clock Mask\nField <code>NVMCTRL_</code> reader - NVMCTRL AHB Clock Mask\nField <code>NVMCTRL_</code> writer - NVMCTRL AHB Clock Mask\nRegister <code>AHBMASK</code> reader\nField <code>USB_</code> reader - USB AHB Clock Mask\nField <code>USB_</code> writer - USB AHB Clock Mask\nRegister <code>AHBMASK</code> writer\nBit 5 - DMAC AHB Clock Mask\nBit 5 - DMAC AHB Clock Mask\nBit 3 - DSU AHB Clock Mask\nBit 3 - DSU AHB Clock Mask\nReturns the argument unchanged.\nBit 0 - HPB0 AHB Clock Mask\nBit 0 - HPB0 AHB Clock Mask\nBit 1 - HPB1 AHB Clock Mask\nBit 1 - HPB1 AHB Clock Mask\nBit 2 - HPB2 AHB Clock Mask\nBit 2 - HPB2 AHB Clock Mask\nCalls <code>U::from(self)</code>.\nBit 4 - NVMCTRL AHB Clock Mask\nBit 4 - NVMCTRL AHB Clock Mask\nBit 6 - USB AHB Clock Mask\nBit 6 - USB AHB Clock Mask\nAPBA Mask\nField <code>EIC_</code> reader - EIC APB Clock Enable\nField <code>EIC_</code> writer - EIC APB Clock Enable\nField <code>GCLK_</code> reader - GCLK APB Clock Enable\nField <code>GCLK_</code> writer - GCLK APB Clock Enable\nField <code>PAC0_</code> reader - PAC0 APB Clock Enable\nField <code>PAC0_</code> writer - PAC0 APB Clock Enable\nField <code>PM_</code> reader - PM APB Clock Enable\nField <code>PM_</code> writer - PM APB Clock Enable\nRegister <code>APBAMASK</code> reader\nField <code>RTC_</code> reader - RTC APB Clock Enable\nField <code>RTC_</code> writer - RTC APB Clock Enable\nField <code>SYSCTRL_</code> reader - SYSCTRL APB Clock Enable\nField <code>SYSCTRL_</code> writer - SYSCTRL APB Clock Enable\nRegister <code>APBAMASK</code> writer\nField <code>WDT_</code> reader - WDT APB Clock Enable\nField <code>WDT_</code> writer - WDT APB Clock Enable\nBit 6 - EIC APB Clock Enable\nBit 6 - EIC APB Clock Enable\nReturns the argument unchanged.\nBit 3 - GCLK APB Clock Enable\nBit 3 - GCLK APB Clock Enable\nCalls <code>U::from(self)</code>.\nBit 0 - PAC0 APB Clock Enable\nBit 0 - PAC0 APB Clock Enable\nBit 1 - PM APB Clock Enable\nBit 1 - PM APB Clock Enable\nBit 5 - RTC APB Clock Enable\nBit 5 - RTC APB Clock Enable\nBit 2 - SYSCTRL APB Clock Enable\nBit 2 - SYSCTRL APB Clock Enable\nBit 4 - WDT APB Clock Enable\nBit 4 - WDT APB Clock Enable\nField <code>APBADIV</code> reader - APBA Prescaler Selection\nField <code>APBADIV</code> writer - APBA Prescaler Selection\nAPBA Prescaler Selection\nAPBA Clock Select\n0: Divide by 1\n7: Divide by 128\n4: Divide by 16\n1: Divide by 2\n5: Divide by 32\n2: Divide by 4\n6: Divide by 64\n3: Divide by 8\nRegister <code>APBASEL</code> reader\nRegister <code>APBASEL</code> writer\nBits 0:2 - APBA Prescaler Selection\nBits 0:2 - APBA Prescaler Selection\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nGet enumerated values variant\nAPBB Mask\nField <code>DMAC_</code> reader - DMAC APB Clock Enable\nField <code>DMAC_</code> writer - DMAC APB Clock Enable\nField <code>DSU_</code> reader - DSU APB Clock Enable\nField <code>DSU_</code> writer - DSU APB Clock Enable\nField <code>HMATRIX_</code> reader - HMATRIX APB Clock Enable\nField <code>HMATRIX_</code> writer - HMATRIX APB Clock Enable\nField <code>NVMCTRL_</code> reader - NVMCTRL APB Clock Enable\nField <code>NVMCTRL_</code> writer - NVMCTRL APB Clock Enable\nField <code>PAC1_</code> reader - PAC1 APB Clock Enable\nField <code>PAC1_</code> writer - PAC1 APB Clock Enable\nField <code>PORT_</code> reader - PORT APB Clock Enable\nField <code>PORT_</code> writer - PORT APB Clock Enable\nRegister <code>APBBMASK</code> reader\nField <code>USB_</code> reader - USB APB Clock Enable\nField <code>USB_</code> writer - USB APB Clock Enable\nRegister <code>APBBMASK</code> writer\nBit 4 - DMAC APB Clock Enable\nBit 4 - DMAC APB Clock Enable\nBit 1 - DSU APB Clock Enable\nBit 1 - DSU APB Clock Enable\nReturns the argument unchanged.\nBit 6 - HMATRIX APB Clock Enable\nBit 6 - HMATRIX APB Clock Enable\nCalls <code>U::from(self)</code>.\nBit 2 - NVMCTRL APB Clock Enable\nBit 2 - NVMCTRL APB Clock Enable\nBit 0 - PAC1 APB Clock Enable\nBit 0 - PAC1 APB Clock Enable\nBit 3 - PORT APB Clock Enable\nBit 3 - PORT APB Clock Enable\nBit 5 - USB APB Clock Enable\nBit 5 - USB APB Clock Enable\nField <code>APBBDIV</code> reader - APBB Prescaler Selection\nField <code>APBBDIV</code> writer - APBB Prescaler Selection\nAPBB Prescaler Selection\nAPBB Clock Select\n0: Divide by 1\n7: Divide by 128\n4: Divide by 16\n1: Divide by 2\n5: Divide by 32\n2: Divide by 4\n6: Divide by 64\n3: Divide by 8\nRegister <code>APBBSEL</code> reader\nRegister <code>APBBSEL</code> writer\nBits 0:2 - APBB Prescaler Selection\nBits 0:2 - APBB Prescaler Selection\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nGet enumerated values variant\nField <code>AC_</code> reader - AC APB Clock Enable\nField <code>AC_</code> writer - AC APB Clock Enable\nField <code>ADC_</code> reader - ADC APB Clock Enable\nField <code>ADC_</code> writer - ADC APB Clock Enable\nAPBC Mask\nField <code>DAC_</code> reader - DAC APB Clock Enable\nField <code>DAC_</code> writer - DAC APB Clock Enable\nField <code>EVSYS_</code> reader - EVSYS APB Clock Enable\nField <code>EVSYS_</code> writer - EVSYS APB Clock Enable\nField <code>PAC2_</code> reader - PAC2 APB Clock Enable\nField <code>PAC2_</code> writer - PAC2 APB Clock Enable\nField <code>PTC_</code> reader - PTC APB Clock Enable\nField <code>PTC_</code> writer - PTC APB Clock Enable\nRegister <code>APBCMASK</code> reader\nField <code>SERCOM0_</code> reader - SERCOM0 APB Clock Enable\nField <code>SERCOM0_</code> writer - SERCOM0 APB Clock Enable\nField <code>SERCOM1_</code> reader - SERCOM1 APB Clock Enable\nField <code>SERCOM1_</code> writer - SERCOM1 APB Clock Enable\nField <code>SERCOM2_</code> reader - SERCOM2 APB Clock Enable\nField <code>SERCOM2_</code> writer - SERCOM2 APB Clock Enable\nField <code>TC1_</code> reader - TC1 APB Clock Enable\nField <code>TC1_</code> writer - TC1 APB Clock Enable\nField <code>TC2_</code> reader - TC2 APB Clock Enable\nField <code>TC2_</code> writer - TC2 APB Clock Enable\nField <code>TCC0_</code> reader - TCC0 APB Clock Enable\nField <code>TCC0_</code> writer - TCC0 APB Clock Enable\nRegister <code>APBCMASK</code> writer\nBit 9 - AC APB Clock Enable\nBit 9 - AC APB Clock Enable\nBit 8 - ADC APB Clock Enable\nBit 8 - ADC APB Clock Enable\nBit 10 - DAC APB Clock Enable\nBit 10 - DAC APB Clock Enable\nBit 1 - EVSYS APB Clock Enable\nBit 1 - EVSYS APB Clock Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - PAC2 APB Clock Enable\nBit 0 - PAC2 APB Clock Enable\nBit 11 - PTC APB Clock Enable\nBit 11 - PTC APB Clock Enable\nBit 2 - SERCOM0 APB Clock Enable\nBit 2 - SERCOM0 APB Clock Enable\nBit 3 - SERCOM1 APB Clock Enable\nBit 3 - SERCOM1 APB Clock Enable\nBit 4 - SERCOM2 APB Clock Enable\nBit 4 - SERCOM2 APB Clock Enable\nBit 6 - TC1 APB Clock Enable\nBit 6 - TC1 APB Clock Enable\nBit 7 - TC2 APB Clock Enable\nBit 7 - TC2 APB Clock Enable\nBit 5 - TCC0 APB Clock Enable\nBit 5 - TCC0 APB Clock Enable\nField <code>APBCDIV</code> reader - APBC Prescaler Selection\nField <code>APBCDIV</code> writer - APBC Prescaler Selection\nAPBC Prescaler Selection\nAPBC Clock Select\n0: Divide by 1\n7: Divide by 128\n4: Divide by 16\n1: Divide by 2\n5: Divide by 32\n2: Divide by 4\n6: Divide by 64\n3: Divide by 8\nRegister <code>APBCSEL</code> reader\nRegister <code>APBCSEL</code> writer\nBits 0:2 - APBC Prescaler Selection\nBits 0:2 - APBC Prescaler Selection\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nGet enumerated values variant\nField <code>CPUDIV</code> reader - CPU Prescaler Selection\nField <code>CPUDIV</code> writer - CPU Prescaler Selection\nCPU Prescaler Selection\nCPU Clock Select\n0: Divide by 1\n7: Divide by 128\n4: Divide by 16\n1: Divide by 2\n5: Divide by 32\n2: Divide by 4\n6: Divide by 64\n3: Divide by 8\nRegister <code>CPUSEL</code> reader\nRegister <code>CPUSEL</code> writer\nBits 0:2 - CPU Prescaler Selection\nBits 0:2 - CPU Prescaler Selection\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDivide by 1\nDivide by 128\nDivide by 16\nDivide by 2\nDivide by 32\nDivide by 4\nDivide by 64\nDivide by 8\nGet enumerated values variant\nField <code>BKUPCLK</code> reader - Backup Clock Select\nField <code>BKUPCLK</code> writer - Backup Clock Select\nField <code>CFDEN</code> reader - Clock Failure Detector Enable\nField <code>CFDEN</code> writer - Clock Failure Detector Enable\nControl\nRegister <code>CTRL</code> reader\nRegister <code>CTRL</code> writer\nBit 4 - Backup Clock Select\nBit 4 - Backup Clock Select\nBit 2 - Clock Failure Detector Enable\nBit 2 - Clock Failure Detector Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nExternal Reset Controller\nRegister <code>EXTCTRL</code> reader\nField <code>SETDIS</code> reader - External Reset Disable\nField <code>SETDIS</code> writer - External Reset Disable\nRegister <code>EXTCTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - External Reset Disable\nBit 0 - External Reset Disable\nField <code>CFD</code> reader - Clock Failure Detector Interrupt Enable\nField <code>CFD</code> writer - Clock Failure Detector Interrupt Enable\nField <code>CKRDY</code> reader - Clock Ready Interrupt Enable\nField <code>CKRDY</code> writer - Clock Ready Interrupt Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nBit 1 - Clock Failure Detector Interrupt Enable\nBit 1 - Clock Failure Detector Interrupt Enable\nBit 0 - Clock Ready Interrupt Enable\nBit 0 - Clock Ready Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CFD</code> reader - Clock Failure Detector Interrupt Enable\nField <code>CFD</code> writer - Clock Failure Detector Interrupt Enable\nField <code>CKRDY</code> reader - Clock Ready Interrupt Enable\nField <code>CKRDY</code> writer - Clock Ready Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nBit 1 - Clock Failure Detector Interrupt Enable\nBit 1 - Clock Failure Detector Interrupt Enable\nBit 0 - Clock Ready Interrupt Enable\nBit 0 - Clock Ready Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CFD</code> reader - Clock Failure Detector\nField <code>CFD</code> writer - Clock Failure Detector\nField <code>CKRDY</code> reader - Clock Ready\nField <code>CKRDY</code> writer - Clock Ready\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nBit 1 - Clock Failure Detector\nBit 1 - Clock Failure Detector\nBit 0 - Clock Ready\nBit 0 - Clock Ready\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BOD12</code> reader - Brown Out 12 Detector Reset\nField <code>BOD33</code> reader - Brown Out 33 Detector Reset\nField <code>EXT</code> reader - External Reset\nField <code>POR</code> reader - Power On Reset\nRegister <code>RCAUSE</code> reader\nReset Cause\nField <code>SYST</code> reader - System Reset Request\nField <code>WDT</code> reader - Watchdog Reset\nBit 1 - Brown Out 12 Detector Reset\nBit 2 - Brown Out 33 Detector Reset\nBit 4 - External Reset\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Power On Reset\nBit 6 - System Reset Request\nBit 5 - Watchdog Reset\n1: The CPU and AHB clock domains are stopped\n2: The CPU, AHB and APB clock domains are stopped\n0: The CPU clock domain is stopped\nField <code>IDLE</code> reader - Idle Mode Configuration\nField <code>IDLE</code> writer - Idle Mode Configuration\nIdle Mode Configuration\nRegister <code>SLEEP</code> reader\nSleep Mode\nRegister <code>SLEEP</code> writer\nThe CPU and AHB clock domains are stopped\nThe CPU, AHB and APB clock domains are stopped\nThe CPU clock domain is stopped\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:1 - Idle Mode Configuration\nBits 0:1 - Idle Mode Configuration\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe CPU and AHB clock domains are stopped\nThe CPU, AHB and APB clock domains are stopped\nThe CPU clock domain is stopped\nGet enumerated values variant\nCTRL (rw) register accessor: Control\nDIR (rw) register accessor: Data Direction\nDIRCLR (rw) register accessor: Data Direction Clear\nDIRSET (rw) register accessor: Data Direction Set\nDIRTGL (rw) register accessor: Data Direction Toggle\nIN (r) register accessor: Data Input Value\nOUT (rw) register accessor: Data Output Value\nOUTCLR (rw) register accessor: Data Output Value Clear\nOUTSET (rw) register accessor: Data Output Value Set\nOUTTGL (rw) register accessor: Data Output Value Toggle\nPINCFG0_ (rw) register accessor: Pin Configuration n - …\nPMUX0_ (rw) register accessor: Peripheral Multiplexing n - …\nRegister block\nWRCONFIG (w) register accessor: Write Configuration\nControl\n0x24 - Control\nIterator for array of: 0x24 - Control\nData Direction\n0x00 - Data Direction\nIterator for array of: 0x00 - Data Direction\nData Direction Clear\n0x04 - Data Direction Clear\nIterator for array of: 0x04 - Data Direction Clear\nData Direction Set\n0x08 - Data Direction Set\nIterator for array of: 0x08 - Data Direction Set\nData Direction Toggle\n0x0c - Data Direction Toggle\nIterator for array of: 0x0c - Data Direction Toggle\nReturns the argument unchanged.\nData Input Value\n0x20 - Data Input Value\nIterator for array of: 0x20 - Data Input Value\nCalls <code>U::from(self)</code>.\nData Output Value\n0x10 - Data Output Value\nIterator for array of: 0x10 - Data Output Value\nData Output Value Clear\n0x14 - Data Output Value Clear\nIterator for array of: 0x14 - Data Output Value Clear\nData Output Value Set\n0x18 - Data Output Value Set\nIterator for array of: 0x18 - Data Output Value Set\nData Output Value Toggle\n0x1c - Data Output Value Toggle\nIterator for array of: 0x1c - Data Output Value Toggle\nPin Configuration n - Group 0\n0x40..0x60 - Pin Configuration n - Group 0\nIterator for array of: 0x40..0x60 - Pin Configuration n - …\nPeripheral Multiplexing n - Group 0\n0x30..0x40 - Peripheral Multiplexing n - Group 0\nIterator for array of: 0x30..0x40 - Peripheral …\nWrite Configuration\n0x28 - Write Configuration\nIterator for array of: 0x28 - Write Configuration\nControl\nRegister <code>CTRL%s</code> reader\nField <code>SAMPLING</code> writer - Input Sampling Mode\nRegister <code>CTRL%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Input Sampling Mode\nField <code>DIR</code> reader - Port Data Direction\nData Direction\nField <code>DIR</code> writer - Port Data Direction\nRegister <code>DIR%s</code> reader\nRegister <code>DIR%s</code> writer\nBits 0:31 - Port Data Direction\nBits 0:31 - Port Data Direction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRCLR</code> reader - Port Data Direction Clear\nData Direction Clear\nField <code>DIRCLR</code> writer - Port Data Direction Clear\nRegister <code>DIRCLR%s</code> reader\nRegister <code>DIRCLR%s</code> writer\nBits 0:31 - Port Data Direction Clear\nBits 0:31 - Port Data Direction Clear\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRSET</code> reader - Port Data Direction Set\nData Direction Set\nField <code>DIRSET</code> writer - Port Data Direction Set\nRegister <code>DIRSET%s</code> reader\nRegister <code>DIRSET%s</code> writer\nBits 0:31 - Port Data Direction Set\nBits 0:31 - Port Data Direction Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRTGL</code> reader - Port Data Direction Toggle\nData Direction Toggle\nField <code>DIRTGL</code> writer - Port Data Direction Toggle\nRegister <code>DIRTGL%s</code> reader\nRegister <code>DIRTGL%s</code> writer\nBits 0:31 - Port Data Direction Toggle\nBits 0:31 - Port Data Direction Toggle\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>IN</code> reader - Port Data Input Value\nData Input Value\nRegister <code>IN%s</code> reader\nReturns the argument unchanged.\nBits 0:31 - Port Data Input Value\nCalls <code>U::from(self)</code>.\nField <code>OUT</code> reader - Port Data Output Value\nData Output Value\nField <code>OUT</code> writer - Port Data Output Value\nRegister <code>OUT%s</code> reader\nRegister <code>OUT%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Port Data Output Value\nBits 0:31 - Port Data Output Value\nField <code>OUTCLR</code> reader - Port Data Output Value Clear\nData Output Value Clear\nField <code>OUTCLR</code> writer - Port Data Output Value Clear\nRegister <code>OUTCLR%s</code> reader\nRegister <code>OUTCLR%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Port Data Output Value Clear\nBits 0:31 - Port Data Output Value Clear\nField <code>OUTSET</code> reader - Port Data Output Value Set\nData Output Value Set\nField <code>OUTSET</code> writer - Port Data Output Value Set\nRegister <code>OUTSET%s</code> reader\nRegister <code>OUTSET%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Port Data Output Value Set\nBits 0:31 - Port Data Output Value Set\nField <code>OUTTGL</code> reader - Port Data Output Value Toggle\nData Output Value Toggle\nField <code>OUTTGL</code> writer - Port Data Output Value Toggle\nRegister <code>OUTTGL%s</code> reader\nRegister <code>OUTTGL%s</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Port Data Output Value Toggle\nBits 0:31 - Port Data Output Value Toggle\nField <code>DRVSTR</code> reader - Output Driver Strength Selection\nField <code>DRVSTR</code> writer - Output Driver Strength Selection\nField <code>INEN</code> reader - Input Enable\nField <code>INEN</code> writer - Input Enable\nPin Configuration n - Group 0\nField <code>PMUXEN</code> reader - Peripheral Multiplexer Enable\nField <code>PMUXEN</code> writer - Peripheral Multiplexer Enable\nField <code>PULLEN</code> reader - Pull Enable\nField <code>PULLEN</code> writer - Pull Enable\nRegister <code>PINCFG0_%s</code> reader\nRegister <code>PINCFG0_%s</code> writer\nBit 6 - Output Driver Strength Selection\nBit 6 - Output Driver Strength Selection\nReturns the argument unchanged.\nBit 1 - Input Enable\nBit 1 - Input Enable\nCalls <code>U::from(self)</code>.\nBit 0 - Peripheral Multiplexer Enable\nBit 0 - Peripheral Multiplexer Enable\nBit 2 - Pull Enable\nBit 2 - Pull Enable\n0: Peripheral function A selected\n0: Peripheral function A selected\n1: Peripheral function B selected\n1: Peripheral function B selected\n2: Peripheral function C selected\n2: Peripheral function C selected\n3: Peripheral function D selected\n3: Peripheral function D selected\n4: Peripheral function E selected\n4: Peripheral function E selected\n5: Peripheral function F selected\n5: Peripheral function F selected\n6: Peripheral function G selected\n6: Peripheral function G selected\n7: Peripheral function H selected\n7: Peripheral function H selected\nPeripheral Multiplexing n - Group 0\nField <code>PMUXE</code> reader - Peripheral Multiplexing Even\nField <code>PMUXE</code> writer - Peripheral Multiplexing Even\nPeripheral Multiplexing Even\nField <code>PMUXO</code> reader - Peripheral Multiplexing Odd\nField <code>PMUXO</code> writer - Peripheral Multiplexing Odd\nPeripheral Multiplexing Odd\nRegister <code>PMUX0_%s</code> reader\nRegister <code>PMUX0_%s</code> writer\nPeripheral function A selected\nPeripheral function A selected\nPeripheral function B selected\nPeripheral function B selected\nPeripheral function C selected\nPeripheral function C selected\nPeripheral function D selected\nPeripheral function D selected\nPeripheral function E selected\nPeripheral function E selected\nPeripheral function F selected\nPeripheral function F selected\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPeripheral function G selected\nPeripheral function G selected\nPeripheral function H selected\nPeripheral function H selected\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPeripheral function A selected\nPeripheral function A selected\nPeripheral function B selected\nPeripheral function B selected\nPeripheral function C selected\nPeripheral function C selected\nPeripheral function D selected\nPeripheral function D selected\nPeripheral function E selected\nPeripheral function E selected\nPeripheral function F selected\nPeripheral function F selected\nPeripheral function G selected\nPeripheral function G selected\nPeripheral function H selected\nPeripheral function H selected\nBits 0:3 - Peripheral Multiplexing Even\nBits 0:3 - Peripheral Multiplexing Even\nBits 4:7 - Peripheral Multiplexing Odd\nBits 4:7 - Peripheral Multiplexing Odd\nGet enumerated values variant\nGet enumerated values variant\nField <code>DRVSTR</code> writer - Output Driver Strength Selection\nField <code>HWSEL</code> writer - Half-Word Select\nField <code>INEN</code> writer - Input Enable\nField <code>PINMASK</code> writer - Pin Mask for Multiple Pin …\nField <code>PMUX</code> writer - Peripheral Multiplexing\nField <code>PMUXEN</code> writer - Peripheral Multiplexer Enable\nField <code>PULLEN</code> writer - Pull Enable\nRegister <code>WRCONFIG%s</code> writer\nWrite Configuration\nField <code>WRPINCFG</code> writer - Write PINCFG\nField <code>WRPMUX</code> writer - Write PMUX\nBit 22 - Output Driver Strength Selection\nReturns the argument unchanged.\nBit 31 - Half-Word Select\nBit 17 - Input Enable\nCalls <code>U::from(self)</code>.\nBits 0:15 - Pin Mask for Multiple Pin Configuration\nBits 24:27 - Peripheral Multiplexing\nBit 16 - Peripheral Multiplexer Enable\nBit 18 - Pull Enable\nBit 30 - Write PINCFG\nBit 28 - Write PMUX\n32-bit Counter with Single 32-bit Compare\n16-bit Counter with Two 16-bit Compares\nClock/Calendar with Alarm\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCluster 32-bit Counter with Single 32-bit Compare\n0x00..0x1c - 32-bit Counter with Single 32-bit Compare\nCluster 16-bit Counter with Two 16-bit Compares\n0x00..0x1c - 16-bit Counter with Two 16-bit Compares\nCluster Clock/Calendar with Alarm\n0x00..0x1d - Clock/Calendar with Alarm\nCOMP (rw) register accessor: MODE0 Compare n Value\nCOUNT (rw) register accessor: MODE0 Counter Value\nCTRL (rw) register accessor: MODE0 Control\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE0 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nINTENCLR (rw) register accessor: MODE0 Interrupt Enable …\nINTENSET (rw) register accessor: MODE0 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE0 Interrupt Flag …\n32-bit Counter with Single 32-bit Compare\nREADREQ (rw) register accessor: Read Request\nSTATUS (rw) register accessor: Status\nMODE0 Compare n Value\n0x18 - MODE0 Compare n Value\nIterator for array of: 0x18 - MODE0 Compare n Value\nMODE0 Counter Value\n0x10 - MODE0 Counter Value\nMODE0 Control\n0x00 - MODE0 Control\nDebug Control\n0x0b - Debug Control\nMODE0 Event Control\n0x04 - MODE0 Event Control\nFrequency Correction\n0x0c - Frequency Correction\nReturns the argument unchanged.\nMODE0 Interrupt Enable Clear\n0x06 - MODE0 Interrupt Enable Clear\nMODE0 Interrupt Enable Set\n0x07 - MODE0 Interrupt Enable Set\nMODE0 Interrupt Flag Status and Clear\n0x08 - MODE0 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nRead Request\n0x02 - Read Request\nStatus\n0x0a - Status\nField <code>COMP</code> reader - Compare Value\nMODE0 Compare n Value\nField <code>COMP</code> writer - Compare Value\nRegister <code>COMP%s</code> reader\nRegister <code>COMP%s</code> writer\nBits 0:31 - Compare Value\nBits 0:31 - Compare Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nMODE0 Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:31 - Counter Value\nBits 0:31 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Mode 2: Clock/Calendar\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nMODE0 Control\n0: CLK_RTC_CNT = GCLK_RTC/1\n10: CLK_RTC_CNT = GCLK_RTC/1024\n7: CLK_RTC_CNT = GCLK_RTC/128\n4: CLK_RTC_CNT = GCLK_RTC/16\n1: CLK_RTC_CNT = GCLK_RTC/2\n8: CLK_RTC_CNT = GCLK_RTC/256\n5: CLK_RTC_CNT = GCLK_RTC/32\n2: CLK_RTC_CNT = GCLK_RTC/4\n9: CLK_RTC_CNT = GCLK_RTC/512\n6: CLK_RTC_CNT = GCLK_RTC/64\n3: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>MATCHCLR</code> reader - Clear on Match\nField <code>MATCHCLR</code> writer - Clear on Match\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRL</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 7 - Clear on Match\nBit 7 - Clear on Match\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMPEO0</code> reader - Compare 0 Event Output Enable\nField <code>CMPEO0</code> writer - Compare 0 Event Output Enable\nMODE0 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBit 8 - Compare 0 Event Output Enable\nBit 8 - Compare 0 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nMODE0 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 0 - Compare 0 Interrupt Enable\nBit 0 - Compare 0 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nMODE0 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENSET</code> writer\nBit 0 - Compare 0 Interrupt Enable\nBit 0 - Compare 0 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>CMP0</code> reader - Compare 0\nField <code>CMP0</code> writer - Compare 0\nMODE0 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nRegister <code>INTFLAG</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nRegister <code>INTFLAG</code> writer\nBit 0 - Compare 0\nBit 0 - Compare 0\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow\nBit 7 - Overflow\nBit 6 - Synchronization Ready\nBit 6 - Synchronization Ready\nField <code>ADDR</code> reader - Address\nRegister <code>READREQ</code> reader\nField <code>RCONT</code> reader - Read Continuously\nField <code>RCONT</code> writer - Read Continuously\nRead Request\nField <code>RREQ</code> writer - Read Request\nRegister <code>READREQ</code> writer\nBits 0:5 - Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 14 - Read Continuously\nBit 14 - Read Continuously\nBit 15 - Read Request\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nRegister <code>STATUS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy\nCOMP (rw) register accessor: MODE1 Compare n Value\nCOUNT (rw) register accessor: MODE1 Counter Value\nCTRL (rw) register accessor: MODE1 Control\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE1 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nINTENCLR (rw) register accessor: MODE1 Interrupt Enable …\nINTENSET (rw) register accessor: MODE1 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE1 Interrupt Flag …\n16-bit Counter with Two 16-bit Compares\nPER (rw) register accessor: MODE1 Counter Period\nREADREQ (rw) register accessor: Read Request\nSTATUS (rw) register accessor: Status\nMODE1 Compare n Value\n0x18 - MODE1 Compare n Value\nIterator for array of: 0x18 - MODE1 Compare n Value\nMODE1 Counter Value\n0x10 - MODE1 Counter Value\nMODE1 Control\n0x00 - MODE1 Control\nDebug Control\n0x0b - Debug Control\nMODE1 Event Control\n0x04 - MODE1 Event Control\nFrequency Correction\n0x0c - Frequency Correction\nReturns the argument unchanged.\nMODE1 Interrupt Enable Clear\n0x06 - MODE1 Interrupt Enable Clear\nMODE1 Interrupt Enable Set\n0x07 - MODE1 Interrupt Enable Set\nMODE1 Interrupt Flag Status and Clear\n0x08 - MODE1 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nMODE1 Counter Period\n0x14 - MODE1 Counter Period\nRead Request\n0x02 - Read Request\nStatus\n0x0a - Status\nField <code>COMP</code> reader - Compare Value\nMODE1 Compare n Value\nField <code>COMP</code> writer - Compare Value\nRegister <code>COMP%s</code> reader\nRegister <code>COMP%s</code> writer\nBits 0:15 - Compare Value\nBits 0:15 - Compare Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nMODE1 Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:15 - Counter Value\nBits 0:15 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Mode 2: Clock/Calendar\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nMODE1 Control\n0: CLK_RTC_CNT = GCLK_RTC/1\n10: CLK_RTC_CNT = GCLK_RTC/1024\n7: CLK_RTC_CNT = GCLK_RTC/128\n4: CLK_RTC_CNT = GCLK_RTC/16\n1: CLK_RTC_CNT = GCLK_RTC/2\n8: CLK_RTC_CNT = GCLK_RTC/256\n5: CLK_RTC_CNT = GCLK_RTC/32\n2: CLK_RTC_CNT = GCLK_RTC/4\n9: CLK_RTC_CNT = GCLK_RTC/512\n6: CLK_RTC_CNT = GCLK_RTC/64\n3: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRL</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMPEO0</code> reader - Compare 0 Event Output Enable\nField <code>CMPEO0</code> writer - Compare 0 Event Output Enable\nField <code>CMPEO1</code> reader - Compare 1 Event Output Enable\nField <code>CMPEO1</code> writer - Compare 1 Event Output Enable\nMODE1 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBit 8 - Compare 0 Event Output Enable\nBit 8 - Compare 0 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nMODE1 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 0 - Compare 0 Interrupt Enable\nBit 0 - Compare 0 Interrupt Enable\nBit 1 - Compare 1 Interrupt Enable\nBit 1 - Compare 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nMODE1 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENSET</code> writer\nBit 0 - Compare 0 Interrupt Enable\nBit 0 - Compare 0 Interrupt Enable\nBit 1 - Compare 1 Interrupt Enable\nBit 1 - Compare 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>CMP0</code> reader - Compare 0\nField <code>CMP0</code> writer - Compare 0\nField <code>CMP1</code> reader - Compare 1\nField <code>CMP1</code> writer - Compare 1\nMODE1 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nRegister <code>INTFLAG</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nRegister <code>INTFLAG</code> writer\nBit 0 - Compare 0\nBit 0 - Compare 0\nBit 1 - Compare 1\nBit 1 - Compare 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow\nBit 7 - Overflow\nBit 6 - Synchronization Ready\nBit 6 - Synchronization Ready\nField <code>PER</code> reader - Counter Period\nMODE1 Counter Period\nField <code>PER</code> writer - Counter Period\nRegister <code>PER</code> reader\nRegister <code>PER</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Counter Period\nBits 0:15 - Counter Period\nField <code>ADDR</code> reader - Address\nRegister <code>READREQ</code> reader\nField <code>RCONT</code> reader - Read Continuously\nField <code>RCONT</code> writer - Read Continuously\nRead Request\nField <code>RREQ</code> writer - Read Request\nRegister <code>READREQ</code> writer\nBits 0:5 - Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 14 - Read Continuously\nBit 14 - Read Continuously\nBit 15 - Read Request\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nRegister <code>STATUS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy\nALARM (rw) register accessor: MODE2 Alarm n Value\nCLOCK (rw) register accessor: MODE2 Clock Value\nCTRL (rw) register accessor: MODE2 Control\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE2 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nINTENCLR (rw) register accessor: MODE2 Interrupt Enable …\nINTENSET (rw) register accessor: MODE2 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE2 Interrupt Flag …\nMASK (rw) register accessor: MODE2 Alarm n Mask\nClock/Calendar with Alarm\nREADREQ (rw) register accessor: Read Request\nSTATUS (rw) register accessor: Status\nMODE2 Alarm n Value\n0x18 - MODE2 Alarm n Value\nIterator for array of: 0x18 - MODE2 Alarm n Value\nMODE2 Clock Value\n0x10 - MODE2 Clock Value\nMODE2 Control\n0x00 - MODE2 Control\nDebug Control\n0x0b - Debug Control\nMODE2 Event Control\n0x04 - MODE2 Event Control\nFrequency Correction\n0x0c - Frequency Correction\nReturns the argument unchanged.\nMODE2 Interrupt Enable Clear\n0x06 - MODE2 Interrupt Enable Clear\nMODE2 Interrupt Enable Set\n0x07 - MODE2 Interrupt Enable Set\nMODE2 Interrupt Flag Status and Clear\n0x08 - MODE2 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nMODE2 Alarm n Mask\n0x1c - MODE2 Alarm n Mask\nIterator for array of: 0x1c - MODE2 Alarm n Mask\nRead Request\n0x02 - Read Request\nStatus\n0x0a - Status\nMODE2 Alarm n Value\n0: Morning hour\nField <code>DAY</code> reader - Day\nField <code>DAY</code> writer - Day\nField <code>HOUR</code> reader - Hour\nField <code>HOUR</code> writer - Hour\nHour\nField <code>MINUTE</code> reader - Minute\nField <code>MINUTE</code> writer - Minute\nField <code>MONTH</code> reader - Month\nField <code>MONTH</code> writer - Month\n16: Afternoon hour\nRegister <code>ALARM%s</code> reader\nField <code>SECOND</code> reader - Second\nField <code>SECOND</code> writer - Second\nRegister <code>ALARM%s</code> writer\nField <code>YEAR</code> reader - Year\nField <code>YEAR</code> writer - Year\nMorning hour\nBits 17:21 - Day\nBits 17:21 - Day\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour\nBits 12:16 - Hour\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMorning hour\nAfternoon hour\nBits 6:11 - Minute\nBits 6:11 - Minute\nBits 22:25 - Month\nBits 22:25 - Month\nAfternoon hour\nBits 0:5 - Second\nBits 0:5 - Second\nGet enumerated values variant\nBits 26:31 - Year\nBits 26:31 - Year\n0: AM when CLKREP in 12-hour\nMODE2 Clock Value\nField <code>DAY</code> reader - Day\nField <code>DAY</code> writer - Day\nField <code>HOUR</code> reader - Hour\nField <code>HOUR</code> writer - Hour\nHour\nField <code>MINUTE</code> reader - Minute\nField <code>MINUTE</code> writer - Minute\nField <code>MONTH</code> reader - Month\nField <code>MONTH</code> writer - Month\n16: PM when CLKREP in 12-hour\nRegister <code>CLOCK</code> reader\nField <code>SECOND</code> reader - Second\nField <code>SECOND</code> writer - Second\nRegister <code>CLOCK</code> writer\nField <code>YEAR</code> reader - Year\nField <code>YEAR</code> writer - Year\nAM when CLKREP in 12-hour\nBits 17:21 - Day\nBits 17:21 - Day\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour\nBits 12:16 - Hour\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAM when CLKREP in 12-hour\nPM when CLKREP in 12-hour\nBits 6:11 - Minute\nBits 6:11 - Minute\nBits 22:25 - Month\nBits 22:25 - Month\nPM when CLKREP in 12-hour\nBits 0:5 - Second\nBits 0:5 - Second\nGet enumerated values variant\nBits 26:31 - Year\nBits 26:31 - Year\nField <code>CLKREP</code> reader - Clock Representation\nField <code>CLKREP</code> writer - Clock Representation\n2: Mode 2: Clock/Calendar\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nMODE2 Control\n0: CLK_RTC_CNT = GCLK_RTC/1\n10: CLK_RTC_CNT = GCLK_RTC/1024\n7: CLK_RTC_CNT = GCLK_RTC/128\n4: CLK_RTC_CNT = GCLK_RTC/16\n1: CLK_RTC_CNT = GCLK_RTC/2\n8: CLK_RTC_CNT = GCLK_RTC/256\n5: CLK_RTC_CNT = GCLK_RTC/32\n2: CLK_RTC_CNT = GCLK_RTC/4\n9: CLK_RTC_CNT = GCLK_RTC/512\n6: CLK_RTC_CNT = GCLK_RTC/64\n3: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>MATCHCLR</code> reader - Clear on Match\nField <code>MATCHCLR</code> writer - Clear on Match\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRL</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nBit 6 - Clock Representation\nBit 6 - Clock Representation\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 7 - Clear on Match\nBit 7 - Clear on Match\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ALARMEO0</code> reader - Alarm 0 Event Output Enable\nField <code>ALARMEO0</code> writer - Alarm 0 Event Output Enable\nMODE2 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBit 8 - Alarm 0 Event Output Enable\nBit 8 - Alarm 0 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>ALARM0</code> reader - Alarm 0 Interrupt Enable\nField <code>ALARM0</code> writer - Alarm 0 Interrupt Enable\nMODE2 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 0 - Alarm 0 Interrupt Enable\nBit 0 - Alarm 0 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>ALARM0</code> reader - Alarm 0 Interrupt Enable\nField <code>ALARM0</code> writer - Alarm 0 Interrupt Enable\nMODE2 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready Interrupt …\nField <code>SYNCRDY</code> writer - Synchronization Ready Interrupt …\nRegister <code>INTENSET</code> writer\nBit 0 - Alarm 0 Interrupt Enable\nBit 0 - Alarm 0 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow Interrupt Enable\nBit 7 - Overflow Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nBit 6 - Synchronization Ready Interrupt Enable\nField <code>ALARM0</code> reader - Alarm 0\nField <code>ALARM0</code> writer - Alarm 0\nMODE2 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nRegister <code>INTFLAG</code> reader\nField <code>SYNCRDY</code> reader - Synchronization Ready\nField <code>SYNCRDY</code> writer - Synchronization Ready\nRegister <code>INTFLAG</code> writer\nBit 0 - Alarm 0\nBit 0 - Alarm 0\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Overflow\nBit 7 - Overflow\nBit 6 - Synchronization Ready\nBit 6 - Synchronization Ready\n4: Match seconds, minutes, hours, and days only\n3: Match seconds, minutes, and hours only\nMODE2 Alarm n Mask\n5: Match seconds, minutes, hours, days, and months only\n2: Match seconds and minutes only\n0: Alarm Disabled\nRegister <code>MASK%s</code> reader\nField <code>SEL</code> reader - Alarm Mask Selection\nField <code>SEL</code> writer - Alarm Mask Selection\nAlarm Mask Selection\n1: Match seconds only\nRegister <code>MASK%s</code> writer\n6: Match seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, and days only\nReturns the argument unchanged.\nReturns the argument unchanged.\nMatch seconds, minutes, and hours only\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMatch seconds, minutes, hours, and days only\nMatch seconds, minutes, and hours only\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nMatch seconds only\nMatch seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nBits 0:2 - Alarm Mask Selection\nBits 0:2 - Alarm Mask Selection\nMatch seconds only\nGet enumerated values variant\nMatch seconds, minutes, hours, days, months, and years\nField <code>ADDR</code> reader - Address\nRegister <code>READREQ</code> reader\nField <code>RCONT</code> reader - Read Continuously\nField <code>RCONT</code> writer - Read Continuously\nRead Request\nField <code>RREQ</code> writer - Read Request\nRegister <code>READREQ</code> writer\nBits 0:5 - Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 14 - Read Continuously\nBit 14 - Read Continuously\nBit 15 - Read Request\nRegister <code>STATUS</code> reader\nStatus\nField <code>SYNCBUSY</code> reader - Synchronization Busy\nRegister <code>STATUS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Synchronization Busy\nI2C Master Mode\nI2C Slave Mode\nRegister block\nSPI Mode\nUSART Mode\nReturns the argument unchanged.\nCluster I2C Master Mode\n0x00..0x31 - I2C Master Mode\nCluster I2C Slave Mode\n0x00..0x29 - I2C Slave Mode\nCalls <code>U::from(self)</code>.\nCluster SPI Mode\n0x00..0x31 - SPI Mode\nCluster USART Mode\n0x00..0x31 - USART Mode\nADDR (rw) register accessor: I2CM Address\nBAUD (rw) register accessor: I2CM Baud Rate\nCTRLA (rw) register accessor: I2CM Control A\nCTRLB (rw) register accessor: I2CM Control B\nDATA (rw) register accessor: I2CM Data\nDBGCTRL (rw) register accessor: I2CM Debug Control\nI2C Master Mode\nINTENCLR (rw) register accessor: I2CM Interrupt Enable …\nINTENSET (rw) register accessor: I2CM Interrupt Enable Set\nINTFLAG (rw) register accessor: I2CM Interrupt Flag Status …\nSTATUS (rw) register accessor: I2CM Status\nSYNCBUSY (r) register accessor: I2CM Syncbusy\nI2CM Address\n0x24 - I2CM Address\nI2CM Baud Rate\n0x0c - I2CM Baud Rate\nI2CM Control A\n0x00 - I2CM Control A\nI2CM Control B\n0x04 - I2CM Control B\nI2CM Data\n0x28 - I2CM Data\nI2CM Debug Control\n0x30 - I2CM Debug Control\nReturns the argument unchanged.\nI2CM Interrupt Enable Clear\n0x14 - I2CM Interrupt Enable Clear\nI2CM Interrupt Enable Set\n0x16 - I2CM Interrupt Enable Set\nI2CM Interrupt Flag Status and Clear\n0x18 - I2CM Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nI2CM Status\n0x1a - I2CM Status\nI2CM Syncbusy\n0x1c - I2CM Syncbusy\nField <code>ADDR</code> reader - Address Value\nI2CM Address\nField <code>ADDR</code> writer - Address Value\nField <code>HS</code> reader - High Speed Mode\nField <code>HS</code> writer - High Speed Mode\nField <code>LEN</code> reader - Length\nField <code>LEN</code> writer - Length\nField <code>LENEN</code> reader - Length Enable\nField <code>LENEN</code> writer - Length Enable\nRegister <code>ADDR</code> reader\nField <code>TENBITEN</code> reader - Ten Bit Addressing Enable\nField <code>TENBITEN</code> writer - Ten Bit Addressing Enable\nRegister <code>ADDR</code> writer\nBits 0:10 - Address Value\nBits 0:10 - Address Value\nReturns the argument unchanged.\nBit 14 - High Speed Mode\nBit 14 - High Speed Mode\nCalls <code>U::from(self)</code>.\nBits 16:23 - Length\nBits 16:23 - Length\nBit 13 - Length Enable\nBit 13 - Length Enable\nBit 15 - Ten Bit Addressing Enable\nBit 15 - Ten Bit Addressing Enable\nField <code>BAUD</code> reader - Baud Rate Value\nI2CM Baud Rate\nField <code>BAUD</code> writer - Baud Rate Value\nField <code>BAUDLOW</code> reader - Baud Rate Value Low\nField <code>BAUDLOW</code> writer - Baud Rate Value Low\nField <code>HSBAUD</code> reader - High Speed Baud Rate Value\nField <code>HSBAUD</code> writer - High Speed Baud Rate Value\nField <code>HSBAUDLOW</code> reader - High Speed Baud Rate Value Low\nField <code>HSBAUDLOW</code> writer - High Speed Baud Rate Value Low\nRegister <code>BAUD</code> reader\nRegister <code>BAUD</code> writer\nBits 0:7 - Baud Rate Value\nBits 0:7 - Baud Rate Value\nBits 8:15 - Baud Rate Value Low\nBits 8:15 - Baud Rate Value Low\nReturns the argument unchanged.\nBits 16:23 - High Speed Baud Rate Value\nBits 16:23 - High Speed Baud Rate Value\nBits 24:31 - High Speed Baud Rate Value Low\nBits 24:31 - High Speed Baud Rate Value Low\nCalls <code>U::from(self)</code>.\nI2CM Control A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\n5: I2C mode with internal clock\n4: I2C mode with external clock\nField <code>INACTOUT</code> reader - Inactive Time-Out\nField <code>INACTOUT</code> writer - Inactive Time-Out\nField <code>LOWTOUTEN</code> reader - SCL Low Timeout Enable\nField <code>LOWTOUTEN</code> writer - SCL Low Timeout Enable\nField <code>MEXTTOEN</code> reader - Master SCL Low Extend Timeout\nField <code>MEXTTOEN</code> writer - Master SCL Low Extend Timeout\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nField <code>PINOUT</code> reader - Pin Usage\nField <code>PINOUT</code> writer - Pin Usage\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SCLSM</code> reader - SCL Clock Stretch Mode\nField <code>SCLSM</code> writer - SCL Clock Stretch Mode\nField <code>SDAHOLD</code> reader - SDA Hold Time\nField <code>SDAHOLD</code> writer - SDA Hold Time\nField <code>SEXTTOEN</code> reader - Slave SCL Low Extend Timeout\nField <code>SEXTTOEN</code> writer - Slave SCL Low Extend Timeout\nField <code>SPEED</code> reader - Transfer Speed\nField <code>SPEED</code> writer - Transfer Speed\n3: SPI mode with internal clock\n2: SPI mode with external clock\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\n0: USART mode with external clock\n1: USART mode with internal clock\nRegister <code>CTRLA</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nI2C mode with internal clock\nI2C mode with external clock\nBits 28:29 - Inactive Time-Out\nBits 28:29 - Inactive Time-Out\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI2C mode with internal clock\nI2C mode with external clock\nSPI mode with internal clock\nSPI mode with external clock\nUSART mode with external clock\nUSART mode with internal clock\nBit 30 - SCL Low Timeout Enable\nBit 30 - SCL Low Timeout Enable\nBit 22 - Master SCL Low Extend Timeout\nBit 22 - Master SCL Low Extend Timeout\nBits 2:4 - Operating Mode\nBits 2:4 - Operating Mode\nBit 16 - Pin Usage\nBit 16 - Pin Usage\nBit 7 - Run in Standby\nBit 7 - Run in Standby\nBit 27 - SCL Clock Stretch Mode\nBit 27 - SCL Clock Stretch Mode\nBits 20:21 - SDA Hold Time\nBits 20:21 - SDA Hold Time\nBit 23 - Slave SCL Low Extend Timeout\nBit 23 - Slave SCL Low Extend Timeout\nBits 24:25 - Transfer Speed\nBits 24:25 - Transfer Speed\nSPI mode with internal clock\nSPI mode with external clock\nBit 0 - Software Reset\nBit 0 - Software Reset\nUSART mode with external clock\nUSART mode with internal clock\nGet enumerated values variant\nField <code>ACKACT</code> reader - Acknowledge Action\nField <code>ACKACT</code> writer - Acknowledge Action\nField <code>CMD</code> writer - Command\nI2CM Control B\nField <code>QCEN</code> reader - Quick Command Enable\nField <code>QCEN</code> writer - Quick Command Enable\nRegister <code>CTRLB</code> reader\nField <code>SMEN</code> reader - Smart Mode Enable\nField <code>SMEN</code> writer - Smart Mode Enable\nRegister <code>CTRLB</code> writer\nBit 18 - Acknowledge Action\nBit 18 - Acknowledge Action\nBits 16:17 - Command\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 9 - Quick Command Enable\nBit 9 - Quick Command Enable\nBit 8 - Smart Mode Enable\nBit 8 - Smart Mode Enable\nField <code>DATA</code> reader - Data Value\nI2CM Data\nField <code>DATA</code> writer - Data Value\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:7 - Data Value\nBits 0:7 - Data Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nI2CM Debug Control\nField <code>DBGSTOP</code> reader - Debug Mode\nField <code>DBGSTOP</code> writer - Debug Mode\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Mode\nBit 0 - Debug Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ERROR</code> reader - Combined Error Interrupt Disable\nField <code>ERROR</code> writer - Combined Error Interrupt Disable\nI2CM Interrupt Enable Clear\nField <code>MB</code> reader - Master On Bus Interrupt Disable\nField <code>MB</code> writer - Master On Bus Interrupt Disable\nRegister <code>INTENCLR</code> reader\nField <code>SB</code> reader - Slave On Bus Interrupt Disable\nField <code>SB</code> writer - Slave On Bus Interrupt Disable\nRegister <code>INTENCLR</code> writer\nBit 7 - Combined Error Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Master On Bus Interrupt Disable\nBit 0 - Master On Bus Interrupt Disable\nBit 1 - Slave On Bus Interrupt Disable\nBit 1 - Slave On Bus Interrupt Disable\nField <code>ERROR</code> reader - Combined Error Interrupt Enable\nField <code>ERROR</code> writer - Combined Error Interrupt Enable\nI2CM Interrupt Enable Set\nField <code>MB</code> reader - Master On Bus Interrupt Enable\nField <code>MB</code> writer - Master On Bus Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>SB</code> reader - Slave On Bus Interrupt Enable\nField <code>SB</code> writer - Slave On Bus Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 7 - Combined Error Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Master On Bus Interrupt Enable\nBit 0 - Master On Bus Interrupt Enable\nBit 1 - Slave On Bus Interrupt Enable\nBit 1 - Slave On Bus Interrupt Enable\nField <code>ERROR</code> reader - Combined Error Interrupt\nField <code>ERROR</code> writer - Combined Error Interrupt\nI2CM Interrupt Flag Status and Clear\nField <code>MB</code> reader - Master On Bus Interrupt\nField <code>MB</code> writer - Master On Bus Interrupt\nRegister <code>INTFLAG</code> reader\nField <code>SB</code> reader - Slave On Bus Interrupt\nField <code>SB</code> writer - Slave On Bus Interrupt\nRegister <code>INTFLAG</code> writer\nBit 7 - Combined Error Interrupt\nBit 7 - Combined Error Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Master On Bus Interrupt\nBit 0 - Master On Bus Interrupt\nBit 1 - Slave On Bus Interrupt\nBit 1 - Slave On Bus Interrupt\nField <code>ARBLOST</code> reader - Arbitration Lost\nField <code>ARBLOST</code> writer - Arbitration Lost\nField <code>BUSERR</code> reader - Bus Error\nField <code>BUSERR</code> writer - Bus Error\nField <code>BUSSTATE</code> reader - Bus State\nField <code>BUSSTATE</code> writer - Bus State\nField <code>CLKHOLD</code> reader - Clock Hold\nField <code>LENERR</code> reader - Length Error\nField <code>LENERR</code> writer - Length Error\nField <code>LOWTOUT</code> reader - SCL Low Timeout\nField <code>LOWTOUT</code> writer - SCL Low Timeout\nField <code>MEXTTOUT</code> reader - Master SCL Low Extend Timeout\nField <code>MEXTTOUT</code> writer - Master SCL Low Extend Timeout\nRegister <code>STATUS</code> reader\nField <code>RXNACK</code> reader - Received Not Acknowledge\nField <code>SEXTTOUT</code> reader - Slave SCL Low Extend Timeout\nField <code>SEXTTOUT</code> writer - Slave SCL Low Extend Timeout\nI2CM Status\nRegister <code>STATUS</code> writer\nBit 1 - Arbitration Lost\nBit 1 - Arbitration Lost\nBit 0 - Bus Error\nBit 0 - Bus Error\nBits 4:5 - Bus State\nBits 4:5 - Bus State\nBit 7 - Clock Hold\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 10 - Length Error\nBit 10 - Length Error\nBit 6 - SCL Low Timeout\nBit 6 - SCL Low Timeout\nBit 8 - Master SCL Low Extend Timeout\nBit 8 - Master SCL Low Extend Timeout\nBit 2 - Received Not Acknowledge\nBit 9 - Slave SCL Low Extend Timeout\nBit 9 - Slave SCL Low Extend Timeout\nField <code>ENABLE</code> reader - SERCOM Enable Synchronization Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchronization Busy\nI2CM Syncbusy\nField <code>SYSOP</code> reader - System Operation Synchronization Busy\nBit 1 - SERCOM Enable Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Synchronization Busy\nBit 2 - System Operation Synchronization Busy\nADDR (rw) register accessor: I2CS Address\nCTRLA (rw) register accessor: I2CS Control A\nCTRLB (rw) register accessor: I2CS Control B\nDATA (rw) register accessor: I2CS Data\nI2C Slave Mode\nINTENCLR (rw) register accessor: I2CS Interrupt Enable …\nINTENSET (rw) register accessor: I2CS Interrupt Enable Set\nINTFLAG (rw) register accessor: I2CS Interrupt Flag Status …\nSTATUS (rw) register accessor: I2CS Status\nSYNCBUSY (r) register accessor: I2CS Syncbusy\nI2CS Address\n0x24 - I2CS Address\nI2CS Control A\n0x00 - I2CS Control A\nI2CS Control B\n0x04 - I2CS Control B\nI2CS Data\n0x28 - I2CS Data\nReturns the argument unchanged.\nI2CS Interrupt Enable Clear\n0x14 - I2CS Interrupt Enable Clear\nI2CS Interrupt Enable Set\n0x16 - I2CS Interrupt Enable Set\nI2CS Interrupt Flag Status and Clear\n0x18 - I2CS Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nI2CS Status\n0x1a - I2CS Status\nI2CS Syncbusy\n0x1c - I2CS Syncbusy\nField <code>ADDR</code> reader - Address Value\nI2CS Address\nField <code>ADDR</code> writer - Address Value\nField <code>ADDRMASK</code> reader - Address Mask\nField <code>ADDRMASK</code> writer - Address Mask\nField <code>GENCEN</code> reader - General Call Address Enable\nField <code>GENCEN</code> writer - General Call Address Enable\nRegister <code>ADDR</code> reader\nField <code>TENBITEN</code> reader - Ten Bit Addressing Enable\nField <code>TENBITEN</code> writer - Ten Bit Addressing Enable\nRegister <code>ADDR</code> writer\nBits 1:10 - Address Value\nBits 1:10 - Address Value\nBits 17:26 - Address Mask\nBits 17:26 - Address Mask\nReturns the argument unchanged.\nBit 0 - General Call Address Enable\nBit 0 - General Call Address Enable\nCalls <code>U::from(self)</code>.\nBit 15 - Ten Bit Addressing Enable\nBit 15 - Ten Bit Addressing Enable\nI2CS Control A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\n5: I2C mode with internal clock\n4: I2C mode with external clock\nField <code>LOWTOUTEN</code> reader - SCL Low Timeout Enable\nField <code>LOWTOUTEN</code> writer - SCL Low Timeout Enable\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nField <code>PINOUT</code> reader - Pin Usage\nField <code>PINOUT</code> writer - Pin Usage\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run during Standby\nField <code>RUNSTDBY</code> writer - Run during Standby\nField <code>SCLSM</code> reader - SCL Clock Stretch Mode\nField <code>SCLSM</code> writer - SCL Clock Stretch Mode\nField <code>SDAHOLD</code> reader - SDA Hold Time\nField <code>SDAHOLD</code> writer - SDA Hold Time\nField <code>SEXTTOEN</code> reader - Slave SCL Low Extend Timeout\nField <code>SEXTTOEN</code> writer - Slave SCL Low Extend Timeout\nField <code>SPEED</code> reader - Transfer Speed\nField <code>SPEED</code> writer - Transfer Speed\n3: SPI mode with internal clock\n2: SPI mode with external clock\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\n0: USART mode with external clock\n1: USART mode with internal clock\nRegister <code>CTRLA</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nI2C mode with internal clock\nI2C mode with external clock\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI2C mode with internal clock\nI2C mode with external clock\nSPI mode with internal clock\nSPI mode with external clock\nUSART mode with external clock\nUSART mode with internal clock\nBit 30 - SCL Low Timeout Enable\nBit 30 - SCL Low Timeout Enable\nBits 2:4 - Operating Mode\nBits 2:4 - Operating Mode\nBit 16 - Pin Usage\nBit 16 - Pin Usage\nBit 7 - Run during Standby\nBit 7 - Run during Standby\nBit 27 - SCL Clock Stretch Mode\nBit 27 - SCL Clock Stretch Mode\nBits 20:21 - SDA Hold Time\nBits 20:21 - SDA Hold Time\nBit 23 - Slave SCL Low Extend Timeout\nBit 23 - Slave SCL Low Extend Timeout\nBits 24:25 - Transfer Speed\nBits 24:25 - Transfer Speed\nSPI mode with internal clock\nSPI mode with external clock\nBit 0 - Software Reset\nBit 0 - Software Reset\nUSART mode with external clock\nUSART mode with internal clock\nGet enumerated values variant\nField <code>AACKEN</code> reader - Automatic Address Acknowledge\nField <code>AACKEN</code> writer - Automatic Address Acknowledge\nField <code>ACKACT</code> reader - Acknowledge Action\nField <code>ACKACT</code> writer - Acknowledge Action\nField <code>AMODE</code> reader - Address Mode\nField <code>AMODE</code> writer - Address Mode\nField <code>CMD</code> writer - Command\nI2CS Control B\nField <code>GCMD</code> reader - PMBus Group Command\nField <code>GCMD</code> writer - PMBus Group Command\nRegister <code>CTRLB</code> reader\nField <code>SMEN</code> reader - Smart Mode Enable\nField <code>SMEN</code> writer - Smart Mode Enable\nRegister <code>CTRLB</code> writer\nBit 10 - Automatic Address Acknowledge\nBit 10 - Automatic Address Acknowledge\nBit 18 - Acknowledge Action\nBit 18 - Acknowledge Action\nBits 14:15 - Address Mode\nBits 14:15 - Address Mode\nBits 16:17 - Command\nReturns the argument unchanged.\nBit 9 - PMBus Group Command\nBit 9 - PMBus Group Command\nCalls <code>U::from(self)</code>.\nBit 8 - Smart Mode Enable\nBit 8 - Smart Mode Enable\nField <code>DATA</code> reader - Data Value\nI2CS Data\nField <code>DATA</code> writer - Data Value\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:7 - Data Value\nBits 0:7 - Data Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>AMATCH</code> reader - Address Match Interrupt Disable\nField <code>AMATCH</code> writer - Address Match Interrupt Disable\nField <code>DRDY</code> reader - Data Interrupt Disable\nField <code>DRDY</code> writer - Data Interrupt Disable\nField <code>ERROR</code> reader - Combined Error Interrupt Disable\nField <code>ERROR</code> writer - Combined Error Interrupt Disable\nI2CS Interrupt Enable Clear\nField <code>PREC</code> reader - Stop Received Interrupt Disable\nField <code>PREC</code> writer - Stop Received Interrupt Disable\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nBit 1 - Address Match Interrupt Disable\nBit 1 - Address Match Interrupt Disable\nBit 2 - Data Interrupt Disable\nBit 2 - Data Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop Received Interrupt Disable\nBit 0 - Stop Received Interrupt Disable\nField <code>AMATCH</code> reader - Address Match Interrupt Enable\nField <code>AMATCH</code> writer - Address Match Interrupt Enable\nField <code>DRDY</code> reader - Data Interrupt Enable\nField <code>DRDY</code> writer - Data Interrupt Enable\nField <code>ERROR</code> reader - Combined Error Interrupt Enable\nField <code>ERROR</code> writer - Combined Error Interrupt Enable\nI2CS Interrupt Enable Set\nField <code>PREC</code> reader - Stop Received Interrupt Enable\nField <code>PREC</code> writer - Stop Received Interrupt Enable\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nBit 1 - Address Match Interrupt Enable\nBit 1 - Address Match Interrupt Enable\nBit 2 - Data Interrupt Enable\nBit 2 - Data Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop Received Interrupt Enable\nBit 0 - Stop Received Interrupt Enable\nField <code>AMATCH</code> reader - Address Match Interrupt\nField <code>AMATCH</code> writer - Address Match Interrupt\nField <code>DRDY</code> reader - Data Interrupt\nField <code>DRDY</code> writer - Data Interrupt\nField <code>ERROR</code> reader - Combined Error Interrupt\nField <code>ERROR</code> writer - Combined Error Interrupt\nI2CS Interrupt Flag Status and Clear\nField <code>PREC</code> reader - Stop Received Interrupt\nField <code>PREC</code> writer - Stop Received Interrupt\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nBit 1 - Address Match Interrupt\nBit 1 - Address Match Interrupt\nBit 2 - Data Interrupt\nBit 2 - Data Interrupt\nBit 7 - Combined Error Interrupt\nBit 7 - Combined Error Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Stop Received Interrupt\nBit 0 - Stop Received Interrupt\nField <code>BUSERR</code> reader - Bus Error\nField <code>BUSERR</code> writer - Bus Error\nField <code>CLKHOLD</code> reader - Clock Hold\nField <code>COLL</code> reader - Transmit Collision\nField <code>COLL</code> writer - Transmit Collision\nField <code>DIR</code> reader - Read/Write Direction\nField <code>HS</code> reader - High Speed\nField <code>HS</code> writer - High Speed\nField <code>LOWTOUT</code> reader - SCL Low Timeout\nField <code>LOWTOUT</code> writer - SCL Low Timeout\nRegister <code>STATUS</code> reader\nField <code>RXNACK</code> reader - Received Not Acknowledge\nField <code>SEXTTOUT</code> reader - Slave SCL Low Extend Timeout\nField <code>SEXTTOUT</code> writer - Slave SCL Low Extend Timeout\nField <code>SR</code> reader - Repeated Start\nI2CS Status\nRegister <code>STATUS</code> writer\nBit 0 - Bus Error\nBit 0 - Bus Error\nBit 7 - Clock Hold\nBit 1 - Transmit Collision\nBit 1 - Transmit Collision\nBit 3 - Read/Write Direction\nReturns the argument unchanged.\nBit 10 - High Speed\nBit 10 - High Speed\nCalls <code>U::from(self)</code>.\nBit 6 - SCL Low Timeout\nBit 6 - SCL Low Timeout\nBit 2 - Received Not Acknowledge\nBit 9 - Slave SCL Low Extend Timeout\nBit 9 - Slave SCL Low Extend Timeout\nBit 4 - Repeated Start\nField <code>ENABLE</code> reader - SERCOM Enable Synchronization Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchronization Busy\nI2CS Syncbusy\nBit 1 - SERCOM Enable Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Synchronization Busy\nADDR (rw) register accessor: SPI Address\nBAUD (rw) register accessor: SPI Baud Rate\nCTRLA (rw) register accessor: SPI Control A\nCTRLB (rw) register accessor: SPI Control B\nDATA (rw) register accessor: SPI Data\nDBGCTRL (rw) register accessor: SPI Debug Control\nINTENCLR (rw) register accessor: SPI Interrupt Enable Clear\nINTENSET (rw) register accessor: SPI Interrupt Enable Set\nINTFLAG (rw) register accessor: SPI Interrupt Flag Status …\nSPI Mode\nSTATUS (rw) register accessor: SPI Status\nSYNCBUSY (r) register accessor: SPI Syncbusy\nSPI Address\n0x24 - SPI Address\nSPI Baud Rate\n0x0c - SPI Baud Rate\nSPI Control A\n0x00 - SPI Control A\nSPI Control B\n0x04 - SPI Control B\nSPI Data\n0x28 - SPI Data\nSPI Debug Control\n0x30 - SPI Debug Control\nReturns the argument unchanged.\nSPI Interrupt Enable Clear\n0x14 - SPI Interrupt Enable Clear\nSPI Interrupt Enable Set\n0x16 - SPI Interrupt Enable Set\nSPI Interrupt Flag Status and Clear\n0x18 - SPI Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nSPI Status\n0x1a - SPI Status\nSPI Syncbusy\n0x1c - SPI Syncbusy\nField <code>ADDR</code> reader - Address Value\nSPI Address\nField <code>ADDR</code> writer - Address Value\nField <code>ADDRMASK</code> reader - Address Mask\nField <code>ADDRMASK</code> writer - Address Mask\nRegister <code>ADDR</code> reader\nRegister <code>ADDR</code> writer\nBits 0:7 - Address Value\nBits 0:7 - Address Value\nBits 16:23 - Address Mask\nBits 16:23 - Address Mask\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BAUD</code> reader - Baud Rate Value\nSPI Baud Rate\nField <code>BAUD</code> writer - Baud Rate Value\nRegister <code>BAUD</code> reader\nRegister <code>BAUD</code> writer\nBits 0:7 - Baud Rate Value\nBits 0:7 - Baud Rate Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CPHA</code> reader - Clock Phase\nField <code>CPHA</code> writer - Clock Phase\nField <code>CPOL</code> reader - Clock Polarity\nField <code>CPOL</code> writer - Clock Polarity\nSPI Control A\nField <code>DIPO</code> reader - Data In Pinout\nField <code>DIPO</code> writer - Data In Pinout\nField <code>DOPO</code> reader - Data Out Pinout\nField <code>DOPO</code> writer - Data Out Pinout\nField <code>DORD</code> reader - Data Order\nField <code>DORD</code> writer - Data Order\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>FORM</code> reader - Frame Format\nField <code>FORM</code> writer - Frame Format\n5: I2C mode with internal clock\n4: I2C mode with external clock\nField <code>IBON</code> reader - Immediate Buffer Overflow Notification\nField <code>IBON</code> writer - Immediate Buffer Overflow Notification\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run during Standby\nField <code>RUNSTDBY</code> writer - Run during Standby\n3: SPI mode with internal clock\n2: SPI mode with external clock\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\n0: USART mode with external clock\n1: USART mode with internal clock\nRegister <code>CTRLA</code> writer\nBit 28 - Clock Phase\nBit 28 - Clock Phase\nBit 29 - Clock Polarity\nBit 29 - Clock Polarity\nBits 20:21 - Data In Pinout\nBits 20:21 - Data In Pinout\nBits 16:17 - Data Out Pinout\nBits 16:17 - Data Out Pinout\nBit 30 - Data Order\nBit 30 - Data Order\nBit 1 - Enable\nBit 1 - Enable\nBits 24:27 - Frame Format\nBits 24:27 - Frame Format\nReturns the argument unchanged.\nReturns the argument unchanged.\nI2C mode with internal clock\nI2C mode with external clock\nBit 8 - Immediate Buffer Overflow Notification\nBit 8 - Immediate Buffer Overflow Notification\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI2C mode with internal clock\nI2C mode with external clock\nSPI mode with internal clock\nSPI mode with external clock\nUSART mode with external clock\nUSART mode with internal clock\nBits 2:4 - Operating Mode\nBits 2:4 - Operating Mode\nBit 7 - Run during Standby\nBit 7 - Run during Standby\nSPI mode with internal clock\nSPI mode with external clock\nBit 0 - Software Reset\nBit 0 - Software Reset\nUSART mode with external clock\nUSART mode with internal clock\nGet enumerated values variant\nField <code>AMODE</code> reader - Address Mode\nField <code>AMODE</code> writer - Address Mode\nField <code>CHSIZE</code> reader - Character Size\nField <code>CHSIZE</code> writer - Character Size\nSPI Control B\nField <code>MSSEN</code> reader - Master Slave Select Enable\nField <code>MSSEN</code> writer - Master Slave Select Enable\nField <code>PLOADEN</code> reader - Data Preload Enable\nField <code>PLOADEN</code> writer - Data Preload Enable\nRegister <code>CTRLB</code> reader\nField <code>RXEN</code> reader - Receiver Enable\nField <code>RXEN</code> writer - Receiver Enable\nField <code>SSDE</code> reader - Slave Select Low Detect Enable\nField <code>SSDE</code> writer - Slave Select Low Detect Enable\nRegister <code>CTRLB</code> writer\nBits 14:15 - Address Mode\nBits 14:15 - Address Mode\nBits 0:2 - Character Size\nBits 0:2 - Character Size\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 13 - Master Slave Select Enable\nBit 13 - Master Slave Select Enable\nBit 6 - Data Preload Enable\nBit 6 - Data Preload Enable\nBit 17 - Receiver Enable\nBit 17 - Receiver Enable\nBit 9 - Slave Select Low Detect Enable\nBit 9 - Slave Select Low Detect Enable\nField <code>DATA</code> reader - Data Value\nSPI Data\nField <code>DATA</code> writer - Data Value\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:8 - Data Value\nBits 0:8 - Data Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSPI Debug Control\nField <code>DBGSTOP</code> reader - Debug Mode\nField <code>DBGSTOP</code> writer - Debug Mode\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Mode\nBit 0 - Debug Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DRE</code> reader - Data Register Empty Interrupt Disable\nField <code>DRE</code> writer - Data Register Empty Interrupt Disable\nField <code>ERROR</code> reader - Combined Error Interrupt Disable\nField <code>ERROR</code> writer - Combined Error Interrupt Disable\nSPI Interrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>RXC</code> reader - Receive Complete Interrupt Disable\nField <code>RXC</code> writer - Receive Complete Interrupt Disable\nField <code>SSL</code> reader - Slave Select Low Interrupt Disable\nField <code>SSL</code> writer - Slave Select Low Interrupt Disable\nField <code>TXC</code> reader - Transmit Complete Interrupt Disable\nField <code>TXC</code> writer - Transmit Complete Interrupt Disable\nRegister <code>INTENCLR</code> writer\nBit 0 - Data Register Empty Interrupt Disable\nBit 0 - Data Register Empty Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Receive Complete Interrupt Disable\nBit 2 - Receive Complete Interrupt Disable\nBit 3 - Slave Select Low Interrupt Disable\nBit 3 - Slave Select Low Interrupt Disable\nBit 1 - Transmit Complete Interrupt Disable\nBit 1 - Transmit Complete Interrupt Disable\nField <code>DRE</code> reader - Data Register Empty Interrupt Enable\nField <code>DRE</code> writer - Data Register Empty Interrupt Enable\nField <code>ERROR</code> reader - Combined Error Interrupt Enable\nField <code>ERROR</code> writer - Combined Error Interrupt Enable\nSPI Interrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>RXC</code> reader - Receive Complete Interrupt Enable\nField <code>RXC</code> writer - Receive Complete Interrupt Enable\nField <code>SSL</code> reader - Slave Select Low Interrupt Enable\nField <code>SSL</code> writer - Slave Select Low Interrupt Enable\nField <code>TXC</code> reader - Transmit Complete Interrupt Enable\nField <code>TXC</code> writer - Transmit Complete Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 0 - Data Register Empty Interrupt Enable\nBit 0 - Data Register Empty Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Receive Complete Interrupt Enable\nBit 2 - Receive Complete Interrupt Enable\nBit 3 - Slave Select Low Interrupt Enable\nBit 3 - Slave Select Low Interrupt Enable\nBit 1 - Transmit Complete Interrupt Enable\nBit 1 - Transmit Complete Interrupt Enable\nField <code>DRE</code> reader - Data Register Empty Interrupt\nField <code>ERROR</code> reader - Combined Error Interrupt\nField <code>ERROR</code> writer - Combined Error Interrupt\nSPI Interrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>RXC</code> reader - Receive Complete Interrupt\nField <code>SSL</code> reader - Slave Select Low Interrupt Flag\nField <code>SSL</code> writer - Slave Select Low Interrupt Flag\nField <code>TXC</code> reader - Transmit Complete Interrupt\nField <code>TXC</code> writer - Transmit Complete Interrupt\nRegister <code>INTFLAG</code> writer\nBit 0 - Data Register Empty Interrupt\nBit 7 - Combined Error Interrupt\nBit 7 - Combined Error Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Receive Complete Interrupt\nBit 3 - Slave Select Low Interrupt Flag\nBit 3 - Slave Select Low Interrupt Flag\nBit 1 - Transmit Complete Interrupt\nBit 1 - Transmit Complete Interrupt\nField <code>BUFOVF</code> reader - Buffer Overflow\nField <code>BUFOVF</code> writer - Buffer Overflow\nRegister <code>STATUS</code> reader\nSPI Status\nRegister <code>STATUS</code> writer\nBit 2 - Buffer Overflow\nBit 2 - Buffer Overflow\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CTRLB</code> reader - CTRLB Synchronization Busy\nField <code>ENABLE</code> reader - SERCOM Enable Synchronization Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchronization Busy\nSPI Syncbusy\nBit 2 - CTRLB Synchronization Busy\nBit 1 - SERCOM Enable Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Synchronization Busy\nBAUD (rw) register accessor: USART Baud Rate\nBAUD_FRAC_MODE (rw) register accessor: USART Baud Rate\nBAUD_FRACFP_MODE (rw) register accessor: USART Baud Rate\nBAUD_USARTFP_MODE (rw) register accessor: USART Baud Rate\nCTRLA (rw) register accessor: USART Control A\nCTRLB (rw) register accessor: USART Control B\nDATA (rw) register accessor: USART Data\nDBGCTRL (rw) register accessor: USART Debug Control\nINTENCLR (rw) register accessor: USART Interrupt Enable …\nINTENSET (rw) register accessor: USART Interrupt Enable Set\nINTFLAG (rw) register accessor: USART Interrupt Flag …\nRXPL (rw) register accessor: USART Receive Pulse Length\nSTATUS (rw) register accessor: USART Status\nSYNCBUSY (r) register accessor: USART Syncbusy\nUSART Mode\nUSART Baud Rate\n0x0c - USART Baud Rate\nUSART Baud Rate\n0x0c - USART Baud Rate\nUSART Baud Rate\n0x0c - USART Baud Rate\nUSART Baud Rate\n0x0c - USART Baud Rate\nUSART Control A\n0x00 - USART Control A\nUSART Control B\n0x04 - USART Control B\nUSART Data\n0x28 - USART Data\nUSART Debug Control\n0x30 - USART Debug Control\nReturns the argument unchanged.\nUSART Interrupt Enable Clear\n0x14 - USART Interrupt Enable Clear\nUSART Interrupt Enable Set\n0x16 - USART Interrupt Enable Set\nUSART Interrupt Flag Status and Clear\n0x18 - USART Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nUSART Receive Pulse Length\n0x0e - USART Receive Pulse Length\nUSART Status\n0x1a - USART Status\nUSART Syncbusy\n0x1c - USART Syncbusy\nField <code>BAUD</code> reader - Baud Rate Value\nUSART Baud Rate\nField <code>BAUD</code> writer - Baud Rate Value\nRegister <code>BAUD</code> reader\nRegister <code>BAUD</code> writer\nBits 0:15 - Baud Rate Value\nBits 0:15 - Baud Rate Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUSART Baud Rate\nField <code>BAUD</code> reader - Baud Rate Value\nField <code>BAUD</code> writer - Baud Rate Value\nField <code>FP</code> reader - Fractional Part\nField <code>FP</code> writer - Fractional Part\nRegister <code>BAUD_FRAC_MODE</code> reader\nRegister <code>BAUD_FRAC_MODE</code> writer\nBits 0:12 - Baud Rate Value\nBits 0:12 - Baud Rate Value\nBits 13:15 - Fractional Part\nBits 13:15 - Fractional Part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUSART Baud Rate\nField <code>BAUD</code> reader - Baud Rate Value\nField <code>BAUD</code> writer - Baud Rate Value\nField <code>FP</code> reader - Fractional Part\nField <code>FP</code> writer - Fractional Part\nRegister <code>BAUD_FRACFP_MODE</code> reader\nRegister <code>BAUD_FRACFP_MODE</code> writer\nBits 0:12 - Baud Rate Value\nBits 0:12 - Baud Rate Value\nBits 13:15 - Fractional Part\nBits 13:15 - Fractional Part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BAUD</code> reader - Baud Rate Value\nUSART Baud Rate\nField <code>BAUD</code> writer - Baud Rate Value\nRegister <code>BAUD_USARTFP_MODE</code> reader\nRegister <code>BAUD_USARTFP_MODE</code> writer\nBits 0:15 - Baud Rate Value\nBits 0:15 - Baud Rate Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMODE</code> reader - Communication Mode\nField <code>CMODE</code> writer - Communication Mode\nField <code>CPOL</code> reader - Clock Polarity\nField <code>CPOL</code> writer - Clock Polarity\nUSART Control A\nField <code>DORD</code> reader - Data Order\nField <code>DORD</code> writer - Data Order\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>FORM</code> reader - Frame Format\nField <code>FORM</code> writer - Frame Format\n5: I2C mode with internal clock\n4: I2C mode with external clock\nField <code>IBON</code> reader - Immediate Buffer Overflow Notification\nField <code>IBON</code> writer - Immediate Buffer Overflow Notification\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\nRegister <code>CTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run during Standby\nField <code>RUNSTDBY</code> writer - Run during Standby\nField <code>RXPO</code> reader - Receive Data Pinout\nField <code>RXPO</code> writer - Receive Data Pinout\nField <code>SAMPA</code> reader - Sample Adjustment\nField <code>SAMPA</code> writer - Sample Adjustment\nField <code>SAMPR</code> reader - Sample\nField <code>SAMPR</code> writer - Sample\n3: SPI mode with internal clock\n2: SPI mode with external clock\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nField <code>TXPO</code> reader - Transmit Data Pinout\nField <code>TXPO</code> writer - Transmit Data Pinout\n0: USART mode with external clock\n1: USART mode with internal clock\nRegister <code>CTRLA</code> writer\nBit 28 - Communication Mode\nBit 28 - Communication Mode\nBit 29 - Clock Polarity\nBit 29 - Clock Polarity\nBit 30 - Data Order\nBit 30 - Data Order\nBit 1 - Enable\nBit 1 - Enable\nBits 24:27 - Frame Format\nBits 24:27 - Frame Format\nReturns the argument unchanged.\nReturns the argument unchanged.\nI2C mode with internal clock\nI2C mode with external clock\nBit 8 - Immediate Buffer Overflow Notification\nBit 8 - Immediate Buffer Overflow Notification\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI2C mode with internal clock\nI2C mode with external clock\nSPI mode with internal clock\nSPI mode with external clock\nUSART mode with external clock\nUSART mode with internal clock\nBits 2:4 - Operating Mode\nBits 2:4 - Operating Mode\nBit 7 - Run during Standby\nBit 7 - Run during Standby\nBits 20:21 - Receive Data Pinout\nBits 20:21 - Receive Data Pinout\nBits 22:23 - Sample Adjustment\nBits 22:23 - Sample Adjustment\nBits 13:15 - Sample\nBits 13:15 - Sample\nSPI mode with internal clock\nSPI mode with external clock\nBit 0 - Software Reset\nBit 0 - Software Reset\nBits 16:17 - Transmit Data Pinout\nBits 16:17 - Transmit Data Pinout\nUSART mode with external clock\nUSART mode with internal clock\nGet enumerated values variant\nField <code>CHSIZE</code> reader - Character Size\nField <code>CHSIZE</code> writer - Character Size\nField <code>COLDEN</code> reader - Collision Detection Enable\nField <code>COLDEN</code> writer - Collision Detection Enable\nUSART Control B\nField <code>ENC</code> reader - Encoding Format\nField <code>ENC</code> writer - Encoding Format\nField <code>PMODE</code> reader - Parity Mode\nField <code>PMODE</code> writer - Parity Mode\nRegister <code>CTRLB</code> reader\nField <code>RXEN</code> reader - Receiver Enable\nField <code>RXEN</code> writer - Receiver Enable\nField <code>SBMODE</code> reader - Stop Bit Mode\nField <code>SBMODE</code> writer - Stop Bit Mode\nField <code>SFDE</code> reader - Start of Frame Detection Enable\nField <code>SFDE</code> writer - Start of Frame Detection Enable\nField <code>TXEN</code> reader - Transmitter Enable\nField <code>TXEN</code> writer - Transmitter Enable\nRegister <code>CTRLB</code> writer\nBits 0:2 - Character Size\nBits 0:2 - Character Size\nBit 8 - Collision Detection Enable\nBit 8 - Collision Detection Enable\nBit 10 - Encoding Format\nBit 10 - Encoding Format\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 13 - Parity Mode\nBit 13 - Parity Mode\nBit 17 - Receiver Enable\nBit 17 - Receiver Enable\nBit 6 - Stop Bit Mode\nBit 6 - Stop Bit Mode\nBit 9 - Start of Frame Detection Enable\nBit 9 - Start of Frame Detection Enable\nBit 16 - Transmitter Enable\nBit 16 - Transmitter Enable\nField <code>DATA</code> reader - Data Value\nUSART Data\nField <code>DATA</code> writer - Data Value\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:8 - Data Value\nBits 0:8 - Data Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUSART Debug Control\nField <code>DBGSTOP</code> reader - Debug Mode\nField <code>DBGSTOP</code> writer - Debug Mode\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Mode\nBit 0 - Debug Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CTSIC</code> reader - Clear To Send Input Change Interrupt …\nField <code>CTSIC</code> writer - Clear To Send Input Change Interrupt …\nField <code>DRE</code> reader - Data Register Empty Interrupt Disable\nField <code>DRE</code> writer - Data Register Empty Interrupt Disable\nField <code>ERROR</code> reader - Combined Error Interrupt Disable\nField <code>ERROR</code> writer - Combined Error Interrupt Disable\nUSART Interrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>RXBRK</code> reader - Break Received Interrupt Disable\nField <code>RXBRK</code> writer - Break Received Interrupt Disable\nField <code>RXC</code> reader - Receive Complete Interrupt Disable\nField <code>RXC</code> writer - Receive Complete Interrupt Disable\nField <code>RXS</code> reader - Receive Start Interrupt Disable\nField <code>RXS</code> writer - Receive Start Interrupt Disable\nField <code>TXC</code> reader - Transmit Complete Interrupt Disable\nField <code>TXC</code> writer - Transmit Complete Interrupt Disable\nRegister <code>INTENCLR</code> writer\nBit 4 - Clear To Send Input Change Interrupt Disable\nBit 4 - Clear To Send Input Change Interrupt Disable\nBit 0 - Data Register Empty Interrupt Disable\nBit 0 - Data Register Empty Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nBit 7 - Combined Error Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 5 - Break Received Interrupt Disable\nBit 5 - Break Received Interrupt Disable\nBit 2 - Receive Complete Interrupt Disable\nBit 2 - Receive Complete Interrupt Disable\nBit 3 - Receive Start Interrupt Disable\nBit 3 - Receive Start Interrupt Disable\nBit 1 - Transmit Complete Interrupt Disable\nBit 1 - Transmit Complete Interrupt Disable\nField <code>CTSIC</code> reader - Clear To Send Input Change Interrupt …\nField <code>CTSIC</code> writer - Clear To Send Input Change Interrupt …\nField <code>DRE</code> reader - Data Register Empty Interrupt Enable\nField <code>DRE</code> writer - Data Register Empty Interrupt Enable\nField <code>ERROR</code> reader - Combined Error Interrupt Enable\nField <code>ERROR</code> writer - Combined Error Interrupt Enable\nUSART Interrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>RXBRK</code> reader - Break Received Interrupt Enable\nField <code>RXBRK</code> writer - Break Received Interrupt Enable\nField <code>RXC</code> reader - Receive Complete Interrupt Enable\nField <code>RXC</code> writer - Receive Complete Interrupt Enable\nField <code>RXS</code> reader - Receive Start Interrupt Enable\nField <code>RXS</code> writer - Receive Start Interrupt Enable\nField <code>TXC</code> reader - Transmit Complete Interrupt Enable\nField <code>TXC</code> writer - Transmit Complete Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 4 - Clear To Send Input Change Interrupt Enable\nBit 4 - Clear To Send Input Change Interrupt Enable\nBit 0 - Data Register Empty Interrupt Enable\nBit 0 - Data Register Empty Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nBit 7 - Combined Error Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 5 - Break Received Interrupt Enable\nBit 5 - Break Received Interrupt Enable\nBit 2 - Receive Complete Interrupt Enable\nBit 2 - Receive Complete Interrupt Enable\nBit 3 - Receive Start Interrupt Enable\nBit 3 - Receive Start Interrupt Enable\nBit 1 - Transmit Complete Interrupt Enable\nBit 1 - Transmit Complete Interrupt Enable\nField <code>CTSIC</code> reader - Clear To Send Input Change Interrupt\nField <code>CTSIC</code> writer - Clear To Send Input Change Interrupt\nField <code>DRE</code> reader - Data Register Empty Interrupt\nField <code>ERROR</code> reader - Combined Error Interrupt\nField <code>ERROR</code> writer - Combined Error Interrupt\nUSART Interrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>RXBRK</code> reader - Break Received Interrupt\nField <code>RXBRK</code> writer - Break Received Interrupt\nField <code>RXC</code> reader - Receive Complete Interrupt\nField <code>RXS</code> writer - Receive Start Interrupt\nField <code>TXC</code> reader - Transmit Complete Interrupt\nField <code>TXC</code> writer - Transmit Complete Interrupt\nRegister <code>INTFLAG</code> writer\nBit 4 - Clear To Send Input Change Interrupt\nBit 4 - Clear To Send Input Change Interrupt\nBit 0 - Data Register Empty Interrupt\nBit 7 - Combined Error Interrupt\nBit 7 - Combined Error Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 5 - Break Received Interrupt\nBit 5 - Break Received Interrupt\nBit 2 - Receive Complete Interrupt\nBit 3 - Receive Start Interrupt\nBit 1 - Transmit Complete Interrupt\nBit 1 - Transmit Complete Interrupt\nRegister <code>RXPL</code> reader\nField <code>RXPL</code> reader - Receive Pulse Length\nUSART Receive Pulse Length\nField <code>RXPL</code> writer - Receive Pulse Length\nRegister <code>RXPL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Receive Pulse Length\nBits 0:7 - Receive Pulse Length\nField <code>BUFOVF</code> reader - Buffer Overflow\nField <code>BUFOVF</code> writer - Buffer Overflow\nField <code>COLL</code> reader - Collision Detected\nField <code>COLL</code> writer - Collision Detected\nField <code>CTS</code> reader - Clear To Send\nField <code>FERR</code> reader - Frame Error\nField <code>FERR</code> writer - Frame Error\nField <code>ISF</code> reader - Inconsistent Sync Field\nField <code>ISF</code> writer - Inconsistent Sync Field\nField <code>PERR</code> reader - Parity Error\nField <code>PERR</code> writer - Parity Error\nRegister <code>STATUS</code> reader\nUSART Status\nRegister <code>STATUS</code> writer\nBit 2 - Buffer Overflow\nBit 2 - Buffer Overflow\nBit 5 - Collision Detected\nBit 5 - Collision Detected\nBit 3 - Clear To Send\nBit 1 - Frame Error\nBit 1 - Frame Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Inconsistent Sync Field\nBit 4 - Inconsistent Sync Field\nBit 0 - Parity Error\nBit 0 - Parity Error\nField <code>CTRLB</code> reader - CTRLB Synchronization Busy\nField <code>ENABLE</code> reader - SERCOM Enable Synchronization Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchronization Busy\nUSART Syncbusy\nBit 2 - CTRLB Synchronization Busy\nBit 1 - SERCOM Enable Synchronization Busy\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Synchronization Busy\nBOD33 (rw) register accessor: 3.3V Brown-Out Detector …\nDFLLCTRL (rw) register accessor: DFLL48M Control\nDFLLMUL (rw) register accessor: DFLL48M Multiplier\nDFLLSYNC (rw) register accessor: DFLL48M Synchronization\nDFLLVAL (rw) register accessor: DFLL48M Value\nDPLLCTRLA (rw) register accessor: DPLL Control A\nDPLLCTRLB (rw) register accessor: DPLL Control B\nDPLLRATIO (rw) register accessor: DPLL Ratio Control\nDPLLSTATUS (r) register accessor: DPLL Status\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nOSC32K (rw) register accessor: 32kHz Internal Oscillator …\nOSC8M (rw) register accessor: 8MHz Internal Oscillator …\nOSCULP32K (rw) register accessor: 32kHz Ultra Low Power …\nPCLKSR (r) register accessor: Power and Clocks Status\nRegister block\nVREF (rw) register accessor: Voltage References System …\nXOSC (rw) register accessor: External Multipurpose Crystal …\nXOSC32K (rw) register accessor: 32kHz External Crystal …\n3.3V Brown-Out Detector (BOD33) Control\n0x34 - 3.3V Brown-Out Detector (BOD33) Control\nDFLL48M Control\n0x24 - DFLL48M Control\nDFLL48M Multiplier\n0x2c - DFLL48M Multiplier\nDFLL48M Synchronization\n0x30 - DFLL48M Synchronization\nDFLL48M Value\n0x28 - DFLL48M Value\nDPLL Control A\n0x44 - DPLL Control A\nDPLL Control B\n0x4c - DPLL Control B\nDPLL Ratio Control\n0x48 - DPLL Ratio Control\nDPLL Status\n0x50 - DPLL Status\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x00 - Interrupt Enable Clear\nInterrupt Enable Set\n0x04 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x08 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\n32kHz Internal Oscillator (OSC32K) Control\n0x18 - 32kHz Internal Oscillator (OSC32K) Control\n8MHz Internal Oscillator (OSC8M) Control\n0x20 - 8MHz Internal Oscillator (OSC8M) Control\n32kHz Ultra Low Power Internal Oscillator (OSCULP32K) …\n0x1c - 32kHz Ultra Low Power Internal Oscillator …\nPower and Clocks Status\n0x0c - Power and Clocks Status\nVoltage References System (VREF) Control\n0x40 - Voltage References System (VREF) Control\nExternal Multipurpose Crystal Oscillator (XOSC) Control\n0x10 - External Multipurpose Crystal Oscillator (XOSC) …\n32kHz External Crystal Oscillator (XOSC32K) Control\n0x14 - 32kHz External Crystal Oscillator (XOSC32K) Control\nField <code>ACTION</code> reader - BOD33 Action\nField <code>ACTION</code> writer - BOD33 Action\nBOD33 Action\n3.3V Brown-Out Detector (BOD33) Control\nField <code>CEN</code> reader - Clock Enable\nField <code>CEN</code> writer - Clock Enable\n6: Divide clock by 128\n3: Divide clock by 16\n13: Divide clock by 16384\n9: Divide clock by 1024\n0: Divide clock by 2\n7: Divide clock by 256\n10: Divide clock by 2048\n4: Divide clock by 32\n14: Divide clock by 32768\n1: Divide clock by 4\n11: Divide clock by 4096\n8: Divide clock by 512\n5: Divide clock by 64\n15: Divide clock by 65536\n2: Divide clock by 8\n12: Divide clock by 8192\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>HYST</code> reader - Hysteresis\nField <code>HYST</code> writer - Hysteresis\n2: The BOD33 generates an interrupt\nField <code>LEVEL</code> reader - BOD33 Threshold Level\nField <code>LEVEL</code> writer - BOD33 Threshold Level\nField <code>MODE</code> reader - Operation Mode\nField <code>MODE</code> writer - Operation Mode\n0: No action\nField <code>PSEL</code> reader - Prescaler Select\nField <code>PSEL</code> writer - Prescaler Select\nPrescaler Select\nRegister <code>BOD33</code> reader\n1: The BOD33 generates a reset\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nRegister <code>BOD33</code> writer\nBits 3:4 - BOD33 Action\nBits 3:4 - BOD33 Action\nBit 9 - Clock Enable\nBit 9 - Clock Enable\nDivide clock by 128\nDivide clock by 16\nDivide clock by 16384\nDivide clock by 1024\nDivide clock by 2\nDivide clock by 256\nDivide clock by 2048\nDivide clock by 32\nDivide clock by 32768\nDivide clock by 4\nDivide clock by 4096\nDivide clock by 512\nDivide clock by 64\nDivide clock by 65536\nDivide clock by 8\nDivide clock by 8192\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 2 - Hysteresis\nBit 2 - Hysteresis\nThe BOD33 generates an interrupt\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDivide clock by 128\nDivide clock by 16\nDivide clock by 16384\nDivide clock by 1024\nDivide clock by 2\nDivide clock by 256\nDivide clock by 2048\nDivide clock by 32\nDivide clock by 32768\nDivide clock by 4\nDivide clock by 4096\nDivide clock by 512\nDivide clock by 64\nDivide clock by 65536\nDivide clock by 8\nDivide clock by 8192\nThe BOD33 generates an interrupt\nNo action\nThe BOD33 generates a reset\nBits 16:21 - BOD33 Threshold Level\nBits 16:21 - BOD33 Threshold Level\nBit 8 - Operation Mode\nBit 8 - Operation Mode\nNo action\nBits 12:15 - Prescaler Select\nBits 12:15 - Prescaler Select\nThe BOD33 generates a reset\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nGet enumerated values variant\nGet enumerated values variant\nField <code>BPLCKC</code> reader - Bypass Coarse Lock\nField <code>BPLCKC</code> writer - Bypass Coarse Lock\nField <code>CCDIS</code> reader - Chill Cycle Disable\nField <code>CCDIS</code> writer - Chill Cycle Disable\nDFLL48M Control\nField <code>ENABLE</code> reader - DFLL Enable\nField <code>ENABLE</code> writer - DFLL Enable\nField <code>LLAW</code> reader - Lose Lock After Wake\nField <code>LLAW</code> writer - Lose Lock After Wake\nField <code>MODE</code> reader - Operating Mode Selection\nField <code>MODE</code> writer - Operating Mode Selection\nField <code>ONDEMAND</code> reader - On Demand Control\nField <code>ONDEMAND</code> writer - On Demand Control\nField <code>QLDIS</code> reader - Quick Lock Disable\nField <code>QLDIS</code> writer - Quick Lock Disable\nRegister <code>DFLLCTRL</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>STABLE</code> reader - Stable DFLL Frequency\nField <code>STABLE</code> writer - Stable DFLL Frequency\nField <code>USBCRM</code> reader - USB Clock Recovery Mode\nField <code>USBCRM</code> writer - USB Clock Recovery Mode\nRegister <code>DFLLCTRL</code> writer\nField <code>WAITLOCK</code> reader - Wait Lock\nField <code>WAITLOCK</code> writer - Wait Lock\nBit 10 - Bypass Coarse Lock\nBit 10 - Bypass Coarse Lock\nBit 8 - Chill Cycle Disable\nBit 8 - Chill Cycle Disable\nBit 1 - DFLL Enable\nBit 1 - DFLL Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Lose Lock After Wake\nBit 4 - Lose Lock After Wake\nBit 2 - Operating Mode Selection\nBit 2 - Operating Mode Selection\nBit 7 - On Demand Control\nBit 7 - On Demand Control\nBit 9 - Quick Lock Disable\nBit 9 - Quick Lock Disable\nBit 6 - Run in Standby\nBit 6 - Run in Standby\nBit 3 - Stable DFLL Frequency\nBit 3 - Stable DFLL Frequency\nBit 5 - USB Clock Recovery Mode\nBit 5 - USB Clock Recovery Mode\nBit 11 - Wait Lock\nBit 11 - Wait Lock\nField <code>CSTEP</code> reader - Coarse Maximum Step\nField <code>CSTEP</code> writer - Coarse Maximum Step\nDFLL48M Multiplier\nField <code>FSTEP</code> reader - Fine Maximum Step\nField <code>FSTEP</code> writer - Fine Maximum Step\nField <code>MUL</code> reader - DFLL Multiply Factor\nField <code>MUL</code> writer - DFLL Multiply Factor\nRegister <code>DFLLMUL</code> reader\nRegister <code>DFLLMUL</code> writer\nBits 26:31 - Coarse Maximum Step\nBits 26:31 - Coarse Maximum Step\nReturns the argument unchanged.\nBits 16:25 - Fine Maximum Step\nBits 16:25 - Fine Maximum Step\nCalls <code>U::from(self)</code>.\nBits 0:15 - DFLL Multiply Factor\nBits 0:15 - DFLL Multiply Factor\nDFLL48M Synchronization\nRegister <code>DFLLSYNC</code> reader\nField <code>READREQ</code> writer - Read Request\nRegister <code>DFLLSYNC</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Read Request\nField <code>COARSE</code> reader - Coarse Value\nField <code>COARSE</code> writer - Coarse Value\nDFLL48M Value\nField <code>DIFF</code> reader - Multiplication Ratio Difference\nField <code>FINE</code> reader - Fine Value\nField <code>FINE</code> writer - Fine Value\nRegister <code>DFLLVAL</code> reader\nRegister <code>DFLLVAL</code> writer\nBits 10:15 - Coarse Value\nBits 10:15 - Coarse Value\nBits 16:31 - Multiplication Ratio Difference\nBits 0:9 - Fine Value\nBits 0:9 - Fine Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDPLL Control A\nField <code>ENABLE</code> reader - DPLL Enable\nField <code>ENABLE</code> writer - DPLL Enable\nField <code>ONDEMAND</code> reader - On Demand Clock Activation\nField <code>ONDEMAND</code> writer - On Demand Clock Activation\nRegister <code>DPLLCTRLA</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nRegister <code>DPLLCTRLA</code> writer\nBit 1 - DPLL Enable\nBit 1 - DPLL Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - On Demand Clock Activation\nBit 7 - On Demand Clock Activation\nBit 6 - Run in Standby\nBit 6 - Run in Standby\n0: Default filter mode\nField <code>DIV</code> reader - Clock Divider\nField <code>DIV</code> writer - Clock Divider")