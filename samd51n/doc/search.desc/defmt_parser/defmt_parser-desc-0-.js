searchState.loadedDescShard("defmt_parser", 0, "Parsing library for <code>defmt</code> format strings.\n<code>:a</code>\n<code>:b</code>\n<code>__internal_bitflags_NAME</code> instructs the decoder to print …\nA single Unicode character\n<code>:?</code>\nAll display hints\nThe kinds of error this library can return\n<code>{=?}</code> OR <code>{}</code>\n<code>{=[?]}</code>\nAccepts unknown display hints\nA part of a format string.\n<code>:x</code> OR <code>:X</code>\n<code>:iso8601{ms,s}</code>, formats integers as timestamp in ISO8601 …\nInterned string index.\nThe log level\nA literal string (eg. <code>&quot;literal &quot;</code> in <code>&quot;literal {:?}&quot;</code>).\n<code>:o</code>\nA parameter of the form <code>{{0=Type:hint}}</code> in a format string.\nA format parameter.\nParser mode\n<code>:us</code> <code>:ms</code>, formats integers as timestamps in seconds\nString slice (i.e. passed directly; not as interned string …\nRejects unknown display hints\n<code>:tus</code> <code>:tms</code> <code>:ts</code>, formats integers as human-readable time\nPrecision of timestamp\nByte slice <code>{=[u8]}</code>.\nDisplay hints currently not supported / understood\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>Some(smallest_bit_index, largest_bit_index)</code> …\nThe display hint, e.g. ‘:x’, ‘:b’, ‘:a’.\nThe argument index to display at this position.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe type of the argument to display, e.g. ‘=u8’, ‘…")