searchState.loadedDescShard("atsamd51n", 3, "Register <code>HIBCFG</code> reader\nField <code>RAMCFG</code> reader - Ram Configuration\nField <code>RAMCFG</code> writer - Ram Configuration\nRam Configuration\n0: All the system RAM is retained\n0: All the backup RAM is retained\nRegister <code>HIBCFG</code> writer\nBits 2:3 - Backup Ram Configuration\nBits 2:3 - Backup Ram Configuration\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll the system RAM is turned OFF\nAll the backup RAM is turned OFF\nOnly the first 32Kbytes of the system RAM is retained\nOnly the first 4Kbytes of the backup RAM is retained\nAll the system RAM is retained\nAll the backup RAM is retained\nAll the system RAM is turned OFF\nAll the backup RAM is turned OFF\nOnly the first 32Kbytes of the system RAM is retained\nOnly the first 4Kbytes of the backup RAM is retained\nBits 0:1 - Ram Configuration\nBits 0:1 - Ram Configuration\nAll the system RAM is retained\nAll the backup RAM is retained\nGet enumerated values variant\nGet enumerated values variant\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>SLEEPRDY</code> reader - Sleep Mode Entry Ready Enable\nField <code>SLEEPRDY</code> writer - Sleep Mode Entry Ready Enable\nRegister <code>INTENCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Sleep Mode Entry Ready Enable\nBit 0 - Sleep Mode Entry Ready Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>SLEEPRDY</code> reader - Sleep Mode Entry Ready Enable\nField <code>SLEEPRDY</code> writer - Sleep Mode Entry Ready Enable\nRegister <code>INTENSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Sleep Mode Entry Ready Enable\nBit 0 - Sleep Mode Entry Ready Enable\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>SLEEPRDY</code> reader - Sleep Mode Entry Ready\nField <code>SLEEPRDY</code> writer - Sleep Mode Entry Ready\nRegister <code>INTFLAG</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Sleep Mode Entry Ready\nBit 0 - Sleep Mode Entry Ready\nField <code>DLYVAL</code> reader - Delay Value\nField <code>DLYVAL</code> writer - Delay Value\nField <code>IGNACK</code> reader - Ignore Acknowledge\nField <code>IGNACK</code> writer - Ignore Acknowledge\nPower Switch Acknowledge Delay\nRegister <code>PWSAKDLY</code> reader\nRegister <code>PWSAKDLY</code> writer\nBits 0:6 - Delay Value\nBits 0:6 - Delay Value\nReturns the argument unchanged.\nBit 7 - Ignore Acknowledge\nBit 7 - Ignore Acknowledge\nCalls <code>U::from(self)</code>.\n6: Only Backup domain is powered ON\n5: Backup domain is ON as well as some PDRAMs\n2: CPU, AHBx, and APBx clocks are OFF\n7: All power domains are powered OFF\nRegister <code>SLEEPCFG</code> reader\nSleep Configuration\nField <code>SLEEPMODE</code> reader - Sleep Mode\nField <code>SLEEPMODE</code> writer - Sleep Mode\nSleep Mode\n4: All Clocks are OFF\nRegister <code>SLEEPCFG</code> writer\nOnly Backup domain is powered ON\nReturns the argument unchanged.\nReturns the argument unchanged.\nBackup domain is ON as well as some PDRAMs\nCPU, AHBx, and APBx clocks are OFF\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOnly Backup domain is powered ON\nBackup domain is ON as well as some PDRAMs\nCPU, AHBx, and APBx clocks are OFF\nAll power domains are powered OFF\nAll Clocks are OFF\nAll power domains are powered OFF\nBits 0:2 - Sleep Mode\nBits 0:2 - Sleep Mode\nAll Clocks are OFF\nGet enumerated values variant\n3: Fast Wakeup is enabled on both NVM and MAINVREG\nField <code>FASTWKUP</code> reader - Fast Wakeup\nField <code>FASTWKUP</code> writer - Fast Wakeup\nFast Wakeup\n2: Fast Wakeup is enabled on the main voltage regulator …\n0: Fast Wakeup is disabled\n1: Fast Wakeup is enabled on NVM\n2: All the system RAM is turned OFF\n1: Only the first 32Kbytes of the system RAM is retained\nRegister <code>STDBYCFG</code> reader\nField <code>RAMCFG</code> reader - Ram Configuration\nField <code>RAMCFG</code> writer - Ram Configuration\nRam Configuration\n0: All the system RAM is retained\nStandby Configuration\nRegister <code>STDBYCFG</code> writer\nFast Wakeup is enabled on both NVM and MAINVREG\nBits 4:5 - Fast Wakeup\nBits 4:5 - Fast Wakeup\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFast Wakeup is enabled on both NVM and MAINVREG\nFast Wakeup is enabled on the main voltage regulator …\nFast Wakeup is disabled\nFast Wakeup is enabled on NVM\nAll the system RAM is turned OFF\nOnly the first 32Kbytes of the system RAM is retained\nAll the system RAM is retained\nFast Wakeup is enabled on the main voltage regulator …\nFast Wakeup is disabled\nFast Wakeup is enabled on NVM\nAll the system RAM is turned OFF\nOnly the first 32Kbytes of the system RAM is retained\nBits 0:1 - Ram Configuration\nBits 0:1 - Ram Configuration\nAll the system RAM is retained\nGet enumerated values variant\nGet enumerated values variant\nGROUP[%s]\nRegister block\nReturns the argument unchanged.\nCluster GROUP[%s]\n0x00..0x120 - GROUP[%s]\nIterator for array of: 0x00..0x120 - GROUP[%s]\nCalls <code>U::from(self)</code>.\nCTRL (rw) register accessor: Control\nDIR (rw) register accessor: Data Direction\nDIRCLR (rw) register accessor: Data Direction Clear\nDIRSET (rw) register accessor: Data Direction Set\nDIRTGL (rw) register accessor: Data Direction Toggle\nEVCTRL (rw) register accessor: Event Input Control\nGROUP[%s]\nIN (r) register accessor: Data Input Value\nOUT (rw) register accessor: Data Output Value\nOUTCLR (rw) register accessor: Data Output Value Clear\nOUTSET (rw) register accessor: Data Output Value Set\nOUTTGL (rw) register accessor: Data Output Value Toggle\nPINCFG (rw) register accessor: Pin Configuration\nPMUX (rw) register accessor: Peripheral Multiplexing\nWRCONFIG (w) register accessor: Write Configuration\nControl\n0x24 - Control\nData Direction\n0x00 - Data Direction\nData Direction Clear\n0x04 - Data Direction Clear\nData Direction Set\n0x08 - Data Direction Set\nData Direction Toggle\n0x0c - Data Direction Toggle\nEvent Input Control\n0x2c - Event Input Control\nReturns the argument unchanged.\nData Input Value\n0x20 - Data Input Value\nCalls <code>U::from(self)</code>.\nData Output Value\n0x10 - Data Output Value\nData Output Value Clear\n0x14 - Data Output Value Clear\nData Output Value Set\n0x18 - Data Output Value Set\nData Output Value Toggle\n0x1c - Data Output Value Toggle\nPin Configuration\n0x40..0x60 - Pin Configuration\nIterator for array of: 0x40..0x60 - Pin Configuration\nPeripheral Multiplexing\n0x30..0x40 - Peripheral Multiplexing\nIterator for array of: 0x30..0x40 - Peripheral Multiplexing\nWrite Configuration\n0x28 - Write Configuration\nControl\nRegister <code>CTRL</code> reader\nField <code>SAMPLING</code> reader - Input Sampling Mode\nField <code>SAMPLING</code> writer - Input Sampling Mode\nRegister <code>CTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Input Sampling Mode\nBits 0:31 - Input Sampling Mode\nField <code>DIR</code> reader - Port Data Direction\nData Direction\nField <code>DIR</code> writer - Port Data Direction\nRegister <code>DIR</code> reader\nRegister <code>DIR</code> writer\nBits 0:31 - Port Data Direction\nBits 0:31 - Port Data Direction\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRCLR</code> reader - Port Data Direction Clear\nData Direction Clear\nField <code>DIRCLR</code> writer - Port Data Direction Clear\nRegister <code>DIRCLR</code> reader\nRegister <code>DIRCLR</code> writer\nBits 0:31 - Port Data Direction Clear\nBits 0:31 - Port Data Direction Clear\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRSET</code> reader - Port Data Direction Set\nData Direction Set\nField <code>DIRSET</code> writer - Port Data Direction Set\nRegister <code>DIRSET</code> reader\nRegister <code>DIRSET</code> writer\nBits 0:31 - Port Data Direction Set\nBits 0:31 - Port Data Direction Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DIRTGL</code> reader - Port Data Direction Toggle\nData Direction Toggle\nField <code>DIRTGL</code> writer - Port Data Direction Toggle\nRegister <code>DIRTGL</code> reader\nRegister <code>DIRTGL</code> writer\nBits 0:31 - Port Data Direction Toggle\nBits 0:31 - Port Data Direction Toggle\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Clear output register of pin on event\nField <code>EVACT0</code> reader - PORT Event Action 0\nField <code>EVACT0</code> writer - PORT Event Action 0\nPORT Event Action 0\nField <code>EVACT1</code> reader - PORT Event Action 1\nField <code>EVACT1</code> writer - PORT Event Action 1\nField <code>EVACT2</code> reader - PORT Event Action 2\nField <code>EVACT2</code> writer - PORT Event Action 2\nField <code>EVACT3</code> reader - PORT Event Action 3\nField <code>EVACT3</code> writer - PORT Event Action 3\nEvent Input Control\n0: Event output to pin\nField <code>PID0</code> reader - PORT Event Pin Identifier 0\nField <code>PID0</code> writer - PORT Event Pin Identifier 0\nField <code>PID1</code> reader - PORT Event Pin Identifier 1\nField <code>PID1</code> writer - PORT Event Pin Identifier 1\nField <code>PID2</code> reader - PORT Event Pin Identifier 2\nField <code>PID2</code> writer - PORT Event Pin Identifier 2\nField <code>PID3</code> reader - PORT Event Pin Identifier 3\nField <code>PID3</code> writer - PORT Event Pin Identifier 3\nField <code>PORTEI0</code> reader - PORT Event Input Enable 0\nField <code>PORTEI0</code> writer - PORT Event Input Enable 0\nField <code>PORTEI1</code> reader - PORT Event Input Enable 1\nField <code>PORTEI1</code> writer - PORT Event Input Enable 1\nField <code>PORTEI2</code> reader - PORT Event Input Enable 2\nField <code>PORTEI2</code> writer - PORT Event Input Enable 2\nField <code>PORTEI3</code> reader - PORT Event Input Enable 3\nField <code>PORTEI3</code> writer - PORT Event Input Enable 3\nRegister <code>EVCTRL</code> reader\n1: Set output register of pin on event\n3: Toggle output register of pin on event\nRegister <code>EVCTRL</code> writer\nClear output register of pin on event\nBits 5:6 - PORT Event Action 0\nBits 5:6 - PORT Event Action 0\nBits 13:14 - PORT Event Action 1\nBits 13:14 - PORT Event Action 1\nBits 21:22 - PORT Event Action 2\nBits 21:22 - PORT Event Action 2\nBits 29:30 - PORT Event Action 3\nBits 29:30 - PORT Event Action 3\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear output register of pin on event\nEvent output to pin\nSet output register of pin on event\nToggle output register of pin on event\nEvent output to pin\nBits 0:4 - PORT Event Pin Identifier 0\nBits 0:4 - PORT Event Pin Identifier 0\nBits 8:12 - PORT Event Pin Identifier 1\nBits 8:12 - PORT Event Pin Identifier 1\nBits 16:20 - PORT Event Pin Identifier 2\nBits 16:20 - PORT Event Pin Identifier 2\nBits 24:28 - PORT Event Pin Identifier 3\nBits 24:28 - PORT Event Pin Identifier 3\nBit 7 - PORT Event Input Enable 0\nBit 7 - PORT Event Input Enable 0\nBit 15 - PORT Event Input Enable 1\nBit 15 - PORT Event Input Enable 1\nBit 23 - PORT Event Input Enable 2\nBit 23 - PORT Event Input Enable 2\nBit 31 - PORT Event Input Enable 3\nBit 31 - PORT Event Input Enable 3\nSet output register of pin on event\nToggle output register of pin on event\nGet enumerated values variant\nField <code>IN</code> reader - PORT Data Input Value\nData Input Value\nRegister <code>IN</code> reader\nReturns the argument unchanged.\nBits 0:31 - PORT Data Input Value\nCalls <code>U::from(self)</code>.\nField <code>OUT</code> reader - PORT Data Output Value\nData Output Value\nField <code>OUT</code> writer - PORT Data Output Value\nRegister <code>OUT</code> reader\nRegister <code>OUT</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - PORT Data Output Value\nBits 0:31 - PORT Data Output Value\nField <code>OUTCLR</code> reader - PORT Data Output Value Clear\nData Output Value Clear\nField <code>OUTCLR</code> writer - PORT Data Output Value Clear\nRegister <code>OUTCLR</code> reader\nRegister <code>OUTCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - PORT Data Output Value Clear\nBits 0:31 - PORT Data Output Value Clear\nField <code>OUTSET</code> reader - PORT Data Output Value Set\nData Output Value Set\nField <code>OUTSET</code> writer - PORT Data Output Value Set\nRegister <code>OUTSET</code> reader\nRegister <code>OUTSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - PORT Data Output Value Set\nBits 0:31 - PORT Data Output Value Set\nField <code>OUTTGL</code> reader - PORT Data Output Value Toggle\nData Output Value Toggle\nField <code>OUTTGL</code> writer - PORT Data Output Value Toggle\nRegister <code>OUTTGL</code> reader\nRegister <code>OUTTGL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - PORT Data Output Value Toggle\nBits 0:31 - PORT Data Output Value Toggle\nField <code>DRVSTR</code> reader - Output Driver Strength Selection\nField <code>DRVSTR</code> writer - Output Driver Strength Selection\nField <code>INEN</code> reader - Input Enable\nField <code>INEN</code> writer - Input Enable\nPin Configuration\nField <code>PMUXEN</code> reader - Peripheral Multiplexer Enable\nField <code>PMUXEN</code> writer - Peripheral Multiplexer Enable\nField <code>PULLEN</code> reader - Pull Enable\nField <code>PULLEN</code> writer - Pull Enable\nRegister <code>PINCFG[%s]</code> reader\nRegister <code>PINCFG[%s]</code> writer\nBit 6 - Output Driver Strength Selection\nBit 6 - Output Driver Strength Selection\nReturns the argument unchanged.\nBit 1 - Input Enable\nBit 1 - Input Enable\nCalls <code>U::from(self)</code>.\nBit 0 - Peripheral Multiplexer Enable\nBit 0 - Peripheral Multiplexer Enable\nBit 2 - Pull Enable\nBit 2 - Pull Enable\n0: Peripheral function A selected\n0: Peripheral function A selected\n1: Peripheral function B selected\n1: Peripheral function B selected\n2: Peripheral function C selected\n2: Peripheral function C selected\n3: Peripheral function D selected\n3: Peripheral function D selected\n4: Peripheral function E selected\n4: Peripheral function E selected\n5: Peripheral function F selected\n5: Peripheral function F selected\n6: Peripheral function G selected\n6: Peripheral function G selected\n7: Peripheral function H selected\n7: Peripheral function H selected\n8: Peripheral function I selected\n8: Peripheral function I selected\n9: Peripheral function J selected\n9: Peripheral function J selected\n10: Peripheral function K selected\n10: Peripheral function K selected\n11: Peripheral function L selected\n11: Peripheral function L selected\n12: Peripheral function M selected\n12: Peripheral function M selected\n13: Peripheral function N selected\n13: Peripheral function N selected\nPeripheral Multiplexing\nField <code>PMUXE</code> reader - Peripheral Multiplexing for …\nField <code>PMUXE</code> writer - Peripheral Multiplexing for …\nPeripheral Multiplexing for Even-Numbered Pin\nField <code>PMUXO</code> reader - Peripheral Multiplexing for …\nField <code>PMUXO</code> writer - Peripheral Multiplexing for …\nPeripheral Multiplexing for Odd-Numbered Pin\nRegister <code>PMUX[%s]</code> reader\nRegister <code>PMUX[%s]</code> writer\nPeripheral function A selected\nPeripheral function A selected\nPeripheral function B selected\nPeripheral function B selected\nPeripheral function C selected\nPeripheral function C selected\nPeripheral function D selected\nPeripheral function D selected\nPeripheral function E selected\nPeripheral function E selected\nPeripheral function F selected\nPeripheral function F selected\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPeripheral function G selected\nPeripheral function G selected\nPeripheral function H selected\nPeripheral function H selected\nPeripheral function I selected\nPeripheral function I selected\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPeripheral function A selected\nPeripheral function A selected\nPeripheral function B selected\nPeripheral function B selected\nPeripheral function C selected\nPeripheral function C selected\nPeripheral function D selected\nPeripheral function D selected\nPeripheral function E selected\nPeripheral function E selected\nPeripheral function F selected\nPeripheral function F selected\nPeripheral function G selected\nPeripheral function G selected\nPeripheral function H selected\nPeripheral function H selected\nPeripheral function I selected\nPeripheral function I selected\nPeripheral function J selected\nPeripheral function J selected\nPeripheral function K selected\nPeripheral function K selected\nPeripheral function L selected\nPeripheral function L selected\nPeripheral function M selected\nPeripheral function M selected\nPeripheral function N selected\nPeripheral function N selected\nPeripheral function J selected\nPeripheral function J selected\nPeripheral function K selected\nPeripheral function K selected\nPeripheral function L selected\nPeripheral function L selected\nPeripheral function M selected\nPeripheral function M selected\nPeripheral function N selected\nPeripheral function N selected\nBits 0:3 - Peripheral Multiplexing for Even-Numbered Pin\nBits 0:3 - Peripheral Multiplexing for Even-Numbered Pin\nBits 4:7 - Peripheral Multiplexing for Odd-Numbered Pin\nBits 4:7 - Peripheral Multiplexing for Odd-Numbered Pin\nGet enumerated values variant\nGet enumerated values variant\nField <code>DRVSTR</code> writer - Output Driver Strength Selection\nField <code>HWSEL</code> writer - Half-Word Select\nField <code>INEN</code> writer - Input Enable\nField <code>PINMASK</code> writer - Pin Mask for Multiple Pin …\nField <code>PMUX</code> writer - Peripheral Multiplexing\nField <code>PMUXEN</code> writer - Peripheral Multiplexer Enable\nField <code>PULLEN</code> writer - Pull Enable\nRegister <code>WRCONFIG</code> writer\nWrite Configuration\nField <code>WRPINCFG</code> writer - Write PINCFG\nField <code>WRPMUX</code> writer - Write PMUX\nBit 22 - Output Driver Strength Selection\nReturns the argument unchanged.\nBit 31 - Half-Word Select\nBit 17 - Input Enable\nCalls <code>U::from(self)</code>.\nBits 0:15 - Pin Mask for Multiple Pin Configuration\nBits 24:27 - Peripheral Multiplexing\nBit 16 - Peripheral Multiplexer Enable\nBit 18 - Pull Enable\nBit 30 - Write PINCFG\nBit 28 - Write PMUX\nBAUD (rw) register accessor: Baud Rate\nCTRLA (rw) register accessor: Control A\nCTRLB (rw) register accessor: Control B\nINSTRADDR (rw) register accessor: Instruction Address\nINSTRCTRL (rw) register accessor: Instruction Code\nINSTRFRAME (rw) register accessor: Instruction Frame\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRegister block\nRXDATA (r) register accessor: Receive Data\nSCRAMBCTRL (rw) register accessor: Scrambling Mode\nSCRAMBKEY (w) register accessor: Scrambling Key\nSTATUS (r) register accessor: Status Register\nTXDATA (w) register accessor: Transmit Data\nBaud Rate\n0x08 - Baud Rate\nControl A\n0x00 - Control A\nControl B\n0x04 - Control B\nReturns the argument unchanged.\nInstruction Address\n0x30 - Instruction Address\nInstruction Code\n0x34 - Instruction Code\nInstruction Frame\n0x38 - Instruction Frame\nInterrupt Enable Clear\n0x14 - Interrupt Enable Clear\nInterrupt Enable Set\n0x18 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x1c - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nReceive Data\n0x0c - Receive Data\nScrambling Mode\n0x40 - Scrambling Mode\nScrambling Key\n0x44 - Scrambling Key\nStatus Register\n0x20 - Status Register\nTransmit Data\n0x10 - Transmit Data\nField <code>BAUD</code> reader - Serial Clock Baud Rate\nBaud Rate\nField <code>BAUD</code> writer - Serial Clock Baud Rate\nField <code>CPHA</code> reader - Clock Phase\nField <code>CPHA</code> writer - Clock Phase\nField <code>CPOL</code> reader - Clock Polarity\nField <code>CPOL</code> writer - Clock Polarity\nField <code>DLYBS</code> reader - Delay Before SCK\nField <code>DLYBS</code> writer - Delay Before SCK\nRegister <code>BAUD</code> reader\nRegister <code>BAUD</code> writer\nBits 8:15 - Serial Clock Baud Rate\nBits 8:15 - Serial Clock Baud Rate\nBit 1 - Clock Phase\nBit 1 - Clock Phase\nBit 0 - Clock Polarity\nBit 0 - Clock Polarity\nBits 16:23 - Delay Before SCK\nBits 16:23 - Delay Before SCK\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nControl A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>LASTXFER</code> reader - Last Transfer\nField <code>LASTXFER</code> writer - Last Transfer\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 24 - Last Transfer\nBit 24 - Last Transfer\nBit 0 - Software Reset\nBit 0 - Software Reset\nField <code>CSMODE</code> reader - Chip Select Mode\nField <code>CSMODE</code> writer - Chip Select Mode\nChip Select Mode\nControl B\nField <code>DATALEN</code> reader - Data Length\nField <code>DATALEN</code> writer - Data Length\nData Length\n0: Local Loopback is disabled\nField <code>DLYBCT</code> reader - Delay Between Consecutive Transfers\nField <code>DLYBCT</code> writer - Delay Between Consecutive Transfers\nField <code>DLYCS</code> reader - Minimum Inactive CS Delay\nField <code>DLYCS</code> writer - Minimum Inactive CS Delay\n1: Local Loopback is enabled\n1: The chip select is deasserted when the bit LASTXFER is …\nField <code>LOOPEN</code> reader - Local Loopback Enable\nField <code>LOOPEN</code> writer - Local Loopback Enable\nLocal Loopback Enable\n1: Serial Memory operating mode\nField <code>MODE</code> reader - Serial Memory Mode\nField <code>MODE</code> writer - Serial Memory Mode\nSerial Memory Mode\n0: The chip select is deasserted if TD has not been …\nRegister <code>CTRLB</code> reader\nField <code>SMEMREG</code> reader - Serial Memory reg\nField <code>SMEMREG</code> writer - Serial Memory reg\n0: SPI operating mode\n2: The chip select is deasserted systematically after each …\nRegister <code>CTRLB</code> writer\nField <code>WDRBT</code> reader - Wait Data Read Before Transfer\nField <code>WDRBT</code> writer - Wait Data Read Before Transfer\n10-bits transfer\n2: 10-bits transfer\n11-bits transfer\n3: 11-bits transfer\n12-bits transfer\n4: 12-bits transfer\n13-bits transfer\n5: 13-bits transfer\n14-bits transfer\n6: 14-bits transfer\n15-bits transfer\n7: 15-bits transfer\n16-bits transfer\n8: 16-bits transfer\n8-bits transfer\n0: 8-bits transfer\n9 bits transfer\n1: 9 bits transfer\nBits 4:5 - Chip Select Mode\nBits 4:5 - Chip Select Mode\nBits 8:11 - Data Length\nBits 8:11 - Data Length\nLocal Loopback is disabled\nBits 16:23 - Delay Between Consecutive Transfers\nBits 16:23 - Delay Between Consecutive Transfers\nBits 24:31 - Minimum Inactive CS Delay\nBits 24:31 - Minimum Inactive CS Delay\nLocal Loopback is enabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n10-bits transfer\n11-bits transfer\n12-bits transfer\n13-bits transfer\n14-bits transfer\n15-bits transfer\n16-bits transfer\n8-bits transfer\n9 bits transfer\nLocal Loopback is disabled\nLocal Loopback is enabled\nThe chip select is deasserted when the bit LASTXFER is …\nSerial Memory operating mode\nThe chip select is deasserted if TD has not been reloaded …\nSPI operating mode\nThe chip select is deasserted systematically after each …\nThe chip select is deasserted when the bit LASTXFER is …\nBit 1 - Local Loopback Enable\nBit 1 - Local Loopback Enable\nSerial Memory operating mode\nBit 0 - Serial Memory Mode\nBit 0 - Serial Memory Mode\nThe chip select is deasserted if TD has not been reloaded …\nBit 3 - Serial Memory reg\nBit 3 - Serial Memory reg\nSPI operating mode\nThe chip select is deasserted systematically after each …\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBit 2 - Wait Data Read Before Transfer\nBit 2 - Wait Data Read Before Transfer\nField <code>ADDR</code> reader - Instruction Address\nField <code>ADDR</code> writer - Instruction Address\nInstruction Address\nRegister <code>INSTRADDR</code> reader\nRegister <code>INSTRADDR</code> writer\nBits 0:31 - Instruction Address\nBits 0:31 - Instruction Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>INSTR</code> reader - Instruction Code\nField <code>INSTR</code> writer - Instruction Code\nInstruction Code\nField <code>OPTCODE</code> reader - Option Code\nField <code>OPTCODE</code> writer - Option Code\nRegister <code>INSTRCTRL</code> reader\nRegister <code>INSTRCTRL</code> writer\nReturns the argument unchanged.\nBits 0:7 - Instruction Code\nBits 0:7 - Instruction Code\nCalls <code>U::from(self)</code>.\nBits 16:23 - Option Code\nBits 16:23 - Option Code\nField <code>ADDREN</code> reader - Address Enable\nField <code>ADDREN</code> writer - Address Enable\nField <code>ADDRLEN</code> reader - Address Length\nField <code>ADDRLEN</code> writer - Address Length\nAddress Length\nField <code>CRMODE</code> reader - Continuous Read Mode\nField <code>CRMODE</code> writer - Continuous Read Mode\nField <code>DATAEN</code> reader - Data Enable\nField <code>DATAEN</code> writer - Data Enable\nField <code>DDREN</code> reader - Double Data Rate Enable\nField <code>DDREN</code> writer - Double Data Rate Enable\n5: Instruction: Dual SPI / Address-Option: Dual SPI / …\n3: Instruction: Single-bit SPI / Address-Option: Dual SPI …\n1: Instruction: Single-bit SPI / Address-Option: …\nField <code>DUMMYLEN</code> reader - Dummy Cycles Length\nField <code>DUMMYLEN</code> writer - Dummy Cycles Length\nField <code>INSTREN</code> reader - Instruction Enable\nField <code>INSTREN</code> writer - Instruction Enable\nInstruction Frame\nField <code>OPTCODEEN</code> reader - Option Enable\nField <code>OPTCODEEN</code> writer - Option Enable\nField <code>OPTCODELEN</code> reader - Option Code Length\nField <code>OPTCODELEN</code> writer - Option Code Length\nOption Code Length\n6: Instruction: Quad SPI / Address-Option: Quad SPI / …\n4: Instruction: Single-bit SPI / Address-Option: Quad SPI …\n2: Instruction: Single-bit SPI / Address-Option: …\nRegister <code>INSTRFRAME</code> reader\n0: Read transfer from the serial memory.Scrambling is not …\n1: Read data transfer from the serial memory.If enabled, …\n0: Instruction: Single-bit SPI / Address-Option: …\nField <code>TFRTYPE</code> reader - Data Transfer Type\nField <code>TFRTYPE</code> writer - Data Transfer Type\nData Transfer Type\nRegister <code>INSTRFRAME</code> writer\nField <code>WIDTH</code> reader - Instruction Code, Address, Option …\nField <code>WIDTH</code> writer - Instruction Code, Address, Option …\nInstruction Code, Address, Option Code and Data Width\n2: Write transfer into the serial memory.Scrambling is not …\n3: Write data transfer into the serial memory.If enabled, …\n1-bit length option code\n0: 1-bit length option code\n24-bits address length\n0: 24-bits address length\n2-bits length option code\n1: 2-bits length option code\n32-bits address length\n1: 32-bits address length\n4-bits length option code\n2: 4-bits length option code\n8-bits length option code\n3: 8-bits length option code\nBit 5 - Address Enable\nBit 5 - Address Enable\nBit 10 - Address Length\nBit 10 - Address Length\nBit 14 - Continuous Read Mode\nBit 14 - Continuous Read Mode\nBit 7 - Data Enable\nBit 7 - Data Enable\nBit 15 - Double Data Rate Enable\nBit 15 - Double Data Rate Enable\nInstruction: Dual SPI / Address-Option: Dual SPI / Data: …\nInstruction: Single-bit SPI / Address-Option: Dual SPI / …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nBits 16:20 - Dummy Cycles Length\nBits 16:20 - Dummy Cycles Length\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 4 - Instruction Enable\nBit 4 - Instruction Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n1-bit length option code\n24-bits address length\n2-bits length option code\n32-bits address length\n4-bits length option code\n8-bits length option code\nInstruction: Dual SPI / Address-Option: Dual SPI / Data: …\nInstruction: Single-bit SPI / Address-Option: Dual SPI / …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nInstruction: Quad SPI / Address-Option: Quad SPI / Data: …\nInstruction: Single-bit SPI / Address-Option: Quad SPI / …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nRead transfer from the serial memory.Scrambling is not …\nRead data transfer from the serial memory.If enabled, …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nWrite transfer into the serial memory.Scrambling is not …\nWrite data transfer into the serial memory.If enabled, …\nBit 6 - Option Enable\nBit 6 - Option Enable\nBits 8:9 - Option Code Length\nBits 8:9 - Option Code Length\nInstruction: Quad SPI / Address-Option: Quad SPI / Data: …\nInstruction: Single-bit SPI / Address-Option: Quad SPI / …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nRead transfer from the serial memory.Scrambling is not …\nRead data transfer from the serial memory.If enabled, …\nInstruction: Single-bit SPI / Address-Option: Single-bit …\nBits 12:13 - Data Transfer Type\nBits 12:13 - Data Transfer Type\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBits 0:2 - Instruction Code, Address, Option Code and Data …\nBits 0:2 - Instruction Code, Address, Option Code and Data …\nWrite transfer into the serial memory.Scrambling is not …\nWrite data transfer into the serial memory.If enabled, …\nField <code>CSRISE</code> reader - Chip Select Rise Interrupt Disable\nField <code>CSRISE</code> writer - Chip Select Rise Interrupt Disable\nField <code>DRE</code> reader - Transmit Data Register Empty Interrupt …\nField <code>DRE</code> writer - Transmit Data Register Empty Interrupt …\nField <code>ERROR</code> reader - Overrun Error Interrupt Disable\nField <code>ERROR</code> writer - Overrun Error Interrupt Disable\nField <code>INSTREND</code> reader - Instruction End Interrupt Disable\nField <code>INSTREND</code> writer - Instruction End Interrupt Disable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>RXC</code> reader - Receive Data Register Full Interrupt …\nField <code>RXC</code> writer - Receive Data Register Full Interrupt …\nField <code>TXC</code> reader - Transmission Complete Interrupt Disable\nField <code>TXC</code> writer - Transmission Complete Interrupt Disable\nRegister <code>INTENCLR</code> writer\nBit 8 - Chip Select Rise Interrupt Disable\nBit 8 - Chip Select Rise Interrupt Disable\nBit 1 - Transmit Data Register Empty Interrupt Disable\nBit 1 - Transmit Data Register Empty Interrupt Disable\nBit 3 - Overrun Error Interrupt Disable\nBit 3 - Overrun Error Interrupt Disable\nReturns the argument unchanged.\nBit 10 - Instruction End Interrupt Disable\nBit 10 - Instruction End Interrupt Disable\nCalls <code>U::from(self)</code>.\nBit 0 - Receive Data Register Full Interrupt Disable\nBit 0 - Receive Data Register Full Interrupt Disable\nBit 2 - Transmission Complete Interrupt Disable\nBit 2 - Transmission Complete Interrupt Disable\nField <code>CSRISE</code> reader - Chip Select Rise Interrupt Enable\nField <code>CSRISE</code> writer - Chip Select Rise Interrupt Enable\nField <code>DRE</code> reader - Transmit Data Register Empty Interrupt …\nField <code>DRE</code> writer - Transmit Data Register Empty Interrupt …\nField <code>ERROR</code> reader - Overrun Error Interrupt Enable\nField <code>ERROR</code> writer - Overrun Error Interrupt Enable\nField <code>INSTREND</code> reader - Instruction End Interrupt Enable\nField <code>INSTREND</code> writer - Instruction End Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>RXC</code> reader - Receive Data Register Full Interrupt …\nField <code>RXC</code> writer - Receive Data Register Full Interrupt …\nField <code>TXC</code> reader - Transmission Complete Interrupt Enable\nField <code>TXC</code> writer - Transmission Complete Interrupt Enable\nRegister <code>INTENSET</code> writer\nBit 8 - Chip Select Rise Interrupt Enable\nBit 8 - Chip Select Rise Interrupt Enable\nBit 1 - Transmit Data Register Empty Interrupt Enable\nBit 1 - Transmit Data Register Empty Interrupt Enable\nBit 3 - Overrun Error Interrupt Enable\nBit 3 - Overrun Error Interrupt Enable\nReturns the argument unchanged.\nBit 10 - Instruction End Interrupt Enable\nBit 10 - Instruction End Interrupt Enable\nCalls <code>U::from(self)</code>.\nBit 0 - Receive Data Register Full Interrupt Enable\nBit 0 - Receive Data Register Full Interrupt Enable\nBit 2 - Transmission Complete Interrupt Enable\nBit 2 - Transmission Complete Interrupt Enable\nField <code>CSRISE</code> reader - Chip Select Rise\nField <code>CSRISE</code> writer - Chip Select Rise\nField <code>DRE</code> reader - Transmit Data Register Empty\nField <code>DRE</code> writer - Transmit Data Register Empty\nField <code>ERROR</code> reader - Overrun Error\nField <code>ERROR</code> writer - Overrun Error\nField <code>INSTREND</code> reader - Instruction End\nField <code>INSTREND</code> writer - Instruction End\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>RXC</code> reader - Receive Data Register Full\nField <code>RXC</code> writer - Receive Data Register Full\nField <code>TXC</code> reader - Transmission Complete\nField <code>TXC</code> writer - Transmission Complete\nRegister <code>INTFLAG</code> writer\nBit 8 - Chip Select Rise\nBit 8 - Chip Select Rise\nBit 1 - Transmit Data Register Empty\nBit 1 - Transmit Data Register Empty\nBit 3 - Overrun Error\nBit 3 - Overrun Error\nReturns the argument unchanged.\nBit 10 - Instruction End\nBit 10 - Instruction End\nCalls <code>U::from(self)</code>.\nBit 0 - Receive Data Register Full\nBit 0 - Receive Data Register Full\nBit 2 - Transmission Complete\nBit 2 - Transmission Complete\nField <code>DATA</code> reader - Receive Data\nRegister <code>RXDATA</code> reader\nReceive Data\nBits 0:15 - Receive Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ENABLE</code> reader - Scrambling/Unscrambling Enable\nField <code>ENABLE</code> writer - Scrambling/Unscrambling Enable\nRegister <code>SCRAMBCTRL</code> reader\nField <code>RANDOMDIS</code> reader - Scrambling/Unscrambling Random …\nField <code>RANDOMDIS</code> writer - Scrambling/Unscrambling Random …\nScrambling Mode\nRegister <code>SCRAMBCTRL</code> writer\nBit 0 - Scrambling/Unscrambling Enable\nBit 0 - Scrambling/Unscrambling Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Scrambling/Unscrambling Random Value Disable\nBit 1 - Scrambling/Unscrambling Random Value Disable\nField <code>KEY</code> writer - Scrambling User Key\nScrambling Key\nRegister <code>SCRAMBKEY</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Scrambling User Key\nField <code>CSSTATUS</code> reader - Chip Select\nField <code>ENABLE</code> reader - Enable\nRegister <code>STATUS</code> reader\nStatus Register\nBit 9 - Chip Select\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DATA</code> writer - Transmit Data\nTransmit Data\nRegister <code>TXDATA</code> writer\nBits 0:15 - Transmit Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDBGCTRL (rw) register accessor: Debug Control\nERRADDR (r) register accessor: Error Address\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag\nRegister block\nSTATUS (r) register accessor: Status\nDebug Control\n0x0f - Debug Control\nError Address\n0x04 - Error Address\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x00 - Interrupt Enable Clear\nInterrupt Enable Set\n0x01 - Interrupt Enable Set\nInterrupt Flag\n0x02 - Interrupt Flag\nCalls <code>U::from(self)</code>.\nStatus\n0x03 - Status\nDebug Control\nField <code>ECCDIS</code> reader - ECC Disable\nField <code>ECCDIS</code> writer - ECC Disable\nField <code>ECCELOG</code> reader - ECC Error Log\nField <code>ECCELOG</code> writer - ECC Error Log\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - ECC Disable\nBit 0 - ECC Disable\nBit 1 - ECC Error Log\nBit 1 - ECC Error Log\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ERRADDR</code> reader - Error Address\nError Address\nRegister <code>ERRADDR</code> reader\nBits 0:16 - Error Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DUALE</code> reader - Dual Bit ECC Error Interrupt Enable …\nField <code>DUALE</code> writer - Dual Bit ECC Error Interrupt Enable …\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>SINGLEE</code> reader - Single Bit ECC Error Interrupt …\nField <code>SINGLEE</code> writer - Single Bit ECC Error Interrupt …\nRegister <code>INTENCLR</code> writer\nBit 1 - Dual Bit ECC Error Interrupt Enable Clear\nBit 1 - Dual Bit ECC Error Interrupt Enable Clear\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Single Bit ECC Error Interrupt Enable Clear\nBit 0 - Single Bit ECC Error Interrupt Enable Clear\nField <code>DUALE</code> reader - Dual Bit ECC Error Interrupt Enable …\nField <code>DUALE</code> writer - Dual Bit ECC Error Interrupt Enable …\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>SINGLEE</code> reader - Single Bit ECC Error Interrupt …\nField <code>SINGLEE</code> writer - Single Bit ECC Error Interrupt …\nRegister <code>INTENSET</code> writer\nBit 1 - Dual Bit ECC Error Interrupt Enable Set\nBit 1 - Dual Bit ECC Error Interrupt Enable Set\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Single Bit ECC Error Interrupt Enable Set\nBit 0 - Single Bit ECC Error Interrupt Enable Set\nField <code>DUALE</code> reader - Dual Bit ECC Error Interrupt\nField <code>DUALE</code> writer - Dual Bit ECC Error Interrupt\nInterrupt Flag\nRegister <code>INTFLAG</code> reader\nField <code>SINGLEE</code> reader - Single Bit ECC Error Interrupt\nField <code>SINGLEE</code> writer - Single Bit ECC Error Interrupt\nRegister <code>INTFLAG</code> writer\nBit 1 - Dual Bit ECC Error Interrupt\nBit 1 - Dual Bit ECC Error Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Single Bit ECC Error Interrupt\nBit 0 - Single Bit ECC Error Interrupt\nField <code>ECCDIS</code> reader - ECC Disable\nRegister <code>STATUS</code> reader\nStatus\nBit 0 - ECC Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBKUPEXIT (r) register accessor: Backup Exit Source\nRCAUSE (r) register accessor: Reset Cause\nRegister block\nBackup Exit Source\n0x02 - Backup Exit Source\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReset Cause\n0x00 - Reset Cause\nField <code>BBPS</code> reader - Battery Backup Power Switch\nBackup Exit Source\nField <code>HIB</code> reader - Hibernate\nRegister <code>BKUPEXIT</code> reader\nField <code>RTC</code> reader - Real Timer Counter Interrupt\nBit 2 - Battery Backup Power Switch\nReturns the argument unchanged.\nBit 7 - Hibernate\nCalls <code>U::from(self)</code>.\nBit 1 - Real Timer Counter Interrupt\nField <code>BACKUP</code> reader - Backup Reset\nField <code>BODCORE</code> reader - Brown Out CORE Detector Reset\nField <code>BODVDD</code> reader - Brown Out VDD Detector Reset\nField <code>EXT</code> reader - External Reset\nField <code>NVM</code> reader - NVM Reset\nField <code>POR</code> reader - Power On Reset\nRegister <code>RCAUSE</code> reader\nReset Cause\nField <code>SYST</code> reader - System Reset Request\nField <code>WDT</code> reader - Watchdog Reset\nBit 7 - Backup Reset\nBit 1 - Brown Out CORE Detector Reset\nBit 2 - Brown Out VDD Detector Reset\nBit 4 - External Reset\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 3 - NVM Reset\nBit 0 - Power On Reset\nBit 6 - System Reset Request\nBit 5 - Watchdog Reset\n32-bit Counter with Single 32-bit Compare\n16-bit Counter with Two 16-bit Compares\nClock/Calendar with Alarm\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCluster 32-bit Counter with Single 32-bit Compare\n0x00..0xa0 - 32-bit Counter with Single 32-bit Compare\nCluster 16-bit Counter with Two 16-bit Compares\n0x00..0xa0 - 16-bit Counter with Two 16-bit Compares\nCluster Clock/Calendar with Alarm\n0x00..0xa0 - Clock/Calendar with Alarm\nBKUP (rw) register accessor: Backup\nCOMP (rw) register accessor: MODE0 Compare n Value\nCOUNT (rw) register accessor: MODE0 Counter Value\nCTRLA (rw) register accessor: MODE0 Control A\nCTRLB (rw) register accessor: MODE0 Control B\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE0 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nGP (rw) register accessor: General Purpose\nINTENCLR (rw) register accessor: MODE0 Interrupt Enable …\nINTENSET (rw) register accessor: MODE0 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE0 Interrupt Flag …\n32-bit Counter with Single 32-bit Compare\nSYNCBUSY (r) register accessor: MODE0 Synchronization Busy …\nTAMPCTRL (rw) register accessor: Tamper Control\nTAMPID (rw) register accessor: Tamper ID\nTIMESTAMP (r) register accessor: MODE0 Timestamp\nBackup\n0x80..0xa0 - Backup\nIterator for array of: 0x80..0xa0 - Backup\nMODE0 Compare n Value\n0x20..0x28 - MODE0 Compare n Value\nIterator for array of: 0x20..0x28 - MODE0 Compare n Value\nMODE0 Counter Value\n0x18 - MODE0 Counter Value\nMODE0 Control A\n0x00 - MODE0 Control A\nMODE0 Control B\n0x02 - MODE0 Control B\nDebug Control\n0x0e - Debug Control\nMODE0 Event Control\n0x04 - MODE0 Event Control\nFrequency Correction\n0x14 - Frequency Correction\nReturns the argument unchanged.\nGeneral Purpose\n0x40..0x50 - General Purpose\nIterator for array of: 0x40..0x50 - General Purpose\nMODE0 Interrupt Enable Clear\n0x08 - MODE0 Interrupt Enable Clear\nMODE0 Interrupt Enable Set\n0x0a - MODE0 Interrupt Enable Set\nMODE0 Interrupt Flag Status and Clear\n0x0c - MODE0 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nMODE0 Synchronization Busy Status\n0x10 - MODE0 Synchronization Busy Status\nTamper Control\n0x60 - Tamper Control\nTamper ID\n0x68 - Tamper ID\nMODE0 Timestamp\n0x64 - MODE0 Timestamp\nField <code>BKUP</code> reader - Backup\nBackup\nField <code>BKUP</code> writer - Backup\nRegister <code>BKUP[%s]</code> reader\nRegister <code>BKUP[%s]</code> writer\nBits 0:31 - Backup\nBits 0:31 - Backup\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COMP</code> reader - Compare Value\nMODE0 Compare n Value\nField <code>COMP</code> writer - Compare Value\nRegister <code>COMP[%s]</code> reader\nRegister <code>COMP[%s]</code> writer\nBits 0:31 - Compare Value\nBits 0:31 - Compare Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nMODE0 Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:31 - Counter Value\nBits 0:31 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BKTRST</code> reader - BKUP Registers Reset On Tamper Enable\nField <code>BKTRST</code> writer - BKUP Registers Reset On Tamper Enable\n2: Mode 2: Clock/Calendar\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nField <code>COUNTSYNC</code> reader - Count Read Synchronization Enable\nField <code>COUNTSYNC</code> writer - Count Read Synchronization Enable\nMODE0 Control A\n1: CLK_RTC_CNT = GCLK_RTC/1\n11: CLK_RTC_CNT = GCLK_RTC/1024\n8: CLK_RTC_CNT = GCLK_RTC/128\n5: CLK_RTC_CNT = GCLK_RTC/16\n2: CLK_RTC_CNT = GCLK_RTC/2\n9: CLK_RTC_CNT = GCLK_RTC/256\n6: CLK_RTC_CNT = GCLK_RTC/32\n3: CLK_RTC_CNT = GCLK_RTC/4\n10: CLK_RTC_CNT = GCLK_RTC/512\n7: CLK_RTC_CNT = GCLK_RTC/64\n4: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>GPTRST</code> reader - GP Registers Reset On Tamper Enable\nField <code>GPTRST</code> writer - GP Registers Reset On Tamper Enable\nField <code>MATCHCLR</code> reader - Clear on Match\nField <code>MATCHCLR</code> writer - Clear on Match\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\n0: CLK_RTC_CNT = GCLK_RTC/1\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 13 - BKUP Registers Reset On Tamper Enable\nBit 13 - BKUP Registers Reset On Tamper Enable\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nBit 15 - Count Read Synchronization Enable\nBit 15 - Count Read Synchronization Enable\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 14 - GP Registers Reset On Tamper Enable\nBit 14 - GP Registers Reset On Tamper Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nCLK_RTC_CNT = GCLK_RTC/1\nBit 7 - Clear on Match\nBit 7 - Clear on Match\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nCLK_RTC_CNT = GCLK_RTC/1\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nField <code>ACTF</code> reader - Active Layer Freqnuency\nField <code>ACTF</code> writer - Active Layer Freqnuency\nActive Layer Freqnuency\nMODE0 Control B\nField <code>DEBASYNC</code> reader - Debouncer Asynchronous Enable\nField <code>DEBASYNC</code> writer - Debouncer Asynchronous Enable\nField <code>DEBF</code> reader - Debounce Freqnuency\nField <code>DEBF</code> writer - Debounce Freqnuency\nDebounce Freqnuency\nField <code>DEBMAJ</code> reader - Debouncer Majority Enable\nField <code>DEBMAJ</code> writer - Debouncer Majority Enable\n6: CLK_RTC_DEB = CLK_RTC/128\n6: CLK_RTC_OUT = CLK_RTC/128\n3: CLK_RTC_DEB = CLK_RTC/16\n3: CLK_RTC_OUT = CLK_RTC/16\n0: CLK_RTC_DEB = CLK_RTC/2\n0: CLK_RTC_OUT = CLK_RTC/2\n7: CLK_RTC_DEB = CLK_RTC/256\n7: CLK_RTC_OUT = CLK_RTC/256\n4: CLK_RTC_DEB = CLK_RTC/32\n4: CLK_RTC_OUT = CLK_RTC/32\n1: CLK_RTC_DEB = CLK_RTC/4\n1: CLK_RTC_OUT = CLK_RTC/4\n5: CLK_RTC_DEB = CLK_RTC/64\n5: CLK_RTC_OUT = CLK_RTC/64\n2: CLK_RTC_DEB = CLK_RTC/8\n2: CLK_RTC_OUT = CLK_RTC/8\nField <code>DMAEN</code> reader - DMA Enable\nField <code>DMAEN</code> writer - DMA Enable\nField <code>GP0EN</code> reader - General Purpose 0 Enable\nField <code>GP0EN</code> writer - General Purpose 0 Enable\nField <code>GP2EN</code> reader - General Purpose 2 Enable\nField <code>GP2EN</code> writer - General Purpose 2 Enable\nRegister <code>CTRLB</code> reader\nField <code>RTCOUT</code> reader - RTC Output Enable\nField <code>RTCOUT</code> writer - RTC Output Enable\nRegister <code>CTRLB</code> writer\nBits 12:14 - Active Layer Freqnuency\nBits 12:14 - Active Layer Freqnuency\nBit 5 - Debouncer Asynchronous Enable\nBit 5 - Debouncer Asynchronous Enable\nBits 8:10 - Debounce Freqnuency\nBits 8:10 - Debounce Freqnuency\nBit 4 - Debouncer Majority Enable\nBit 4 - Debouncer Majority Enable\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 7 - DMA Enable\nBit 7 - DMA Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - General Purpose 0 Enable\nBit 0 - General Purpose 0 Enable\nBit 1 - General Purpose 2 Enable\nBit 1 - General Purpose 2 Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 6 - RTC Output Enable\nBit 6 - RTC Output Enable\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMPEO0</code> reader - Compare 0 Event Output Enable\nField <code>CMPEO0</code> writer - Compare 0 Event Output Enable\nField <code>CMPEO1</code> reader - Compare 1 Event Output Enable\nField <code>CMPEO1</code> writer - Compare 1 Event Output Enable\nMODE0 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nField <code>TAMPEREO</code> reader - Tamper Event Output Enable\nField <code>TAMPEREO</code> writer - Tamper Event Output Enable\nField <code>TAMPEVEI</code> reader - Tamper Event Input Enable\nField <code>TAMPEVEI</code> writer - Tamper Event Input Enable\nRegister <code>EVCTRL</code> writer\nBit 8 - Compare 0 Event Output Enable\nBit 8 - Compare 0 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 16 - Tamper Event Input Enable\nBit 16 - Tamper Event Input Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>GP</code> reader - General Purpose\nGeneral Purpose\nField <code>GP</code> writer - General Purpose\nRegister <code>GP[%s]</code> reader\nRegister <code>GP[%s]</code> writer\nReturns the argument unchanged.\nBits 0:31 - General Purpose\nBits 0:31 - General Purpose\nCalls <code>U::from(self)</code>.\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nMODE0 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Interrupt Enable\nField <code>PER0</code> writer - Periodic Interval 0 Interrupt Enable\nField <code>PER1</code> reader - Periodic Interval 1 Interrupt Enable\nField <code>PER1</code> writer - Periodic Interval 1 Interrupt Enable\nField <code>PER2</code> reader - Periodic Interval 2 Interrupt Enable\nField <code>PER2</code> writer - Periodic Interval 2 Interrupt Enable\nField <code>PER3</code> reader - Periodic Interval 3 Interrupt Enable\nField <code>PER3</code> writer - Periodic Interval 3 Interrupt Enable\nField <code>PER4</code> reader - Periodic Interval 4 Interrupt Enable\nField <code>PER4</code> writer - Periodic Interval 4 Interrupt Enable\nField <code>PER5</code> reader - Periodic Interval 5 Interrupt Enable\nField <code>PER5</code> writer - Periodic Interval 5 Interrupt Enable\nField <code>PER6</code> reader - Periodic Interval 6 Interrupt Enable\nField <code>PER6</code> writer - Periodic Interval 6 Interrupt Enable\nField <code>PER7</code> reader - Periodic Interval 7 Interrupt Enable\nField <code>PER7</code> writer - Periodic Interval 7 Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENCLR</code> writer\nBit 8 - Compare 0 Interrupt Enable\nBit 8 - Compare 0 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nMODE0 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Interrupt Enable\nField <code>PER0</code> writer - Periodic Interval 0 Interrupt Enable\nField <code>PER1</code> reader - Periodic Interval 1 Interrupt Enable\nField <code>PER1</code> writer - Periodic Interval 1 Interrupt Enable\nField <code>PER2</code> reader - Periodic Interval 2 Interrupt Enable\nField <code>PER2</code> writer - Periodic Interval 2 Interrupt Enable\nField <code>PER3</code> reader - Periodic Interval 3 Interrupt Enable\nField <code>PER3</code> writer - Periodic Interval 3 Interrupt Enable\nField <code>PER4</code> reader - Periodic Interval 4 Interrupt Enable\nField <code>PER4</code> writer - Periodic Interval 4 Interrupt Enable\nField <code>PER5</code> reader - Periodic Interval 5 Interrupt Enable\nField <code>PER5</code> writer - Periodic Interval 5 Interrupt Enable\nField <code>PER6</code> reader - Periodic Interval 6 Interrupt Enable\nField <code>PER6</code> writer - Periodic Interval 6 Interrupt Enable\nField <code>PER7</code> reader - Periodic Interval 7 Interrupt Enable\nField <code>PER7</code> writer - Periodic Interval 7 Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENSET</code> writer\nBit 8 - Compare 0 Interrupt Enable\nBit 8 - Compare 0 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>CMP0</code> reader - Compare 0\nField <code>CMP0</code> writer - Compare 0\nField <code>CMP1</code> reader - Compare 1\nField <code>CMP1</code> writer - Compare 1\nMODE0 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nField <code>PER0</code> reader - Periodic Interval 0\nField <code>PER0</code> writer - Periodic Interval 0\nField <code>PER1</code> reader - Periodic Interval 1\nField <code>PER1</code> writer - Periodic Interval 1\nField <code>PER2</code> reader - Periodic Interval 2\nField <code>PER2</code> writer - Periodic Interval 2\nField <code>PER3</code> reader - Periodic Interval 3\nField <code>PER3</code> writer - Periodic Interval 3\nField <code>PER4</code> reader - Periodic Interval 4\nField <code>PER4</code> writer - Periodic Interval 4\nField <code>PER5</code> reader - Periodic Interval 5\nField <code>PER5</code> writer - Periodic Interval 5\nField <code>PER6</code> reader - Periodic Interval 6\nField <code>PER6</code> writer - Periodic Interval 6\nField <code>PER7</code> reader - Periodic Interval 7\nField <code>PER7</code> writer - Periodic Interval 7\nRegister <code>INTFLAG</code> reader\nField <code>TAMPER</code> reader - Tamper\nField <code>TAMPER</code> writer - Tamper\nRegister <code>INTFLAG</code> writer\nBit 8 - Compare 0\nBit 8 - Compare 0\nBit 9 - Compare 1\nBit 9 - Compare 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow\nBit 15 - Overflow\nBit 0 - Periodic Interval 0\nBit 0 - Periodic Interval 0\nBit 1 - Periodic Interval 1\nBit 1 - Periodic Interval 1\nBit 2 - Periodic Interval 2\nBit 2 - Periodic Interval 2\nBit 3 - Periodic Interval 3\nBit 3 - Periodic Interval 3\nBit 4 - Periodic Interval 4\nBit 4 - Periodic Interval 4\nBit 5 - Periodic Interval 5\nBit 5 - Periodic Interval 5\nBit 6 - Periodic Interval 6\nBit 6 - Periodic Interval 6\nBit 7 - Periodic Interval 7\nBit 7 - Periodic Interval 7\nBit 14 - Tamper\nBit 14 - Tamper\nField <code>COMP0</code> reader - COMP 0 Register Busy\nField <code>COMP1</code> reader - COMP 1 Register Busy\nField <code>COUNT</code> reader - COUNT Register Busy\nField <code>COUNTSYNC</code> reader - Count Synchronization Enable Bit …\nField <code>ENABLE</code> reader - Enable Bit Busy\nField <code>FREQCORR</code> reader - FREQCORR Register Busy\nField <code>GP0</code> reader - General Purpose 0 Register Busy\nField <code>GP1</code> reader - General Purpose 1 Register Busy\nField <code>GP2</code> reader - General Purpose 2 Register Busy\nField <code>GP3</code> reader - General Purpose 3 Register Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Busy\nMODE0 Synchronization Busy Status\nBit 5 - COMP 0 Register Busy\nBit 6 - COMP 1 Register Busy\nBit 3 - COUNT Register Busy\nBit 15 - Count Synchronization Enable Bit Busy\nBit 1 - Enable Bit Busy\nBit 2 - FREQCORR Register Busy\nReturns the argument unchanged.\nBit 16 - General Purpose 0 Register Busy\nBit 17 - General Purpose 1 Register Busy\nBit 18 - General Purpose 2 Register Busy\nBit 19 - General Purpose 3 Register Busy\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Busy\n3: Compare IN0 to OUT\n3: Compare IN1 to OUT\n3: Compare IN2 to OUT\n3: Compare IN3 to OUT\n3: Compare IN4 to OUT\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\nField <code>DEBNC0</code> reader - Debouncer Enable 0\nField <code>DEBNC0</code> writer - Debouncer Enable 0\nField <code>DEBNC1</code> reader - Debouncer Enable 1\nField <code>DEBNC1</code> writer - Debouncer Enable 1\nField <code>DEBNC2</code> reader - Debouncer Enable 2\nField <code>DEBNC2</code> writer - Debouncer Enable 2\nField <code>DEBNC3</code> reader - Debouncer Enable 3\nField <code>DEBNC3</code> writer - Debouncer Enable 3\nField <code>DEBNC4</code> reader - Debouncer Enable 4\nField <code>DEBNC4</code> writer - Debouncer Enable 4\nField <code>IN0ACT</code> reader - Tamper Input 0 Action\nField <code>IN0ACT</code> writer - Tamper Input 0 Action\nTamper Input 0 Action\nField <code>IN1ACT</code> reader - Tamper Input 1 Action\nField <code>IN1ACT</code> writer - Tamper Input 1 Action\nTamper Input 1 Action\nField <code>IN2ACT</code> reader - Tamper Input 2 Action\nField <code>IN2ACT</code> writer - Tamper Input 2 Action\nTamper Input 2 Action\nField <code>IN3ACT</code> reader - Tamper Input 3 Action\nField <code>IN3ACT</code> writer - Tamper Input 3 Action\nTamper Input 3 Action\nField <code>IN4ACT</code> reader - Tamper Input 4 Action\nField <code>IN4ACT</code> writer - Tamper Input 4 Action\nTamper Input 4 Action\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\nRegister <code>TAMPCTRL</code> reader\nField <code>TAMLVL0</code> reader - Tamper Level Select 0\nField <code>TAMLVL0</code> writer - Tamper Level Select 0\nField <code>TAMLVL1</code> reader - Tamper Level Select 1\nField <code>TAMLVL1</code> writer - Tamper Level Select 1\nField <code>TAMLVL2</code> reader - Tamper Level Select 2\nField <code>TAMLVL2</code> writer - Tamper Level Select 2\nField <code>TAMLVL3</code> reader - Tamper Level Select 3\nField <code>TAMLVL3</code> writer - Tamper Level Select 3\nField <code>TAMLVL4</code> reader - Tamper Level Select 4\nField <code>TAMLVL4</code> writer - Tamper Level Select 4\nTamper Control\nRegister <code>TAMPCTRL</code> writer\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nBit 24 - Debouncer Enable 0\nBit 24 - Debouncer Enable 0\nBit 25 - Debouncer Enable 1\nBit 25 - Debouncer Enable 1\nBit 26 - Debouncer Enable 2\nBit 26 - Debouncer Enable 2\nBit 27 - Debouncer Enable 3\nBit 27 - Debouncer Enable 3\nBit 28 - Debouncer Enable 4\nBit 28 - Debouncer Enable 4\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:1 - Tamper Input 0 Action\nBits 0:1 - Tamper Input 0 Action\nBits 2:3 - Tamper Input 1 Action\nBits 2:3 - Tamper Input 1 Action\nBits 4:5 - Tamper Input 2 Action\nBits 4:5 - Tamper Input 2 Action\nBits 6:7 - Tamper Input 3 Action\nBits 6:7 - Tamper Input 3 Action\nBits 8:9 - Tamper Input 4 Action\nBits 8:9 - Tamper Input 4 Action\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nBit 16 - Tamper Level Select 0\nBit 16 - Tamper Level Select 0\nBit 17 - Tamper Level Select 1\nBit 17 - Tamper Level Select 1\nBit 18 - Tamper Level Select 2\nBit 18 - Tamper Level Select 2\nBit 19 - Tamper Level Select 3\nBit 19 - Tamper Level Select 3\nBit 20 - Tamper Level Select 4\nBit 20 - Tamper Level Select 4\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nRegister <code>TAMPID</code> reader\nField <code>TAMPEVT</code> reader - Tamper Event Detected\nField <code>TAMPEVT</code> writer - Tamper Event Detected\nField <code>TAMPID0</code> reader - Tamper Input 0 Detected\nField <code>TAMPID0</code> writer - Tamper Input 0 Detected\nField <code>TAMPID1</code> reader - Tamper Input 1 Detected\nField <code>TAMPID1</code> writer - Tamper Input 1 Detected\nField <code>TAMPID2</code> reader - Tamper Input 2 Detected\nField <code>TAMPID2</code> writer - Tamper Input 2 Detected\nField <code>TAMPID3</code> reader - Tamper Input 3 Detected\nField <code>TAMPID3</code> writer - Tamper Input 3 Detected\nField <code>TAMPID4</code> reader - Tamper Input 4 Detected\nField <code>TAMPID4</code> writer - Tamper Input 4 Detected\nTamper ID\nRegister <code>TAMPID</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 31 - Tamper Event Detected\nBit 31 - Tamper Event Detected\nBit 0 - Tamper Input 0 Detected\nBit 0 - Tamper Input 0 Detected\nBit 1 - Tamper Input 1 Detected\nBit 1 - Tamper Input 1 Detected\nBit 2 - Tamper Input 2 Detected\nBit 2 - Tamper Input 2 Detected\nBit 3 - Tamper Input 3 Detected\nBit 3 - Tamper Input 3 Detected\nBit 4 - Tamper Input 4 Detected\nBit 4 - Tamper Input 4 Detected\nField <code>COUNT</code> reader - Count Timestamp Value\nRegister <code>TIMESTAMP</code> reader\nMODE0 Timestamp\nBits 0:31 - Count Timestamp Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBKUP (rw) register accessor: Backup\nCOMP (rw) register accessor: MODE1 Compare n Value\nCOUNT (rw) register accessor: MODE1 Counter Value\nCTRLA (rw) register accessor: MODE1 Control A\nCTRLB (rw) register accessor: MODE1 Control B\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE1 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nGP (rw) register accessor: General Purpose\nINTENCLR (rw) register accessor: MODE1 Interrupt Enable …\nINTENSET (rw) register accessor: MODE1 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE1 Interrupt Flag …\n16-bit Counter with Two 16-bit Compares\nPER (rw) register accessor: MODE1 Counter Period\nSYNCBUSY (r) register accessor: MODE1 Synchronization Busy …\nTAMPCTRL (rw) register accessor: Tamper Control\nTAMPID (rw) register accessor: Tamper ID\nTIMESTAMP (r) register accessor: MODE1 Timestamp\nBackup\n0x80..0xa0 - Backup\nIterator for array of: 0x80..0xa0 - Backup\nMODE1 Compare n Value\n0x20..0x28 - MODE1 Compare n Value\nIterator for array of: 0x20..0x28 - MODE1 Compare n Value\nMODE1 Counter Value\n0x18 - MODE1 Counter Value\nMODE1 Control A\n0x00 - MODE1 Control A\nMODE1 Control B\n0x02 - MODE1 Control B\nDebug Control\n0x0e - Debug Control\nMODE1 Event Control\n0x04 - MODE1 Event Control\nFrequency Correction\n0x14 - Frequency Correction\nReturns the argument unchanged.\nGeneral Purpose\n0x40..0x50 - General Purpose\nIterator for array of: 0x40..0x50 - General Purpose\nMODE1 Interrupt Enable Clear\n0x08 - MODE1 Interrupt Enable Clear\nMODE1 Interrupt Enable Set\n0x0a - MODE1 Interrupt Enable Set\nMODE1 Interrupt Flag Status and Clear\n0x0c - MODE1 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nMODE1 Counter Period\n0x1c - MODE1 Counter Period\nMODE1 Synchronization Busy Status\n0x10 - MODE1 Synchronization Busy Status\nTamper Control\n0x60 - Tamper Control\nTamper ID\n0x68 - Tamper ID\nMODE1 Timestamp\n0x64 - MODE1 Timestamp\nField <code>BKUP</code> reader - Backup\nBackup\nField <code>BKUP</code> writer - Backup\nRegister <code>BKUP[%s]</code> reader\nRegister <code>BKUP[%s]</code> writer\nBits 0:31 - Backup\nBits 0:31 - Backup\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COMP</code> reader - Compare Value\nMODE1 Compare n Value\nField <code>COMP</code> writer - Compare Value\nRegister <code>COMP[%s]</code> reader\nRegister <code>COMP[%s]</code> writer\nBits 0:15 - Compare Value\nBits 0:15 - Compare Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>COUNT</code> reader - Counter Value\nMODE1 Counter Value\nField <code>COUNT</code> writer - Counter Value\nRegister <code>COUNT</code> reader\nRegister <code>COUNT</code> writer\nBits 0:15 - Counter Value\nBits 0:15 - Counter Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BKTRST</code> reader - BKUP Registers Reset On Tamper Enable\nField <code>BKTRST</code> writer - BKUP Registers Reset On Tamper Enable\n2: Mode 2: Clock/Calendar\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nField <code>COUNTSYNC</code> reader - Count Read Synchronization Enable\nField <code>COUNTSYNC</code> writer - Count Read Synchronization Enable\nMODE1 Control A\n1: CLK_RTC_CNT = GCLK_RTC/1\n11: CLK_RTC_CNT = GCLK_RTC/1024\n8: CLK_RTC_CNT = GCLK_RTC/128\n5: CLK_RTC_CNT = GCLK_RTC/16\n2: CLK_RTC_CNT = GCLK_RTC/2\n9: CLK_RTC_CNT = GCLK_RTC/256\n6: CLK_RTC_CNT = GCLK_RTC/32\n3: CLK_RTC_CNT = GCLK_RTC/4\n10: CLK_RTC_CNT = GCLK_RTC/512\n7: CLK_RTC_CNT = GCLK_RTC/64\n4: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>GPTRST</code> reader - GP Registers Reset On Tamper Enable\nField <code>GPTRST</code> writer - GP Registers Reset On Tamper Enable\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\n0: CLK_RTC_CNT = GCLK_RTC/1\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 13 - BKUP Registers Reset On Tamper Enable\nBit 13 - BKUP Registers Reset On Tamper Enable\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nBit 15 - Count Read Synchronization Enable\nBit 15 - Count Read Synchronization Enable\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 14 - GP Registers Reset On Tamper Enable\nBit 14 - GP Registers Reset On Tamper Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nCLK_RTC_CNT = GCLK_RTC/1\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nCLK_RTC_CNT = GCLK_RTC/1\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nField <code>ACTF</code> reader - Active Layer Freqnuency\nField <code>ACTF</code> writer - Active Layer Freqnuency\nActive Layer Freqnuency\nMODE1 Control B\nField <code>DEBASYNC</code> reader - Debouncer Asynchronous Enable\nField <code>DEBASYNC</code> writer - Debouncer Asynchronous Enable\nField <code>DEBF</code> reader - Debounce Freqnuency\nField <code>DEBF</code> writer - Debounce Freqnuency\nDebounce Freqnuency\nField <code>DEBMAJ</code> reader - Debouncer Majority Enable\nField <code>DEBMAJ</code> writer - Debouncer Majority Enable\n6: CLK_RTC_DEB = CLK_RTC/128\n6: CLK_RTC_OUT = CLK_RTC/128\n3: CLK_RTC_DEB = CLK_RTC/16\n3: CLK_RTC_OUT = CLK_RTC/16\n0: CLK_RTC_DEB = CLK_RTC/2\n0: CLK_RTC_OUT = CLK_RTC/2\n7: CLK_RTC_DEB = CLK_RTC/256\n7: CLK_RTC_OUT = CLK_RTC/256\n4: CLK_RTC_DEB = CLK_RTC/32\n4: CLK_RTC_OUT = CLK_RTC/32\n1: CLK_RTC_DEB = CLK_RTC/4\n1: CLK_RTC_OUT = CLK_RTC/4\n5: CLK_RTC_DEB = CLK_RTC/64\n5: CLK_RTC_OUT = CLK_RTC/64\n2: CLK_RTC_DEB = CLK_RTC/8\n2: CLK_RTC_OUT = CLK_RTC/8\nField <code>DMAEN</code> reader - DMA Enable\nField <code>DMAEN</code> writer - DMA Enable\nField <code>GP0EN</code> reader - General Purpose 0 Enable\nField <code>GP0EN</code> writer - General Purpose 0 Enable\nField <code>GP2EN</code> reader - General Purpose 2 Enable\nField <code>GP2EN</code> writer - General Purpose 2 Enable\nRegister <code>CTRLB</code> reader\nField <code>RTCOUT</code> reader - RTC Output Enable\nField <code>RTCOUT</code> writer - RTC Output Enable\nRegister <code>CTRLB</code> writer\nBits 12:14 - Active Layer Freqnuency\nBits 12:14 - Active Layer Freqnuency\nBit 5 - Debouncer Asynchronous Enable\nBit 5 - Debouncer Asynchronous Enable\nBits 8:10 - Debounce Freqnuency\nBits 8:10 - Debounce Freqnuency\nBit 4 - Debouncer Majority Enable\nBit 4 - Debouncer Majority Enable\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 7 - DMA Enable\nBit 7 - DMA Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - General Purpose 0 Enable\nBit 0 - General Purpose 0 Enable\nBit 1 - General Purpose 2 Enable\nBit 1 - General Purpose 2 Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 6 - RTC Output Enable\nBit 6 - RTC Output Enable\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CMPEO0</code> reader - Compare 0 Event Output Enable\nField <code>CMPEO0</code> writer - Compare 0 Event Output Enable\nField <code>CMPEO1</code> reader - Compare 1 Event Output Enable\nField <code>CMPEO1</code> writer - Compare 1 Event Output Enable\nField <code>CMPEO2</code> reader - Compare 2 Event Output Enable\nField <code>CMPEO2</code> writer - Compare 2 Event Output Enable\nField <code>CMPEO3</code> reader - Compare 3 Event Output Enable\nField <code>CMPEO3</code> writer - Compare 3 Event Output Enable\nMODE1 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nField <code>TAMPEREO</code> reader - Tamper Event Output Enable\nField <code>TAMPEREO</code> writer - Tamper Event Output Enable\nField <code>TAMPEVEI</code> reader - Tamper Event Input Enable\nField <code>TAMPEVEI</code> writer - Tamper Event Input Enable\nRegister <code>EVCTRL</code> writer\nBit 8 - Compare 0 Event Output Enable\nBit 8 - Compare 0 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nBit 9 - Compare 1 Event Output Enable\nBit 10 - Compare 2 Event Output Enable\nBit 10 - Compare 2 Event Output Enable\nBit 11 - Compare 3 Event Output Enable\nBit 11 - Compare 3 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 16 - Tamper Event Input Enable\nBit 16 - Tamper Event Input Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>GP</code> reader - General Purpose\nGeneral Purpose\nField <code>GP</code> writer - General Purpose\nRegister <code>GP[%s]</code> reader\nRegister <code>GP[%s]</code> writer\nReturns the argument unchanged.\nBits 0:31 - General Purpose\nBits 0:31 - General Purpose\nCalls <code>U::from(self)</code>.\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nField <code>CMP2</code> reader - Compare 2 Interrupt Enable\nField <code>CMP2</code> writer - Compare 2 Interrupt Enable\nField <code>CMP3</code> reader - Compare 3 Interrupt Enable\nField <code>CMP3</code> writer - Compare 3 Interrupt Enable\nMODE1 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Interrupt Enable\nField <code>PER0</code> writer - Periodic Interval 0 Interrupt Enable\nField <code>PER1</code> reader - Periodic Interval 1 Interrupt Enable\nField <code>PER1</code> writer - Periodic Interval 1 Interrupt Enable\nField <code>PER2</code> reader - Periodic Interval 2 Interrupt Enable\nField <code>PER2</code> writer - Periodic Interval 2 Interrupt Enable\nField <code>PER3</code> reader - Periodic Interval 3 Interrupt Enable\nField <code>PER3</code> writer - Periodic Interval 3 Interrupt Enable\nField <code>PER4</code> reader - Periodic Interval 4 Interrupt Enable\nField <code>PER4</code> writer - Periodic Interval 4 Interrupt Enable\nField <code>PER5</code> reader - Periodic Interval 5 Interrupt Enable\nField <code>PER5</code> writer - Periodic Interval 5 Interrupt Enable\nField <code>PER6</code> reader - Periodic Interval 6 Interrupt Enable\nField <code>PER6</code> writer - Periodic Interval 6 Interrupt Enable\nField <code>PER7</code> reader - Periodic Interval 7 Interrupt Enable\nField <code>PER7</code> writer - Periodic Interval 7 Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENCLR</code> writer\nBit 8 - Compare 0 Interrupt Enable\nBit 8 - Compare 0 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 10 - Compare 2 Interrupt Enable\nBit 10 - Compare 2 Interrupt Enable\nBit 11 - Compare 3 Interrupt Enable\nBit 11 - Compare 3 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>CMP0</code> reader - Compare 0 Interrupt Enable\nField <code>CMP0</code> writer - Compare 0 Interrupt Enable\nField <code>CMP1</code> reader - Compare 1 Interrupt Enable\nField <code>CMP1</code> writer - Compare 1 Interrupt Enable\nField <code>CMP2</code> reader - Compare 2 Interrupt Enable\nField <code>CMP2</code> writer - Compare 2 Interrupt Enable\nField <code>CMP3</code> reader - Compare 3 Interrupt Enable\nField <code>CMP3</code> writer - Compare 3 Interrupt Enable\nMODE1 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Interrupt Enable\nField <code>PER0</code> writer - Periodic Interval 0 Interrupt Enable\nField <code>PER1</code> reader - Periodic Interval 1 Interrupt Enable\nField <code>PER1</code> writer - Periodic Interval 1 Interrupt Enable\nField <code>PER2</code> reader - Periodic Interval 2 Interrupt Enable\nField <code>PER2</code> writer - Periodic Interval 2 Interrupt Enable\nField <code>PER3</code> reader - Periodic Interval 3 Interrupt Enable\nField <code>PER3</code> writer - Periodic Interval 3 Interrupt Enable\nField <code>PER4</code> reader - Periodic Interval 4 Interrupt Enable\nField <code>PER4</code> writer - Periodic Interval 4 Interrupt Enable\nField <code>PER5</code> reader - Periodic Interval 5 Interrupt Enable\nField <code>PER5</code> writer - Periodic Interval 5 Interrupt Enable\nField <code>PER6</code> reader - Periodic Interval 6 Interrupt Enable\nField <code>PER6</code> writer - Periodic Interval 6 Interrupt Enable\nField <code>PER7</code> reader - Periodic Interval 7 Interrupt Enable\nField <code>PER7</code> writer - Periodic Interval 7 Interrupt Enable\nRegister <code>INTENSET</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENSET</code> writer\nBit 8 - Compare 0 Interrupt Enable\nBit 8 - Compare 0 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 9 - Compare 1 Interrupt Enable\nBit 10 - Compare 2 Interrupt Enable\nBit 10 - Compare 2 Interrupt Enable\nBit 11 - Compare 3 Interrupt Enable\nBit 11 - Compare 3 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>CMP0</code> reader - Compare 0\nField <code>CMP0</code> writer - Compare 0\nField <code>CMP1</code> reader - Compare 1\nField <code>CMP1</code> writer - Compare 1\nField <code>CMP2</code> reader - Compare 2\nField <code>CMP2</code> writer - Compare 2\nField <code>CMP3</code> reader - Compare 3\nField <code>CMP3</code> writer - Compare 3\nMODE1 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nField <code>PER0</code> reader - Periodic Interval 0\nField <code>PER0</code> writer - Periodic Interval 0\nField <code>PER1</code> reader - Periodic Interval 1\nField <code>PER1</code> writer - Periodic Interval 1\nField <code>PER2</code> reader - Periodic Interval 2\nField <code>PER2</code> writer - Periodic Interval 2\nField <code>PER3</code> reader - Periodic Interval 3\nField <code>PER3</code> writer - Periodic Interval 3\nField <code>PER4</code> reader - Periodic Interval 4\nField <code>PER4</code> writer - Periodic Interval 4\nField <code>PER5</code> reader - Periodic Interval 5\nField <code>PER5</code> writer - Periodic Interval 5\nField <code>PER6</code> reader - Periodic Interval 6\nField <code>PER6</code> writer - Periodic Interval 6\nField <code>PER7</code> reader - Periodic Interval 7\nField <code>PER7</code> writer - Periodic Interval 7\nRegister <code>INTFLAG</code> reader\nField <code>TAMPER</code> reader - Tamper\nField <code>TAMPER</code> writer - Tamper\nRegister <code>INTFLAG</code> writer\nBit 8 - Compare 0\nBit 8 - Compare 0\nBit 9 - Compare 1\nBit 9 - Compare 1\nBit 10 - Compare 2\nBit 10 - Compare 2\nBit 11 - Compare 3\nBit 11 - Compare 3\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow\nBit 15 - Overflow\nBit 0 - Periodic Interval 0\nBit 0 - Periodic Interval 0\nBit 1 - Periodic Interval 1\nBit 1 - Periodic Interval 1\nBit 2 - Periodic Interval 2\nBit 2 - Periodic Interval 2\nBit 3 - Periodic Interval 3\nBit 3 - Periodic Interval 3\nBit 4 - Periodic Interval 4\nBit 4 - Periodic Interval 4\nBit 5 - Periodic Interval 5\nBit 5 - Periodic Interval 5\nBit 6 - Periodic Interval 6\nBit 6 - Periodic Interval 6\nBit 7 - Periodic Interval 7\nBit 7 - Periodic Interval 7\nBit 14 - Tamper\nBit 14 - Tamper\nField <code>PER</code> reader - Counter Period\nMODE1 Counter Period\nField <code>PER</code> writer - Counter Period\nRegister <code>PER</code> reader\nRegister <code>PER</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Counter Period\nBits 0:15 - Counter Period\nField <code>COMP0</code> reader - COMP 0 Register Busy\nField <code>COMP1</code> reader - COMP 1 Register Busy\nField <code>COMP2</code> reader - COMP 2 Register Busy\nField <code>COMP3</code> reader - COMP 3 Register Busy\nField <code>COUNT</code> reader - COUNT Register Busy\nField <code>COUNTSYNC</code> reader - Count Synchronization Enable Bit …\nField <code>ENABLE</code> reader - Enable Bit Busy\nField <code>FREQCORR</code> reader - FREQCORR Register Busy\nField <code>GP0</code> reader - General Purpose 0 Register Busy\nField <code>GP1</code> reader - General Purpose 1 Register Busy\nField <code>GP2</code> reader - General Purpose 2 Register Busy\nField <code>GP3</code> reader - General Purpose 3 Register Busy\nField <code>PER</code> reader - PER Register Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Bit Busy\nMODE1 Synchronization Busy Status\nBit 5 - COMP 0 Register Busy\nBit 6 - COMP 1 Register Busy\nBit 7 - COMP 2 Register Busy\nBit 8 - COMP 3 Register Busy\nBit 3 - COUNT Register Busy\nBit 15 - Count Synchronization Enable Bit Busy\nBit 1 - Enable Bit Busy\nBit 2 - FREQCORR Register Busy\nReturns the argument unchanged.\nBit 16 - General Purpose 0 Register Busy\nBit 17 - General Purpose 1 Register Busy\nBit 18 - General Purpose 2 Register Busy\nBit 19 - General Purpose 3 Register Busy\nCalls <code>U::from(self)</code>.\nBit 4 - PER Register Busy\nBit 0 - Software Reset Bit Busy\n3: Compare IN0 to OUT\n3: Compare IN1 to OUT\n3: Compare IN2 to OUT\n3: Compare IN3 to OUT\n3: Compare IN4 to OUT\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\nField <code>DEBNC0</code> reader - Debouncer Enable 0\nField <code>DEBNC0</code> writer - Debouncer Enable 0\nField <code>DEBNC1</code> reader - Debouncer Enable 1\nField <code>DEBNC1</code> writer - Debouncer Enable 1\nField <code>DEBNC2</code> reader - Debouncer Enable 2\nField <code>DEBNC2</code> writer - Debouncer Enable 2\nField <code>DEBNC3</code> reader - Debouncer Enable 3\nField <code>DEBNC3</code> writer - Debouncer Enable 3\nField <code>DEBNC4</code> reader - Debouncer Enable 4\nField <code>DEBNC4</code> writer - Debouncer Enable 4\nField <code>IN0ACT</code> reader - Tamper Input 0 Action\nField <code>IN0ACT</code> writer - Tamper Input 0 Action\nTamper Input 0 Action\nField <code>IN1ACT</code> reader - Tamper Input 1 Action\nField <code>IN1ACT</code> writer - Tamper Input 1 Action\nTamper Input 1 Action\nField <code>IN2ACT</code> reader - Tamper Input 2 Action\nField <code>IN2ACT</code> writer - Tamper Input 2 Action\nTamper Input 2 Action\nField <code>IN3ACT</code> reader - Tamper Input 3 Action\nField <code>IN3ACT</code> writer - Tamper Input 3 Action\nTamper Input 3 Action\nField <code>IN4ACT</code> reader - Tamper Input 4 Action\nField <code>IN4ACT</code> writer - Tamper Input 4 Action\nTamper Input 4 Action\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\nRegister <code>TAMPCTRL</code> reader\nField <code>TAMLVL0</code> reader - Tamper Level Select 0\nField <code>TAMLVL0</code> writer - Tamper Level Select 0\nField <code>TAMLVL1</code> reader - Tamper Level Select 1\nField <code>TAMLVL1</code> writer - Tamper Level Select 1\nField <code>TAMLVL2</code> reader - Tamper Level Select 2\nField <code>TAMLVL2</code> writer - Tamper Level Select 2\nField <code>TAMLVL3</code> reader - Tamper Level Select 3\nField <code>TAMLVL3</code> writer - Tamper Level Select 3\nField <code>TAMLVL4</code> reader - Tamper Level Select 4\nField <code>TAMLVL4</code> writer - Tamper Level Select 4\nTamper Control\nRegister <code>TAMPCTRL</code> writer\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nBit 24 - Debouncer Enable 0\nBit 24 - Debouncer Enable 0\nBit 25 - Debouncer Enable 1\nBit 25 - Debouncer Enable 1\nBit 26 - Debouncer Enable 2\nBit 26 - Debouncer Enable 2\nBit 27 - Debouncer Enable 3\nBit 27 - Debouncer Enable 3\nBit 28 - Debouncer Enable 4\nBit 28 - Debouncer Enable 4\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:1 - Tamper Input 0 Action\nBits 0:1 - Tamper Input 0 Action\nBits 2:3 - Tamper Input 1 Action\nBits 2:3 - Tamper Input 1 Action\nBits 4:5 - Tamper Input 2 Action\nBits 4:5 - Tamper Input 2 Action\nBits 6:7 - Tamper Input 3 Action\nBits 6:7 - Tamper Input 3 Action\nBits 8:9 - Tamper Input 4 Action\nBits 8:9 - Tamper Input 4 Action\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nBit 16 - Tamper Level Select 0\nBit 16 - Tamper Level Select 0\nBit 17 - Tamper Level Select 1\nBit 17 - Tamper Level Select 1\nBit 18 - Tamper Level Select 2\nBit 18 - Tamper Level Select 2\nBit 19 - Tamper Level Select 3\nBit 19 - Tamper Level Select 3\nBit 20 - Tamper Level Select 4\nBit 20 - Tamper Level Select 4\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nRegister <code>TAMPID</code> reader\nField <code>TAMPEVT</code> reader - Tamper Event Detected\nField <code>TAMPEVT</code> writer - Tamper Event Detected\nField <code>TAMPID0</code> reader - Tamper Input 0 Detected\nField <code>TAMPID0</code> writer - Tamper Input 0 Detected\nField <code>TAMPID1</code> reader - Tamper Input 1 Detected\nField <code>TAMPID1</code> writer - Tamper Input 1 Detected\nField <code>TAMPID2</code> reader - Tamper Input 2 Detected\nField <code>TAMPID2</code> writer - Tamper Input 2 Detected\nField <code>TAMPID3</code> reader - Tamper Input 3 Detected\nField <code>TAMPID3</code> writer - Tamper Input 3 Detected\nField <code>TAMPID4</code> reader - Tamper Input 4 Detected\nField <code>TAMPID4</code> writer - Tamper Input 4 Detected\nTamper ID\nRegister <code>TAMPID</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 31 - Tamper Event Detected\nBit 31 - Tamper Event Detected\nBit 0 - Tamper Input 0 Detected\nBit 0 - Tamper Input 0 Detected\nBit 1 - Tamper Input 1 Detected\nBit 1 - Tamper Input 1 Detected\nBit 2 - Tamper Input 2 Detected\nBit 2 - Tamper Input 2 Detected\nBit 3 - Tamper Input 3 Detected\nBit 3 - Tamper Input 3 Detected\nBit 4 - Tamper Input 4 Detected\nBit 4 - Tamper Input 4 Detected\nField <code>COUNT</code> reader - Count Timestamp Value\nRegister <code>TIMESTAMP</code> reader\nMODE1 Timestamp\nBits 0:15 - Count Timestamp Value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nALARM0 (rw) register accessor: MODE2_ALARM Alarm n Value\nALARM1 (rw) register accessor: MODE2_ALARM Alarm n Value\nBKUP (rw) register accessor: Backup\nCLOCK (rw) register accessor: MODE2 Clock Value\nCTRLA (rw) register accessor: MODE2 Control A\nCTRLB (rw) register accessor: MODE2 Control B\nDBGCTRL (rw) register accessor: Debug Control\nEVCTRL (rw) register accessor: MODE2 Event Control\nFREQCORR (rw) register accessor: Frequency Correction\nGP (rw) register accessor: General Purpose\nINTENCLR (rw) register accessor: MODE2 Interrupt Enable …\nINTENSET (rw) register accessor: MODE2 Interrupt Enable Set\nINTFLAG (rw) register accessor: MODE2 Interrupt Flag …\nMASK0 (rw) register accessor: MODE2_ALARM Alarm n Mask\nMASK1 (rw) register accessor: MODE2_ALARM Alarm n Mask\nClock/Calendar with Alarm\nSYNCBUSY (r) register accessor: MODE2 Synchronization Busy …\nTAMPCTRL (rw) register accessor: Tamper Control\nTAMPID (rw) register accessor: Tamper ID\nTIMESTAMP (r) register accessor: MODE2 Timestamp\nMODE2_ALARM Alarm n Value\n0x20 - MODE2_ALARM Alarm n Value\nMODE2_ALARM Alarm n Value\n0x28 - MODE2_ALARM Alarm n Value\nBackup\n0x80..0xa0 - Backup\nIterator for array of: 0x80..0xa0 - Backup\nMODE2 Clock Value\n0x18 - MODE2 Clock Value\nMODE2 Control A\n0x00 - MODE2 Control A\nMODE2 Control B\n0x02 - MODE2 Control B\nDebug Control\n0x0e - Debug Control\nMODE2 Event Control\n0x04 - MODE2 Event Control\nFrequency Correction\n0x14 - Frequency Correction\nReturns the argument unchanged.\nGeneral Purpose\n0x40..0x50 - General Purpose\nIterator for array of: 0x40..0x50 - General Purpose\nMODE2 Interrupt Enable Clear\n0x08 - MODE2 Interrupt Enable Clear\nMODE2 Interrupt Enable Set\n0x0a - MODE2 Interrupt Enable Set\nMODE2 Interrupt Flag Status and Clear\n0x0c - MODE2 Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nMODE2_ALARM Alarm n Mask\n0x24 - MODE2_ALARM Alarm n Mask\nMODE2_ALARM Alarm n Mask\n0x2c - MODE2_ALARM Alarm n Mask\nMODE2 Synchronization Busy Status\n0x10 - MODE2 Synchronization Busy Status\nTamper Control\n0x60 - Tamper Control\nTamper ID\n0x68 - Tamper ID\nMODE2 Timestamp\n0x64 - MODE2 Timestamp\nMODE2_ALARM Alarm n Value\n0: Morning hour\nField <code>DAY</code> reader - Day\nField <code>DAY</code> writer - Day\nField <code>HOUR</code> reader - Hour\nField <code>HOUR</code> writer - Hour\nHour\nField <code>MINUTE</code> reader - Minute\nField <code>MINUTE</code> writer - Minute\nField <code>MONTH</code> reader - Month\nField <code>MONTH</code> writer - Month\n16: Afternoon hour\nRegister <code>ALARM0</code> reader\nField <code>SECOND</code> reader - Second\nField <code>SECOND</code> writer - Second\nRegister <code>ALARM0</code> writer\nField <code>YEAR</code> reader - Year\nField <code>YEAR</code> writer - Year\nMorning hour\nBits 17:21 - Day\nBits 17:21 - Day\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour\nBits 12:16 - Hour\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMorning hour\nAfternoon hour\nBits 6:11 - Minute\nBits 6:11 - Minute\nBits 22:25 - Month\nBits 22:25 - Month\nAfternoon hour\nBits 0:5 - Second\nBits 0:5 - Second\nGet enumerated values variant\nBits 26:31 - Year\nBits 26:31 - Year\nMODE2_ALARM Alarm n Value\n0: Morning hour\nField <code>DAY</code> reader - Day\nField <code>DAY</code> writer - Day\nField <code>HOUR</code> reader - Hour\nField <code>HOUR</code> writer - Hour\nHour\nField <code>MINUTE</code> reader - Minute\nField <code>MINUTE</code> writer - Minute\nField <code>MONTH</code> reader - Month\nField <code>MONTH</code> writer - Month\n16: Afternoon hour\nRegister <code>ALARM1</code> reader\nField <code>SECOND</code> reader - Second\nField <code>SECOND</code> writer - Second\nRegister <code>ALARM1</code> writer\nField <code>YEAR</code> reader - Year\nField <code>YEAR</code> writer - Year\nMorning hour\nBits 17:21 - Day\nBits 17:21 - Day\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour\nBits 12:16 - Hour\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMorning hour\nAfternoon hour\nBits 6:11 - Minute\nBits 6:11 - Minute\nBits 22:25 - Month\nBits 22:25 - Month\nAfternoon hour\nBits 0:5 - Second\nBits 0:5 - Second\nGet enumerated values variant\nBits 26:31 - Year\nBits 26:31 - Year\nField <code>BKUP</code> reader - Backup\nBackup\nField <code>BKUP</code> writer - Backup\nRegister <code>BKUP[%s]</code> reader\nRegister <code>BKUP[%s]</code> writer\nBits 0:31 - Backup\nBits 0:31 - Backup\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n0: AM when CLKREP in 12-hour\nMODE2 Clock Value\nField <code>DAY</code> reader - Day\nField <code>DAY</code> writer - Day\nField <code>HOUR</code> reader - Hour\nField <code>HOUR</code> writer - Hour\nHour\nField <code>MINUTE</code> reader - Minute\nField <code>MINUTE</code> writer - Minute\nField <code>MONTH</code> reader - Month\nField <code>MONTH</code> writer - Month\n16: PM when CLKREP in 12-hour\nRegister <code>CLOCK</code> reader\nField <code>SECOND</code> reader - Second\nField <code>SECOND</code> writer - Second\nRegister <code>CLOCK</code> writer\nField <code>YEAR</code> reader - Year\nField <code>YEAR</code> writer - Year\nAM when CLKREP in 12-hour\nBits 17:21 - Day\nBits 17:21 - Day\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 12:16 - Hour\nBits 12:16 - Hour\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAM when CLKREP in 12-hour\nPM when CLKREP in 12-hour\nBits 6:11 - Minute\nBits 6:11 - Minute\nBits 22:25 - Month\nBits 22:25 - Month\nPM when CLKREP in 12-hour\nBits 0:5 - Second\nBits 0:5 - Second\nGet enumerated values variant\nBits 26:31 - Year\nBits 26:31 - Year\nField <code>BKTRST</code> reader - BKUP Registers Reset On Tamper Enable\nField <code>BKTRST</code> writer - BKUP Registers Reset On Tamper Enable\nField <code>CLKREP</code> reader - Clock Representation\nField <code>CLKREP</code> writer - Clock Representation\n2: Mode 2: Clock/Calendar\nField <code>CLOCKSYNC</code> reader - Clock Read Synchronization Enable\nField <code>CLOCKSYNC</code> writer - Clock Read Synchronization Enable\n1: Mode 1: 16-bit Counter\n0: Mode 0: 32-bit Counter\nMODE2 Control A\n1: CLK_RTC_CNT = GCLK_RTC/1\n11: CLK_RTC_CNT = GCLK_RTC/1024\n8: CLK_RTC_CNT = GCLK_RTC/128\n5: CLK_RTC_CNT = GCLK_RTC/16\n2: CLK_RTC_CNT = GCLK_RTC/2\n9: CLK_RTC_CNT = GCLK_RTC/256\n6: CLK_RTC_CNT = GCLK_RTC/32\n3: CLK_RTC_CNT = GCLK_RTC/4\n10: CLK_RTC_CNT = GCLK_RTC/512\n7: CLK_RTC_CNT = GCLK_RTC/64\n4: CLK_RTC_CNT = GCLK_RTC/8\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nField <code>GPTRST</code> reader - GP Registers Reset On Tamper Enable\nField <code>GPTRST</code> writer - GP Registers Reset On Tamper Enable\nField <code>MATCHCLR</code> reader - Clear on Match\nField <code>MATCHCLR</code> writer - Clear on Match\nField <code>MODE</code> reader - Operating Mode\nField <code>MODE</code> writer - Operating Mode\nOperating Mode\n0: CLK_RTC_CNT = GCLK_RTC/1\nField <code>PRESCALER</code> reader - Prescaler\nField <code>PRESCALER</code> writer - Prescaler\nPrescaler\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 13 - BKUP Registers Reset On Tamper Enable\nBit 13 - BKUP Registers Reset On Tamper Enable\nBit 6 - Clock Representation\nBit 6 - Clock Representation\nMode 2: Clock/Calendar\nBit 15 - Clock Read Synchronization Enable\nBit 15 - Clock Read Synchronization Enable\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 14 - GP Registers Reset On Tamper Enable\nBit 14 - GP Registers Reset On Tamper Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMode 2: Clock/Calendar\nMode 1: 16-bit Counter\nMode 0: 32-bit Counter\nCLK_RTC_CNT = GCLK_RTC/1\nCLK_RTC_CNT = GCLK_RTC/1024\nCLK_RTC_CNT = GCLK_RTC/128\nCLK_RTC_CNT = GCLK_RTC/16\nCLK_RTC_CNT = GCLK_RTC/2\nCLK_RTC_CNT = GCLK_RTC/256\nCLK_RTC_CNT = GCLK_RTC/32\nCLK_RTC_CNT = GCLK_RTC/4\nCLK_RTC_CNT = GCLK_RTC/512\nCLK_RTC_CNT = GCLK_RTC/64\nCLK_RTC_CNT = GCLK_RTC/8\nCLK_RTC_CNT = GCLK_RTC/1\nBit 7 - Clear on Match\nBit 7 - Clear on Match\nBits 2:3 - Operating Mode\nBits 2:3 - Operating Mode\nCLK_RTC_CNT = GCLK_RTC/1\nBits 8:11 - Prescaler\nBits 8:11 - Prescaler\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nGet enumerated values variant\nField <code>ACTF</code> reader - Active Layer Freqnuency\nField <code>ACTF</code> writer - Active Layer Freqnuency\nActive Layer Freqnuency\nMODE2 Control B\nField <code>DEBASYNC</code> reader - Debouncer Asynchronous Enable\nField <code>DEBASYNC</code> writer - Debouncer Asynchronous Enable\nField <code>DEBF</code> reader - Debounce Freqnuency\nField <code>DEBF</code> writer - Debounce Freqnuency\nDebounce Freqnuency\nField <code>DEBMAJ</code> reader - Debouncer Majority Enable\nField <code>DEBMAJ</code> writer - Debouncer Majority Enable\n6: CLK_RTC_DEB = CLK_RTC/128\n6: CLK_RTC_OUT = CLK_RTC/128\n3: CLK_RTC_DEB = CLK_RTC/16\n3: CLK_RTC_OUT = CLK_RTC/16\n0: CLK_RTC_DEB = CLK_RTC/2\n0: CLK_RTC_OUT = CLK_RTC/2\n7: CLK_RTC_DEB = CLK_RTC/256\n7: CLK_RTC_OUT = CLK_RTC/256\n4: CLK_RTC_DEB = CLK_RTC/32\n4: CLK_RTC_OUT = CLK_RTC/32\n1: CLK_RTC_DEB = CLK_RTC/4\n1: CLK_RTC_OUT = CLK_RTC/4\n5: CLK_RTC_DEB = CLK_RTC/64\n5: CLK_RTC_OUT = CLK_RTC/64\n2: CLK_RTC_DEB = CLK_RTC/8\n2: CLK_RTC_OUT = CLK_RTC/8\nField <code>DMAEN</code> reader - DMA Enable\nField <code>DMAEN</code> writer - DMA Enable\nField <code>GP0EN</code> reader - General Purpose 0 Enable\nField <code>GP0EN</code> writer - General Purpose 0 Enable\nField <code>GP2EN</code> reader - General Purpose 2 Enable\nField <code>GP2EN</code> writer - General Purpose 2 Enable\nRegister <code>CTRLB</code> reader\nField <code>RTCOUT</code> reader - RTC Output Enable\nField <code>RTCOUT</code> writer - RTC Output Enable\nRegister <code>CTRLB</code> writer\nBits 12:14 - Active Layer Freqnuency\nBits 12:14 - Active Layer Freqnuency\nBit 5 - Debouncer Asynchronous Enable\nBit 5 - Debouncer Asynchronous Enable\nBits 8:10 - Debounce Freqnuency\nBits 8:10 - Debounce Freqnuency\nBit 4 - Debouncer Majority Enable\nBit 4 - Debouncer Majority Enable\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 7 - DMA Enable\nBit 7 - DMA Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 0 - General Purpose 0 Enable\nBit 0 - General Purpose 0 Enable\nBit 1 - General Purpose 2 Enable\nBit 1 - General Purpose 2 Enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCLK_RTC_DEB = CLK_RTC/128\nCLK_RTC_OUT = CLK_RTC/128\nCLK_RTC_DEB = CLK_RTC/16\nCLK_RTC_OUT = CLK_RTC/16\nCLK_RTC_DEB = CLK_RTC/2\nCLK_RTC_OUT = CLK_RTC/2\nCLK_RTC_DEB = CLK_RTC/256\nCLK_RTC_OUT = CLK_RTC/256\nCLK_RTC_DEB = CLK_RTC/32\nCLK_RTC_OUT = CLK_RTC/32\nCLK_RTC_DEB = CLK_RTC/4\nCLK_RTC_OUT = CLK_RTC/4\nCLK_RTC_DEB = CLK_RTC/64\nCLK_RTC_OUT = CLK_RTC/64\nCLK_RTC_DEB = CLK_RTC/8\nCLK_RTC_OUT = CLK_RTC/8\nBit 6 - RTC Output Enable\nBit 6 - RTC Output Enable\nGet enumerated values variant\nGet enumerated values variant\nDebug Control\nField <code>DBGRUN</code> reader - Run During Debug\nField <code>DBGRUN</code> writer - Run During Debug\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Run During Debug\nBit 0 - Run During Debug\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ALARMEO0</code> reader - Alarm 0 Event Output Enable\nField <code>ALARMEO0</code> writer - Alarm 0 Event Output Enable\nField <code>ALARMEO1</code> reader - Alarm 1 Event Output Enable\nField <code>ALARMEO1</code> writer - Alarm 1 Event Output Enable\nMODE2 Event Control\nField <code>OVFEO</code> reader - Overflow Event Output Enable\nField <code>OVFEO</code> writer - Overflow Event Output Enable\nField <code>PEREO0</code> reader - Periodic Interval 0 Event Output …\nField <code>PEREO0</code> writer - Periodic Interval 0 Event Output …\nField <code>PEREO1</code> reader - Periodic Interval 1 Event Output …\nField <code>PEREO1</code> writer - Periodic Interval 1 Event Output …\nField <code>PEREO2</code> reader - Periodic Interval 2 Event Output …\nField <code>PEREO2</code> writer - Periodic Interval 2 Event Output …\nField <code>PEREO3</code> reader - Periodic Interval 3 Event Output …\nField <code>PEREO3</code> writer - Periodic Interval 3 Event Output …\nField <code>PEREO4</code> reader - Periodic Interval 4 Event Output …\nField <code>PEREO4</code> writer - Periodic Interval 4 Event Output …\nField <code>PEREO5</code> reader - Periodic Interval 5 Event Output …\nField <code>PEREO5</code> writer - Periodic Interval 5 Event Output …\nField <code>PEREO6</code> reader - Periodic Interval 6 Event Output …\nField <code>PEREO6</code> writer - Periodic Interval 6 Event Output …\nField <code>PEREO7</code> reader - Periodic Interval 7 Event Output …\nField <code>PEREO7</code> writer - Periodic Interval 7 Event Output …\nRegister <code>EVCTRL</code> reader\nField <code>TAMPEREO</code> reader - Tamper Event Output Enable\nField <code>TAMPEREO</code> writer - Tamper Event Output Enable\nField <code>TAMPEVEI</code> reader - Tamper Event Input Enable\nField <code>TAMPEVEI</code> writer - Tamper Event Input Enable\nRegister <code>EVCTRL</code> writer\nBit 8 - Alarm 0 Event Output Enable\nBit 8 - Alarm 0 Event Output Enable\nBit 9 - Alarm 1 Event Output Enable\nBit 9 - Alarm 1 Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Event Output Enable\nBit 15 - Overflow Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 0 - Periodic Interval 0 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 1 - Periodic Interval 1 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 2 - Periodic Interval 2 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 3 - Periodic Interval 3 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 4 - Periodic Interval 4 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 5 - Periodic Interval 5 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 6 - Periodic Interval 6 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 7 - Periodic Interval 7 Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 14 - Tamper Event Output Enable\nBit 16 - Tamper Event Input Enable\nBit 16 - Tamper Event Input Enable\nFrequency Correction\nRegister <code>FREQCORR</code> reader\nField <code>SIGN</code> reader - Correction Sign\nField <code>SIGN</code> writer - Correction Sign\nField <code>VALUE</code> reader - Correction Value\nField <code>VALUE</code> writer - Correction Value\nRegister <code>FREQCORR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 7 - Correction Sign\nBit 7 - Correction Sign\nBits 0:6 - Correction Value\nBits 0:6 - Correction Value\nField <code>GP</code> reader - General Purpose\nGeneral Purpose\nField <code>GP</code> writer - General Purpose\nRegister <code>GP[%s]</code> reader\nRegister <code>GP[%s]</code> writer\nReturns the argument unchanged.\nBits 0:31 - General Purpose\nBits 0:31 - General Purpose\nCalls <code>U::from(self)</code>.\nField <code>ALARM0</code> reader - Alarm 0 Interrupt Enable\nField <code>ALARM0</code> writer - Alarm 0 Interrupt Enable\nField <code>ALARM1</code> reader - Alarm 1 Interrupt Enable\nField <code>ALARM1</code> writer - Alarm 1 Interrupt Enable\nMODE2 Interrupt Enable Clear\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Interrupt Enable\nField <code>PER0</code> writer - Periodic Interval 0 Interrupt Enable\nField <code>PER1</code> reader - Periodic Interval 1 Interrupt Enable\nField <code>PER1</code> writer - Periodic Interval 1 Interrupt Enable\nField <code>PER2</code> reader - Periodic Interval 2 Interrupt Enable\nField <code>PER2</code> writer - Periodic Interval 2 Interrupt Enable\nField <code>PER3</code> reader - Periodic Interval 3 Interrupt Enable\nField <code>PER3</code> writer - Periodic Interval 3 Interrupt Enable\nField <code>PER4</code> reader - Periodic Interval 4 Interrupt Enable\nField <code>PER4</code> writer - Periodic Interval 4 Interrupt Enable\nField <code>PER5</code> reader - Periodic Interval 5 Interrupt Enable\nField <code>PER5</code> writer - Periodic Interval 5 Interrupt Enable\nField <code>PER6</code> reader - Periodic Interval 6 Interrupt Enable\nField <code>PER6</code> writer - Periodic Interval 6 Interrupt Enable\nField <code>PER7</code> reader - Periodic Interval 7 Interrupt Enable\nField <code>PER7</code> writer - Periodic Interval 7 Interrupt Enable\nRegister <code>INTENCLR</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENCLR</code> writer\nBit 8 - Alarm 0 Interrupt Enable\nBit 8 - Alarm 0 Interrupt Enable\nBit 9 - Alarm 1 Interrupt Enable\nBit 9 - Alarm 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 0 - Periodic Interval 0 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 1 - Periodic Interval 1 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 2 - Periodic Interval 2 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 3 - Periodic Interval 3 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 4 - Periodic Interval 4 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 5 - Periodic Interval 5 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 6 - Periodic Interval 6 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 7 - Periodic Interval 7 Interrupt Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>ALARM0</code> reader - Alarm 0 Interrupt Enable\nField <code>ALARM0</code> writer - Alarm 0 Interrupt Enable\nField <code>ALARM1</code> reader - Alarm 1 Interrupt Enable\nField <code>ALARM1</code> writer - Alarm 1 Interrupt Enable\nMODE2 Interrupt Enable Set\nField <code>OVF</code> reader - Overflow Interrupt Enable\nField <code>OVF</code> writer - Overflow Interrupt Enable\nField <code>PER0</code> reader - Periodic Interval 0 Enable\nField <code>PER0</code> writer - Periodic Interval 0 Enable\nField <code>PER1</code> reader - Periodic Interval 1 Enable\nField <code>PER1</code> writer - Periodic Interval 1 Enable\nField <code>PER2</code> reader - Periodic Interval 2 Enable\nField <code>PER2</code> writer - Periodic Interval 2 Enable\nField <code>PER3</code> reader - Periodic Interval 3 Enable\nField <code>PER3</code> writer - Periodic Interval 3 Enable\nField <code>PER4</code> reader - Periodic Interval 4 Enable\nField <code>PER4</code> writer - Periodic Interval 4 Enable\nField <code>PER5</code> reader - Periodic Interval 5 Enable\nField <code>PER5</code> writer - Periodic Interval 5 Enable\nField <code>PER6</code> reader - Periodic Interval 6 Enable\nField <code>PER6</code> writer - Periodic Interval 6 Enable\nField <code>PER7</code> reader - Periodic Interval 7 Enable\nField <code>PER7</code> writer - Periodic Interval 7 Enable\nRegister <code>INTENSET</code> reader\nField <code>TAMPER</code> reader - Tamper Enable\nField <code>TAMPER</code> writer - Tamper Enable\nRegister <code>INTENSET</code> writer\nBit 8 - Alarm 0 Interrupt Enable\nBit 8 - Alarm 0 Interrupt Enable\nBit 9 - Alarm 1 Interrupt Enable\nBit 9 - Alarm 1 Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow Interrupt Enable\nBit 15 - Overflow Interrupt Enable\nBit 0 - Periodic Interval 0 Enable\nBit 0 - Periodic Interval 0 Enable\nBit 1 - Periodic Interval 1 Enable\nBit 1 - Periodic Interval 1 Enable\nBit 2 - Periodic Interval 2 Enable\nBit 2 - Periodic Interval 2 Enable\nBit 3 - Periodic Interval 3 Enable\nBit 3 - Periodic Interval 3 Enable\nBit 4 - Periodic Interval 4 Enable\nBit 4 - Periodic Interval 4 Enable\nBit 5 - Periodic Interval 5 Enable\nBit 5 - Periodic Interval 5 Enable\nBit 6 - Periodic Interval 6 Enable\nBit 6 - Periodic Interval 6 Enable\nBit 7 - Periodic Interval 7 Enable\nBit 7 - Periodic Interval 7 Enable\nBit 14 - Tamper Enable\nBit 14 - Tamper Enable\nField <code>ALARM0</code> reader - Alarm 0\nField <code>ALARM0</code> writer - Alarm 0\nField <code>ALARM1</code> reader - Alarm 1\nField <code>ALARM1</code> writer - Alarm 1\nMODE2 Interrupt Flag Status and Clear\nField <code>OVF</code> reader - Overflow\nField <code>OVF</code> writer - Overflow\nField <code>PER0</code> reader - Periodic Interval 0\nField <code>PER0</code> writer - Periodic Interval 0\nField <code>PER1</code> reader - Periodic Interval 1\nField <code>PER1</code> writer - Periodic Interval 1\nField <code>PER2</code> reader - Periodic Interval 2\nField <code>PER2</code> writer - Periodic Interval 2\nField <code>PER3</code> reader - Periodic Interval 3\nField <code>PER3</code> writer - Periodic Interval 3\nField <code>PER4</code> reader - Periodic Interval 4\nField <code>PER4</code> writer - Periodic Interval 4\nField <code>PER5</code> reader - Periodic Interval 5\nField <code>PER5</code> writer - Periodic Interval 5\nField <code>PER6</code> reader - Periodic Interval 6\nField <code>PER6</code> writer - Periodic Interval 6\nField <code>PER7</code> reader - Periodic Interval 7\nField <code>PER7</code> writer - Periodic Interval 7\nRegister <code>INTFLAG</code> reader\nField <code>TAMPER</code> reader - Tamper\nField <code>TAMPER</code> writer - Tamper\nRegister <code>INTFLAG</code> writer\nBit 8 - Alarm 0\nBit 8 - Alarm 0\nBit 9 - Alarm 1\nBit 9 - Alarm 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 15 - Overflow\nBit 15 - Overflow\nBit 0 - Periodic Interval 0\nBit 0 - Periodic Interval 0\nBit 1 - Periodic Interval 1\nBit 1 - Periodic Interval 1\nBit 2 - Periodic Interval 2\nBit 2 - Periodic Interval 2\nBit 3 - Periodic Interval 3\nBit 3 - Periodic Interval 3\nBit 4 - Periodic Interval 4\nBit 4 - Periodic Interval 4\nBit 5 - Periodic Interval 5\nBit 5 - Periodic Interval 5\nBit 6 - Periodic Interval 6\nBit 6 - Periodic Interval 6\nBit 7 - Periodic Interval 7\nBit 7 - Periodic Interval 7\nBit 14 - Tamper\nBit 14 - Tamper\n4: Match seconds, minutes, hours, and days only\n3: Match seconds, minutes, and hours only\nMODE2_ALARM Alarm n Mask\n5: Match seconds, minutes, hours, days, and months only\n2: Match seconds and minutes only\n0: Alarm Disabled\nRegister <code>MASK0</code> reader\nField <code>SEL</code> reader - Alarm Mask Selection\nField <code>SEL</code> writer - Alarm Mask Selection\nAlarm Mask Selection\n1: Match seconds only\nRegister <code>MASK0</code> writer\n6: Match seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, and days only\nReturns the argument unchanged.\nReturns the argument unchanged.\nMatch seconds, minutes, and hours only\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMatch seconds, minutes, hours, and days only\nMatch seconds, minutes, and hours only\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nMatch seconds only\nMatch seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nBits 0:2 - Alarm Mask Selection\nBits 0:2 - Alarm Mask Selection\nMatch seconds only\nGet enumerated values variant\nMatch seconds, minutes, hours, days, months, and years\n4: Match seconds, minutes, hours, and days only\n3: Match seconds, minutes, and hours only\nMODE2_ALARM Alarm n Mask\n5: Match seconds, minutes, hours, days, and months only\n2: Match seconds and minutes only\n0: Alarm Disabled\nRegister <code>MASK1</code> reader\nField <code>SEL</code> reader - Alarm Mask Selection\nField <code>SEL</code> writer - Alarm Mask Selection\nAlarm Mask Selection\n1: Match seconds only\nRegister <code>MASK1</code> writer\n6: Match seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, and days only\nReturns the argument unchanged.\nReturns the argument unchanged.\nMatch seconds, minutes, and hours only\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMatch seconds, minutes, hours, and days only\nMatch seconds, minutes, and hours only\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nMatch seconds only\nMatch seconds, minutes, hours, days, months, and years\nMatch seconds, minutes, hours, days, and months only\nMatch seconds and minutes only\nAlarm Disabled\nBits 0:2 - Alarm Mask Selection\nBits 0:2 - Alarm Mask Selection\nMatch seconds only\nGet enumerated values variant\nMatch seconds, minutes, hours, days, months, and years\nField <code>ALARM0</code> reader - ALARM 0 Register Busy\nField <code>ALARM1</code> reader - ALARM 1 Register Busy\nField <code>CLOCK</code> reader - CLOCK Register Busy\nField <code>CLOCKSYNC</code> reader - Clock Synchronization Enable Bit …\nField <code>ENABLE</code> reader - Enable Bit Busy\nField <code>FREQCORR</code> reader - FREQCORR Register Busy\nField <code>GP0</code> reader - General Purpose 0 Register Busy\nField <code>GP1</code> reader - General Purpose 1 Register Busy\nField <code>GP2</code> reader - General Purpose 2 Register Busy\nField <code>GP3</code> reader - General Purpose 3 Register Busy\nField <code>MASK0</code> reader - MASK 0 Register Busy\nField <code>MASK1</code> reader - MASK 1 Register Busy\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Bit Busy\nMODE2 Synchronization Busy Status\nBit 5 - ALARM 0 Register Busy\nBit 6 - ALARM 1 Register Busy\nBit 3 - CLOCK Register Busy\nBit 15 - Clock Synchronization Enable Bit Busy\nBit 1 - Enable Bit Busy\nBit 2 - FREQCORR Register Busy\nReturns the argument unchanged.\nBit 16 - General Purpose 0 Register Busy\nBit 17 - General Purpose 1 Register Busy\nBit 18 - General Purpose 2 Register Busy\nBit 19 - General Purpose 3 Register Busy\nCalls <code>U::from(self)</code>.\nBit 11 - MASK 0 Register Busy\nBit 12 - MASK 1 Register Busy\nBit 0 - Software Reset Bit Busy\n3: Compare IN0 to OUT\n3: Compare IN1 to OUT\n3: Compare IN2 to OUT\n3: Compare IN3 to OUT\n3: Compare IN4 to OUT\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\n2: Capture timestamp\nField <code>DEBNC0</code> reader - Debouncer Enable 0\nField <code>DEBNC0</code> writer - Debouncer Enable 0\nField <code>DEBNC1</code> reader - Debouncer Enable 1\nField <code>DEBNC1</code> writer - Debouncer Enable 1\nField <code>DEBNC2</code> reader - Debouncer Enable 2\nField <code>DEBNC2</code> writer - Debouncer Enable 2\nField <code>DEBNC3</code> reader - Debouncer Enable 3\nField <code>DEBNC3</code> writer - Debouncer Enable 3\nField <code>DEBNC4</code> reader - Debouncer Enable 4\nField <code>DEBNC4</code> writer - Debouncer Enable 4\nField <code>IN0ACT</code> reader - Tamper Input 0 Action\nField <code>IN0ACT</code> writer - Tamper Input 0 Action\nTamper Input 0 Action\nField <code>IN1ACT</code> reader - Tamper Input 1 Action\nField <code>IN1ACT</code> writer - Tamper Input 1 Action\nTamper Input 1 Action\nField <code>IN2ACT</code> reader - Tamper Input 2 Action\nField <code>IN2ACT</code> writer - Tamper Input 2 Action\nTamper Input 2 Action\nField <code>IN3ACT</code> reader - Tamper Input 3 Action\nField <code>IN3ACT</code> writer - Tamper Input 3 Action\nTamper Input 3 Action\nField <code>IN4ACT</code> reader - Tamper Input 4 Action\nField <code>IN4ACT</code> writer - Tamper Input 4 Action\nTamper Input 4 Action\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\n0: Off (Disabled)\nRegister <code>TAMPCTRL</code> reader\nField <code>TAMLVL0</code> reader - Tamper Level Select 0\nField <code>TAMLVL0</code> writer - Tamper Level Select 0\nField <code>TAMLVL1</code> reader - Tamper Level Select 1\nField <code>TAMLVL1</code> writer - Tamper Level Select 1\nField <code>TAMLVL2</code> reader - Tamper Level Select 2\nField <code>TAMLVL2</code> writer - Tamper Level Select 2\nField <code>TAMLVL3</code> reader - Tamper Level Select 3\nField <code>TAMLVL3</code> writer - Tamper Level Select 3\nField <code>TAMLVL4</code> reader - Tamper Level Select 4\nField <code>TAMLVL4</code> writer - Tamper Level Select 4\nTamper Control\nRegister <code>TAMPCTRL</code> writer\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\n1: Wake without timestamp\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nBit 24 - Debouncer Enable 0\nBit 24 - Debouncer Enable 0\nBit 25 - Debouncer Enable 1\nBit 25 - Debouncer Enable 1\nBit 26 - Debouncer Enable 2\nBit 26 - Debouncer Enable 2\nBit 27 - Debouncer Enable 3\nBit 27 - Debouncer Enable 3\nBit 28 - Debouncer Enable 4\nBit 28 - Debouncer Enable 4\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 0:1 - Tamper Input 0 Action\nBits 0:1 - Tamper Input 0 Action\nBits 2:3 - Tamper Input 1 Action\nBits 2:3 - Tamper Input 1 Action\nBits 4:5 - Tamper Input 2 Action\nBits 4:5 - Tamper Input 2 Action\nBits 6:7 - Tamper Input 3 Action\nBits 6:7 - Tamper Input 3 Action\nBits 8:9 - Tamper Input 4 Action\nBits 8:9 - Tamper Input 4 Action\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompare IN0 to OUT\nCompare IN1 to OUT\nCompare IN2 to OUT\nCompare IN3 to OUT\nCompare IN4 to OUT\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nCapture timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nOff (Disabled)\nBit 16 - Tamper Level Select 0\nBit 16 - Tamper Level Select 0\nBit 17 - Tamper Level Select 1\nBit 17 - Tamper Level Select 1\nBit 18 - Tamper Level Select 2\nBit 18 - Tamper Level Select 2\nBit 19 - Tamper Level Select 3\nBit 19 - Tamper Level Select 3\nBit 20 - Tamper Level Select 4\nBit 20 - Tamper Level Select 4\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nWake without timestamp\nRegister <code>TAMPID</code> reader\nField <code>TAMPEVT</code> reader - Tamper Event Detected\nField <code>TAMPEVT</code> writer - Tamper Event Detected\nField <code>TAMPID0</code> reader - Tamper Input 0 Detected\nField <code>TAMPID0</code> writer - Tamper Input 0 Detected\nField <code>TAMPID1</code> reader - Tamper Input 1 Detected\nField <code>TAMPID1</code> writer - Tamper Input 1 Detected\nField <code>TAMPID2</code> reader - Tamper Input 2 Detected\nField <code>TAMPID2</code> writer - Tamper Input 2 Detected\nField <code>TAMPID3</code> reader - Tamper Input 3 Detected\nField <code>TAMPID3</code> writer - Tamper Input 3 Detected\nField <code>TAMPID4</code> reader - Tamper Input 4 Detected\nField <code>TAMPID4</code> writer - Tamper Input 4 Detected\nTamper ID\nRegister <code>TAMPID</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 31 - Tamper Event Detected\nBit 31 - Tamper Event Detected\nBit 0 - Tamper Input 0 Detected\nBit 0 - Tamper Input 0 Detected\nBit 1 - Tamper Input 1 Detected\nBit 1 - Tamper Input 1 Detected\nBit 2 - Tamper Input 2 Detected\nBit 2 - Tamper Input 2 Detected\nBit 3 - Tamper Input 3 Detected\nBit 3 - Tamper Input 3 Detected\nBit 4 - Tamper Input 4 Detected\nBit 4 - Tamper Input 4 Detected\n0: AM when CLKREP in 12-hour\nField <code>DAY</code> reader - Day Timestamp Value\nField <code>HOUR</code> reader - Hour Timestamp Value\nHour Timestamp Value\nField <code>MINUTE</code> reader - Minute Timestamp Value\nField <code>MONTH</code> reader - Month Timestamp Value\n16: PM when CLKREP in 12-hour\nRegister <code>TIMESTAMP</code> reader\nField <code>SECOND</code> reader - Second Timestamp Value")