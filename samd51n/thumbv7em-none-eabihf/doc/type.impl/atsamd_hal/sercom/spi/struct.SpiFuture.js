(function() {
    var type_impls = Object.fromEntries([["atsamd_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CSpi%3CC,+A,+R,+T%3E%3E-for-SpiFuture%3CC,+A,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#299-308\">Source</a><a href=\"#impl-AsMut%3CSpi%3CC,+A,+R,+T%3E%3E-for-SpiFuture%3CC,+A,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A, R, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A, R, T&gt;&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, A, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#305-307\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A, R, T&gt;</h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<Spi<C, A, R, T>>","atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CSpi%3CC,+A,+R,+T%3E%3E-for-SpiFuture%3CC,+A,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#288-297\">Source</a><a href=\"#impl-AsRef%3CSpi%3CC,+A,+R,+T%3E%3E-for-SpiFuture%3CC,+A,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A, R, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A, R, T&gt;&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, A, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#294-296\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A, R, T&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<Spi<C, A, R, T>>","atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-SpiFuture%3CC,+A,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#310-316\">Source</a><a href=\"#impl-ErrorType-for-SpiFuture%3CC,+A,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A, R, T&gt; <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, A, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#315\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type.</div></details></div></details>","ErrorType","atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-SpiFuture%3CC,+A,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#318-324\">Source</a><a href=\"#impl-ErrorType-for-SpiFuture%3CC,+A,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A, R, T&gt; <a class=\"trait\" href=\"embedded_io/trait.ErrorType.html\" title=\"trait embedded_io::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, A, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#323\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type of all the IO operations on this type.</div></details></div></details>","ErrorType","atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Format-for-SpiFuture%3CC,+A,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#100-108\">Source</a><a href=\"#impl-Format-for-SpiFuture%3CC,+A,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A, R, T&gt; <a class=\"trait\" href=\"defmt/traits/trait.Format.html\" title=\"trait defmt::traits::Format\">Format</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, A, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.format\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#105-107\">Source</a><a href=\"#method.format\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"defmt/traits/trait.Format.html#tymethod.format\" class=\"fn\">format</a>(&amp;self, f: <a class=\"struct\" href=\"defmt/formatter/struct.Formatter.html\" title=\"struct defmt::formatter::Formatter\">Formatter</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Writes the defmt representation of <code>self</code> to <code>fmt</code>.</div></details></div></details>","Format","atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-SpiFuture%3CConfig%3CP,+M,+Z%3E,+D,+NoneT,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#393-406\">Source</a><a href=\"#impl-Read-for-SpiFuture%3CConfig%3CP,+M,+Z%3E,+D,+NoneT,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, Z, D, T, S&gt; <a class=\"trait\" href=\"embedded_io_async/trait.Read.html\" title=\"trait embedded_io_async::Read\">Read</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;, D, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    Z: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a>&lt;Word = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>&gt; + 'static,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3><div class=\"docblock\"><p><a href=\"embedded_io/trait.Read.html\" title=\"trait embedded_io::Read\"><code>embedded_io::Read</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\"><code>SpiFuture</code></a>s in\n<a href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\"><code>MasterMode</code></a>.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#402-405\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read some bytes from this source into the specified buffer, returning how many bytes were read. <a href=\"embedded_io_async/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_io_async/lib.rs.html#59\">Source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(\n    &amp;mut self,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"embedded_io/enum.ReadExactError.html\" title=\"enum embedded_io::ReadExactError\">ReadExactError</a>&lt;Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Read the exact number of bytes required to fill <code>buf</code>. <a href=\"embedded_io_async/trait.Read.html#method.read_exact\">Read more</a></div></details></div></details>","Read","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-SpiFuture%3CConfig%3CP,+M,+Z%3E,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#420-435\">Source</a><a href=\"#impl-Read-for-SpiFuture%3CConfig%3CP,+M,+Z%3E,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, Z, D, R, T, S&gt; <a class=\"trait\" href=\"embedded_io_async/trait.Read.html\" title=\"trait embedded_io_async::Read\">Read</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;, D, R, T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    Z: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a>&lt;Word = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>&gt; + 'static,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3><div class=\"docblock\"><p><a href=\"embedded_io/trait.Read.html\" title=\"trait embedded_io::Read\"><code>embedded_io::Read</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\"><code>SpiFuture</code></a>s in\n<a href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\"><code>MasterMode</code></a>, using DMA transfers.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#431-434\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read some bytes from this source into the specified buffer, returning how many bytes were read. <a href=\"embedded_io_async/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_io_async/lib.rs.html#59\">Source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(\n    &amp;mut self,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"embedded_io/enum.ReadExactError.html\" title=\"enum embedded_io::ReadExactError\">ReadExactError</a>&lt;Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Read the exact number of bytes required to fill <code>buf</code>. <a href=\"embedded_io_async/trait.Read.html#method.read_exact\">Read more</a></div></details></div></details>","Read","atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-SpiFuture%3CConfig%3CP,+Slave,+Z%3E,+D,+NoneT,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#410-430\">Source</a><a href=\"#impl-Read-for-SpiFuture%3CConfig%3CP,+Slave,+Z%3E,+D,+NoneT,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, Z, D, T, S&gt; <a class=\"trait\" href=\"embedded_io_async/trait.Read.html\" title=\"trait embedded_io_async::Read\">Read</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>, Z&gt;, D, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    Z: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a>&lt;Word = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>&gt; + 'static,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>, Z&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3><div class=\"docblock\"><p><a href=\"embedded_io/trait.Read.html\" title=\"trait embedded_io::Read\"><code>embedded_io::Read</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\"><code>SpiFuture</code></a>s in\n<a href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\"><code>Slave</code></a> mode.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#418-429\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read some bytes from this source into the specified buffer, returning how many bytes were read. <a href=\"embedded_io_async/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_io_async/lib.rs.html#59\">Source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(\n    &amp;mut self,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"embedded_io/enum.ReadExactError.html\" title=\"enum embedded_io::ReadExactError\">ReadExactError</a>&lt;Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Read the exact number of bytes required to fill <code>buf</code>. <a href=\"embedded_io_async/trait.Read.html#method.read_exact\">Read more</a></div></details></div></details>","Read","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-SpiFuture%3CConfig%3CP,+Slave,+Z%3E,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#439-469\">Source</a><a href=\"#impl-Read-for-SpiFuture%3CConfig%3CP,+Slave,+Z%3E,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, Z, D, R, T, S&gt; <a class=\"trait\" href=\"embedded_io_async/trait.Read.html\" title=\"trait embedded_io_async::Read\">Read</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>, Z&gt;, D, R, T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    Z: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a>&lt;Word = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>&gt; + 'static,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>, Z&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3><div class=\"docblock\"><p><a href=\"embedded_io/trait.Read.html\" title=\"trait embedded_io::Read\"><code>embedded_io::Read</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\"><code>SpiFuture</code></a>s in\n<a href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\"><code>Slave</code></a> mode, using DMA transfers.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#448-468\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read some bytes from this source into the specified buffer, returning how many bytes were read. <a href=\"embedded_io_async/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_io_async/lib.rs.html#59\">Source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(\n    &amp;mut self,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"embedded_io/enum.ReadExactError.html\" title=\"enum embedded_io::ReadExactError\">ReadExactError</a>&lt;Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Read the exact number of bytes required to fill <code>buf</code>. <a href=\"embedded_io_async/trait.Read.html#method.read_exact\">Read more</a></div></details></div></details>","Read","atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiBus%3C%3CC+as+Length%3E::Word%3E-for-SpiFuture%3CConfig%3CP,+M,+C%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#326-367\">Source</a><a href=\"#impl-SpiBus%3C%3CC+as+Length%3E::Word%3E-for-SpiFuture%3CConfig%3CP,+M,+C%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, C, S&gt; <a class=\"trait\" href=\"embedded_hal_async/spi/trait.SpiBus.html\" title=\"trait embedded_hal_async::spi::SpiBus\">SpiBus</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a> + 'static,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#336-338\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, words: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read <code>words</code> from the slave. <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#340-342\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write <code>words</code> to the slave, ignoring all the incoming words. <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#344-350\">Source</a><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.transfer\" class=\"fn\">transfer</a>(\n    &amp;mut self,\n    read: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>],\n    write: &amp;[C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write and read simultaneously. <code>write</code> is written to the slave on MOSI and\nwords received on MISO are stored in <code>read</code>. <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.transfer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#352-360\">Source</a><a href=\"#method.transfer_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.transfer_in_place\" class=\"fn\">transfer_in_place</a>(\n    &amp;mut self,\n    words: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write and read simultaneously. The contents of <code>words</code> are\nwritten to the slave, and the received words are stored into the same\n<code>words</code> buffer, overwriting it. <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.transfer_in_place\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#362-366\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Wait until all operations have completed and the bus is idle. <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.flush\">Read more</a></div></details></div></details>","SpiBus<<C as Length>::Word>","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiBus%3C%3CC+as+Length%3E::Word%3E-for-SpiFuture%3CConfig%3CP,+M,+C%3E,+Duplex,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#251-394\">Source</a><a href=\"#impl-SpiBus%3C%3CC+as+Length%3E::Word%3E-for-SpiFuture%3CConfig%3CP,+M,+C%3E,+Duplex,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, C, S, R, T&gt; <a class=\"trait\" href=\"embedded_hal_async/spi/trait.SpiBus.html\" title=\"trait embedded_hal_async::spi::SpiBus\">SpiBus</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>, R, T&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a> + 'static,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt; + <a class=\"trait\" href=\"atsamd_hal/dmac/transfer/trait.Beat.html\" title=\"trait atsamd_hal::dmac::transfer::Beat\">Beat</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3><div class=\"docblock\"><p><a href=\"embedded_hal_async/spi/trait.SpiBus.html\" title=\"trait embedded_hal_async::spi::SpiBus\"><code>SpiBus</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>, using DMA transfers.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#264-266\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, words: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read <code>words</code> from the slave. <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#269-272\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write <code>words</code> to the slave, ignoring all the incoming words. <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#275-370\">Source</a><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.transfer\" class=\"fn\">transfer</a>(\n    &amp;mut self,\n    read: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>],\n    write: &amp;[C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write and read simultaneously. <code>write</code> is written to the slave on MOSI and\nwords received on MISO are stored in <code>read</code>. <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.transfer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#373-386\">Source</a><a href=\"#method.transfer_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.transfer_in_place\" class=\"fn\">transfer_in_place</a>(\n    &amp;mut self,\n    words: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write and read simultaneously. The contents of <code>words</code> are\nwritten to the slave, and the received words are stored into the same\n<code>words</code> buffer, overwriting it. <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.transfer_in_place\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#389-393\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Wait until all operations have completed and the bus is idle. <a href=\"embedded_hal_async/spi/trait.SpiBus.html#tymethod.flush\">Read more</a></div></details></div></details>","SpiBus<<C as Length>::Word>","atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CC,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#162-171\">Source</a><a href=\"#impl-SpiFuture%3CC,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, D, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.free\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#168-170\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.free\" class=\"fn\">free</a>(self) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D&gt;</h4></section></summary><div class=\"docblock\"><p>Return the underlying <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CC,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#58-70\">Source</a><a href=\"#impl-SpiFuture%3CC,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D, R, T&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, D, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_rx_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#66-69\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.take_rx_channel\" class=\"fn\">take_rx_channel</a>(self) -&gt; (<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, D, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, T&gt;, R)</h4></section></summary><div class=\"docblock\"><p>Reclaim the Rx DMA channel. Any subsequent SPI transaction will not\nuse DMA.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CC,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#72-84\">Source</a><a href=\"#impl-SpiFuture%3CC,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D, R, T&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, D, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_tx_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#80-83\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.take_tx_channel\" class=\"fn\">take_tx_channel</a>(self) -&gt; (<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, D, R, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;, T)</h4></section></summary><div class=\"docblock\"><p>Reclaim the DMA channel. Any subsequent SPI transaction will not use\nDMA.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CC,+D,+RxDma,+TxDma%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#43-56\">Source</a><a href=\"#impl-SpiFuture%3CC,+D,+RxDma,+TxDma%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D, RxDma, TxDma&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, D, RxDma, TxDma&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,\n    RxDma: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,\n    TxDma: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_dma_channels\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#52-55\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.take_dma_channels\" class=\"fn\">take_dma_channels</a>(self) -&gt; (<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, D, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;, RxDma, TxDma)</h4></section></summary><div class=\"docblock\"><p>Reclaim the DMA channels. Any subsequent SPI transaction will not\nuse DMA.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CC,+Duplex,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#134-161\">Source</a><a href=\"#impl-SpiFuture%3CC,+Duplex,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, S, R, T&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt;,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_dma_channels\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#143-160\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.with_dma_channels\" class=\"fn\">with_dma_channels</a>&lt;ChanRx, ChanTx&gt;(\n    self,\n    rx_channel: ChanRx,\n    tx_channel: ChanTx,\n) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>, ChanRx, ChanTx&gt;<div class=\"where\">where\n    ChanRx: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,\n    ChanTx: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Add a DMA channel for receiving transactions</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CC,+Rx,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#86-108\">Source</a><a href=\"#impl-SpiFuture%3CC,+Rx,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, S, R&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>, R, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt;,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_rx_dma_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#95-107\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.with_rx_dma_channel\" class=\"fn\">with_rx_dma_channel</a>&lt;Chan: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;&gt;(\n    self,\n    rx_channel: Chan,\n) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>, Chan, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Add a DMA channel for receiving transactions</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::SpiFutureRx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CC,+Tx,+NoneT,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#110-132\">Source</a><a href=\"#impl-SpiFuture%3CC,+Tx,+NoneT,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, S, T&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt;,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_tx_dma_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#119-131\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.with_tx_dma_channel\" class=\"fn\">with_tx_dma_channel</a>&lt;Chan: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;&gt;(\n    self,\n    tx_channel: Chan,\n) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, Chan&gt;</h4></section></summary><div class=\"docblock\"><p>Add a DMA channel for receiving transactions</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CConfig%3CP,+M,+C%3E,+D,+NoneT,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#199-228\">Source</a><a href=\"#impl-SpiFuture%3CConfig%3CP,+M,+C%3E,+D,+NoneT,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, C, D, T, S&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;, D, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a> + 'static,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#216-227\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buffer: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Read words into a buffer asynchronously, word by word.</p>\n<p>Since we are using a <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a> <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\"><code>SpiFuture</code></a>, we need to send a word\nsimultaneously while receiving one. This <code>no-op</code> word is\nconfigurable via the <a href=\"Self::nop_word\"><code>nop_word</code></a> method.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CConfig%3CP,+M,+C%3E,+D,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#173-197\">Source</a><a href=\"#impl-SpiFuture%3CConfig%3CP,+M,+C%3E,+D,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, C, D, R, S&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;, D, R, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a> + 'static,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Transmit.html\" title=\"trait atsamd_hal::sercom::spi::Transmit\">Transmit</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#186-196\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Write words from a buffer asynchronously, word by word</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CConfig%3CP,+M,+C%3E,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#202-248\">Source</a><a href=\"#impl-SpiFuture%3CConfig%3CP,+M,+C%3E,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, S, C, D, R, T&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;, D, R, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a> + 'static,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt; + <a class=\"trait\" href=\"atsamd_hal/dmac/transfer/trait.Beat.html\" title=\"trait atsamd_hal::dmac::transfer::Beat\">Beat</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_dma_master\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#238-247\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.read_dma_master\" class=\"fn\">read_dma_master</a>(\n    &amp;mut self,\n    words: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Read words into a buffer asynchronously, using DMA.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CConfig%3CP,+M,+C%3E,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#230-286\">Source</a><a href=\"#impl-SpiFuture%3CConfig%3CP,+M,+C%3E,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, C, S, D, R, T&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;, D, R, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a> + 'static,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_word_in_place\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#242-252\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.transfer_word_in_place\" class=\"fn\">transfer_word_in_place</a>(\n    &amp;mut self,\n    to_send: C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Read and write a single word to the bus simultaneously.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiFuture%3CConfig%3CP,+M,+Z%3E,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#164-200\">Source</a><a href=\"#impl-SpiFuture%3CConfig%3CP,+M,+Z%3E,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, Z, D, R, T, S&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;, D, R, T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    Z: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a> + 'static,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Transmit.html\" title=\"trait atsamd_hal::sercom::spi::Transmit\">Transmit</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    Z::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt; + <a class=\"trait\" href=\"atsamd_hal/dmac/transfer/trait.Beat.html\" title=\"trait atsamd_hal::dmac::transfer::Beat\">Beat</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;Z::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_dma\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#178-199\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html#tymethod.write_dma\" class=\"fn\">write_dma</a>(&amp;mut self, words: &amp;[Z::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Write words from a buffer asynchronously, using DMA.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-SpiFuture%3CConfig%3CP,+M,+Z%3E,+D,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#371-389\">Source</a><a href=\"#impl-Write-for-SpiFuture%3CConfig%3CP,+M,+Z%3E,+D,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, Z, D, R, S&gt; <a class=\"trait\" href=\"embedded_io_async/trait.Write.html\" title=\"trait embedded_io_async::Write\">Write</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;, D, R, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    Z: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a>&lt;Word = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>&gt; + 'static,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Transmit.html\" title=\"trait atsamd_hal::sercom::spi::Transmit\">Transmit</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3><div class=\"docblock\"><p><a href=\"embedded_io/trait.Write.html\" title=\"trait embedded_io::Write\"><code>embedded_io::Write</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/trait.Transmit.html\" title=\"trait atsamd_hal::sercom::spi::Transmit\"><code>Transmit</code></a> <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\"><code>SpiFuture</code></a>s in\neither <a href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\"><code>Slave</code></a> or <a href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\"><code>MasterMode</code></a>.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#380-383\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write a buffer into this writer, returning how many bytes were written. <a href=\"embedded_io_async/trait.Write.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#385-388\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Write.html#method.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Flush this output stream, ensuring that all intermediately buffered contents reach their destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_io_async/lib.rs.html#134\">Source</a><a href=\"#method.write_all\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write an entire buffer into this writer. <a href=\"embedded_io_async/trait.Write.html#method.write_all\">Read more</a></div></details></div></details>","Write","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-SpiFuture%3CConfig%3CP,+M,+Z%3E,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#398-416\">Source</a><a href=\"#impl-Write-for-SpiFuture%3CConfig%3CP,+M,+Z%3E,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, Z, D, R, T, S&gt; <a class=\"trait\" href=\"embedded_io_async/trait.Write.html\" title=\"trait embedded_io_async::Write\">Write</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;, D, R, T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    Z: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a>&lt;Word = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>&gt; + 'static,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Transmit.html\" title=\"trait atsamd_hal::sercom::spi::Transmit\">Transmit</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3><div class=\"docblock\"><p><a href=\"embedded_io/trait.Write.html\" title=\"trait embedded_io::Write\"><code>embedded_io::Write</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/trait.Transmit.html\" title=\"trait atsamd_hal::sercom::spi::Transmit\"><code>Transmit</code></a> <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\"><code>SpiFuture</code></a>s in\neither <a href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\"><code>Slave</code></a> or <a href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\"><code>MasterMode</code></a>, using DMA transfers.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#408-410\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write a buffer into this writer, returning how many bytes were written. <a href=\"embedded_io_async/trait.Write.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/dma.rs.html#412-415\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Write.html#method.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Flush this output stream, ensuring that all intermediately buffered contents reach their destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_io_async/lib.rs.html#134\">Source</a><a href=\"#method.write_all\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_io_async/trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write an entire buffer into this writer. <a href=\"embedded_io_async/trait.Write.html#method.write_all\">Read more</a></div></details></div></details>","Write","atsamd_hal::sercom::spi::async_api::dma::SpiFutureDuplexDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureRxDma","atsamd_hal::sercom::spi::async_api::dma::SpiFutureTxDma","atsamd_hal::sercom::spi::async_api::SpiFutureDuplex","atsamd_hal::sercom::spi::async_api::SpiFutureRx","atsamd_hal::sercom::spi::async_api::SpiFutureTx"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[109766]}