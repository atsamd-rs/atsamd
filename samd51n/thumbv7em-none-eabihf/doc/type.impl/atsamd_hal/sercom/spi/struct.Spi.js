(function() {
    var type_impls = Object.fromEntries([["atsamd_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AnySpi-for-Spi%3CC,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1829-1841\">Source</a><a href=\"#impl-AnySpi-for-Spi%3CC,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A&gt; <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnySpi.html\" title=\"trait atsamd_hal::sercom::spi::AnySpi\">AnySpi</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Sercom\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1834\">Source</a><a href=\"#associatedtype.Sercom\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/sercom/spi/trait.AnySpi.html#associatedtype.Sercom\" class=\"associatedtype\">Sercom</a> = &lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Sercom\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Sercom\">Sercom</a></h4></section><section id=\"associatedtype.Pads\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1835\">Source</a><a href=\"#associatedtype.Pads\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/sercom/spi/trait.AnySpi.html#associatedtype.Pads\" class=\"associatedtype\">Pads</a> = &lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Pads\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Pads\">Pads</a></h4></section><section id=\"associatedtype.Capability\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1836\">Source</a><a href=\"#associatedtype.Capability\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/sercom/spi/trait.AnySpi.html#associatedtype.Capability\" class=\"associatedtype\">Capability</a> = A</h4></section><section id=\"associatedtype.OpMode\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1837\">Source</a><a href=\"#associatedtype.OpMode\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/sercom/spi/trait.AnySpi.html#associatedtype.OpMode\" class=\"associatedtype\">OpMode</a> = &lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.OpMode\" title=\"type atsamd_hal::sercom::spi::AnyConfig::OpMode\">OpMode</a></h4></section><section id=\"associatedtype.Size\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1838\">Source</a><a href=\"#associatedtype.Size\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/sercom/spi/trait.AnySpi.html#associatedtype.Size\" class=\"associatedtype\">Size</a> = &lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Size\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Size\">Size</a></h4></section><section id=\"associatedtype.Word\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1839\">Source</a><a href=\"#associatedtype.Word\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/sercom/spi/trait.AnySpi.html#associatedtype.Word\" class=\"associatedtype\">Word</a> = &lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a></h4></section><section id=\"associatedtype.Config\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1840\">Source</a><a href=\"#associatedtype.Config\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/sercom/spi/trait.AnySpi.html#associatedtype.Config\" class=\"associatedtype\">Config</a> = C</h4></section></div></details>","AnySpi","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CSpi%3CC,+A%3E%3E-for-Spi%3CC,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1811-1820\">Source</a><a href=\"#impl-AsMut%3CSpi%3CC,+A%3E%3E-for-Spi%3CC,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A&gt;&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1817-1819\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut Self</h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<Spi<C, A>>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CConfig%3C%3CC+as+AnyConfig%3E::Pads,+%3CC+as+AnyConfig%3E::OpMode,+%3CC+as+AnyConfig%3E::Size%3E%3E-for-Spi%3CC,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1343-1352\">Source</a><a href=\"#impl-AsRef%3CConfig%3C%3CC+as+AnyConfig%3E::Pads,+%3CC+as+AnyConfig%3E::OpMode,+%3CC+as+AnyConfig%3E::Size%3E%3E-for-Spi%3CC,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Pads\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Pads\">Pads</a>, &lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.OpMode\" title=\"type atsamd_hal::sercom::spi::AnyConfig::OpMode\">OpMode</a>, &lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Size\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Size\">Size</a>&gt;&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3><div class=\"docblock\"><p>Get a shared reference to the underlying <a href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\"><code>Config</code></a> struct</p>\n</div></section></summary><div class=\"docblock\"><p>This can be used to call the various <code>get_*</code> functions on <code>Config</code></p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1349-1351\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.SpecificConfig.html\" title=\"type atsamd_hal::sercom::spi::SpecificConfig\">SpecificConfig</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<Config<<C as AnyConfig>::Pads, <C as AnyConfig>::OpMode, <C as AnyConfig>::Size>>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CSpi%3CC,+A%3E%3E-for-Spi%3CC,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1800-1809\">Source</a><a href=\"#impl-AsRef%3CSpi%3CC,+A%3E%3E-for-Spi%3CC,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A&gt;&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1806-1808\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;Self</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<Spi<C, A>>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Spi%3CC,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#30-36\">Source</a><a href=\"#impl-ErrorType-for-Spi%3CC,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D, R, T&gt; <a class=\"trait\" href=\"embedded_hal/spi/trait.ErrorType.html\" title=\"trait embedded_hal::spi::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#35\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type.</div></details></div></details>","ErrorType","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Spi%3CC,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#44-50\">Source</a><a href=\"#impl-ErrorType-for-Spi%3CC,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D, R, T&gt; <a class=\"trait\" href=\"embedded_io/trait.ErrorType.html\" title=\"trait embedded_io::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#49\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type of all the IO operations on this type.</div></details></div></details>","ErrorType","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-Spi%3CC,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#64-70\">Source</a><a href=\"#impl-ErrorType-for-Spi%3CC,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D, R, T&gt; <a class=\"trait\" href=\"embedded_hal_nb/serial/trait.ErrorType.html\" title=\"trait embedded_hal_nb::serial::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#69\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal_nb/serial/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPanicOnRead%3CSpi%3CC,+Tx,+R,+T%3E%3E%3E-for-Spi%3CC,+Tx,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1703-1707\">Source</a><a href=\"#impl-From%3CPanicOnRead%3CSpi%3CC,+Tx,+R,+T%3E%3E%3E-for-Spi%3CC,+Tx,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>, R, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.PanicOnRead.html\" title=\"struct atsamd_hal::sercom::spi::PanicOnRead\">PanicOnRead</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>, R, T&gt;&gt;&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>, R, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1704-1706\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.PanicOnRead.html\" title=\"struct atsamd_hal::sercom::spi::PanicOnRead\">PanicOnRead</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>, R, T&gt;&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PanicOnRead<Spi<C, Tx, R, T>>>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPanicOnWrite%3CSpi%3CC,+Rx,+R,+T%3E%3E%3E-for-Spi%3CC,+Rx,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1668-1672\">Source</a><a href=\"#impl-From%3CPanicOnWrite%3CSpi%3CC,+Rx,+R,+T%3E%3E%3E-for-Spi%3CC,+Rx,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>, R, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.PanicOnWrite.html\" title=\"struct atsamd_hal::sercom::spi::PanicOnWrite\">PanicOnWrite</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>, R, T&gt;&gt;&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>, R, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1669-1671\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.87.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.PanicOnWrite.html\" title=\"struct atsamd_hal::sercom::spi::PanicOnWrite\">PanicOnWrite</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>, R, T&gt;&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<PanicOnWrite<Spi<C, Rx, R, T>>>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FullDuplex%3C%3CC+as+AnyConfig%3E::Word%3E-for-Spi%3CC,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#304-331\">Source</a><a href=\"#impl-FullDuplex%3C%3CC+as+AnyConfig%3E::Word%3E-for-Spi%3CC,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"embedded_hal_nb/spi/trait.FullDuplex.html\" title=\"trait embedded_hal_nb::spi::FullDuplex\">FullDuplex</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Size\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Size\">Size</a>: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\">AtomicSize</a>,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt;,</div></h3><div class=\"docblock\"><p><code>spi::FullDuplex</code> is only implemented when the <code>Spi</code> struct has <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a>\n<a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and the transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> is <code>&lt;= 4</code> bytes. When the\n<a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> is <code>&lt;= 4</code>, the <a href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\"><code>Word</code></a> is a primitive integer, with a size that\ndepends on the <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> (<code>u8</code>, <code>u16</code> or <code>u32</code>).</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#312-319\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal_nb/spi/trait.FullDuplex.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads the word stored in the shift register <a href=\"embedded_hal_nb/spi/trait.FullDuplex.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#322-330\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal_nb/spi/trait.FullDuplex.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, word: C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a word to the slave</div></details></div></details>","FullDuplex<<C as AnyConfig>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read%3C%3CL+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+L%3E,+Rx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#122-145\">Source</a><a href=\"#impl-Read%3C%3CL+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+L%3E,+Rx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, L&gt; <a class=\"trait\" href=\"embedded_hal_nb/serial/trait.Read.html\" title=\"trait embedded_hal_nb::serial::Read\">Read</a>&lt;&lt;L as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, L&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, L&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    L: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>,\n    L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,</div></h3><div class=\"docblock\"><p>Implement <a href=\"embedded_hal_nb/serial/trait.Read.html\" title=\"trait embedded_hal_nb::serial::Read\"><code>ehal_nb::serial::Read</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\"><code>Rx</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs in a\n<a href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\"><code>MasterMode</code></a></p>\n</div></section></summary><div class=\"docblock\"><p><code>serial::Read</code> is only implemented for <code>Spi</code> structs with <code>Rx</code>\n<a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a>. In a <code>MasterMode</code>, <code>Read</code> has to initiate transactions, so\nit keeps track of the transaction state. If a transaction is in progress, it\nwill wait on <code>RXC</code>. If not, it will wait on <code>DRE</code>, and then send <code>0</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#131-144\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal_nb/serial/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal_nb/serial/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal_nb::serial::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads a single word from the serial interface</div></details></div></details>","Read<<L as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read%3C%3CL+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+Slave,+L%3E,+Rx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#179-196\">Source</a><a href=\"#impl-Read%3C%3CL+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+Slave,+L%3E,+Rx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, L&gt; <a class=\"trait\" href=\"embedded_hal_nb/serial/trait.Read.html\" title=\"trait embedded_hal_nb::serial::Read\">Read</a>&lt;&lt;L as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>, L&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>, L&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    L: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>,\n    L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,</div></h3><div class=\"docblock\"><p>Implement <a href=\"embedded_hal_nb/serial/trait.Read.html\" title=\"trait embedded_hal_nb::serial::Read\"><code>serial::Read</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\"><code>Rx</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs in <a href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\"><code>Slave</code></a>\n<a href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\"><code>OpMode</code></a></p>\n</div></section></summary><div class=\"docblock\"><p><code>serial::Read</code> is only implemented for <code>Spi</code> structs with <code>Rx</code>\n<a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a>. In <code>Slave</code> <code>OpMode</code>, <code>Read</code> does not have to initiate\ntransactions, so it does not have to store any internal state. It only has\nto wait on <code>RXC</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#188-195\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal_nb/serial/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads a single word from the serial interface</div></details></div></details>","Read<<L as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-Spi%3CConfig%3CP,+M,+Z%3E,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#316-331\">Source</a><a href=\"#impl-Read-for-Spi%3CConfig%3CP,+M,+Z%3E,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, Z, D, R, T, S&gt; <a class=\"trait\" href=\"embedded_io/trait.Read.html\" title=\"trait embedded_io::Read\">Read</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;, D, R, T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    Z: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a>&lt;Word = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>&gt; + 'static,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,</div></h3><div class=\"docblock\"><p><a href=\"embedded_io/trait.Read.html\" title=\"trait embedded_io::Read\"><code>embedded_io::Read</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>s in\n<a href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\"><code>MasterMode</code></a>, using DMA transfers.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#327-330\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_io/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read some bytes from this source into the specified buffer, returning how many bytes were read. <a href=\"embedded_io/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_io/lib.rs.html#326\">Source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_io/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(\n    &amp;mut self,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"embedded_io/enum.ReadExactError.html\" title=\"enum embedded_io::ReadExactError\">ReadExactError</a>&lt;Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Read the exact number of bytes required to fill <code>buf</code>. <a href=\"embedded_io/trait.Read.html#method.read_exact\">Read more</a></div></details></div></details>","Read","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Read-for-Spi%3CConfig%3CP,+Slave,+Z%3E,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#335-374\">Source</a><a href=\"#impl-Read-for-Spi%3CConfig%3CP,+Slave,+Z%3E,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, Z, D, R, T, S&gt; <a class=\"trait\" href=\"embedded_io/trait.Read.html\" title=\"trait embedded_io::Read\">Read</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>, Z&gt;, D, R, T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    Z: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a>&lt;Word = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>&gt; + 'static,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>, Z&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,</div></h3><div class=\"docblock\"><p><a href=\"embedded_io/trait.Read.html\" title=\"trait embedded_io::Read\"><code>embedded_io::Read</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>s in <a href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\"><code>Slave</code></a>\nmode, using DMA transfers.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#344-373\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_io/trait.Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read some bytes from this source into the specified buffer, returning how many bytes were read. <a href=\"embedded_io/trait.Read.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_exact\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_io/lib.rs.html#326\">Source</a><a href=\"#method.read_exact\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_io/trait.Read.html#method.read_exact\" class=\"fn\">read_exact</a>(\n    &amp;mut self,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"embedded_io/enum.ReadExactError.html\" title=\"enum embedded_io::ReadExactError\">ReadExactError</a>&lt;Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Read the exact number of bytes required to fill <code>buf</code>. <a href=\"embedded_io/trait.Read.html#method.read_exact\">Read more</a></div></details></div></details>","Read","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spi%3CC,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#62-85\">Source</a><a href=\"#impl-Spi%3CC,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A, S&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_future\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/async_api/mod.rs.html#74-84\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.into_future\" class=\"fn\">into_future</a>&lt;I&gt;(self, _interrupts: I) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\">SpiFuture</a>&lt;C, A&gt;<div class=\"where\">where\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt;,\n    I: <a class=\"trait\" href=\"atsamd_hal/async_hal/interrupts/trait.Binding.html\" title=\"trait atsamd_hal::async_hal::interrupts::Binding\">Binding</a>&lt;S::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/trait.Sercom.html#associatedtype.Interrupt\" title=\"type atsamd_hal::sercom::Sercom::Interrupt\">Interrupt</a>, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.InterruptHandler.html\" title=\"struct atsamd_hal::sercom::spi::InterruptHandler\">InterruptHandler</a>&lt;S&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Turn an <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> into a <a href=\"atsamd_hal/sercom/spi/struct.SpiFuture.html\" title=\"struct atsamd_hal::sercom::spi::SpiFuture\"><code>SpiFuture</code></a>.</p>\n<p>In cases where the underlying <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> is <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a>, reading words need\nto be accompanied with sending a no-op word. By default it is set to\n0x00, but you can configure it using <a href=\"atsamd_hal/sercom/spi/struct.Config.html#method.set_nop_word\" title=\"method atsamd_hal::sercom::spi::Config::set_nop_word\"><code>Config::set_nop_word</code></a>.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spi%3CC,+A,+RxDma,+TxDma%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1354-1500\">Source</a><a href=\"#impl-Spi%3CC,+A,+RxDma,+TxDma%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, A, RxDma, TxDma&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, A, RxDma, TxDma&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.length\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1368-1378\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.length\" class=\"fn\">length</a>&lt;L: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Pads\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Pads\">Pads</a>, C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.OpMode\" title=\"type atsamd_hal::sercom::spi::AnyConfig::OpMode\">OpMode</a>, L&gt;, A, RxDma, TxDma&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Pads\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Pads\">Pads</a>, C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.OpMode\" title=\"type atsamd_hal::sercom::spi::AnyConfig::OpMode\">OpMode</a>, L&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,</div></h4></section></summary><div class=\"docblock\"><p>Change the transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a></p>\n<p>Changing the transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> while is enabled is permissible but\ndangerous. If you have sent or received <em>any</em> bytes at the current\n<a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a>, you <strong>must</strong> wait for a TXC flag before changing to a new\n<a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reconfigure\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1386-1390\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.reconfigure\" class=\"fn\">reconfigure</a>(&amp;mut self, update: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.SpecificConfig.html\" title=\"type atsamd_hal::sercom::spi::SpecificConfig\">SpecificConfig</a>&lt;C&gt;))</h4></section></summary><div class=\"docblock\"><p>Update the SPI configuration.</p>\n<p>Calling this method will temporarily disable the SERCOM peripheral, as\nsome registers are enable-protected. This may interrupt any ongoing\ntransactions.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.enable_interrupts\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1394-1396\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.enable_interrupts\" class=\"fn\">enable_interrupts</a>(&amp;mut self, flags: <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Flags.html\" title=\"struct atsamd_hal::sercom::spi::Flags\">Flags</a>)</h4></section></summary><div class=\"docblock\"><p>Enable interrupts for the specified flags</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.disable_interrupts\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1400-1402\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.disable_interrupts\" class=\"fn\">disable_interrupts</a>(&amp;mut self, flags: <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Flags.html\" title=\"struct atsamd_hal::sercom::spi::Flags\">Flags</a>)</h4></section></summary><div class=\"docblock\"><p>Disable interrupts for the specified flags</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_flags\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1406-1408\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.read_flags\" class=\"fn\">read_flags</a>(&amp;self) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Flags.html\" title=\"struct atsamd_hal::sercom::spi::Flags\">Flags</a></h4></section></summary><div class=\"docblock\"><p>Read the interrupt flags</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_flags\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1420-1422\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.clear_flags\" class=\"fn\">clear_flags</a>(&amp;mut self, flags: <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Flags.html\" title=\"struct atsamd_hal::sercom::spi::Flags\">Flags</a>)</h4></section></summary><div class=\"docblock\"><p>Clear the corresponding interrupt flags</p>\n<p>Only the ERROR, SSL and TXC flags can be cleared.</p>\n<p><strong>Note:</strong> Implementations of <code>flush</code> methods (eg <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.flush\" title=\"method embedded_hal::spi::SpiBus::flush\"><code>SpiBus::flush</code></a>) wait\non and clear the <code>TXC</code> flag. Manually clearing this flag could cause\nthem to hang indefinitely.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_status\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1426-1428\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.read_status\" class=\"fn\">read_status</a>(&amp;self) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Status.html\" title=\"struct atsamd_hal::sercom::spi::Status\">Status</a></h4></section></summary><div class=\"docblock\"><p>Read the error status flags</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_status\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1432-1434\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.clear_status\" class=\"fn\">clear_status</a>(&amp;mut self, status: <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Status.html\" title=\"struct atsamd_hal::sercom::spi::Status\">Status</a>)</h4></section></summary><div class=\"docblock\"><p>Clear the corresponding error status flags</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_flags_errors\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1438-1440\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.read_flags_errors\" class=\"fn\">read_flags_errors</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Flags.html\" title=\"struct atsamd_hal::sercom::spi::Flags\">Flags</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Try to read the interrupt flags, but first check the error status flags.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_data\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1450-1452\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.read_data\" class=\"fn\">read_data</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a></h4></section></summary><div class=\"docblock\"><p>Read from the DATA register</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Reading from the data register directly is <code>unsafe</code>, because it will\nclear the RXC flag, which could break assumptions made elsewhere in\nthis module.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_data\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1462-1464\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.write_data\" class=\"fn\">write_data</a>(&amp;mut self, data: <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>)</h4></section></summary><div class=\"docblock\"><p>Write to the DATA register</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>Writing to the data register directly is <code>unsafe</code>, because it will clear\nthe DRE flag, which could break assumptions made elsewhere in this\nmodule.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.disable\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1468-1472\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.disable\" class=\"fn\">disable</a>(self) -&gt; C</h4></section></summary><div class=\"docblock\"><p>Disable the SPI peripheral and return the <a href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\"><code>Config</code></a> struct</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spi%3CC,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1502-1526\">Source</a><a href=\"#impl-Spi%3CC,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.OpMode\" title=\"type atsamd_hal::sercom::spi::AnyConfig::OpMode\">OpMode</a>: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_dma_channels\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1514-1525\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.with_dma_channels\" class=\"fn\">with_dma_channels</a>&lt;R, T&gt;(self, rx: R, tx: T) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Attach RX and TX DMA channels to this <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>. Its\n<a href=\"embedded_hal/spi/trait.SpiBus.html\" title=\"trait embedded_hal::spi::SpiBus\"><code>SpiBus</code></a> implementation will use DMA to\ncarry out its transactions. In Master mode, since even read SPI\ntransaction necessarily involve a write to shift data in, <a href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\"><code>Rx</code></a>-only\nmust take two DMA channels, just the same as if it were <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a>.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spi%3CC,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1598-1655\">Source</a><a href=\"#impl-Spi%3CC,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D, R, T&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D, R, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_dma_channels\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1605-1620\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.take_dma_channels\" class=\"fn\">take_dma_channels</a>(self) -&gt; (<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;, R, T)<div class=\"where\">where\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.ReadyChannel.html\" title=\"trait atsamd_hal::dmac::channel::ReadyChannel\">ReadyChannel</a>&gt;,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.ReadyChannel.html\" title=\"trait atsamd_hal::dmac::channel::ReadyChannel\">ReadyChannel</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Reclaim both RX and TX DMA channels. Any subsequent SPI transaction will\nnot use DMA.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_rx_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1624-1637\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.take_rx_channel\" class=\"fn\">take_rx_channel</a>(self) -&gt; (<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, T&gt;, R)<div class=\"where\">where\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.ReadyChannel.html\" title=\"trait atsamd_hal::dmac::channel::ReadyChannel\">ReadyChannel</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Reclaim the RX DMA channel. Any subsequent SPI RX transaction will not\nuse DMA.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_tx_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1641-1654\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.take_tx_channel\" class=\"fn\">take_tx_channel</a>(self) -&gt; (<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, D, R, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;, T)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.ReadyChannel.html\" title=\"trait atsamd_hal::dmac::channel::ReadyChannel\">ReadyChannel</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Reclaim the TX DMA channel. Any subsequent SPI TX transaction will not\nuse DMA.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spi%3CC,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1528-1549\">Source</a><a href=\"#impl-Spi%3CC,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;OpMode = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_dma_channels_slave\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1537-1548\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.with_dma_channels_slave\" class=\"fn\">with_dma_channels_slave</a>&lt;R, T&gt;(self, rx: R, tx: T) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Attach a DMA channel to this <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>. Its\n<a href=\"embedded_hal/spi/trait.SpiBus.html\" title=\"trait embedded_hal::spi::SpiBus\"><code>SpiBus</code></a> implementation will use DMA to\ncarry out its transactions. In Slave mode, a <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> needs\ntwo DMA channels.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spi%3CC,+Rx,+NoneT,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1552-1572\">Source</a><a href=\"#impl-Spi%3CC,+Rx,+NoneT,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;OpMode = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_rx_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1561-1571\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.with_rx_channel\" class=\"fn\">with_rx_channel</a>&lt;R&gt;(self, rx: R) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>, R, T&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Attach a DMA channel to this <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>. Its\n<a href=\"embedded_hal/spi/trait.SpiBus.html\" title=\"trait embedded_hal::spi::SpiBus\"><code>SpiBus</code></a> implementation will use DMA to\ncarry out its transactions. In Slave mode, a <a href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\"><code>Rx</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> only needs a\nsingle DMA channel.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spi%3CC,+Tx,+R%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1575-1595\">Source</a><a href=\"#impl-Spi%3CC,+Tx,+R%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, R&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>, R, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_tx_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1584-1594\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.with_tx_channel\" class=\"fn\">with_tx_channel</a>&lt;T&gt;(self, tx: T) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>, R, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Attach a DMA channel to this <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>. Its\n<a href=\"embedded_hal/spi/trait.SpiBus.html\" title=\"trait embedded_hal::spi::SpiBus\"><code>SpiBus</code></a> implementation will use DMA to\ncarry out its transactions. For <a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>s, only a single DMA\nchannel is necessary.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spi%3CC,+Tx,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1685-1690\">Source</a><a href=\"#impl-Spi%3CC,+Tx,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>, R, T&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>, R, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_panic_on_write\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1687-1689\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.into_panic_on_write\" class=\"fn\">into_panic_on_write</a>(self) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.PanicOnWrite.html\" title=\"struct atsamd_hal::sercom::spi::PanicOnWrite\">PanicOnWrite</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Turn a <a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> into a <a href=\"atsamd_hal/sercom/spi/struct.PanicOnWrite.html\" title=\"struct atsamd_hal::sercom::spi::PanicOnWrite\"><code>PanicOnWrite</code></a></p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spi%3CC,+Tx,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1721-1726\">Source</a><a href=\"#impl-Spi%3CC,+Tx,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>, R, T&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>, R, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_panic_on_read\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1723-1725\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.into_panic_on_read\" class=\"fn\">into_panic_on_read</a>(self) -&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.PanicOnRead.html\" title=\"struct atsamd_hal::sercom::spi::PanicOnRead\">PanicOnRead</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Turn a <a href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\"><code>Rx</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> into a <a href=\"atsamd_hal/sercom/spi/struct.PanicOnRead.html\" title=\"struct atsamd_hal::sercom::spi::PanicOnRead\"><code>PanicOnRead</code></a></p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spi%3CConfig%3CP,+M,+UTerm%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1729-1757\">Source</a><a href=\"#impl-Spi%3CConfig%3CP,+M,+UTerm%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, A&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\">DynLength</a>&gt;, A&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\">DynLength</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\">Capability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_dyn_length\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1740-1742\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.get_dyn_length\" class=\"fn\">get_dyn_length</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a></h4></section></summary><div class=\"docblock\"><p>Return the current transaction length</p>\n<p>Read the LENGTH register to determine the current transaction length</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_dyn_length\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi.rs.html#1754-1756\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/spi/struct.Spi.html#tymethod.set_dyn_length\" class=\"fn\">set_dyn_length</a>(&amp;mut self, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>)</h4></section></summary><div class=\"docblock\"><p>Set the transaction length</p>\n<p>Write the LENGTH register to set the transaction length. Panics if the\nlength is zero.</p>\n<p>Changing the transaction <code>LENGTH</code> while is enabled is permissible but\ndangerous. If you have sent or received <em>any</em> bytes at the current\n<code>LENGTH</code>, you <strong>must</strong> wait for a TXC flag before changing to a new\n<code>LENGTH</code>.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiBus%3C%3CC+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+C%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#175-214\">Source</a><a href=\"#impl-SpiBus%3C%3CC+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+C%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, C&gt; <a class=\"trait\" href=\"embedded_hal/spi/trait.SpiBus.html\" title=\"trait embedded_hal::spi::SpiBus\">SpiBus</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a> + 'static,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,</div></h3><div class=\"docblock\"><p><a href=\"embedded_hal/spi/trait.SpiBus.html\" title=\"trait embedded_hal::spi::SpiBus\"><code>SpiBus</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>, using word-by-word transfers.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#185-187\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, words: &amp;mut [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;C&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read <code>words</code> from the slave. <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#190-192\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;C&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write <code>words</code> to the slave, ignoring all the incoming words. <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#195-197\">Source</a><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.transfer\" class=\"fn\">transfer</a>(\n    &amp;mut self,\n    read: &amp;mut [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;C&gt;],\n    write: &amp;[<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;C&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write and read simultaneously. <code>write</code> is written to the slave on MOSI and\nwords received on MISO are stored in <code>read</code>. <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.transfer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#200-207\">Source</a><a href=\"#method.transfer_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.transfer_in_place\" class=\"fn\">transfer_in_place</a>(\n    &amp;mut self,\n    words: &amp;mut [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;C&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write and read simultaneously. The contents of <code>words</code> are\nwritten to the slave, and the received words are stored into the same\n<code>words</code> buffer, overwriting it. <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.transfer_in_place\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/mod.rs.html#210-213\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Wait until all operations have completed and the bus is idle. <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.flush\">Read more</a></div></details></div></details>","SpiBus<<C as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpiBus%3C%3CC+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+C%3E,+Duplex,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#143-290\">Source</a><a href=\"#impl-SpiBus%3C%3CC+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+C%3E,+Duplex,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, S, C, R, T&gt; <a class=\"trait\" href=\"embedded_hal/spi/trait.SpiBus.html\" title=\"trait embedded_hal::spi::SpiBus\">SpiBus</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>, R, T&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, C&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a> + 'static,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt; + <a class=\"trait\" href=\"atsamd_hal/dmac/transfer/trait.Beat.html\" title=\"trait atsamd_hal::dmac::transfer::Beat\">Beat</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,\n    R: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,</div></h3><div class=\"docblock\"><p><a href=\"embedded_hal/spi/trait.SpiBus.html\" title=\"trait embedded_hal::spi::SpiBus\"><code>SpiBus</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>, using DMA transfers.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#156-158\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self, words: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read <code>words</code> from the slave. <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#161-164\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write <code>words</code> to the slave, ignoring all the incoming words. <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#167-267\">Source</a><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.transfer\" class=\"fn\">transfer</a>(\n    &amp;mut self,\n    read: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>],\n    write: &amp;[C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write and read simultaneously. <code>write</code> is written to the slave on MOSI and\nwords received on MISO are stored in <code>read</code>. <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.transfer\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer_in_place\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#270-283\">Source</a><a href=\"#method.transfer_in_place\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.transfer_in_place\" class=\"fn\">transfer_in_place</a>(\n    &amp;mut self,\n    words: &amp;mut [C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/spi/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::spi::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write and read simultaneously. The contents of <code>words</code> are\nwritten to the slave, and the received words are stored into the same\n<code>words</code> buffer, overwriting it. <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.transfer_in_place\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#286-289\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Wait until all operations have completed and the bus is idle. <a href=\"embedded_hal/spi/trait.SpiBus.html#tymethod.flush\">Read more</a></div></details></div></details>","SpiBus<<C as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write%3C%3CC+as+AnyConfig%3E::Word%3E-for-Spi%3CC,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#229-259\">Source</a><a href=\"#impl-Write%3C%3CC+as+AnyConfig%3E::Word%3E-for-Spi%3CC,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"embedded_hal_nb/serial/trait.Write.html\" title=\"trait embedded_hal_nb::serial::Write\">Write</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Size\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Size\">Size</a>: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\">AtomicSize</a>,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,</div></h3><div class=\"docblock\"><p>Implement <a href=\"embedded_hal_nb/serial/trait.Write.html\" title=\"trait embedded_hal_nb::serial::Write\"><code>ehal_nb::serial::Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs</p>\n</div></section></summary><div class=\"docblock\"><p><code>serial::Write</code> is only implemented for <code>Spi</code> structs with <code>Tx</code>\n<a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a>. Because the <code>Capability</code> is <code>Tx</code>, this implementation never\nreads the DATA register and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#236-246\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal_nb/serial/trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, word: C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a single word to the serial interface.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#249-258\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal_nb/serial/trait.Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Ensures that none of the previously written words are still buffered.</div></details></div></details>","Write<<C as AnyConfig>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-Spi%3CConfig%3CP,+M,+Z%3E,+D,+R,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#294-312\">Source</a><a href=\"#impl-Write-for-Spi%3CConfig%3CP,+M,+Z%3E,+D,+R,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, Z, D, R, T, S&gt; <a class=\"trait\" href=\"embedded_io/trait.Write.html\" title=\"trait embedded_io::Write\">Write</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;, D, R, T&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    Z: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Size.html\" title=\"trait atsamd_hal::sercom::spi::Size\">Size</a>&lt;Word = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>&gt; + 'static,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, Z&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>&lt;Sercom = S&gt;,\n    D: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Transmit.html\" title=\"trait atsamd_hal::sercom::spi::Transmit\">Transmit</a>,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    T: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.Ready.html\" title=\"enum atsamd_hal::dmac::channel::Ready\">Ready</a>&gt;,</div></h3><div class=\"docblock\"><p><a href=\"embedded_io/trait.Write.html\" title=\"trait embedded_io::Write\"><code>embedded_io::Write</code></a> implementation for <a href=\"atsamd_hal/sercom/spi/trait.Transmit.html\" title=\"trait atsamd_hal::sercom::spi::Transmit\"><code>Transmit</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a>s in either\n<a href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\"><code>Slave</code></a> or <a href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\"><code>MasterMode</code></a>, using DMA transfers.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#304-306\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_io/trait.Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.usize.html\">usize</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write a buffer into this writer, returning how many bytes were written. <a href=\"embedded_io/trait.Write.html#tymethod.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/dma.rs.html#308-311\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_io/trait.Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Flush this output stream, blocking until all intermediately buffered contents reach their destination.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_all\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_io/lib.rs.html#394\">Source</a><a href=\"#method.write_all\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_io/trait.Write.html#method.write_all\" class=\"fn\">write_all</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write an entire buffer into this writer. <a href=\"embedded_io/trait.Write.html#method.write_all\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embedded_io/lib.rs.html#424\">Source</a><a href=\"#method.write_fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_io/trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(\n    &amp;mut self,\n    fmt: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.87.0/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"embedded_io/enum.WriteFmtError.html\" title=\"enum embedded_io::WriteFmtError\">WriteFmtError</a>&lt;Self::<a class=\"associatedtype\" href=\"embedded_io/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_io::ErrorType::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Write a formatted string into this writer, returning any error encountered. <a href=\"embedded_io/trait.Write.html#method.write_fmt\">Read more</a></div></details></div></details>","Write","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteIter%3C%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#impl-WriteIter%3C%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\">WriteIter</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\"><code>WriteIter</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs\nwith <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#method.write_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#tymethod.write_iter\" class=\"fn\">write_iter</a>&lt;WI&gt;(&amp;mut self, words: WI) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;<div class=\"where\">where\n    WI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","WriteIter<<UInt<UInt<UInt<UTerm, B1>, B0>, B0> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteIter%3C%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#impl-WriteIter%3C%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\">WriteIter</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\"><code>WriteIter</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs\nwith <a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n<p>Because the <code>Capability</code> is <code>Tx</code>, this implementation never\nreads the DATA register and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#method.write_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#tymethod.write_iter\" class=\"fn\">write_iter</a>&lt;WI&gt;(&amp;mut self, words: WI) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;<div class=\"where\">where\n    WI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","WriteIter<<UInt<UInt<UInt<UTerm, B1>, B0>, B0> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteIter%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#impl-WriteIter%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\">WriteIter</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\"><code>WriteIter</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs\nwith <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#method.write_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#tymethod.write_iter\" class=\"fn\">write_iter</a>&lt;WI&gt;(&amp;mut self, words: WI) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;<div class=\"where\">where\n    WI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","WriteIter<<UInt<UInt<UTerm, B1>, B0> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteIter%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#impl-WriteIter%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\">WriteIter</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\"><code>WriteIter</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs\nwith <a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n<p>Because the <code>Capability</code> is <code>Tx</code>, this implementation never\nreads the DATA register and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#method.write_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#tymethod.write_iter\" class=\"fn\">write_iter</a>&lt;WI&gt;(&amp;mut self, words: WI) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;<div class=\"where\">where\n    WI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","WriteIter<<UInt<UInt<UTerm, B1>, B0> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteIter%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#impl-WriteIter%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\">WriteIter</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\"><code>WriteIter</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs\nwith <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#method.write_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#tymethod.write_iter\" class=\"fn\">write_iter</a>&lt;WI&gt;(&amp;mut self, words: WI) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;<div class=\"where\">where\n    WI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","WriteIter<<UInt<UInt<UTerm, B1>, B1> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteIter%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#impl-WriteIter%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\">WriteIter</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\"><code>WriteIter</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs\nwith <a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n<p>Because the <code>Capability</code> is <code>Tx</code>, this implementation never\nreads the DATA register and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#method.write_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#tymethod.write_iter\" class=\"fn\">write_iter</a>&lt;WI&gt;(&amp;mut self, words: WI) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;<div class=\"where\">where\n    WI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","WriteIter<<UInt<UInt<UTerm, B1>, B1> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteIter%3C%3CUInt%3CUTerm,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#impl-WriteIter%3C%3CUInt%3CUTerm,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\">WriteIter</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\"><code>WriteIter</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs\nwith <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#method.write_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#tymethod.write_iter\" class=\"fn\">write_iter</a>&lt;WI&gt;(&amp;mut self, words: WI) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;<div class=\"where\">where\n    WI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","WriteIter<<UInt<UTerm, B1> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteIter%3C%3CUInt%3CUTerm,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M%3E,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#impl-WriteIter%3C%3CUInt%3CUTerm,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M%3E,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\">WriteIter</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html\" title=\"trait embedded_hal::blocking::spi::WriteIter\"><code>WriteIter</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs\nwith <a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n<p>Because the <code>Capability</code> is <code>Tx</code>, this implementation never\nreads the DATA register and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#786\">Source</a><a href=\"#method.write_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embedded_hal/blocking/spi/trait.WriteIter.html#tymethod.write_iter\" class=\"fn\">write_iter</a>&lt;WI&gt;(&amp;mut self, words: WI) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;<div class=\"where\">where\n    WI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.87.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;&gt;,</div></h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","WriteIter<<UInt<UTerm, B1> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Transfer%3C%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Transfer%3C%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, A&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\">Transfer</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,</div></h3><div class=\"docblock\"><p>Implement embedded_hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\"><code>Transfer</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs that\ncan <a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> and have an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> must be <code>&lt;= 4</code>. The transfer accepts\na slice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#tymethod.transfer\" class=\"fn\">transfer</a>&lt;'w&gt;(\n    &amp;mut self,\n    words: &amp;'w mut [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'w [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;], <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave. Returns the <code>words</code> received from the slave</div></details></div></details>","Transfer<<UInt<UInt<UInt<UTerm, B1>, B0>, B0> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Transfer%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Transfer%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, A&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\">Transfer</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,</div></h3><div class=\"docblock\"><p>Implement embedded_hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\"><code>Transfer</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs that\ncan <a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> and have an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> must be <code>&lt;= 4</code>. The transfer accepts\na slice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#tymethod.transfer\" class=\"fn\">transfer</a>&lt;'w&gt;(\n    &amp;mut self,\n    words: &amp;'w mut [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'w [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;], <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave. Returns the <code>words</code> received from the slave</div></details></div></details>","Transfer<<UInt<UInt<UTerm, B1>, B0> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Transfer%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Transfer%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, A&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\">Transfer</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,</div></h3><div class=\"docblock\"><p>Implement embedded_hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\"><code>Transfer</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs that\ncan <a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> and have an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> must be <code>&lt;= 4</code>. The transfer accepts\na slice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#tymethod.transfer\" class=\"fn\">transfer</a>&lt;'w&gt;(\n    &amp;mut self,\n    words: &amp;'w mut [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'w [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;], <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave. Returns the <code>words</code> received from the slave</div></details></div></details>","Transfer<<UInt<UInt<UTerm, B1>, B1> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Transfer%3C%3CUInt%3CUTerm,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Transfer%3C%3CUInt%3CUTerm,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, A&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\">Transfer</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,</div></h3><div class=\"docblock\"><p>Implement embedded_hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\"><code>Transfer</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs that\ncan <a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> and have an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> must be <code>&lt;= 4</code>. The transfer accepts\na slice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#426\">Source</a><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#tymethod.transfer\" class=\"fn\">transfer</a>&lt;'w&gt;(\n    &amp;mut self,\n    words: &amp;'w mut [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'w [<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;], <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave. Returns the <code>words</code> received from the slave</div></details></div></details>","Transfer<<UInt<UTerm, B1> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Transfer%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+L%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#436-452\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Transfer%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+L%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, L, A&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\">Transfer</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, L&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, L&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    L: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.GreaterThan4.html\" title=\"trait atsamd_hal::sercom::spi::size::GreaterThan4\">GreaterThan4</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\"><code>Transfer</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs that can\n<a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> and have long transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a>s</p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> must be <code>&gt; 4</code>. The transfer accepts a slice of\n<code>u8</code> with a length equal to the transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a>. If the slice length\nis incorrect, it will panic.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#444\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#447-451\">Source</a><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#tymethod.transfer\" class=\"fn\">transfer</a>&lt;'w&gt;(&amp;mut self, buf: &amp;'w mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'w [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>], <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave. Returns the <code>words</code> received from the slave</div></details></div></details>","Transfer<u8>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Transfer%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+UTerm%3E,+A%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#462-477\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Transfer%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+UTerm%3E,+A%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, A&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\">Transfer</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\">DynLength</a>&gt;, A&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\">DynLength</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    A: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\">Receive</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Transfer\"><code>Transfer</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs that can\n<a href=\"atsamd_hal/sercom/spi/trait.Receive.html\" title=\"trait atsamd_hal::sercom::spi::Receive\"><code>Receive</code></a> and have <a href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\"><code>DynLength</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transfer accepts a slice of <code>u8</code> with a length equal to the run-time\ndynamic transaction length. If the slice length does not match the result of\n<a href=\"atsamd_hal/sercom/spi/struct.Spi.html#method.get_dyn_length\" title=\"method atsamd_hal::sercom::spi::Spi::get_dyn_length\"><code>Spi::get_dyn_length</code></a>, it will panic.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#469\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transfer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#472-476\">Source</a><a href=\"#method.transfer\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Transfer.html#tymethod.transfer\" class=\"fn\">transfer</a>&lt;'w&gt;(&amp;mut self, buf: &amp;'w mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;'w [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>], <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave. Returns the <code>words</code> received from the slave</div></details></div></details>","Transfer<u8>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with\n<a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<<UInt<UInt<UInt<UTerm, B1>, B0>, B0> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with\n<a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n<p>Because the <code>Capability</code> is <code>Tx</code>, this implementation never\nreads the DATA register and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U4.html\" title=\"type atsamd_hal::sercom::spi::lengths::U4\">U4</a>&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<<UInt<UInt<UInt<UTerm, B1>, B0>, B0> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with\n<a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<<UInt<UInt<UTerm, B1>, B0> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with\n<a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n<p>Because the <code>Capability</code> is <code>Tx</code>, this implementation never\nreads the DATA register and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U2.html\" title=\"type atsamd_hal::sercom::spi::lengths::U2\">U2</a>&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<<UInt<UInt<UTerm, B1>, B0> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with\n<a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<<UInt<UInt<UTerm, B1>, B1> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with\n<a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n<p>Because the <code>Capability</code> is <code>Tx</code>, this implementation never\nreads the DATA register and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U3.html\" title=\"type atsamd_hal::sercom::spi::lengths::U3\">U3</a>&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<<UInt<UInt<UTerm, B1>, B1> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUTerm,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUTerm,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with\n<a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<<UInt<UTerm, B1> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUTerm,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M%3E,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3C%3CUInt%3CUTerm,+B1%3E+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M%3E,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;&lt;<a class=\"struct\" href=\"typenum/uint/struct.UInt.html\" title=\"struct typenum::uint::UInt\">UInt</a>&lt;<a class=\"struct\" href=\"typenum/uint/struct.UTerm.html\" title=\"struct typenum::uint::UTerm\">UTerm</a>, <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with\n<a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and an <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <code>Length</code> must be <code>&lt;= 4</code>. The transfer accepts a\nslice of primitive integers, depending on the <code>Length</code> (<code>u8</code>,\n<code>u16</code> or <code>u32</code>).</p>\n<p>Because the <code>Capability</code> is <code>Tx</code>, this implementation never\nreads the DATA register and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#569\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, words: &amp;[<a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\">Word</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/lengths/type.U1.html\" title=\"type atsamd_hal::sercom::spi::lengths::U1\">U1</a>&gt;]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<<UInt<UTerm, B1> as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+L%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#579-596\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+L%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, L&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, L&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, L&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    L: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.GreaterThan4.html\" title=\"trait atsamd_hal::sercom::spi::size::GreaterThan4\">GreaterThan4</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a>\n<a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and long transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a>s</p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> must be <code>&gt; 4</code>. The transfer accepts a <code>[u8]</code> with\na length equal to the transfer <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a>. If the slice length is incorrect,\nit will panic.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#586\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#589-595\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<u8>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+L%3E,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#609-629\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+L%3E,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, L&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, L&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, L&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,\n    L: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.GreaterThan4.html\" title=\"trait atsamd_hal::sercom::spi::size::GreaterThan4\">GreaterThan4</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with <a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a>\n<a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and long transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a>s</p>\n</div></section></summary><div class=\"docblock\"><p>The transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> must be <code>&gt; 4</code>. The transfer accepts a <code>[u8]</code> with\na length equal to the transfer <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a>. If the slice length is incorrect,\nit will panic.</p>\n<p>Because the <code>Capability</code> is <code>Tx</code>, this implementation never reads the DATA\nregister and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#616\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#619-628\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<u8>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+UTerm%3E,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#639-655\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+UTerm%3E,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\">DynLength</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\">DynLength</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a>\n<a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and <a href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\"><code>DynLength</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transfer accepts a <code>[u8]</code> with a length equal to the run-time dynamic\ntransaction length. If the slice length does not match the result of\n<a href=\"atsamd_hal/sercom/spi/struct.Spi.html#method.get_dyn_length\" title=\"method atsamd_hal::sercom::spi::Spi::get_dyn_length\"><code>Spi::get_dyn_length</code></a>, it will panic.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#645\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#648-654\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<u8>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_blocking_spi_Write%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+UTerm%3E,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#668-687\">Source</a><a href=\"#impl-_embedded_hal_blocking_spi_Write%3Cu8%3E-for-Spi%3CConfig%3CP,+M,+UTerm%3E,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\">Write</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\">DynLength</a>&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, <a class=\"type\" href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\">DynLength</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\">OpMode</a>,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_blocking_spi_Write\"><code>Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with <a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a>\n<a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and <a href=\"atsamd_hal/sercom/spi/size/type.DynLength.html\" title=\"type atsamd_hal::sercom::spi::size::DynLength\"><code>DynLength</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>The transfer accepts a <code>[u8]</code> with a length equal to the run-time dynamic\ntransaction length. If the slice length does not match the result of\n<code>Spi::get_dyn_length</code>], it will panic.</p>\n<p>Because the <code>Capability</code> is <code>Tx</code>, this implementation never reads the DATA\nregister and ignores all buffer overflow errors.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#674\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#677-686\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_blocking_spi_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.87.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends <code>words</code> to the slave, ignoring all the incoming words</div></details></div></details>","Write<u8>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_serial_Read%3C%3CL+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+L%3E,+Rx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#153-168\">Source</a><a href=\"#impl-_embedded_hal_serial_Read%3C%3CL+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+M,+L%3E,+Rx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, M, L&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Read.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_serial_Read\">Read</a>&lt;&lt;L as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, L&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, M, L&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    M: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\">MasterMode</a>,\n    L: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>,\n    L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Read.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_serial_Read\"><code>serial::Read</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\"><code>Rx</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs in a\n<a href=\"atsamd_hal/sercom/spi/trait.MasterMode.html\" title=\"trait atsamd_hal::sercom::spi::MasterMode\"><code>MasterMode</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>Refer to the <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Read.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_serial_Read\"><code>serial::Read</code></a> implementation of <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> for more details.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#162\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Read.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Read error</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#165-167\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads a single word from the serial interface</div></details></div></details>","Read<<L as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_serial_Read%3C%3CL+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+Slave,+L%3E,+Rx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#204-218\">Source</a><a href=\"#impl-_embedded_hal_serial_Read%3C%3CL+as+Length%3E::Word%3E-for-Spi%3CConfig%3CP,+Slave,+L%3E,+Rx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P, L&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Read.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_serial_Read\">Read</a>&lt;&lt;L as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>, L&gt;, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\">Rx</a>&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Config.html\" title=\"struct atsamd_hal::sercom::spi::Config\">Config</a>&lt;P, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\">Slave</a>, L&gt;: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    P: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/pads/trait.ValidPads.html\" title=\"trait atsamd_hal::sercom::spi::pads::ValidPads\">ValidPads</a>,\n    L: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\">Length</a>,\n    L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a>,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>&gt;,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Read.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_serial_Read\"><code>serial::Read</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Rx.html\" title=\"struct atsamd_hal::sercom::spi::Rx\"><code>Rx</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs in\n<a href=\"atsamd_hal/sercom/spi/enum.Slave.html\" title=\"enum atsamd_hal::sercom::spi::Slave\"><code>Slave</code></a> <a href=\"atsamd_hal/sercom/spi/trait.OpMode.html\" title=\"trait atsamd_hal::sercom::spi::OpMode\"><code>OpMode</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>Refer to the <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Read.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_serial_Read\"><code>serial::Read</code></a> implementation of <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> for more details.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#212\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Read.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Read error</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#215-217\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Read.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;L::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/size/trait.Length.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::size::Length::Word\">Word</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads a single word from the serial interface</div></details></div></details>","Read<<L as Length>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_serial_Write%3C%3CC+as+AnyConfig%3E::Word%3E-for-Spi%3CC,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#264-281\">Source</a><a href=\"#impl-_embedded_hal_serial_Write%3C%3CC+as+AnyConfig%3E::Word%3E-for-Spi%3CC,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_serial_Write\">Write</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Size\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Size\">Size</a>: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\">AtomicSize</a>,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_serial_Write\"><code>serial::Write</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\"><code>Tx</code></a> <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#270\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Write.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>Write error</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#273-275\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Write.html#tymethod.write\" class=\"fn\">write</a>(&amp;mut self, word: C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a single word to the serial interface</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#278-280\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Write.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Ensures that none of the previously written words are still buffered</div></details></div></details>","Write<<C as AnyConfig>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-_embedded_hal_spi_FullDuplex%3C%3CC+as+AnyConfig%3E::Word%3E-for-Spi%3CC,+Duplex%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#341-370\">Source</a><a href=\"#impl-_embedded_hal_spi_FullDuplex%3C%3CC+as+AnyConfig%3E::Word%3E-for-Spi%3CC,+Duplex%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_spi_FullDuplex.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_spi_FullDuplex\">FullDuplex</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Size\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Size\">Size</a>: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\">AtomicSize</a>,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>&gt;,\n    <a class=\"type\" href=\"atsamd_hal/sercom/spi/type.DataWidth.html\" title=\"type atsamd_hal::sercom::spi::DataWidth\">DataWidth</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt;,</div></h3><div class=\"docblock\"><p>Implement embedded-hal 0.2 <a href=\"atsamd_hal/prelude/trait._embedded_hal_spi_FullDuplex.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_spi_FullDuplex\"><code>spi::FullDuplex</code></a> for <a href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\"><code>Spi</code></a> structs with <a href=\"atsamd_hal/sercom/spi/trait.AtomicSize.html\" title=\"trait atsamd_hal::sercom::spi::AtomicSize\"><code>AtomicSize</code></a></p>\n</div></section></summary><div class=\"docblock\"><p><code>spi::FullDuplex</code> is only implemented when the <code>Spi</code> struct has <a href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\"><code>Duplex</code></a>\n<a href=\"atsamd_hal/sercom/spi/trait.Capability.html\" title=\"trait atsamd_hal::sercom::spi::Capability\"><code>Capability</code></a> and the transaction <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> is <code>&lt;= 4</code> bytes. When the\n<a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> is <code>&lt;= 4</code>, the <a href=\"atsamd_hal/sercom/spi/size/type.Word.html\" title=\"type atsamd_hal::sercom::spi::size::Word\"><code>Word</code></a> is a primitive integer, with a size that\ndepends on the <a href=\"atsamd_hal/sercom/spi/size/trait.Length.html\" title=\"trait atsamd_hal::sercom::spi::size::Length\"><code>Length</code></a> (<code>u8</code>, <code>u16</code> or <code>u32</code>).</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#348\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/prelude/trait._embedded_hal_spi_FullDuplex.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a></h4></section></summary><div class='docblock'>An enumeration of SPI errors</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#351-358\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_spi_FullDuplex.html#tymethod.read\" class=\"fn\">read</a>(&amp;mut self) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads the word stored in the shift register <a href=\"atsamd_hal/prelude/trait._embedded_hal_spi_FullDuplex.html#tymethod.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#361-369\">Source</a><a href=\"#method.send\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"atsamd_hal/prelude/trait._embedded_hal_spi_FullDuplex.html#tymethod.send\" class=\"fn\">send</a>(&amp;mut self, word: C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>) -&gt; <a class=\"type\" href=\"nb/type.Result.html\" title=\"type nb::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.87.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/spi/enum.Error.html\" title=\"enum atsamd_hal::sercom::spi::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Sends a word to the slave</div></details></div></details>","FullDuplex<<C as AnyConfig>::Word>","atsamd_hal::sercom::spi::SpecificSpi"],["<section id=\"impl-Default%3C%3CC+as+AnyConfig%3E::Word%3E-for-Spi%3CC,+Tx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/spi/impl_ehal/thumbv7em.rs.html#287-292\">Source</a><a href=\"#impl-Default%3C%3CC+as+AnyConfig%3E::Word%3E-for-Spi%3CC,+Tx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"embedded_hal/blocking/serial/write/trait.Default.html\" title=\"trait embedded_hal::blocking::serial::write::Default\">Default</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Tx.html\" title=\"struct atsamd_hal::sercom::spi::Tx\">Tx</a>&gt;: <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_serial_Write.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_serial_Write\">Write</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt;,</div></h3></section>","Default<<C as AnyConfig>::Word>","atsamd_hal::sercom::spi::SpecificSpi"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[297840]}