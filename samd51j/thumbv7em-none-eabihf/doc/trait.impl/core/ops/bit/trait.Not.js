(function() {
    var implementors = Object.fromEntries([["atsamd_hal",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/icm/struct.RegionBusError.html\" title=\"struct atsamd_hal::icm::RegionBusError\">RegionBusError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/icm/struct.RegionDigestMismatch.html\" title=\"struct atsamd_hal::icm::RegionDigestMismatch\">RegionDigestMismatch</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/icm/struct.RegionEndConditionDetected.html\" title=\"struct atsamd_hal::icm::RegionEndConditionDetected\">RegionEndConditionDetected</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/icm/struct.RegionHashCompleted.html\" title=\"struct atsamd_hal::icm::RegionHashCompleted\">RegionHashCompleted</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/icm/struct.RegionStatusUpdatedDetected.html\" title=\"struct atsamd_hal::icm::RegionStatusUpdatedDetected\">RegionStatusUpdatedDetected</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/icm/struct.RegionWrapConditionDetected.html\" title=\"struct atsamd_hal::icm::RegionWrapConditionDetected\">RegionWrapConditionDetected</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.Flags.html\" title=\"struct atsamd_hal::sercom::i2c::Flags\">Flags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Flags.html\" title=\"struct atsamd_hal::sercom::spi::Flags\">Flags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Status.html\" title=\"struct atsamd_hal::sercom::spi::Status\">Status</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/uart/struct.Flags.html\" title=\"struct atsamd_hal::sercom::uart::Flags\">Flags</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/uart/struct.Status.html\" title=\"struct atsamd_hal::sercom::uart::Status\">Status</a>"]]],["embedded_hal",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"enum\" href=\"embedded_hal/digital/enum.PinState.html\" title=\"enum embedded_hal::digital::PinState\">PinState</a>"]]],["typenum",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"typenum/bit/struct.B0.html\" title=\"struct typenum::bit::B0\">B0</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[3248,292,500]}