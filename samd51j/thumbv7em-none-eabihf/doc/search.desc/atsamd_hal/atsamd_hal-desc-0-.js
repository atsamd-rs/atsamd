searchState.loadedDescShard("atsamd_hal", 0, "ResetCause represents the reason the MCU was reset.\nAnalogue-to-Digital Conversion\nAES - Advanced Encryption Standard\nAsynchronous HAL APIs\nBind interrupt sources to a single handler each.\nBind multiple interrupt sources to the same interrupt …\nHelper macro to give meaningful names to peripherals\nHelper macro to give meaningful names to GPIO pins\nNVM Software Calibration Area Mapping\nClocking API\nDelays\nDirect Memory Access Controller\nDevice Service Unit\nExternal Interrupt Controller\nReturns the argument unchanged.\nGPIO\nICM - Integrity Check Module\nPrimitives for manipulating interrupts\nCalls <code>U::from(self)</code>.\nNon-volatile Memory Controller\nImport the prelude to gain convenient access to helper …\nPublic Key Cryptography Controller (PUKCC)\nReturns the cause of the last reset.\nReal-time clock/counter\nConfigure the SERCOM peripherals\nReturns the serial number of the chip as an array of …\nDelays with WFI sleep while we wait using a timer\nReturns the serial number of the chip as 4 32-bit …\nTime units\nWorking with timer counter hardware\nhelper struct to calculate divider &amp; cycles settings for …\nModule supporting type-level programming\nUSB Device support\n<code>Adc</code> encapsulates the device ADC\n4: External Reference A\n5: External Reference B\n6: External Reference C (only on ADC1)\nDescribes how an interrupt-driven ADC should finalize the …\n6: Peripheral clock divided by 128\n3: Peripheral clock divided by 16\n0: Peripheral clock divided by 2\n7: Peripheral clock divided by 256\n4: Peripheral clock divided by 32\n1: Peripheral clock divided by 4\n5: Peripheral clock divided by 64\n2: Peripheral clock divided by 8\nAn ADC where results are accessible via interrupt …\n0: Internal Bandgap Reference\n2: 1/2 VDDANA\n3: VDDANA\nClock frequency relative to the system clock Prescaler …\nReference voltage (or its source) Reference Selection\nReading resolution in bits Conversion Result Resolution\nSamples per reading Number of Samples to be Collected\n0: 1 sample\n10: 1024 samples\n2: 10-bit result\n7: 128 samples\n0: 12-bit result\n4: 16 samples\n1: For averaging mode output\n1: 2 samples\n8: 256 samples\n5: 32 samples\n2: 4 samples\n9: 512 samples\n6: 64 samples\n3: 8 samples\n3: 8-bit result\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the prescaler for adjusting the clock relative to the …\nSet the prescaler for adjusting the clock relative to the …\nSet the voltage reference\nSet the voltage reference\nSet the input resolution\nSet the input resolution\nSet the sample rate\nSet the sample rate\nStarts a conversion sampling the specified pin.\nStarts a conversion sampling the specified pin.\nAES Peripheral\nAES Modes of operation\n1: Start Encryption / Decryption in Auto mode\n1: Cipher block chaining mode\n5: CCM mode\n3: Cipher feedback mode\nCipher Feedback Block Size\nCipher Mode\n4: Counter mode\nAES-&gt;CTRLA Register\nHardware Countermeasures against Differential Power …\n0: Decryption\n0: Electronic code book mode\n1: Encryption\n6: Galois counter mode\nEncryption Key Size\n1: Start encryption in Last Output Data mode\nLast Output Data Mode\n0: Start Encryption / Decryption in Manual mode\n0: No effect\n0: No effect\n2: Output feedback mode\nStart Mode Select\n1: The user keyword gets XORed with the previous keyword …\nXOR Key Operation\n0: 128-bit Input data block for Encryption/Decryption in …\n0: 128-bit Key for Encryption / Decryption\n3: 16-bit Input data block for Encryption/Decryption in …\n1: 192-bit Key for Encryption / Decryption\n2: 256-bit Key for Encryption / Decryption\n2: 32-bit Input data block for Encryption/Decryption in …\n1: 64-bit Input data block for Encryption/Decryption in …\n4: 8-bit Input data block for Encryption/Decryption in …\nClear Encryption Complete Interrupt\nClear GF Multiplication Complete Interrupt\nDestroy the AES peripheral and return the underlying AES …\nDisable the AES peripheral\nDisable Encryption Complete Interrupt\nDisable GF Multiplication Complete Interrupt\nEnable the AES peripheral\nEnable Encryption Complete Interrupt\nEnable GF Multiplication Complete Interrupt\nEnd of Message (GCM mode only)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRead Cipher Length (GCM mode only)\nRead indata\nRead Galois Hash value (GCM mode only)\nGF Multiplication (GCM mode only)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate the interface for the AES peripheral\nNew Message Used in cipher block chaining (CBC), cipher …\nRead Encryption Complete Interrupt\nRead GF Multiplication Complete Interrupt\nSet AES Mode\nSet Cipher Feedback Block Size (CFBS)\nSet Cipher Mode\nSet cipher length (GCM mode only)\nCounter Measure Type\nSet indata\nSet the Data Buffer Pointer\nControl if AES is active during debugging\nSet Galois Hash value (GCM mode only)\nSet GCM hash key value (GCM mode only)\nSet initialization vector\nStart Last Key Generation\nSet Encryption Key Size\nSet keyword / cryptographic key\nSet Last Output Data (LOD) Mode\nSet a new seed for the AES random number generator\nSet Start Mode\nXOR Key Generation\nStart Encryption/Decryption\nReset the AES controller\nAsync interrupts\nCompile-time assertion that an interrupt has been bound to …\nEIC_EXTINT_0 typelevel interrupt.\nEIC_EXTINT_1 typelevel interrupt.\nEIC_EXTINT_10 typelevel interrupt.\nEIC_EXTINT_11 typelevel interrupt.\nEIC_EXTINT_12 typelevel interrupt.\nEIC_EXTINT_13 typelevel interrupt.\nEIC_EXTINT_14 typelevel interrupt.\nEIC_EXTINT_15 typelevel interrupt.\nEIC_EXTINT_2 typelevel interrupt.\nEIC_EXTINT_3 typelevel interrupt.\nEIC_EXTINT_4 typelevel interrupt.\nEIC_EXTINT_5 typelevel interrupt.\nEIC_EXTINT_6 typelevel interrupt.\nEIC_EXTINT_7 typelevel interrupt.\nEIC_EXTINT_8 typelevel interrupt.\nEIC_EXTINT_9 typelevel interrupt.\nInterrupt handler.\nInterrupt enum variant.\nType-level interrupt.\nAn interrupt source that may have one or many interrupt …\nMarker trait indicating that an interrupt source has …\nMarker trait indicating that an interrupt source has one …\nTC0 typelevel interrupt.\nTC1 typelevel interrupt.\nTC2 typelevel interrupt.\nTC3 typelevel interrupt.\nTC4 typelevel interrupt.\nTC5 typelevel interrupt.\nDisable the interrupt.\nDisable the interrupt.\nEnable the interrupt.\nEnable the interrupt.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the priority of the interrupt.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if interrupt is enabled.\nCheck if interrupt is pending.\nInterrupt handler function.\nSet interrupt pending.\nSet the interrupt priority.\nSet the interrupt priority.\nSet the interrupt priority with an already-acquired …\nUnset interrupt pending.\nUnset interrupt pending.\nADC0 BIASCOMP calibration value. Should be written to ADC0 …\nADC0 BIASR2R calibration value. Should be written to ADC0 …\nADC0 BIASREFBUF calibration value. Should be written to …\nADC1 BIASCOMP calibration value. Should be written to ADC1 …\nADC1 BIASR2R calibration value. Should be written to ADC1 …\nADC1 BIASREFBUF calibration value. Should be written to …\nUSB TRANSN calibration value. Should be written to USB …\nUSB TRANSP calibration value. Should be written to USB …\nUSB TRIM calibration value. Should be written to USB …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\n6: DFLL output\n7: DPLL0 output\n8: DPLL1 output\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nRepresents a configured clock generator.\n0: Generic clock generator 0\n1: Generic clock generator 1\n10: Generic clock generator 10\n11: Generic clock generator 11\n2: Generic clock generator 2\n3: Generic clock generator 3\n4: Generic clock generator 4\n5: Generic clock generator 5\n6: Generic clock generator 6\n7: Generic clock generator 7\n8: Generic clock generator 8\n9: Generic clock generator 9\n3: Generic clock generator 1 output\n2: Generator input pad\n<code>GenericClockController</code> encapsulates the Gclk hardware.\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nThe frequency of the 120Mhz source.\nThe frequency of the 32Khz source.\nThe frequency of the 48Mhz source.\n4: OSCULP32K oscillator output\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\n0: XOSC0 oscillator output\n1: XOSC1 oscillator output\n5: XOSC32K oscillator output\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigures a clock generator with the specified divider and\nEnables or disables the given GClk from operation in …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nReturns the frequency of the configured clock\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>GClock</code> for gclk0, the 120MHz oscillator.\nReturns a <code>GClock</code> for gclk1, the 32KHz oscillator.\nReturns the <code>GClock</code> for the specified clock generator. If …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nConfigure the clock for peripheral(s) that match the name …\nClocking API v1\nVersion 2 of the <code>clock</code> module\nReset the clock controller, configure the system to run at …\nReset the clock controller, configure the system to run at …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\n6: DFLL output\n7: DPLL0 output\n8: DPLL1 output\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nRepresents a configured clock generator.\n0: Generic clock generator 0\n1: Generic clock generator 1\n10: Generic clock generator 10\n11: Generic clock generator 11\n2: Generic clock generator 2\n3: Generic clock generator 3\n4: Generic clock generator 4\n5: Generic clock generator 5\n6: Generic clock generator 6\n7: Generic clock generator 7\n8: Generic clock generator 8\n9: Generic clock generator 9\n3: Generic clock generator 1 output\n2: Generator input pad\n<code>GenericClockController</code> encapsulates the Gclk hardware.\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nThe frequency of the 120Mhz source.\nThe frequency of the 32Khz source.\nThe frequency of the 48Mhz source.\n4: OSCULP32K oscillator output\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\nA typed token that indicates that the clock for the …\n0: XOSC0 oscillator output\n1: XOSC1 oscillator output\n5: XOSC32K oscillator output\nBus clock objects\nEnabled clocks at power-on reset\nAn enabled, 1:N clock with a compile-time counter for N\nCorresponding <code>Id</code> type for the implementer\nCollection of low-level PAC structs\nMarks <code>Enabled</code> 1:N producer clocks that can act as a clock …\nType-level tokens for unused clocks at power-on reset\nAdvanced high performance bus clocks\nEnabled AHB clocks\nAdvanced peripheral bus clocks\nEnabled APB clocks\nTokens to create <code>apb::ApbClk</code>s\nConsume the PAC clocking structs and return a HAL-level …\nDigital Frequency Locked Loop\nDFLL48 in open loop mode\nDisable the <code>Gclk</code>\nDisable 1 kHz output from the <code>Xosc32kBase</code> clock\nDisable the <code>Xosc32kBase</code> clock\nDisable the <code>Dpll</code>\nDisable the <code>Dfll</code>\nDisable 1 kHz output from the <code>Xosc32kBase</code> clock\nDisable the <code>Xosc</code>\nDisable 32 kHz output from the <code>OscUlp32kBase</code> clock\nDisable 1 kHz output from the <code>OscUlp32kBase</code> clock\nDisable continuous monitoring of the <code>Xosc</code> for clock failure\nDisable a <code>GclkOut</code> and free its <code>Pin</code>\nSet the <code>GclkDivider</code> value for <code>Gclk0</code>\nDigital Phase-Locked Loop\nToken to create <code>dpll::Dpll0</code>\nToken to create <code>dpll::Dpll1</code>\nEnable continuous monitoring of the <code>Xosc</code> for clock failure\nCreate and enable a <code>GclkOut</code>\nReturn the frequency of the clock source\nReturn the <code>Gclk0</code> frequency\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGeneric Clock Controllers\nMain system clock, driven at 48 MHz by the DFLL in open …\nTokens to create <code>gclk::Gclk</code>\nCheck whether the <code>Xosc</code> has triggered clock failure …\nOutput a 50-50 duty cycle clock when using an odd …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange the <code>Dfll</code> <code>Mode</code> while it remains enabled\nTest whether the <code>Dpll</code> is locked\nCheck whether the <code>Xosc</code> is stable and ready to be used as a …\nCheck whether the XOSC32K is stable and ready to be used …\nTest whether the <code>Dpll</code> is ready\nCheck whether the <code>Xosc</code> has been switched to the safe clock\nInternal, ultra low power, 32 kHz oscillator\nTokens to create <code>osculp32k::OscUlp1k</code> and …\nAlways-enabled base oscillator for the <code>OscUlp1k</code> and …\nSet the state of <code>GclkOut</code> pins when <code>GclkIo</code> output is …\nWrapper providing <code>unsafe</code> access to low-level PAC structs\nPeripheral Channel Clocks\nTokens to create <code>pclk::Pclk</code>s\nRTC oscillator\nTokens to create <code>rtcosc::RtcOsc</code>\nEscape hatch allowing to access low-level PAC structs\nSwap <code>Gclk0</code> from a <code>GclkIo</code> <code>Pin</code> to a clock <code>Source</code>\nSwap <code>Gclk0</code> from one <code>GclkIo</code> <code>Pin</code> to another\nSwap <code>Gclk0</code> from a clock <code>Source</code> to a <code>GclkIo</code> <code>Pin</code>\nSwap <code>Gclk0</code> from one clock <code>Source</code> to another\nAttempt to switch from the safe clock back to the external …\nModule defining or exporting peripheral types for the [‘…\nFreeze the OSCULP32K configuration until power-on reset\nFreeze the XOSC32K configuration until power-on reset\nExternal multipurpose crystal oscillator controller\nTokens <code>xosc::Xosc0</code>\nToken to create <code>xosc::Xosc1</code>\nExternal, 32 kHz crystal oscillator controller\nTokens to create <code>xosc32k::Xosc32kBase</code>, <code>xosc32k::Xosc1k</code> and …\nAHB clock controller\nAn enabled AHB clock\nSet of all <code>AhbClk</code>s\nType-level enum identifying one of the possible AHB clocks\nSingleton token that can be exchanged for an <code>AhbClk</code>\nCorresponding <code>DynAhbId</code>\nValue-level enum identifying a single AHB clock\nDisable the corresponding AHB clock\nEnable the corresponding AHB clock\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAPB clock controller\nAn enabled APB clock\nSet of <code>ApbClk</code>s for APB clocks that are enabled at power-on …\nType-level enum identifying one of the possible APB clocks\nSingleton token that can be exchanged for an <code>ApbClk</code>\nSet of <code>ApbToken</code>s for APB clocks that are disabled at …\nCorresponding variant of <code>DynApbId</code>\nValue-level enum identifying a single APB clock\nDisable the corresponding APB clock\nEnable the corresponding APB clock\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCorresponding variant of <code>DynReference</code>\nCorresponding variant of <code>DynMode</code>\nDigital frequency-locked loop used to generate a 48 MHz …\n<code>Id</code> type representing the identity of the DFLL clock\nSingleton token that can be exchanged for the <code>Dfll</code>\nValue-level enum identifying the <code>Dfll</code> control loop mode\nValue-level enum identifying one of two possible reference …\nAn <code>Enabled</code> <code>Dfll</code>\nType-level enum identifying the <code>Dfll</code> control loop mode\nThe DFLL is driven by a <code>Pclk</code>\nType-level enum identifying one of two possible <code>Dfll</code> …\nThe DFLL is driven by the USB start-of-frame signal\nEnable or disable the <code>Dfll</code> chill cycle\nSet the maximum coarse step size during closed-loop …\nDisable the <code>Dfll</code>\nEnable the <code>Dfll</code>, so that it can be used as a clock <code>Source</code>\nSet the maximum fine step size during closed-loop …\nConsume the <code>Dfll</code>, release the <code>DfllToken</code>, and return the …\nConsume the <code>Dfll</code> and release the <code>DfllToken</code>\nConsume the <code>Dfll</code> and release the <code>DfllToken</code>\nReturn the <code>Dfll</code> output frequency\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate the <code>Dfll</code> in closed-loop mode\nCreate the <code>Dfll</code> in closed-loop mode\nCreate the <code>Dfll</code> in USB recovery mode\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChange the <code>Dfll</code> <code>Mode</code> while it remains enabled\nControl the <code>Dfll</code> on-demand functionality\nCreate the <code>Dfll</code> in open-loop mode\nEnable or disable the <code>Dfll</code> quick lock\nControl the <code>Dfll</code> behavior during idle or standby sleep …\nEnable or disable the <code>Dfll</code> chill cycle\nSet the maximum coarse step size during closed-loop …\nSet the maximum fine step size during closed-loop …\nControl the <code>Dfll</code> on-demand functionality\nEnable or disable the <code>Dfll</code> quick lock\nControl the <code>Dfll</code> behavior during idle or standby sleep …\nCorresponding variant of <code>DynDpllId</code>\nCorresponding variant of <code>DynDpllSourceId</code>\nDigital phase-locked loop used to multiply clock …\nType alias for the corresponding <code>Dpll</code>\nType-level variant of <code>DpllId</code> representing the identity of …\nType alias for the corresponding <code>Dpll</code>\nType-level variant of <code>DpllId</code> representing the identity of …\nType-level enum identifying one of two possible <code>Dpll</code>s\nType-level enum of possible clock <code>Source</code>s for a <code>Dpll</code>\nSingleton token that can be exchanged for a <code>Dpll</code>\nValue-level enum identifying one of two possible <code>Dpll</code>s\nValue-level enum of possible clock sources for a <code>Dpll</code>\nAn <code>Enabled</code> <code>Dpll</code>\nType alias for the corresponding <code>EnabledDpll</code>\nType alias for the corresponding <code>EnabledDpll</code>\nCorresponding numeric index\nThe DPLL is driven by a <code>Pclk</code>\nThe DPLL is driven by <code>Xosc0</code>\nThe DPLL is driven by <code>Xosc1</code>\nThe DPLL is driven by <code>Xosc32k</code>\nDisable the <code>Dpll</code>\nEnable the <code>Dpll</code>, so that it can be used as a clock <code>Source</code>\nEnable the <code>Dpll</code> without validating the input &amp; output …\nConsume the <code>Dpll</code>, release the <code>DpllToken</code>, and return the …\nConsume the <code>Dpll</code>, release the <code>DpllToken</code>, and <code>Decrement</code> the …\nConsume the <code>Dpll</code>, release the <code>DpllToken</code>, and <code>Decrement</code> the …\nReturn the output frequency of the <code>Dpll</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>Dpll</code> from a <code>Pclk</code>\nCreate a <code>Dpll</code> from an <code>Xosc</code>\nCreate a <code>Dpll</code> from an <code>Xosc32k</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTest whether the <code>Dpll</code> is locked\nTest whether the <code>Dpll</code> is ready\nBypass the <code>Dpll</code> lock\nSet the <code>Dpll</code> loop divider, which is also the frequency …\nSet on-demand mode\nSet the <code>Xosc</code> pre-division factor\nSet run-in-standby mode\nOutput the <code>Dpll</code> clock immediately, without waiting for …\nCorresponding variant of <code>DynGclkId</code>\nCorresponding variant of <code>DynGclkSourceId</code>\nUse a literal division factor\nUse a literal division factor\nUse a division factor of <code>2^16 = 65536</code>\nUse a division factor of <code>2^17 = 131072</code>\nUse a division factor of <code>2^8 = 256</code>\nUse a division factor of <code>2^9 = 512</code>\nCorresponding <code>GclkDivider</code> type\nValue-level enum identifying one of 12 possible <code>Gclk</code>s\nValue-level enum of possible clock sources for a <code>Gclk</code>\nAn <code>Enabled</code> <code>Gclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nType alias for the corresponding <code>EnabledGclk</code>\nGeneric clock generator used to distribute clocks to …\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nSet of <code>PinId</code>s whose implementations of <code>GclkIo</code> map to …\nType alias for the corresponding <code>Gclk</code>\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nType-level variant of <code>GclkId</code> representing the identity of …\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nType alias for the corresponding <code>Gclk</code>\nType-level variant of <code>GclkId</code> representing the identity of …\nEnum for the clock division factor of <code>Gclk1</code> only\nEnum for the clock division factor of all <code>Gclk</code>s other than …\nTrait unifying the two <code>Gclk</code> divider types, <code>GclkDiv8</code> and …\nType-level enum identifying one of 12 possible <code>Gclk</code>s\nCorresponding <code>GclkId</code> for this <code>PinId</code>\nTrait mapping each <code>PinId</code> to its corresponding <code>GclkId</code> when …\nA GPIO <code>Pin</code> configured as a <code>Gclk</code> output\nType-level enum of possible clock <code>Source</code>s for a <code>Gclk</code>\nSingleton token that can be exchanged for a <code>Gclk</code>\nSet of <code>GclkToken</code>s representing the disabled <code>Gclk</code>s at …\nCorresponding numeric index (0..12)\nType-level enum of <code>GclkSourceId</code> types that are not a <code>GclkIo</code>\nDisable the <code>Gclk</code>\nDisable a <code>GclkOut</code> and free its <code>Pin</code>\nSet the <code>GclkDivider</code> value\nSet the <code>GclkDivider</code> value for <code>Gclk0</code>\nReturns the actual clock divider value as a <code>u32</code>\nReturn the corresponding <code>DIVSEL</code> and and <code>DIV</code> register fields\nEnable the <code>Gclk</code>, so that it can be used as a clock <code>Source</code>\nCreate and enable a <code>GclkOut</code>\nConsume the <code>Gclk</code> and free its corresponding resources\nConsume the <code>Gclk</code> and free its corresponding resources\nReturn the <code>Gclk</code> ouput frequency\nReturn the <code>Gclk0</code> frequency\nReturn the frequency of the corresponding <code>Gclk</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>Gclk</code> from a GPIO <code>Pin</code>\nCreate a new <code>Gclk</code> from a clock <code>Source</code>\n<code>GclkToken</code> for <code>Gclk1</code>\n<code>GclkToken</code> for <code>Gclk10</code>\n<code>GclkToken</code> for <code>Gclk11</code>\n<code>GclkToken</code> for <code>Gclk2</code>\n<code>GclkToken</code> for <code>Gclk3</code>\n<code>GclkToken</code> for <code>Gclk4</code>\n<code>GclkToken</code> for <code>Gclk5</code>\n<code>GclkToken</code> for <code>Gclk6</code>\n<code>GclkToken</code> for <code>Gclk7</code>\n<code>GclkToken</code> for <code>Gclk8</code>\n<code>GclkToken</code> for <code>Gclk9</code>\nOutput a 50-50 duty cycle clock when using an odd …\nOutput a 50-50 duty cycle clock when using an odd …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the state of <code>GclkOut</code> pins when <code>GclkIo</code> output is …\nSet the state of <code>GclkOut</code> pins when <code>GclkIo</code> output is …\nSwap <code>Gclk0</code> from a <code>GclkIo</code> <code>Pin</code> to a clock <code>Source</code>\nSwap <code>Gclk0</code> from one <code>GclkIo</code> <code>Pin</code> to another\nSwap <code>Gclk0</code> from a clock <code>Source</code> to a <code>GclkIo</code> <code>Pin</code>\nSwap <code>Gclk0</code> from one clock <code>Source</code> to another\nThe <code>Enabled</code> <code>OscUlp1k</code> clock\nThe <code>Enabled</code> <code>OscUlp32k</code> clock\nThe <code>Enabled</code> <code>OscUlp32kBase</code> clock\nClock representing the 1 kHz output of the <code>OscUlp32kBase</code> …\nType representing the identity of the <code>OscUlp1k</code> clock\nSingleton token that can be exchanged for <code>OscUlp1k</code>\nClock representing the 32 kHz output of the <code>OscUlp32kBase</code> …\nOSC3ULP2K base clock, which feeds the <code>OscUlp1k</code> and …\nType representing the identity of the <code>OscUlp32k</code> clock\nSingleton token that can be exchanged for <code>OscUlp32k</code>\nSet of tokens representing the disabled OSCULP32K clocks …\nDisable 1 kHz output from the <code>OscUlp32kBase</code> clock\nDisable 32 kHz output from the <code>OscUlp32kBase</code> clock\nEnable 1 kHz output from the <code>OscUlp32kBase</code> clock\nEnable 32 kHz output from the <code>OscUlp32kBase</code> clock\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFreeze the OSCULP32K configuration until power-on reset\nCorresponding variant of <code>DynPclkId</code>\nValue-level enum identifying one of the 48 possible <code>Pclk</code>s\nValue-level enum of possible clock sources for a <code>Pclk</code>\nPeripheral channel clock for a given peripheral\nType-level enum identifying one of the 48 possible <code>Pclk</code>s\nType-level enum of possible clock <code>Source</code>s for a <code>Pclk</code>\nSingleton token that can be exchanged for a <code>Pclk</code>\nSet of <code>PclkToken</code>s representing the disabled <code>Pclk</code>s at …\nDisable and destroy a <code>Pclk</code>\nCreate and enable a <code>Pclk</code>\nReturn the <code>Pclk</code> frequency\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nModule containing only the types implementing <code>PclkId</code>\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\n<code>Id</code> type representing the identity of the DFLL clock\nType-level variant of <code>DpllId</code> representing the identity of …\nType-level variant of <code>DpllId</code> representing the identity of …\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nCorresponding <code>DynRtcSourceId</code>\nValue-level enum of possible clock sources for the <code>RtcOsc</code>\nClock source frequency, either 1 kHz or 32 kHz\nThe RTC is sourced from the <code>OscUlp1k</code>\nThe RTC is sourced from the <code>OscUlp32k</code>\nOscillator for the <code>Rtc</code>\nToken used to retrieve the RTC oscillator Singleton token …\nType-level <code>enum</code> for the RTC oscillator clock source\nThe RTC is sourced from the <code>Xosc1k</code>\nThe RTC is sourced from the <code>Xosc32k</code>\nConsume the <code>RtcOsc</code> and return the <code>RtcOscToken</code>\nConsume the <code>RtcOscToken</code> and return the <code>RtcOsc</code>\nReturn the <code>RtcOsc</code> frequency, which can either be 1 kHz or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nMarker type representing the corresponding peripheral\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType-level variant of the <code>Xosc</code> operating <code>Mode</code>\nCrystal current level\nType-level variant of the <code>Xosc</code> operating <code>Mode</code>\nCorresponding variant of <code>DynMode</code>\nValue-level enum identifying one of two possible <code>Xosc</code> …\nAn <code>Enabled</code> <code>Xosc</code>\nType alias for the corresponding <code>EnabledXosc</code>\nType alias for the corresponding <code>EnabledXosc</code>\nTypically used for 24-48 MHz oscillators\nTypically used for 16-24 MHz oscillators\nTypically used for 8 MHz oscillators\nTypically used for 8-16 MHz oscillators\nType-level <code>enum</code> for the <code>Xosc</code> operating mode\nCorresponding numeric index\nDivision factor for the safe clock prescaler\nStart up delay before continuous <code>Xosc</code> monitoring takes …\nType alias for the <code>Xosc</code> input <code>Pin</code>\nCorresponding XIN <code>PinId</code>\nType alias for the <code>Xosc</code> output <code>Pin</code>\nCorresponding XOUT <code>PinId</code>\nAn external multipurpose crystal oscillator controller\nType alias for the corresponding <code>Xosc</code>\nType-level variant of <code>XoscId</code> representing the identity of …\nType alias for the corresponding <code>Xosc</code>\nType-level variant of <code>XoscId</code> representing the identity of …\nType-level enum identifying one of two possible <code>Xosc</code>s\nSingleton token that can be exchanged for an <code>Xosc</code>\nUsed only in <code>ClockMode</code> to represent the default register …\nSet the <code>CrystalCurrent</code> drive strength\nDisable the <code>Xosc</code>\nDisable continuous monitoring of the <code>Xosc</code> for clock failure\nEnable the <code>Xosc</code>, so that it can be used as a clock <code>Source</code>\nEnable continuous monitoring of the <code>Xosc</code> for clock failure\nConsume the <code>Xosc</code> and release the <code>XoscToken</code> and <code>XIn</code> <code>Pin</code>\nConsume the <code>Xosc</code> and release the <code>XoscToken</code>, <code>XIn</code> and <code>XOut</code> …\nReturn the clock or crystal frequency\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an <code>Xosc</code> from an external clock, taking ownership of …\nCreate an <code>Xosc</code> from an external crystal oscillator, taking …\nCheck whether the <code>Xosc</code> has triggered clock failure …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether the <code>Xosc</code> is stable and ready to be used as a …\nCheck whether the <code>Xosc</code> has been switched to the safe clock\nToggle automatic loop control\nModify the oscillator amplitude when automatic loop …\nControl the <code>Xosc</code> on-demand behavior\nControl the <code>Xosc</code> behavior in Standby sleep mode\nSet the start up delay before the <code>Xosc</code> is unmasked and …\nAttempt to switch from the safe clock back to the external …\nType-level variant of the XOSC32K operating <code>Mode</code>\nGain mode for the XOSC32K control loop\nType-level variant of the XOSC32K operating <code>Mode</code>\nValue-level enum identifying one of two possible XOSC32K …\nThe <code>Enabled</code> <code>Xosc1k</code> clock\nThe <code>Enabled</code> <code>Xosc32k</code> clock\nThe <code>Enabled</code> <code>Xosc32kBase</code> clock\nType-level enum for the XOSC32K operation mode\nDivision factor for the safe clock prescaler\nStart up delay before continuous monitoring takes effect\nType alias for the XOSC32K input <code>Pin</code>\nType alias for the XOSC32K output <code>Pin</code>\nClock representing the 1 kHz output of the <code>Xosc32kBase</code> …\nType representing the identity of the <code>Xosc1k</code> clock\nSingleton token that can be exchanged for <code>Xosc1k</code>\nClock representing the 32 kHz output of the <code>Xosc32kBase</code> …\nXOSC32K base clock, which feeds the <code>Xosc1k</code> and <code>Xosc32k</code> …\nSingleton token that can be exchanged for <code>Xosc32kBase</code>\nClock failure detection interface for the XOSC32K …\nSingleton token that can be exchanged for <code>Xosc32kCfd</code>\nType representing the identity of the <code>Xosc32k</code> clock\nSingleton token that can be exchanged for <code>Xosc32k</code>\nSet of tokens representing the disabled XOSC32K clocks …\nSet the crystal oscillator <code>ControlGainMode</code>\nDisable the <code>Xosc32kBase</code> clock\nDisable continuous monitoring of the XOSC32K for clock …\nDisable 1 kHz output from the <code>Xosc32kBase</code> clock\nDisable 1 kHz output from the <code>Xosc32kBase</code> clock\nEnable the <code>Xosc32kBase</code> clock, so that it can be used as a …\nEnable continuous monitoring of the XOSC32K for clock …\nEnable 1 kHz output from the <code>Xosc32kBase</code> clock\nEnable 32 kHz output from the <code>Xosc32kBase</code> clock\nConsume the <code>Xosc32kBase</code> and release the <code>Xosc32kBaseToken</code>, …\nConsume the <code>Xosc32kBase</code> and release the <code>Xosc32kBaseToken</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate the <code>Xosc32kBase</code> clock from an external clock, taking\nCreate the <code>Xosc32kBase</code> clock from an external crystal …\nCheck whether the XOSC32K has triggered clock failure …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck whether the XOSC32K is stable and ready to be used …\nCheck whether the XOSC32K has been switched to the safe …\nControl the XOSC32K on-demand behavior\nControl the XOSC32K behavior in Standby sleep mode\nSet the start up delay before the <code>Xosc32kBase</code> clock is …\nAttempt to switch from the safe clock back to the external …\nFreeze the XOSC32K configuration until power-on reset\nFreeze the XOSC32K configuration until power-on reset\nSystem timer (SysTick) as a delay provider\nReleases the system timer (SysTick) resource\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConfigures the system timer (SysTick) as a delay provider\nConfigures the system timer (SysTick) as a delay provide, …\nContains the error value\nRuntime errors that may occur when dealing with DMA …\nOperation is not valid in the current state of the object.\nSupplied buffers both have lengths &gt; 1 beat, but not equal …\nNumber of DMA channels used by the driver\nContains the success value\nResult for DMAC operations\nChip reported an error during transfer\nAPIs for async DMAC operations.\nAbstractions over individual DMA channels\nAbstractions to setup and use the DMA controller\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDMA transfer abstractions\nInterrupt handler for the DMAC peripheral.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBusy channel\nDMA channel, capable of executing <code>Transfer</code>s. Ongoing DMA …\nInterrupt sources available to a DMA channel\nInitialized and ready to transfer channel\nInitialized and ready to transfer in <code>async</code> operation\nUninitialized channel\nUninitialized <code>Channel</code> configured for <code>async</code> operation\nSet burst length for the channel, in number of beats. A …\nCheck the specified <code>flags</code>, clear then return any that were …\nSelectively disable interrupts\nSelectively enable interrupts\nSet the FIFO threshold length. The channel will wait until …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts the given bytes directly into the bitfield struct.\nConfigure the DMA channel so that it is ready to be used …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the underlying bits.\nReturns an instance with zero initialized data.\nIssue a software reset to the channel. This will return …\nSets the value of susp to the given value.\nSets the value of susp to the given value.\nSets the value of tcmpl to the given value.\nSets the value of tcmpl to the given value.\nSets the value of terr to the given value.\nSets the value of terr to the given value.\nReturns the value of susp. Transfer suspended\nReturns the value of susp.\nReturns the value of tcmpl. Transfer complete\nReturns the value of tcmpl.\nReturns the value of terr. Transfer error\nReturns the value of terr.\nBegin DMA transfer using <code>async</code> operation.\nReturns a copy of the bitfield with the value of susp set …\nReturns a copy of the bitfield with the value of susp set …\nReturns a copy of the bitfield with the value of tcmpl set …\nReturns a copy of the bitfield with the value of tcmpl set …\nReturns a copy of the bitfield with the value of terr set …\nReturns a copy of the bitfield with the value of terr set …\n68: index of DMA RESRDY trigger\n69: Index of DMA SEQ trigger\n70: Index of DMA RESRDY trigger\n71: Index of DMA SEQ trigger\n82: DMA DATA Read trigger\n81: DMA DATA Write trigger\n0: One trigger required for each block transfer\n2: One trigger required for each burst transfer\nBurst Length\n20: DMA CAN Debug Req\n21: DMA CAN Debug Req\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nTrait representing a DMA channel ID\nStruct generating individual handles to each DMA channel\n72: DMA DAC Empty Req\n73: DMA DAC Empty Req\n74: DMA DAC Result Ready Req\n75: DMA DAC Result Ready Req\n0: Only software/event triggers\nInitialized DMA Controller\n2: DMAC ID for DCC0 register\n3: DMAC ID for DCC1 register\nFIFO Threshold\nStruct generating individual handles to each DMA channel …\n76: Indexes of DMA RX triggers\n77: Indexes of DMA RX triggers\n78: Indexes of DMA TX triggers\n79: Indexes of DMA TX triggers\n0: Channel Priority Level 0 (Lowest Level)\n1: Channel Priority Level 1\n2: Channel Priority Level 2\n3: Channel Priority Level 3 (Highest Level)\n80: Indexes of PCC RX trigger\nChannel Priority Level\nMask representing which priority levels should be …\n83: Indexes of QSPI RX trigger\n84: Indexes of QSPI TX trigger\nMask representing which priority levels should be …\n1: DMA RTC timestamp trigger\n4: Index of DMA RX trigger\n5: Index of DMA TX trigger\n6: Index of DMA RX trigger\n7: Index of DMA TX trigger\n8: Index of DMA RX trigger\n9: Index of DMA TX trigger\n10: Index of DMA RX trigger\n11: Index of DMA TX trigger\n12: Index of DMA RX trigger\n13: Index of DMA TX trigger\n14: Index of DMA RX trigger\n15: Index of DMA TX trigger\n16: Index of DMA RX trigger\n17: Index of DMA TX trigger\n18: Index of DMA RX trigger\n19: Index of DMA TX trigger\n0: Single-beat burst length\n45: Indexes of DMA Match/Compare triggers\n46: Indexes of DMA Match/Compare triggers\n44: Indexes of DMA Overflow trigger\n48: Indexes of DMA Match/Compare triggers\n49: Indexes of DMA Match/Compare triggers\n47: Indexes of DMA Overflow trigger\n51: Indexes of DMA Match/Compare triggers\n52: Indexes of DMA Match/Compare triggers\n50: Indexes of DMA Overflow trigger\n54: Indexes of DMA Match/Compare triggers\n55: Indexes of DMA Match/Compare triggers\n53: Indexes of DMA Overflow trigger\n57: Indexes of DMA Match/Compare triggers\n58: Indexes of DMA Match/Compare triggers\n56: Indexes of DMA Overflow trigger\n60: Indexes of DMA Match/Compare triggers\n61: Indexes of DMA Match/Compare triggers\n59: Indexes of DMA Overflow trigger\n63: Indexes of DMA Match/Compare triggers\n64: Indexes of DMA Match/Compare triggers\n62: Indexes of DMA Overflow trigger\n66: Indexes of DMA Match/Compare triggers\n67: Indexes of DMA Match/Compare triggers\n65: Indexes of DMA Overflow trigger\n23: Indexes of DMA Match/Compare triggers\n24: Indexes of DMA Match/Compare triggers\n25: Indexes of DMA Match/Compare triggers\n26: Indexes of DMA Match/Compare triggers\n27: Indexes of DMA Match/Compare triggers\n28: Indexes of DMA Match/Compare triggers\n22: DMA overflow/underflow/retrigger trigger\n30: Indexes of DMA Match/Compare triggers\n31: Indexes of DMA Match/Compare triggers\n32: Indexes of DMA Match/Compare triggers\n33: Indexes of DMA Match/Compare triggers\n29: DMA overflow/underflow/retrigger trigger\n35: Indexes of DMA Match/Compare triggers\n36: Indexes of DMA Match/Compare triggers\n37: Indexes of DMA Match/Compare triggers\n34: DMA overflow/underflow/retrigger trigger\n39: Indexes of DMA Match/Compare triggers\n40: Indexes of DMA Match/Compare triggers\n38: DMA overflow/underflow/retrigger trigger\n42: Indexes of DMA Match/Compare triggers\n43: Indexes of DMA Match/Compare triggers\n41: DMA overflow/underflow/retrigger trigger\n3: One trigger required for each transaction\nTrigger Action\nTrigger Source\n9: 10-beats burst length\n10: 11-beats burst length\n11: 12-beats burst length\n12: 13-beats burst length\n13: 14-beats burst length\n14: 15-beats burst length\n15: 16-beats burst length\n0: Destination write starts after each beat source address …\n1: 2-beats burst length\n1: Destination write starts after 2-beats source address …\n2: 3-beats burst length\n3: 4-beats burst length\n2: Destination write starts after 4-beats source address …\n4: 5-beats burst length\n5: 6-beats burst length\n6: 7-beats burst length\n7: 8-beats burst length\n3: Destination write starts after 8-beats source address …\n8: 9-beats burst length\nDisable multiple priority levels simultaneously\nEnable multiple priority levels simultaneously\nRelease the DMAC and return the register block.\nRelease the DMAC and return the register block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts the given bytes directly into the bitfield struct.\nConverts the given bytes directly into the bitfield struct.\nInitialize the DMAC and return a DmaController object …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the underlying bits.\nReturns the underlying bits.\nUse the <code>DmaController</code> in async mode. You are required to …\nReturns the value of level0. Level 0\nReturns the value of level0. Level 0\nReturns the value of level0.\nReturns the value of level0.\nReturns the value of level1. Level 1\nReturns the value of level1. Level 1\nReturns the value of level1.\nReturns the value of level1.\nReturns the value of level2. Level 2\nReturns the value of level2. Level 2\nReturns the value of level2.\nReturns the value of level2.\nReturns the value of level3. Level 3\nReturns the value of level3. Level 3\nReturns the value of level3.\nReturns the value of level3.\nReturns an instance with zero initialized data.\nReturns an instance with zero initialized data.\nEnable round-robin arbitration for multiple priority levels\nSets the value of level0 to the given value.\nSets the value of level0 to the given value.\nSets the value of level0 to the given value.\nSets the value of level0 to the given value.\nSets the value of level1 to the given value.\nSets the value of level1 to the given value.\nSets the value of level1 to the given value.\nSets the value of level1 to the given value.\nSets the value of level2 to the given value.\nSets the value of level2 to the given value.\nSets the value of level2 to the given value.\nSets the value of level2 to the given value.\nSets the value of level3 to the given value.\nSets the value of level3 to the given value.\nSets the value of level3 to the given value.\nSets the value of level3 to the given value.\nSplit the DMAC into individual channels\nSplit the DMAC into individual channels\nDisable round-robin arbitration (ie, enable static …\nReturns a copy of the bitfield with the value of level0 …\nReturns a copy of the bitfield with the value of level0 …\nReturns a copy of the bitfield with the value of level0 …\nReturns a copy of the bitfield with the value of level0 …\nReturns a copy of the bitfield with the value of level1 …\nReturns a copy of the bitfield with the value of level1 …\nReturns a copy of the bitfield with the value of level1 …\nReturns a copy of the bitfield with the value of level1 …\nReturns a copy of the bitfield with the value of level2 …\nReturns a copy of the bitfield with the value of level2 …\nReturns a copy of the bitfield with the value of level2 …\nReturns a copy of the bitfield with the value of level2 …\nReturns a copy of the bitfield with the value of level3 …\nReturns a copy of the bitfield with the value of level3 …\nReturns a copy of the bitfield with the value of level3 …\nReturns a copy of the bitfield with the value of level3 …\nConvert to BeatSize enum\nConvert 8, 16 and 32 bit types into <code>BeatSize</code>\nDMAC beat size\nUseable beat sizes for DMA transfers\nBuffer useable by the DMAC.\nStruct holding the source and destination buffers of a …\nByte = <code>u8</code>\nHalf word = <code>u16</code>\nDMA transfer, owning the resources until the transfer is …\nWord = <code>u32</code>\nBegin DMA transfer in blocking mode. If …\nChecks and clears the block transfer complete interrupt …\nBuffer length in beats\nCheck if the transfer has completed\nDestination buffer\nDestination buffer\nPointer to the buffer. If the buffer is incrementing, the …\nFree the <code>Transfer</code> and return the resources it holds.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn whether the buffer pointer should be incrementing …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSafely construct a new <code>Transfer</code>. To guarantee memory …\nCreate a new <code>Transfer</code> from static array references of the …\nConstruct a new <code>Transfer</code> without checking for memory …\nModify a completed transfer with new <code>source</code> and <code>destination</code>…\nModify a completed transfer with a new <code>source</code>, then …\nModify a completed transfer with a new <code>destination</code>, then …\nIssue a software trigger request to the corresponding …\nSource buffer\nSource buffer\nNon-blocking; Immediately stop the DMA transfer and …\nWait for the DMA transfer to complete and release all owned\nAddress or length was not word aligned\nUsually misaligned address of length\nCRC32 operation failed\nDevice Service Unit\nContains the error value\nError from within the DSU\nContains the success value\nThe PAC would not unlock the DSU for us\nHardware-generated errors\nErrors from hardware\nNVM result type\nCalculate CRC32 of a memory region\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnlock the DSU and instantiate peripheral\n3: Both edges detection\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nType alias for a channel number\nTrait representing an EXTINT channel ID.\nEIC channel.\nStruct generating individual handles to each EXTINT channel\nExternal Interrupt Controller.\nMarker type that represents an EXTINT channel capable of …\nTrait representing a GPIO pin which can be used as an …\nA numbered external interrupt, which can be used to sense …\n2: Falling edge detection\nStruct generating individual handles to each EXTINT …\n4: High level detection\nInterrupt handler used for <code>async</code> operations.\n5: Low level detection\nThe number of EXTINT channels on this chip.\n0: No detection\n1: Rising edge detection\nEnable debouncing for this pin, with a configuration …\nRelease the underlying resources: <code>Pin</code> and <code>Channel</code>.\nRelease the EIC and return the register block.\nRelease the EIC and return the register block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfigure a pin as a floating external interrupt\nTurn an EIC pin into a pin usable as a <code>Future</code>. The correct …\nConfigure a pin as pulled-down external interrupt\nConfigure a pin as pulled-up external interrupt\nCreate and initialize a new <code>Eic</code>, and wire it up to the …\nSplit the EIC into individual channels.\nSplit the EIC into individual channels\nAssign a pin to this <code>Channel</code>, and turn it into an <code>ExtInt</code>, …\nType-erased, value-level module for GPIO pins\nType-level module for GPIO pins\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for alternate peripheral …\nValue-level variant of <code>DynPinMode</code> for floating disabled …\nValue-level variant of <code>DynPinMode</code> for floating input mode\nValue-level variant of <code>DynPinMode</code> for floating interrupt …\nValue-level variant of <code>DynPinMode</code> for pull-down disabled …\nValue-level variant of <code>DynPinMode</code> for pull-down input mode\nValue-level variant of <code>DynPinMode</code> for pull-down interrupt …\nValue-level variant of <code>DynPinMode</code> for pull-up disabled mode\nValue-level variant of <code>DynPinMode</code> for pull-up input mode\nValue-level variant of <code>DynPinMode</code> for pull-up interrupt …\nValue-level variant of <code>DynPinMode</code> for push-pull output mode\nValue-level variant of <code>DynPinMode</code> for readable push-pull …\nValue-level <code>enum</code> for alternate peripheral function …\nValue-level <code>enum</code> for disabled configurations\nValue-level <code>enum</code> for pin groups\nValue-level <code>enum</code> for input configurations\nValue-level <code>enum</code> for interrupt configurations\nValue-level <code>enum</code> for output configurations\nA value-level pin, parameterized by <code>DynPinId</code> and <code>DynPinMode</code>\nValue-level <code>struct</code> representing pin IDs\nValue-level <code>enum</code> representing pin modes\nGPIO error type\nThe pin did not have the correct ID or mode for the …\nErase the type-level information in a <code>Pin</code> and return a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRead the current drive strength of the pin.\nReturn a copy of the pin ID\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConfigure the pin to operate as the corresponding …\nDisable the pin and set it to float\nConfigure the pin to operate as a floating input\nConfigure the pin to operate as a floating interrupt\nConvert the pin to the requested <code>DynPinMode</code>\nDisable the pin and set it to pull down\nConfigure the pin to operate as a pulled down input\nConfigure the pin to operate as a pulled down interrupt\nDisable the pin and set it to pull up\nConfigure the pin to operate as a pulled up input\nConfigure the pin to operate as a pulled up interrupt\nConfigure the pin to operate as a push-pull output\nConfigure the pin to operate as a readable push pull output\nReturn a copy of the pin mode\nSet the drive strength for the pin.\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level enum for alternate peripheral function …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType-level variant of <code>PinMode</code> for alternate peripheral …\nType class for <code>Pin</code> types\nType-level variant of <code>AlternateConfig</code> for alternate …\nType-level variant of <code>AlternateConfig</code> for alternate …\nType-level variant of <code>AlternateConfig</code> for alternate …\nCorresponding <code>DynDisabled</code>\nCorresponding <code>DynInput</code>\nCorresponding <code>DynInterrupt</code>\nCorresponding <code>DynOutput</code>\nCorresponding <code>DynAlternate</code>\nCorresponding <code>DynPinMode</code>\nCorresponding <code>DynPinId</code>\nType-level variant of <code>PinMode</code> for disabled modes\nType-level enum for disabled configurations\nType-level variant of <code>AlternateConfig</code> for alternate …\nType-level variant of <code>AlternateConfig</code> for alternate …\nType-level variant of both <code>DisabledConfig</code> and <code>InputConfig</code>\nType-level variant of <code>PinMode</code> for floating disabled mode\nType-level variant of <code>PinMode</code> for floating input mode\nType-level variant of <code>PinMode</code> for floating Interrupt mode\nType-level variant of <code>AlternateConfig</code> for alternate …\nType-level variant of <code>AlternateConfig</code> for alternate …\nType-level variant of <code>AlternateConfig</code> for alternate …\n<code>PinId</code> of the corresponding <code>Pin</code>\nType-level variant of <code>PinMode</code> for input modes\nType-level enum for input configurations\nType-level variant of <code>PinMode</code> for Interrupt modes\nType-level <code>enum</code> for Interrupt configurations\nType-level variant of <code>AlternateConfig</code> for alternate …\nType-level variant of <code>AlternateConfig</code> for alternate …\nType-level variant of <code>AlternateConfig</code> for alternate …\nType-level variant of <code>AlternateConfig</code> for alternate …\n<code>PinMode</code> of the corresponding <code>Pin</code>\nType-level variant of <code>AlternateConfig</code> for alternate …\nType-level equivalent of <code>Option&lt;PinId&gt;</code>\nType-level equivalent of <code>Option&lt;PinId&gt;</code>\nType-level variant of <code>PinMode</code> for output modes\nType-level enum for output configurations\nPin ID representing pin PA00\nPin ID representing pin PA01\nPin ID representing pin PA02\nPin ID representing pin PA03\nPin ID representing pin PA04\nPin ID representing pin PA05\nPin ID representing pin PA06\nPin ID representing pin PA07\nPin ID representing pin PA08\nPin ID representing pin PA09\nPin ID representing pin PA10\nPin ID representing pin PA11\nPin ID representing pin PA12\nPin ID representing pin PA13\nPin ID representing pin PA14\nPin ID representing pin PA15\nPin ID representing pin PA16\nPin ID representing pin PA17\nPin ID representing pin PA18\nPin ID representing pin PA19\nPin ID representing pin PA20\nPin ID representing pin PA21\nPin ID representing pin PA22\nPin ID representing pin PA23\nPin ID representing pin PA24\nPin ID representing pin PA25\nPin ID representing pin PA27\nPin ID representing pin PA30\nPin ID representing pin PA31\nPin ID representing pin PB00\nPin ID representing pin PB01\nPin ID representing pin PB02\nPin ID representing pin PB03\nPin ID representing pin PB04\nPin ID representing pin PB05\nPin ID representing pin PB06\nPin ID representing pin PB07\nPin ID representing pin PB08\nPin ID representing pin PB09\nPin ID representing pin PB10\nPin ID representing pin PB11\nPin ID representing pin PB12\nPin ID representing pin PB13\nPin ID representing pin PB14\nPin ID representing pin PB15\nPin ID representing pin PB16\nPin ID representing pin PB17\nPin ID representing pin PB22\nPin ID representing pin PB23\nPin ID representing pin PB30\nPin ID representing pin PB31\nA type-level GPIO pin, parameterized by <code>PinId</code> and <code>PinMode</code> …\nType-level enum for pin IDs\nType-level enum representing pin modes\nCollection of all the individual <code>Pin</code>s\nType-level variant of both <code>DisabledConfig</code> and <code>InputConfig</code>\nType-level variant of <code>PinMode</code> for pull-down disabled mode\nType-level variant of <code>PinMode</code> for pull-down input mode\nType-level variant of <code>PinMode</code> for pull-down Interrupt mode\nType-level variant of both <code>DisabledConfig</code> and <code>InputConfig</code>\nType-level variant of <code>PinMode</code> for pull-up disabled mode\nType-level variant of <code>PinMode</code> for pull-up input mode\nType-level variant of <code>PinMode</code> for pull-up Interrupt mode\nType-level variant of <code>OutputConfig</code> for a push-pull …\nType-level variant of <code>PinMode</code> for push-pull output mode\nType-level variant of <code>OutputConfig</code> for a readable push-pull\nType-level variant of <code>PinMode</code> for readable push-pull …\nType alias for the <code>PinMode</code> at reset\nType-level equivalent of <code>Some(PinId)</code>\nType-level equivalent of <code>Some(PinId)</code>\nType alias to recover the specific <code>Pin</code> type from an …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from <code>AlternateD</code> to <code>PullDownInput</code>\nConvert from <code>AlternateK</code> to <code>PullDownInput</code>\nConvert from <code>AlternateH</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>AlternateG</code>\nConvert from <code>AlternateF</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>AlternateE</code>\nConvert from <code>AlternateN</code> to <code>AlternateC</code>\nConvert from <code>AlternateC</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>AlternateC</code>\nConvert from <code>FloatingDisabled</code> to <code>FloatingInput</code>\nConvert from <code>PullUpDisabled</code> to <code>FloatingDisabled</code>\nConvert from <code>AlternateC</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>AlternateC</code>\nConvert from <code>AlternateD</code> to <code>AlternateI</code>\nConvert from <code>AlternateI</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>AlternateJ</code>\nConvert from <code>AlternateJ</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>AlternateK</code>\nConvert from <code>AlternateK</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>AlternateL</code>\nConvert from <code>AlternateL</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>AlternateM</code>\nConvert from <code>AlternateM</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>AlternateN</code>\nConvert from <code>AlternateN</code> to <code>AlternateD</code>\nConvert from <code>AlternateE</code> to <code>AlternateF</code>\nConvert from <code>AlternateF</code> to <code>AlternateE</code>\nConvert from <code>AlternateE</code> to <code>AlternateG</code>\nConvert from <code>AlternateC</code> to <code>AlternateL</code>\nConvert from <code>FloatingDisabled</code> to <code>PullUpDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>PullDownDisabled</code>\nConvert from <code>AlternateK</code> to <code>AlternateC</code>\nConvert from <code>AlternateC</code> to <code>AlternateK</code>\nConvert from <code>AlternateJ</code> to <code>AlternateC</code>\nConvert from <code>AlternateC</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>AlternateC</code>\nConvert from <code>AlternateC</code> to <code>AlternateI</code>\nConvert from <code>AlternateH</code> to <code>AlternateC</code>\nConvert from <code>AlternateC</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>AlternateC</code>\nConvert from <code>AlternateC</code> to <code>AlternateG</code>\nConvert from <code>AlternateF</code> to <code>AlternateC</code>\nConvert from <code>AlternateC</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>AlternateC</code>\nConvert from <code>AlternateC</code> to <code>AlternateE</code>\nConvert from <code>AlternateD</code> to <code>AlternateC</code>\nConvert from <code>AlternateC</code> to <code>AlternateD</code>\nConvert from <code>AlternateN</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateL</code>\nConvert from <code>AlternateK</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateK</code>\nConvert from <code>AlternateJ</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateI</code>\nConvert from <code>AlternateH</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateG</code>\nConvert from <code>AlternateF</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateE</code>\nConvert from <code>AlternateD</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateD</code>\nConvert from <code>AlternateC</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>AlternateC</code>\nConvert from <code>AlternateN</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateL</code>\nConvert from <code>AlternateK</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateK</code>\nConvert from <code>AlternateJ</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateI</code>\nConvert from <code>AlternateG</code> to <code>AlternateE</code>\nConvert from <code>AlternateE</code> to <code>AlternateH</code>\nConvert from <code>AlternateH</code> to <code>AlternateE</code>\nConvert from <code>AlternateE</code> to <code>AlternateI</code>\nConvert from <code>AlternateI</code> to <code>AlternateE</code>\nConvert from <code>AlternateE</code> to <code>AlternateJ</code>\nConvert from <code>AlternateJ</code> to <code>AlternateE</code>\nConvert from <code>AlternateE</code> to <code>AlternateK</code>\nConvert from <code>AlternateK</code> to <code>AlternateE</code>\nConvert from <code>AlternateE</code> to <code>AlternateL</code>\nConvert from <code>AlternateL</code> to <code>AlternateE</code>\nConvert from <code>AlternateE</code> to <code>AlternateM</code>\nConvert from <code>AlternateM</code> to <code>AlternateE</code>\nConvert from <code>AlternateE</code> to <code>AlternateN</code>\nConvert from <code>AlternateN</code> to <code>AlternateE</code>\nConvert from <code>AlternateF</code> to <code>AlternateG</code>\nConvert from <code>AlternateG</code> to <code>AlternateF</code>\nConvert from <code>AlternateF</code> to <code>AlternateH</code>\nConvert from <code>AlternateH</code> to <code>AlternateF</code>\nConvert from <code>AlternateF</code> to <code>AlternateI</code>\nConvert from <code>AlternateI</code> to <code>AlternateF</code>\nConvert from <code>AlternateF</code> to <code>AlternateJ</code>\nConvert from <code>AlternateJ</code> to <code>AlternateF</code>\nConvert from <code>AlternateF</code> to <code>AlternateK</code>\nConvert from <code>AlternateK</code> to <code>AlternateF</code>\nConvert from <code>AlternateF</code> to <code>AlternateL</code>\nConvert from <code>AlternateL</code> to <code>AlternateF</code>\nConvert from <code>AlternateF</code> to <code>AlternateM</code>\nConvert from <code>AlternateM</code> to <code>AlternateF</code>\nConvert from <code>AlternateF</code> to <code>AlternateN</code>\nConvert from <code>AlternateN</code> to <code>AlternateF</code>\nConvert from <code>AlternateG</code> to <code>AlternateH</code>\nConvert from <code>AlternateH</code> to <code>AlternateG</code>\nConvert from <code>AlternateG</code> to <code>AlternateI</code>\nConvert from <code>AlternateI</code> to <code>AlternateG</code>\nConvert from <code>AlternateG</code> to <code>AlternateJ</code>\nConvert from <code>AlternateJ</code> to <code>AlternateG</code>\nConvert from <code>AlternateG</code> to <code>AlternateK</code>\nConvert from <code>AlternateK</code> to <code>AlternateG</code>\nConvert from <code>AlternateG</code> to <code>AlternateL</code>\nConvert from <code>AlternateL</code> to <code>AlternateG</code>\nConvert from <code>AlternateG</code> to <code>AlternateM</code>\nConvert from <code>AlternateM</code> to <code>AlternateG</code>\nConvert from <code>AlternateG</code> to <code>AlternateN</code>\nConvert from <code>AlternateN</code> to <code>AlternateG</code>\nConvert from <code>AlternateH</code> to <code>AlternateI</code>\nConvert from <code>AlternateI</code> to <code>AlternateH</code>\nConvert from <code>AlternateH</code> to <code>AlternateJ</code>\nConvert from <code>AlternateJ</code> to <code>AlternateH</code>\nConvert from <code>AlternateH</code> to <code>AlternateK</code>\nConvert from <code>AlternateK</code> to <code>AlternateH</code>\nConvert from <code>AlternateH</code> to <code>AlternateL</code>\nConvert from <code>AlternateL</code> to <code>AlternateH</code>\nConvert from <code>FloatingInput</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullDownInterrupt</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateC</code>\nConvert from <code>AlternateC</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateE</code>\nConvert from <code>AlternateE</code> to <code>FloatingDisabled</code>\nConvert from <code>AlternateH</code> to <code>AlternateM</code>\nConvert from <code>AlternateM</code> to <code>AlternateH</code>\nConvert from <code>AlternateH</code> to <code>AlternateN</code>\nConvert from <code>AlternateN</code> to <code>AlternateH</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateF</code>\nConvert from <code>AlternateI</code> to <code>AlternateJ</code>\nConvert from <code>AlternateJ</code> to <code>AlternateI</code>\nConvert from <code>AlternateI</code> to <code>AlternateK</code>\nConvert from <code>AlternateF</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateG</code>\nConvert from <code>AlternateG</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateH</code>\nConvert from <code>AlternateH</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateI</code>\nConvert from <code>AlternateI</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateJ</code>\nConvert from <code>AlternateK</code> to <code>AlternateI</code>\nConvert from <code>AlternateI</code> to <code>AlternateL</code>\nConvert from <code>AlternateJ</code> to <code>FloatingDisabled</code>\nConvert from <code>AlternateL</code> to <code>AlternateI</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateK</code>\nConvert from <code>AlternateI</code> to <code>AlternateM</code>\nConvert from <code>AlternateM</code> to <code>AlternateI</code>\nConvert from <code>AlternateK</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateL</code>\nConvert from <code>AlternateL</code> to <code>FloatingDisabled</code>\nConvert from <code>AlternateI</code> to <code>AlternateN</code>\nConvert from <code>AlternateN</code> to <code>AlternateI</code>\nConvert from <code>AlternateJ</code> to <code>AlternateK</code>\nConvert from <code>AlternateK</code> to <code>AlternateJ</code>\nConvert from <code>AlternateJ</code> to <code>AlternateL</code>\nConvert from <code>AlternateL</code> to <code>AlternateJ</code>\nConvert from <code>AlternateJ</code> to <code>AlternateM</code>\nConvert from <code>AlternateM</code> to <code>AlternateJ</code>\nConvert from <code>AlternateE</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>AlternateE</code>\nConvert from <code>AlternateH</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullDownInput</code> to <code>AlternateD</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateM</code>\nConvert from <code>AlternateC</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>AlternateC</code>\nConvert from <code>AlternateM</code> to <code>FloatingDisabled</code>\nConvert from <code>FloatingDisabled</code> to <code>AlternateN</code>\nConvert from <code>AlternateN</code> to <code>FloatingDisabled</code>\nConvert from <code>AlternateB</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>AlternateB</code>\nConvert from <code>PullDownInterrupt</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>PullUpInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>FloatingInterrupt</code>\nConvert from <code>ReadableOutput</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>ReadableOutput</code>\nConvert from <code>PushPullOutput</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>PushPullOutput</code>\nConvert from <code>PullDownDisabled</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpInput</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>PullUpInput</code>\nConvert from <code>PullUpDisabled</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>PullDownDisabled</code>\nConvert from <code>AlternateN</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateL</code>\nConvert from <code>AlternateK</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateK</code>\nConvert from <code>AlternateJ</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateI</code>\nConvert from <code>PullDownDisabled</code> to <code>PullDownInput</code>\nConvert from <code>AlternateH</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateH</code>\nConvert from <code>PullDownInput</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>PullDownDisabled</code>\nConvert from <code>AlternateG</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateG</code>\nConvert from <code>AlternateF</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateE</code>\nConvert from <code>AlternateD</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateD</code>\nConvert from <code>AlternateC</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateC</code>\nConvert from <code>AlternateB</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>AlternateB</code>\nConvert from <code>PullDownDisabled</code> to <code>PushPullOutput</code>\nConvert from <code>PullDownInterrupt</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>PullDownInterrupt</code>\nConvert from <code>PushPullOutput</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>PullDownDisabled</code>\nConvert from <code>PullUpInterrupt</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>PullUpInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>FloatingInterrupt</code>\nConvert from <code>ReadableOutput</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>ReadableOutput</code>\nConvert from <code>PushPullOutput</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>PushPullOutput</code>\nConvert from <code>PullUpInput</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>PullUpInput</code>\nConvert from <code>PullDownInput</code> to <code>FloatingInput</code>\nConvert from <code>FloatingInput</code> to <code>PullDownInput</code>\nConvert from <code>PullDownDisabled</code> to <code>FloatingInterrupt</code>\nConvert from <code>AlternateN</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateN</code>\nConvert from <code>FloatingInterrupt</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullDownInterrupt</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateB</code>\nConvert from <code>AlternateB</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateC</code>\nConvert from <code>AlternateM</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateL</code>\nConvert from <code>AlternateK</code> to <code>PullUpDisabled</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateK</code>\nConvert from <code>AlternateJ</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateI</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateG</code>\nConvert from <code>AlternateF</code> to <code>PullDownInterrupt</code>\nConvert from <code>AlternateH</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>PullUpDisabled</code>\nConvert from <code>AlternateJ</code> to <code>AlternateN</code>\nConvert from <code>AlternateN</code> to <code>AlternateJ</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>PullDownInterrupt</code>\nConvert from <code>AlternateK</code> to <code>AlternateL</code>\nConvert from <code>AlternateL</code> to <code>AlternateK</code>\nConvert from <code>AlternateK</code> to <code>AlternateM</code>\nConvert from <code>AlternateM</code> to <code>AlternateK</code>\nConvert from <code>AlternateK</code> to <code>AlternateN</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateE</code>\nConvert from <code>AlternateD</code> to <code>PullDownInterrupt</code>\nConvert from <code>AlternateN</code> to <code>AlternateK</code>\nConvert from <code>AlternateL</code> to <code>AlternateM</code>\nConvert from <code>AlternateM</code> to <code>AlternateL</code>\nConvert from <code>AlternateL</code> to <code>AlternateN</code>\nConvert from <code>AlternateF</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateD</code>\nConvert from <code>AlternateC</code> to <code>PullDownInterrupt</code>\nConvert from <code>AlternateM</code> to <code>AlternateN</code>\nConvert from <code>AlternateN</code> to <code>AlternateM</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateC</code>\nConvert from <code>AlternateB</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateG</code>\nConvert from <code>PullDownInterrupt</code> to <code>AlternateB</code>\nConvert from <code>AlternateN</code> to <code>PullUpInterrupt</code>\nConvert from <code>AlternateF</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateE</code>\nConvert from <code>AlternateD</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateD</code>\nConvert from <code>AlternateC</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateC</code>\nConvert from <code>AlternateB</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>AlternateB</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullDownInterrupt</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>PullUpInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateL</code>\nConvert from <code>AlternateK</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpDisabled</code> to <code>FloatingInterrupt</code>\nConvert from <code>ReadableOutput</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>ReadableOutput</code>\nConvert from <code>PushPullOutput</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>PushPullOutput</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateK</code>\nConvert from <code>AlternateC</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateD</code>\nConvert from <code>AlternateD</code> to <code>PullDownDisabled</code>\nConvert from <code>PullUpInput</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>PullUpInput</code>\nConvert from <code>PullDownInput</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>PullDownInput</code>\nConvert from <code>FloatingInput</code> to <code>PullUpDisabled</code>\nConvert from <code>PullUpDisabled</code> to <code>FloatingInput</code>\nConvert from <code>AlternateN</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateL</code>\nConvert from <code>AlternateK</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateK</code>\nConvert from <code>AlternateJ</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateI</code>\nConvert from <code>AlternateJ</code> to <code>PullUpInterrupt</code>\nConvert from <code>AlternateH</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>PullDownDisabled</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateG</code>\nConvert from <code>AlternateF</code> to <code>PullDownDisabled</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>PullDownDisabled</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateI</code>\nConvert from <code>AlternateH</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateG</code>\nConvert from <code>AlternateF</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateE</code>\nConvert from <code>AlternateD</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateD</code>\nConvert from <code>AlternateC</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateC</code>\nConvert from <code>AlternateB</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>AlternateB</code>\nConvert from <code>PullDownInterrupt</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>PullDownInterrupt</code>\nConvert from <code>AlternateN</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateL</code>\nConvert from <code>AlternateK</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateK</code>\nConvert from <code>AlternateJ</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateI</code>\nConvert from <code>AlternateH</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateG</code>\nConvert from <code>AlternateF</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateE</code>\nConvert from <code>AlternateD</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateD</code>\nConvert from <code>AlternateC</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateC</code>\nConvert from <code>PullDownInput</code> to <code>AlternateG</code>\nConvert from <code>AlternateB</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>AlternateB</code>\nConvert from <code>AlternateG</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInterrupt</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>FloatingInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>PullUpInterrupt</code>\nConvert from <code>PullDownInput</code> to <code>AlternateH</code>\nConvert from <code>AlternateN</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateM</code>\nConvert from <code>AlternateH</code> to <code>PullDownInput</code>\nConvert from <code>AlternateL</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateL</code>\nConvert from <code>PullDownInput</code> to <code>AlternateI</code>\nConvert from <code>AlternateK</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateK</code>\nConvert from <code>AlternateJ</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>PullDownInput</code>\nConvert from <code>AlternateI</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateI</code>\nConvert from <code>PullDownInput</code> to <code>AlternateJ</code>\nConvert from <code>AlternateH</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateG</code>\nConvert from <code>AlternateJ</code> to <code>PullDownInput</code>\nConvert from <code>AlternateF</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateE</code>\nConvert from <code>PullDownInput</code> to <code>AlternateK</code>\nConvert from <code>AlternateD</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateD</code>\nConvert from <code>PullDownInput</code> to <code>AlternateF</code>\nConvert from <code>AlternateC</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateC</code>\nConvert from <code>AlternateB</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>AlternateB</code>\nConvert from <code>PullDownInterrupt</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>PullUpInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>ReadableOutput</code>\nConvert from <code>ReadableOutput</code> to <code>FloatingInterrupt</code>\nConvert from <code>AlternateN</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateL</code>\nConvert from <code>AlternateK</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateK</code>\nConvert from <code>AlternateJ</code> to <code>PushPullOutput</code>\nReturns the argument unchanged.\nConvert from <code>PushPullOutput</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateI</code>\nConvert from <code>AlternateH</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateG</code>\nConvert from <code>AlternateF</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateE</code>\nConvert from <code>AlternateD</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateD</code>\nConvert from <code>AlternateC</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateC</code>\nConvert from <code>AlternateB</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>AlternateB</code>\nConvert from <code>PullDownInterrupt</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>PullUpInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>FloatingInterrupt</code>\nConvert from <code>ReadableOutput</code> to <code>PushPullOutput</code>\nConvert from <code>PushPullOutput</code> to <code>ReadableOutput</code>\nConvert from <code>AlternateN</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateL</code>\nConvert from <code>AlternateK</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateK</code>\nConvert from <code>AlternateJ</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateJ</code>\nConvert from <code>AlternateI</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateI</code>\nConvert from <code>AlternateH</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateH</code>\nConvert from <code>AlternateG</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateG</code>\nConvert from <code>AlternateF</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateF</code>\nConvert from <code>AlternateE</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateE</code>\nConvert from <code>AlternateD</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateD</code>\nConvert from <code>AlternateC</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateC</code>\nConvert from <code>AlternateB</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>AlternateB</code>\nConvert from <code>PullDownInterrupt</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>PullDownInterrupt</code>\nConvert from <code>PullUpInterrupt</code> to <code>PullUpInput</code>\nConvert from <code>PullDownDisabled</code> to <code>AlternateE</code>\nConvert from <code>PullUpInput</code> to <code>PullUpInterrupt</code>\nConvert from <code>FloatingInterrupt</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>FloatingInterrupt</code>\nConvert from <code>ReadableOutput</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>ReadableOutput</code>\nConvert from <code>PushPullOutput</code> to <code>PullUpInput</code>\nConvert from <code>PullUpInput</code> to <code>PushPullOutput</code>\nConvert from <code>AlternateN</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>AlternateN</code>\nConvert from <code>AlternateM</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>AlternateM</code>\nConvert from <code>AlternateL</code> to <code>PullDownInput</code>\nConvert from <code>PullDownInput</code> to <code>AlternateL</code>\nConvert from <code>AlternateN</code> to <code>AlternateL</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRead the current drive strength of the pin.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")