searchState.loadedDescShard("atsamd51p", 1, "Field <code>TERR</code> reader - Channel Transfer Error Interrupt Enable\nField <code>TERR</code> writer - Channel Transfer Error Interrupt Enable\nRegister <code>CHINTENCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Channel Suspend Interrupt Enable\nBit 2 - Channel Suspend Interrupt Enable\nBit 1 - Channel Transfer Complete Interrupt Enable\nBit 1 - Channel Transfer Complete Interrupt Enable\nBit 0 - Channel Transfer Error Interrupt Enable\nBit 0 - Channel Transfer Error Interrupt Enable\nChannel n Interrupt Enable Set\nRegister <code>CHINTENSET</code> reader\nField <code>SUSP</code> reader - Channel Suspend Interrupt Enable\nField <code>SUSP</code> writer - Channel Suspend Interrupt Enable\nField <code>TCMPL</code> reader - Channel Transfer Complete Interrupt …\nField <code>TCMPL</code> writer - Channel Transfer Complete Interrupt …\nField <code>TERR</code> reader - Channel Transfer Error Interrupt Enable\nField <code>TERR</code> writer - Channel Transfer Error Interrupt Enable\nRegister <code>CHINTENSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Channel Suspend Interrupt Enable\nBit 2 - Channel Suspend Interrupt Enable\nBit 1 - Channel Transfer Complete Interrupt Enable\nBit 1 - Channel Transfer Complete Interrupt Enable\nBit 0 - Channel Transfer Error Interrupt Enable\nBit 0 - Channel Transfer Error Interrupt Enable\nChannel n Interrupt Flag Status and Clear\nRegister <code>CHINTFLAG</code> reader\nField <code>SUSP</code> reader - Channel Suspend\nField <code>SUSP</code> writer - Channel Suspend\nField <code>TCMPL</code> reader - Channel Transfer Complete\nField <code>TCMPL</code> writer - Channel Transfer Complete\nField <code>TERR</code> reader - Channel Transfer Error\nField <code>TERR</code> writer - Channel Transfer Error\nRegister <code>CHINTFLAG</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 2 - Channel Suspend\nBit 2 - Channel Suspend\nBit 1 - Channel Transfer Complete\nBit 1 - Channel Transfer Complete\nBit 0 - Channel Transfer Error\nBit 0 - Channel Transfer Error\nChannel n Priority Level\n0: Channel Priority Level 0 (Lowest Level)\n1: Channel Priority Level 1\n2: Channel Priority Level 2\n3: Channel Priority Level 3 (Highest Level)\nField <code>PRILVL</code> reader - Channel Priority Level\nField <code>PRILVL</code> writer - Channel Priority Level\nChannel Priority Level\nRegister <code>CHPRILVL</code> reader\nRegister <code>CHPRILVL</code> writer\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChannel Priority Level 0 (Lowest Level)\nChannel Priority Level 1\nChannel Priority Level 2\nChannel Priority Level 3 (Highest Level)\nChannel Priority Level 0 (Lowest Level)\nChannel Priority Level 1\nChannel Priority Level 2\nChannel Priority Level 3 (Highest Level)\nBits 0:1 - Channel Priority Level\nBits 0:1 - Channel Priority Level\nGet enumerated values variant\nField <code>BUSY</code> reader - Channel Busy\nField <code>BUSY</code> writer - Channel Busy\nChannel n Status\nField <code>CRCERR</code> reader - Channel CRC Error\nField <code>CRCERR</code> writer - Channel CRC Error\nField <code>FERR</code> reader - Channel Fetch Error\nField <code>FERR</code> writer - Channel Fetch Error\nField <code>PEND</code> reader - Channel Pending\nField <code>PEND</code> writer - Channel Pending\nRegister <code>CHSTATUS</code> reader\nRegister <code>CHSTATUS</code> writer\nBit 1 - Channel Busy\nBit 1 - Channel Busy\nBit 3 - Channel CRC Error\nBit 3 - Channel CRC Error\nBit 2 - Channel Fetch Error\nBit 2 - Channel Fetch Error\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel Pending\nBit 0 - Channel Pending\nField <code>CRCCHKSUM</code> reader - CRC Checksum\nCRC Checksum\nField <code>CRCCHKSUM</code> writer - CRC Checksum\nRegister <code>CRCCHKSUM</code> reader\nRegister <code>CRCCHKSUM</code> writer\nBits 0:31 - CRC Checksum\nBits 0:31 - CRC Checksum\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n0: 8-bit bus transfer\n32: DMA Channel 0\n33: DMA Channel 1\n42: DMA Channel 10\n43: DMA Channel 11\n44: DMA Channel 12\n45: DMA Channel 13\n46: DMA Channel 14\n47: DMA Channel 15\n48: DMA Channel 16\n49: DMA Channel 17\n50: DMA Channel 18\n51: DMA Channel 19\n34: DMA Channel 2\n52: DMA Channel 20\n53: DMA Channel 21\n54: DMA Channel 22\n55: DMA Channel 23\n56: DMA Channel 24\n57: DMA Channel 25\n58: DMA Channel 26\n59: DMA Channel 27\n60: DMA Channel 28\n61: DMA Channel 29\n35: DMA Channel 3\n62: DMA Channel 30\n63: DMA Channel 31\n36: DMA Channel 4\n37: DMA Channel 5\n38: DMA Channel 6\n39: DMA Channel 7\n40: DMA Channel 8\n41: DMA Channel 9\n0: CRC-16 (CRC-CCITT)\n1: CRC32 (IEEE 802.3)\nField <code>CRCBEATSIZE</code> reader - CRC Beat Size\nField <code>CRCBEATSIZE</code> writer - CRC Beat Size\nCRC Beat Size\nCRC Control\n3: Memory CRC generation operating mode\nField <code>CRCMODE</code> reader - CRC Operating Mode\nField <code>CRCMODE</code> writer - CRC Operating Mode\nCRC Operating Mode\n2: Memory CRC monitor operating mode\nField <code>CRCPOLY</code> reader - CRC Polynomial Type\nField <code>CRCPOLY</code> writer - CRC Polynomial Type\nCRC Polynomial Type\nField <code>CRCSRC</code> reader - CRC Input Source\nField <code>CRCSRC</code> writer - CRC Input Source\nCRC Input Source\n0: Default operating mode\n0: CRC Disabled\n1: 16-bit bus transfer\n1: I/O interface\nRegister <code>CRCCTRL</code> reader\nRegister <code>CRCCTRL</code> writer\n2: 32-bit bus transfer\n8-bit bus transfer\nDMA Channel 0\nDMA Channel 1\nDMA Channel 10\nDMA Channel 11\nDMA Channel 12\nDMA Channel 13\nDMA Channel 14\nDMA Channel 15\nDMA Channel 16\nDMA Channel 17\nDMA Channel 18\nDMA Channel 19\nDMA Channel 2\nDMA Channel 20\nDMA Channel 21\nDMA Channel 22\nDMA Channel 23\nDMA Channel 24\nDMA Channel 25\nDMA Channel 26\nDMA Channel 27\nDMA Channel 28\nDMA Channel 29\nDMA Channel 3\nDMA Channel 30\nDMA Channel 31\nDMA Channel 4\nDMA Channel 5\nDMA Channel 6\nDMA Channel 7\nDMA Channel 8\nDMA Channel 9\nCRC-16 (CRC-CCITT)\nCRC32 (IEEE 802.3)\nBits 0:1 - CRC Beat Size\nBits 0:1 - CRC Beat Size\nMemory CRC generation operating mode\nBits 14:15 - CRC Operating Mode\nBits 14:15 - CRC Operating Mode\nMemory CRC monitor operating mode\nBits 2:3 - CRC Polynomial Type\nBits 2:3 - CRC Polynomial Type\nBits 8:13 - CRC Input Source\nBits 8:13 - CRC Input Source\nDefault operating mode\nCRC Disabled\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n16-bit bus transfer\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nI/O interface\n8-bit bus transfer\nDMA Channel 0\nDMA Channel 1\nDMA Channel 10\nDMA Channel 11\nDMA Channel 12\nDMA Channel 13\nDMA Channel 14\nDMA Channel 15\nDMA Channel 16\nDMA Channel 17\nDMA Channel 18\nDMA Channel 19\nDMA Channel 2\nDMA Channel 20\nDMA Channel 21\nDMA Channel 22\nDMA Channel 23\nDMA Channel 24\nDMA Channel 25\nDMA Channel 26\nDMA Channel 27\nDMA Channel 28\nDMA Channel 29\nDMA Channel 3\nDMA Channel 30\nDMA Channel 31\nDMA Channel 4\nDMA Channel 5\nDMA Channel 6\nDMA Channel 7\nDMA Channel 8\nDMA Channel 9\nCRC-16 (CRC-CCITT)\nCRC32 (IEEE 802.3)\nMemory CRC generation operating mode\nMemory CRC monitor operating mode\nDefault operating mode\nCRC Disabled\n16-bit bus transfer\nI/O interface\n32-bit bus transfer\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\n32-bit bus transfer\nField <code>CRCDATAIN</code> reader - CRC Data Input\nCRC Data Input\nField <code>CRCDATAIN</code> writer - CRC Data Input\nRegister <code>CRCDATAIN</code> reader\nRegister <code>CRCDATAIN</code> writer\nBits 0:31 - CRC Data Input\nBits 0:31 - CRC Data Input\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CRCBUSY</code> reader - CRC Module Busy\nField <code>CRCBUSY</code> writer - CRC Module Busy\nField <code>CRCERR</code> reader - CRC Error\nField <code>CRCERR</code> writer - CRC Error\nCRC Status\nField <code>CRCZERO</code> reader - CRC Zero\nField <code>CRCZERO</code> writer - CRC Zero\nRegister <code>CRCSTATUS</code> reader\nRegister <code>CRCSTATUS</code> writer\nBit 0 - CRC Module Busy\nBit 0 - CRC Module Busy\nBit 2 - CRC Error\nBit 2 - CRC Error\nBit 1 - CRC Zero\nBit 1 - CRC Zero\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nControl\nField <code>DMAENABLE</code> reader - DMA Enable\nField <code>DMAENABLE</code> writer - DMA Enable\nField <code>LVLEN0</code> reader - Priority Level 0 Enable\nField <code>LVLEN0</code> writer - Priority Level 0 Enable\nField <code>LVLEN1</code> reader - Priority Level 1 Enable\nField <code>LVLEN1</code> writer - Priority Level 1 Enable\nField <code>LVLEN2</code> reader - Priority Level 2 Enable\nField <code>LVLEN2</code> writer - Priority Level 2 Enable\nField <code>LVLEN3</code> reader - Priority Level 3 Enable\nField <code>LVLEN3</code> writer - Priority Level 3 Enable\nRegister <code>CTRL</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nBit 1 - DMA Enable\nBit 1 - DMA Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 8 - Priority Level 0 Enable\nBit 8 - Priority Level 0 Enable\nBit 9 - Priority Level 1 Enable\nBit 9 - Priority Level 1 Enable\nBit 10 - Priority Level 2 Enable\nBit 10 - Priority Level 2 Enable\nBit 11 - Priority Level 3 Enable\nBit 11 - Priority Level 3 Enable\nBit 0 - Software Reset\nBit 0 - Software Reset\nDebug Control\nField <code>DBGRUN</code> reader - Debug Run\nField <code>DBGRUN</code> writer - Debug Run\nRegister <code>DBGCTRL</code> reader\nRegister <code>DBGCTRL</code> writer\nBit 0 - Debug Run\nBit 0 - Debug Run\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BUSY</code> reader - Busy\nField <code>BUSY</code> writer - Busy\nField <code>CRCERR</code> reader - CRC Error\nField <code>CRCERR</code> writer - CRC Error\nField <code>FERR</code> reader - Fetch Error\nField <code>FERR</code> writer - Fetch Error\nField <code>ID</code> reader - Channel ID\nField <code>ID</code> writer - Channel ID\nInterrupt Pending\nField <code>PEND</code> reader - Pending\nField <code>PEND</code> writer - Pending\nRegister <code>INTPEND</code> reader\nField <code>SUSP</code> reader - Channel Suspend\nField <code>SUSP</code> writer - Channel Suspend\nField <code>TCMPL</code> reader - Transfer Complete\nField <code>TCMPL</code> writer - Transfer Complete\nField <code>TERR</code> reader - Transfer Error\nField <code>TERR</code> writer - Transfer Error\nRegister <code>INTPEND</code> writer\nBit 14 - Busy\nBit 14 - Busy\nBit 12 - CRC Error\nBit 12 - CRC Error\nBit 13 - Fetch Error\nBit 13 - Fetch Error\nReturns the argument unchanged.\nBits 0:4 - Channel ID\nBits 0:4 - Channel ID\nCalls <code>U::from(self)</code>.\nBit 15 - Pending\nBit 15 - Pending\nBit 10 - Channel Suspend\nBit 10 - Channel Suspend\nBit 9 - Transfer Complete\nBit 9 - Transfer Complete\nBit 8 - Transfer Error\nBit 8 - Transfer Error\nField <code>CHINT0</code> reader - Channel 0 Pending Interrupt\nField <code>CHINT10</code> reader - Channel 10 Pending Interrupt\nField <code>CHINT11</code> reader - Channel 11 Pending Interrupt\nField <code>CHINT12</code> reader - Channel 12 Pending Interrupt\nField <code>CHINT13</code> reader - Channel 13 Pending Interrupt\nField <code>CHINT14</code> reader - Channel 14 Pending Interrupt\nField <code>CHINT15</code> reader - Channel 15 Pending Interrupt\nField <code>CHINT16</code> reader - Channel 16 Pending Interrupt\nField <code>CHINT17</code> reader - Channel 17 Pending Interrupt\nField <code>CHINT18</code> reader - Channel 18 Pending Interrupt\nField <code>CHINT19</code> reader - Channel 19 Pending Interrupt\nField <code>CHINT1</code> reader - Channel 1 Pending Interrupt\nField <code>CHINT20</code> reader - Channel 20 Pending Interrupt\nField <code>CHINT21</code> reader - Channel 21 Pending Interrupt\nField <code>CHINT22</code> reader - Channel 22 Pending Interrupt\nField <code>CHINT23</code> reader - Channel 23 Pending Interrupt\nField <code>CHINT24</code> reader - Channel 24 Pending Interrupt\nField <code>CHINT25</code> reader - Channel 25 Pending Interrupt\nField <code>CHINT26</code> reader - Channel 26 Pending Interrupt\nField <code>CHINT27</code> reader - Channel 27 Pending Interrupt\nField <code>CHINT28</code> reader - Channel 28 Pending Interrupt\nField <code>CHINT29</code> reader - Channel 29 Pending Interrupt\nField <code>CHINT2</code> reader - Channel 2 Pending Interrupt\nField <code>CHINT30</code> reader - Channel 30 Pending Interrupt\nField <code>CHINT31</code> reader - Channel 31 Pending Interrupt\nField <code>CHINT3</code> reader - Channel 3 Pending Interrupt\nField <code>CHINT4</code> reader - Channel 4 Pending Interrupt\nField <code>CHINT5</code> reader - Channel 5 Pending Interrupt\nField <code>CHINT6</code> reader - Channel 6 Pending Interrupt\nField <code>CHINT7</code> reader - Channel 7 Pending Interrupt\nField <code>CHINT8</code> reader - Channel 8 Pending Interrupt\nField <code>CHINT9</code> reader - Channel 9 Pending Interrupt\nInterrupt Status\nRegister <code>INTSTATUS</code> reader\nBit 0 - Channel 0 Pending Interrupt\nBit 1 - Channel 1 Pending Interrupt\nBit 10 - Channel 10 Pending Interrupt\nBit 11 - Channel 11 Pending Interrupt\nBit 12 - Channel 12 Pending Interrupt\nBit 13 - Channel 13 Pending Interrupt\nBit 14 - Channel 14 Pending Interrupt\nBit 15 - Channel 15 Pending Interrupt\nBit 16 - Channel 16 Pending Interrupt\nBit 17 - Channel 17 Pending Interrupt\nBit 18 - Channel 18 Pending Interrupt\nBit 19 - Channel 19 Pending Interrupt\nBit 2 - Channel 2 Pending Interrupt\nBit 20 - Channel 20 Pending Interrupt\nBit 21 - Channel 21 Pending Interrupt\nBit 22 - Channel 22 Pending Interrupt\nBit 23 - Channel 23 Pending Interrupt\nBit 24 - Channel 24 Pending Interrupt\nBit 25 - Channel 25 Pending Interrupt\nBit 26 - Channel 26 Pending Interrupt\nBit 27 - Channel 27 Pending Interrupt\nBit 28 - Channel 28 Pending Interrupt\nBit 29 - Channel 29 Pending Interrupt\nBit 3 - Channel 3 Pending Interrupt\nBit 30 - Channel 30 Pending Interrupt\nBit 31 - Channel 31 Pending Interrupt\nBit 4 - Channel 4 Pending Interrupt\nBit 5 - Channel 5 Pending Interrupt\nBit 6 - Channel 6 Pending Interrupt\nBit 7 - Channel 7 Pending Interrupt\nBit 8 - Channel 8 Pending Interrupt\nBit 9 - Channel 9 Pending Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>PENDCH0</code> reader - Pending Channel 0\nField <code>PENDCH10</code> reader - Pending Channel 10\nField <code>PENDCH11</code> reader - Pending Channel 11\nField <code>PENDCH12</code> reader - Pending Channel 12\nField <code>PENDCH13</code> reader - Pending Channel 13\nField <code>PENDCH14</code> reader - Pending Channel 14\nField <code>PENDCH15</code> reader - Pending Channel 15\nField <code>PENDCH16</code> reader - Pending Channel 16\nField <code>PENDCH17</code> reader - Pending Channel 17\nField <code>PENDCH18</code> reader - Pending Channel 18\nField <code>PENDCH19</code> reader - Pending Channel 19\nField <code>PENDCH1</code> reader - Pending Channel 1\nField <code>PENDCH20</code> reader - Pending Channel 20\nField <code>PENDCH21</code> reader - Pending Channel 21\nField <code>PENDCH22</code> reader - Pending Channel 22\nField <code>PENDCH23</code> reader - Pending Channel 23\nField <code>PENDCH24</code> reader - Pending Channel 24\nField <code>PENDCH25</code> reader - Pending Channel 25\nField <code>PENDCH26</code> reader - Pending Channel 26\nField <code>PENDCH27</code> reader - Pending Channel 27\nField <code>PENDCH28</code> reader - Pending Channel 28\nField <code>PENDCH29</code> reader - Pending Channel 29\nField <code>PENDCH2</code> reader - Pending Channel 2\nField <code>PENDCH30</code> reader - Pending Channel 30\nField <code>PENDCH31</code> reader - Pending Channel 31\nField <code>PENDCH3</code> reader - Pending Channel 3\nField <code>PENDCH4</code> reader - Pending Channel 4\nField <code>PENDCH5</code> reader - Pending Channel 5\nField <code>PENDCH6</code> reader - Pending Channel 6\nField <code>PENDCH7</code> reader - Pending Channel 7\nField <code>PENDCH8</code> reader - Pending Channel 8\nField <code>PENDCH9</code> reader - Pending Channel 9\nPending Channels\nRegister <code>PENDCH</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Pending Channel 0\nBit 1 - Pending Channel 1\nBit 10 - Pending Channel 10\nBit 11 - Pending Channel 11\nBit 12 - Pending Channel 12\nBit 13 - Pending Channel 13\nBit 14 - Pending Channel 14\nBit 15 - Pending Channel 15\nBit 16 - Pending Channel 16\nBit 17 - Pending Channel 17\nBit 18 - Pending Channel 18\nBit 19 - Pending Channel 19\nBit 2 - Pending Channel 2\nBit 20 - Pending Channel 20\nBit 21 - Pending Channel 21\nBit 22 - Pending Channel 22\nBit 23 - Pending Channel 23\nBit 24 - Pending Channel 24\nBit 25 - Pending Channel 25\nBit 26 - Pending Channel 26\nBit 27 - Pending Channel 27\nBit 28 - Pending Channel 28\nBit 29 - Pending Channel 29\nBit 3 - Pending Channel 3\nBit 30 - Pending Channel 30\nBit 31 - Pending Channel 31\nBit 4 - Pending Channel 4\nBit 5 - Pending Channel 5\nBit 6 - Pending Channel 6\nBit 7 - Pending Channel 7\nBit 8 - Pending Channel 8\nBit 9 - Pending Channel 9\n3: Latency critical\n3: Latency critical\n3: Latency critical\n3: Latency critical\nField <code>LVLPRI0</code> reader - Level 0 Channel Priority Number\nField <code>LVLPRI0</code> writer - Level 0 Channel Priority Number\nField <code>LVLPRI1</code> reader - Level 1 Channel Priority Number\nField <code>LVLPRI1</code> writer - Level 1 Channel Priority Number\nField <code>LVLPRI2</code> reader - Level 2 Channel Priority Number\nField <code>LVLPRI2</code> writer - Level 2 Channel Priority Number\nField <code>LVLPRI3</code> reader - Level 3 Channel Priority Number\nField <code>LVLPRI3</code> writer - Level 3 Channel Priority Number\nPriority Control 0\nField <code>QOS0</code> reader - Level 0 Quality of Service\nField <code>QOS0</code> writer - Level 0 Quality of Service\nLevel 0 Quality of Service\nField <code>QOS1</code> reader - Level 1 Quality of Service\nField <code>QOS1</code> writer - Level 1 Quality of Service\nLevel 1 Quality of Service\nField <code>QOS2</code> reader - Level 2 Quality of Service\nField <code>QOS2</code> writer - Level 2 Quality of Service\nLevel 2 Quality of Service\nField <code>QOS3</code> reader - Level 3 Quality of Service\nField <code>QOS3</code> writer - Level 3 Quality of Service\nLevel 3 Quality of Service\nRegister <code>PRICTRL0</code> reader\n0: Regular delivery\n0: Regular delivery\n0: Regular delivery\n0: Regular delivery\nField <code>RRLVLEN0</code> reader - Level 0 Round-Robin Scheduling …\nField <code>RRLVLEN0</code> writer - Level 0 Round-Robin Scheduling …\nField <code>RRLVLEN1</code> reader - Level 1 Round-Robin Scheduling …\nField <code>RRLVLEN1</code> writer - Level 1 Round-Robin Scheduling …\nField <code>RRLVLEN2</code> reader - Level 2 Round-Robin Scheduling …\nField <code>RRLVLEN2</code> writer - Level 2 Round-Robin Scheduling …\nField <code>RRLVLEN3</code> reader - Level 3 Round-Robin Scheduling …\nField <code>RRLVLEN3</code> writer - Level 3 Round-Robin Scheduling …\n2: Latency sensitive\n2: Latency sensitive\n2: Latency sensitive\n2: Latency sensitive\n1: Bandwidth shortage\n1: Bandwidth shortage\n1: Bandwidth shortage\n1: Bandwidth shortage\nRegister <code>PRICTRL0</code> writer\nLatency critical\nLatency critical\nLatency critical\nLatency critical\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLatency critical\nLatency critical\nLatency critical\nLatency critical\nRegular delivery\nRegular delivery\nRegular delivery\nRegular delivery\nLatency sensitive\nLatency sensitive\nLatency sensitive\nLatency sensitive\nBandwidth shortage\nBandwidth shortage\nBandwidth shortage\nBandwidth shortage\nBits 0:4 - Level 0 Channel Priority Number\nBits 0:4 - Level 0 Channel Priority Number\nBits 8:12 - Level 1 Channel Priority Number\nBits 8:12 - Level 1 Channel Priority Number\nBits 16:20 - Level 2 Channel Priority Number\nBits 16:20 - Level 2 Channel Priority Number\nBits 24:28 - Level 3 Channel Priority Number\nBits 24:28 - Level 3 Channel Priority Number\nBits 5:6 - Level 0 Quality of Service\nBits 5:6 - Level 0 Quality of Service\nBits 13:14 - Level 1 Quality of Service\nBits 13:14 - Level 1 Quality of Service\nBits 21:22 - Level 2 Quality of Service\nBits 21:22 - Level 2 Quality of Service\nBits 29:30 - Level 3 Quality of Service\nBits 29:30 - Level 3 Quality of Service\nRegular delivery\nRegular delivery\nRegular delivery\nRegular delivery\nBit 7 - Level 0 Round-Robin Scheduling Enable\nBit 7 - Level 0 Round-Robin Scheduling Enable\nBit 15 - Level 1 Round-Robin Scheduling Enable\nBit 15 - Level 1 Round-Robin Scheduling Enable\nBit 23 - Level 2 Round-Robin Scheduling Enable\nBit 23 - Level 2 Round-Robin Scheduling Enable\nBit 31 - Level 3 Round-Robin Scheduling Enable\nBit 31 - Level 3 Round-Robin Scheduling Enable\nLatency sensitive\nLatency sensitive\nLatency sensitive\nLatency sensitive\nBandwidth shortage\nBandwidth shortage\nBandwidth shortage\nBandwidth shortage\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nRegister <code>SWTRIGCTRL</code> reader\nField <code>SWTRIG0</code> reader - Channel 0 Software Trigger\nField <code>SWTRIG0</code> writer - Channel 0 Software Trigger\nField <code>SWTRIG10</code> reader - Channel 10 Software Trigger\nField <code>SWTRIG10</code> writer - Channel 10 Software Trigger\nField <code>SWTRIG11</code> reader - Channel 11 Software Trigger\nField <code>SWTRIG11</code> writer - Channel 11 Software Trigger\nField <code>SWTRIG12</code> reader - Channel 12 Software Trigger\nField <code>SWTRIG12</code> writer - Channel 12 Software Trigger\nField <code>SWTRIG13</code> reader - Channel 13 Software Trigger\nField <code>SWTRIG13</code> writer - Channel 13 Software Trigger\nField <code>SWTRIG14</code> reader - Channel 14 Software Trigger\nField <code>SWTRIG14</code> writer - Channel 14 Software Trigger\nField <code>SWTRIG15</code> reader - Channel 15 Software Trigger\nField <code>SWTRIG15</code> writer - Channel 15 Software Trigger\nField <code>SWTRIG16</code> reader - Channel 16 Software Trigger\nField <code>SWTRIG16</code> writer - Channel 16 Software Trigger\nField <code>SWTRIG17</code> reader - Channel 17 Software Trigger\nField <code>SWTRIG17</code> writer - Channel 17 Software Trigger\nField <code>SWTRIG18</code> reader - Channel 18 Software Trigger\nField <code>SWTRIG18</code> writer - Channel 18 Software Trigger\nField <code>SWTRIG19</code> reader - Channel 19 Software Trigger\nField <code>SWTRIG19</code> writer - Channel 19 Software Trigger\nField <code>SWTRIG1</code> reader - Channel 1 Software Trigger\nField <code>SWTRIG1</code> writer - Channel 1 Software Trigger\nField <code>SWTRIG20</code> reader - Channel 20 Software Trigger\nField <code>SWTRIG20</code> writer - Channel 20 Software Trigger\nField <code>SWTRIG21</code> reader - Channel 21 Software Trigger\nField <code>SWTRIG21</code> writer - Channel 21 Software Trigger\nField <code>SWTRIG22</code> reader - Channel 22 Software Trigger\nField <code>SWTRIG22</code> writer - Channel 22 Software Trigger\nField <code>SWTRIG23</code> reader - Channel 23 Software Trigger\nField <code>SWTRIG23</code> writer - Channel 23 Software Trigger\nField <code>SWTRIG24</code> reader - Channel 24 Software Trigger\nField <code>SWTRIG24</code> writer - Channel 24 Software Trigger\nField <code>SWTRIG25</code> reader - Channel 25 Software Trigger\nField <code>SWTRIG25</code> writer - Channel 25 Software Trigger\nField <code>SWTRIG26</code> reader - Channel 26 Software Trigger\nField <code>SWTRIG26</code> writer - Channel 26 Software Trigger\nField <code>SWTRIG27</code> reader - Channel 27 Software Trigger\nField <code>SWTRIG27</code> writer - Channel 27 Software Trigger\nField <code>SWTRIG28</code> reader - Channel 28 Software Trigger\nField <code>SWTRIG28</code> writer - Channel 28 Software Trigger\nField <code>SWTRIG29</code> reader - Channel 29 Software Trigger\nField <code>SWTRIG29</code> writer - Channel 29 Software Trigger\nField <code>SWTRIG2</code> reader - Channel 2 Software Trigger\nField <code>SWTRIG2</code> writer - Channel 2 Software Trigger\nField <code>SWTRIG30</code> reader - Channel 30 Software Trigger\nField <code>SWTRIG30</code> writer - Channel 30 Software Trigger\nField <code>SWTRIG31</code> reader - Channel 31 Software Trigger\nField <code>SWTRIG31</code> writer - Channel 31 Software Trigger\nField <code>SWTRIG3</code> reader - Channel 3 Software Trigger\nField <code>SWTRIG3</code> writer - Channel 3 Software Trigger\nField <code>SWTRIG4</code> reader - Channel 4 Software Trigger\nField <code>SWTRIG4</code> writer - Channel 4 Software Trigger\nField <code>SWTRIG5</code> reader - Channel 5 Software Trigger\nField <code>SWTRIG5</code> writer - Channel 5 Software Trigger\nField <code>SWTRIG6</code> reader - Channel 6 Software Trigger\nField <code>SWTRIG6</code> writer - Channel 6 Software Trigger\nField <code>SWTRIG7</code> reader - Channel 7 Software Trigger\nField <code>SWTRIG7</code> writer - Channel 7 Software Trigger\nField <code>SWTRIG8</code> reader - Channel 8 Software Trigger\nField <code>SWTRIG8</code> writer - Channel 8 Software Trigger\nField <code>SWTRIG9</code> reader - Channel 9 Software Trigger\nField <code>SWTRIG9</code> writer - Channel 9 Software Trigger\nSoftware Trigger Control\nRegister <code>SWTRIGCTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel 0 Software Trigger\nBit 0 - Channel 0 Software Trigger\nBit 1 - Channel 1 Software Trigger\nBit 1 - Channel 1 Software Trigger\nBit 10 - Channel 10 Software Trigger\nBit 10 - Channel 10 Software Trigger\nBit 11 - Channel 11 Software Trigger\nBit 11 - Channel 11 Software Trigger\nBit 12 - Channel 12 Software Trigger\nBit 12 - Channel 12 Software Trigger\nBit 13 - Channel 13 Software Trigger\nBit 13 - Channel 13 Software Trigger\nBit 14 - Channel 14 Software Trigger\nBit 14 - Channel 14 Software Trigger\nBit 15 - Channel 15 Software Trigger\nBit 15 - Channel 15 Software Trigger\nBit 16 - Channel 16 Software Trigger\nBit 16 - Channel 16 Software Trigger\nBit 17 - Channel 17 Software Trigger\nBit 17 - Channel 17 Software Trigger\nBit 18 - Channel 18 Software Trigger\nBit 18 - Channel 18 Software Trigger\nBit 19 - Channel 19 Software Trigger\nBit 19 - Channel 19 Software Trigger\nBit 2 - Channel 2 Software Trigger\nBit 2 - Channel 2 Software Trigger\nBit 20 - Channel 20 Software Trigger\nBit 20 - Channel 20 Software Trigger\nBit 21 - Channel 21 Software Trigger\nBit 21 - Channel 21 Software Trigger\nBit 22 - Channel 22 Software Trigger\nBit 22 - Channel 22 Software Trigger\nBit 23 - Channel 23 Software Trigger\nBit 23 - Channel 23 Software Trigger\nBit 24 - Channel 24 Software Trigger\nBit 24 - Channel 24 Software Trigger\nBit 25 - Channel 25 Software Trigger\nBit 25 - Channel 25 Software Trigger\nBit 26 - Channel 26 Software Trigger\nBit 26 - Channel 26 Software Trigger\nBit 27 - Channel 27 Software Trigger\nBit 27 - Channel 27 Software Trigger\nBit 28 - Channel 28 Software Trigger\nBit 28 - Channel 28 Software Trigger\nBit 29 - Channel 29 Software Trigger\nBit 29 - Channel 29 Software Trigger\nBit 3 - Channel 3 Software Trigger\nBit 3 - Channel 3 Software Trigger\nBit 30 - Channel 30 Software Trigger\nBit 30 - Channel 30 Software Trigger\nBit 31 - Channel 31 Software Trigger\nBit 31 - Channel 31 Software Trigger\nBit 4 - Channel 4 Software Trigger\nBit 4 - Channel 4 Software Trigger\nBit 5 - Channel 5 Software Trigger\nBit 5 - Channel 5 Software Trigger\nBit 6 - Channel 6 Software Trigger\nBit 6 - Channel 6 Software Trigger\nBit 7 - Channel 7 Software Trigger\nBit 7 - Channel 7 Software Trigger\nBit 8 - Channel 8 Software Trigger\nBit 8 - Channel 8 Software Trigger\nBit 9 - Channel 9 Software Trigger\nBit 9 - Channel 9 Software Trigger\nRegister <code>WRBADDR</code> reader\nRegister <code>WRBADDR</code> writer\nField <code>WRBADDR</code> reader - Write-Back Memory Base Address\nWrite-Back Memory Section Base Address\nField <code>WRBADDR</code> writer - Write-Back Memory Base Address\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:31 - Write-Back Memory Base Address\nBits 0:31 - Write-Back Memory Base Address\nADDR (rw) register accessor: Address\nCFG (rw) register accessor: Configuration\nCID0 (r) register accessor: Component Identification 0\nCID1 (r) register accessor: Component Identification 1\nCID2 (r) register accessor: Component Identification 2\nCID3 (r) register accessor: Component Identification 3\nCTRL (w) register accessor: Control\nDATA (rw) register accessor: Data\nDCC (rw) register accessor: Debug Communication Channel n\nDCFG (rw) register accessor: Device Configuration\nDID (r) register accessor: Device Identification\nEND (r) register accessor: CoreSight ROM Table End\nENTRY0 (r) register accessor: CoreSight ROM Table Entry 0\nENTRY1 (r) register accessor: CoreSight ROM Table Entry 1\nLENGTH (rw) register accessor: Length\nMEMTYPE (r) register accessor: CoreSight ROM Table Memory …\nPID0 (r) register accessor: Peripheral Identification 0\nPID1 (r) register accessor: Peripheral Identification 1\nPID2 (r) register accessor: Peripheral Identification 2\nPID3 (r) register accessor: Peripheral Identification 3\nPID4 (r) register accessor: Peripheral Identification 4\nPID5 (r) register accessor: Peripheral Identification 5\nPID6 (r) register accessor: Peripheral Identification 6\nPID7 (r) register accessor: Peripheral Identification 7\nRegister block\nSTATUSA (rw) register accessor: Status A\nSTATUSB (r) register accessor: Status B\nAddress\n0x04 - Address\nConfiguration\n0x1c - Configuration\nComponent Identification 0\n0x1ff0 - Component Identification 0\nComponent Identification 1\n0x1ff4 - Component Identification 1\nComponent Identification 2\n0x1ff8 - Component Identification 2\nComponent Identification 3\n0x1ffc - Component Identification 3\nControl\n0x00 - Control\nData\n0x0c - Data\nDebug Communication Channel n\n0x10..0x18 - Debug Communication Channel n\nIterator for array of: 0x10..0x18 - Debug Communication …\nDevice Configuration\n0xf0..0xf8 - Device Configuration\nIterator for array of: 0xf0..0xf8 - Device Configuration\nDevice Identification\n0x18 - Device Identification\nCoreSight ROM Table End\n0x1008 - CoreSight ROM Table End\nCoreSight ROM Table Entry 0\n0x1000 - CoreSight ROM Table Entry 0\nCoreSight ROM Table Entry 1\n0x1004 - CoreSight ROM Table Entry 1\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLength\n0x08 - Length\nCoreSight ROM Table Memory Type\n0x1fcc - CoreSight ROM Table Memory Type\nPeripheral Identification 0\n0x1fe0 - Peripheral Identification 0\nPeripheral Identification 1\n0x1fe4 - Peripheral Identification 1\nPeripheral Identification 2\n0x1fe8 - Peripheral Identification 2\nPeripheral Identification 3\n0x1fec - Peripheral Identification 3\nPeripheral Identification 4\n0x1fd0 - Peripheral Identification 4\nPeripheral Identification 5\n0x1fd4 - Peripheral Identification 5\nPeripheral Identification 6\n0x1fd8 - Peripheral Identification 6\nPeripheral Identification 7\n0x1fdc - Peripheral Identification 7\nStatus A\n0x01 - Status A\nStatus B\n0x02 - Status B\nField <code>ADDR</code> reader - Address\nAddress\nField <code>ADDR</code> writer - Address\nField <code>AMOD</code> reader - Access Mode\nField <code>AMOD</code> writer - Access Mode\nRegister <code>ADDR</code> reader\nRegister <code>ADDR</code> writer\nBits 2:31 - Address\nBits 2:31 - Address\nBits 0:1 - Access Mode\nBits 0:1 - Access Mode\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConfiguration\nField <code>DCCDMALEVEL</code> reader - DMA Trigger Level\nField <code>DCCDMALEVEL</code> writer - DMA Trigger Level\nDMA Trigger Level\n0: Trigger rises when DCC is empty\nField <code>ETBRAMEN</code> reader - Trace Control\nField <code>ETBRAMEN</code> writer - Trace Control\n1: Trigger rises when DCC is full\nField <code>LQOS</code> reader - Latency Quality Of Service\nField <code>LQOS</code> writer - Latency Quality Of Service\nRegister <code>CFG</code> reader\nRegister <code>CFG</code> writer\nBits 2:3 - DMA Trigger Level\nBits 2:3 - DMA Trigger Level\nTrigger rises when DCC is empty\nBit 4 - Trace Control\nBit 4 - Trace Control\nReturns the argument unchanged.\nReturns the argument unchanged.\nTrigger rises when DCC is full\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrigger rises when DCC is empty\nTrigger rises when DCC is full\nBits 0:1 - Latency Quality Of Service\nBits 0:1 - Latency Quality Of Service\nGet enumerated values variant\nComponent Identification 0\nField <code>PREAMBLEB0</code> reader - Preamble Byte 0\nRegister <code>CID0</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Preamble Byte 0\nField <code>CCLASS</code> reader - Component Class\nComponent Identification 1\nField <code>PREAMBLE</code> reader - Preamble\nRegister <code>CID1</code> reader\nBits 4:7 - Component Class\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:3 - Preamble\nComponent Identification 2\nField <code>PREAMBLEB2</code> reader - Preamble Byte 2\nRegister <code>CID2</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Preamble Byte 2\nComponent Identification 3\nField <code>PREAMBLEB3</code> reader - Preamble Byte 3\nRegister <code>CID3</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Preamble Byte 3\nField <code>CE</code> writer - Chip-Erase\nField <code>CRC</code> writer - 32-bit Cyclic Redundancy Code\nControl\nField <code>MBIST</code> writer - Memory built-in self-test\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRL</code> writer\nBit 4 - Chip-Erase\nBit 2 - 32-bit Cyclic Redundancy Code\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 3 - Memory built-in self-test\nBit 0 - Software Reset\nField <code>DATA</code> reader - Data\nData\nField <code>DATA</code> writer - Data\nRegister <code>DATA</code> reader\nRegister <code>DATA</code> writer\nBits 0:31 - Data\nBits 0:31 - Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DATA</code> reader - Data\nField <code>DATA</code> writer - Data\nDebug Communication Channel n\nRegister <code>DCC[%s]</code> reader\nRegister <code>DCC[%s]</code> writer\nBits 0:31 - Data\nBits 0:31 - Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DCFG</code> reader - Device Configuration\nDevice Configuration\nField <code>DCFG</code> writer - Device Configuration\nRegister <code>DCFG[%s]</code> reader\nRegister <code>DCFG[%s]</code> writer\nBits 0:31 - Device Configuration\nBits 0:31 - Device Configuration\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n6: Cortex-M4 with FPU\nField <code>DEVSEL</code> reader - Device Select\nDevice Identification\nField <code>DIE</code> reader - Die Number\nField <code>FAMILY</code> reader - Family\nFamily\nField <code>PROCESSOR</code> reader - Processor\nProcessor\nRegister <code>DID</code> reader\nField <code>REVISION</code> reader - Revision Number\n6: SAM D51\n0: General purpose microcontroller\n1: SAM E51\n3: SAM E53\n4: SAM E54\n3: PicoPower\nField <code>SERIES</code> reader - Series\nSeries\nBits 0:7 - Device Select\nBits 12:15 - Die Number\nBits 23:27 - Family\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCortex-M4 with FPU\nSAM D51\nGeneral purpose microcontroller\nSAM E51\nSAM E53\nSAM E54\nPicoPower\nBits 28:31 - Processor\nBits 8:11 - Revision Number\nBits 16:21 - Series\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>END</code> reader - End Marker\nCoreSight ROM Table End\nRegister <code>END</code> reader\nBits 0:31 - End Marker\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>ADDOFF</code> reader - Address Offset\nCoreSight ROM Table Entry 0\nField <code>EPRES</code> reader - Entry Present\nField <code>FMT</code> reader - Format\nRegister <code>ENTRY0</code> reader\nBits 12:31 - Address Offset\nBit 0 - Entry Present\nBit 1 - Format\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCoreSight ROM Table Entry 1\nRegister <code>ENTRY1</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>LENGTH</code> reader - Length\nLength\nField <code>LENGTH</code> writer - Length\nRegister <code>LENGTH</code> reader\nRegister <code>LENGTH</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 2:31 - Length\nBits 2:31 - Length\nCoreSight ROM Table Memory Type\nRegister <code>MEMTYPE</code> reader\nField <code>SMEMP</code> reader - System Memory Present\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - System Memory Present\nField <code>PARTNBL</code> reader - Part Number Low\nPeripheral Identification 0\nRegister <code>PID0</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Part Number Low\nField <code>JEPIDCL</code> reader - Low part of the JEP-106 Identity …\nField <code>PARTNBH</code> reader - Part Number High\nPeripheral Identification 1\nRegister <code>PID1</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 4:7 - Low part of the JEP-106 Identity Code\nBits 0:3 - Part Number High\nField <code>JEPIDCH</code> reader - JEP-106 Identity Code High\nField <code>JEPU</code> reader - JEP-106 Identity Code is used\nPeripheral Identification 2\nRegister <code>PID2</code> reader\nField <code>REVISION</code> reader - Revision Number\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:2 - JEP-106 Identity Code High\nBit 3 - JEP-106 Identity Code is used\nBits 4:7 - Revision Number\nField <code>CUSMOD</code> reader - ARM CUSMOD\nPeripheral Identification 3\nRegister <code>PID3</code> reader\nField <code>REVAND</code> reader - Revision Number\nBits 0:3 - ARM CUSMOD\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 4:7 - Revision Number\nField <code>FKBC</code> reader - 4KB count\nField <code>JEPCC</code> reader - JEP-106 Continuation Code\nPeripheral Identification 4\nRegister <code>PID4</code> reader\nBits 4:7 - 4KB count\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:3 - JEP-106 Continuation Code\nPeripheral Identification 5\nRegister <code>PID5</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPeripheral Identification 6\nRegister <code>PID6</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPeripheral Identification 7\nRegister <code>PID7</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BERR</code> reader - Bus Error\nField <code>BERR</code> writer - Bus Error\nField <code>CRSTEXT</code> reader - CPU Reset Phase Extension\nField <code>CRSTEXT</code> writer - CPU Reset Phase Extension\nField <code>DONE</code> reader - Done\nField <code>DONE</code> writer - Done\nField <code>FAIL</code> reader - Failure\nField <code>FAIL</code> writer - Failure\nField <code>PERR</code> reader - Protection Error\nField <code>PERR</code> writer - Protection Error\nRegister <code>STATUSA</code> reader\nStatus A\nRegister <code>STATUSA</code> writer\nBit 2 - Bus Error\nBit 2 - Bus Error\nBit 1 - CPU Reset Phase Extension\nBit 1 - CPU Reset Phase Extension\nBit 0 - Done\nBit 0 - Done\nBit 3 - Failure\nBit 3 - Failure\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Protection Error\nBit 4 - Protection Error\nField <code>CELCK</code> reader - Chip Erase Locked\nField <code>DBGPRES</code> reader - Debugger Present\nField <code>DCCD0</code> reader - Debug Communication Channel 0 Dirty\nField <code>DCCD1</code> reader - Debug Communication Channel 1 Dirty\nField <code>HPE</code> reader - Hot-Plugging Enable\nField <code>PROT</code> reader - Protected\nRegister <code>STATUSB</code> reader\nStatus B\nBit 5 - Chip Erase Locked\nBit 1 - Debugger Present\nBit 2 - Debug Communication Channel 0 Dirty\nBit 3 - Debug Communication Channel 1 Dirty\nReturns the argument unchanged.\nBit 4 - Hot-Plugging Enable\nCalls <code>U::from(self)</code>.\nBit 0 - Protected\nASYNCH (rw) register accessor: External Interrupt …\nCONFIG (rw) register accessor: External Interrupt Sense …\nCTRLA (rw) register accessor: Control A\nDEBOUNCEN (rw) register accessor: Debouncer Enable\nDPRESCALER (rw) register accessor: Debouncer Prescaler\nEVCTRL (rw) register accessor: Event Control\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nNMICTRL (rw) register accessor: Non-Maskable Interrupt …\nNMIFLAG (rw) register accessor: Non-Maskable Interrupt …\nPINSTATE (r) register accessor: Pin State\nRegister block\nSYNCBUSY (r) register accessor: Synchronization Busy\nExternal Interrupt Asynchronous Mode\n0x18 - External Interrupt Asynchronous Mode\nExternal Interrupt Sense Configuration\n0x1c..0x24 - External Interrupt Sense Configuration\nIterator for array of: 0x1c..0x24 - External Interrupt …\nControl A\n0x00 - Control A\nDebouncer Enable\n0x30 - Debouncer Enable\nDebouncer Prescaler\n0x34 - Debouncer Prescaler\nEvent Control\n0x08 - Event Control\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x0c - Interrupt Enable Clear\nInterrupt Enable Set\n0x10 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x14 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nNon-Maskable Interrupt Control\n0x01 - Non-Maskable Interrupt Control\nNon-Maskable Interrupt Flag Status and Clear\n0x02 - Non-Maskable Interrupt Flag Status and Clear\nPin State\n0x38 - Pin State\nSynchronization Busy\n0x04 - Synchronization Busy\n1: Edge detection is clock asynchronously operated\nField <code>ASYNCH</code> reader - Asynchronous Edge Detection Mode\nExternal Interrupt Asynchronous Mode\nField <code>ASYNCH</code> writer - Asynchronous Edge Detection Mode\nAsynchronous Edge Detection Mode\nRegister <code>ASYNCH</code> reader\n0: Edge detection is clock synchronously operated\nRegister <code>ASYNCH</code> writer\nEdge detection is clock asynchronously operated\nBits 0:15 - Asynchronous Edge Detection Mode\nBits 0:15 - Asynchronous Edge Detection Mode\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEdge detection is clock asynchronously operated\nEdge detection is clock synchronously operated\nEdge detection is clock synchronously operated\nGet enumerated values variant\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\n3: Both edges detection\nExternal Interrupt Sense Configuration\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\n2: Falling edge detection\nField <code>FILTEN0</code> reader - Filter Enable 0\nField <code>FILTEN0</code> writer - Filter Enable 0\nField <code>FILTEN1</code> reader - Filter Enable 1\nField <code>FILTEN1</code> writer - Filter Enable 1\nField <code>FILTEN2</code> reader - Filter Enable 2\nField <code>FILTEN2</code> writer - Filter Enable 2\nField <code>FILTEN3</code> reader - Filter Enable 3\nField <code>FILTEN3</code> writer - Filter Enable 3\nField <code>FILTEN4</code> reader - Filter Enable 4\nField <code>FILTEN4</code> writer - Filter Enable 4\nField <code>FILTEN5</code> reader - Filter Enable 5\nField <code>FILTEN5</code> writer - Filter Enable 5\nField <code>FILTEN6</code> reader - Filter Enable 6\nField <code>FILTEN6</code> writer - Filter Enable 6\nField <code>FILTEN7</code> reader - Filter Enable 7\nField <code>FILTEN7</code> writer - Filter Enable 7\n4: High level detection\n4: High level detection\n4: High level detection\n4: High level detection\n4: High level detection\n4: High level detection\n4: High level detection\n4: High level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n5: Low level detection\n0: No detection\n0: No detection\n0: No detection\n0: No detection\n0: No detection\n0: No detection\n0: No detection\n0: No detection\nRegister <code>CONFIG[%s]</code> reader\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\n1: Rising edge detection\nField <code>SENSE0</code> reader - Input Sense Configuration 0\nField <code>SENSE0</code> writer - Input Sense Configuration 0\nInput Sense Configuration 0\nField <code>SENSE1</code> reader - Input Sense Configuration 1\nField <code>SENSE1</code> writer - Input Sense Configuration 1\nInput Sense Configuration 1\nField <code>SENSE2</code> reader - Input Sense Configuration 2\nField <code>SENSE2</code> writer - Input Sense Configuration 2\nInput Sense Configuration 2\nField <code>SENSE3</code> reader - Input Sense Configuration 3\nField <code>SENSE3</code> writer - Input Sense Configuration 3\nInput Sense Configuration 3\nField <code>SENSE4</code> reader - Input Sense Configuration 4\nField <code>SENSE4</code> writer - Input Sense Configuration 4\nInput Sense Configuration 4\nField <code>SENSE5</code> reader - Input Sense Configuration 5\nField <code>SENSE5</code> writer - Input Sense Configuration 5\nInput Sense Configuration 5\nField <code>SENSE6</code> reader - Input Sense Configuration 6\nField <code>SENSE6</code> writer - Input Sense Configuration 6\nInput Sense Configuration 6\nField <code>SENSE7</code> reader - Input Sense Configuration 7\nField <code>SENSE7</code> writer - Input Sense Configuration 7\nInput Sense Configuration 7\nRegister <code>CONFIG[%s]</code> writer\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nBit 3 - Filter Enable 0\nBit 3 - Filter Enable 0\nBit 7 - Filter Enable 1\nBit 7 - Filter Enable 1\nBit 11 - Filter Enable 2\nBit 11 - Filter Enable 2\nBit 15 - Filter Enable 3\nBit 15 - Filter Enable 3\nBit 19 - Filter Enable 4\nBit 19 - Filter Enable 4\nBit 23 - Filter Enable 5\nBit 23 - Filter Enable 5\nBit 27 - Filter Enable 6\nBit 27 - Filter Enable 6\nBit 31 - Filter Enable 7\nBit 31 - Filter Enable 7\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nBoth edges detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nFalling edge detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nHigh level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nLow level detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nNo detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nRising edge detection\nBits 0:2 - Input Sense Configuration 0\nBits 0:2 - Input Sense Configuration 0\nBits 4:6 - Input Sense Configuration 1\nBits 4:6 - Input Sense Configuration 1\nBits 8:10 - Input Sense Configuration 2\nBits 8:10 - Input Sense Configuration 2\nBits 12:14 - Input Sense Configuration 3\nBits 12:14 - Input Sense Configuration 3\nBits 16:18 - Input Sense Configuration 4\nBits 16:18 - Input Sense Configuration 4\nBits 20:22 - Input Sense Configuration 5\nBits 20:22 - Input Sense Configuration 5\nBits 24:26 - Input Sense Configuration 6\nBits 24:26 - Input Sense Configuration 6\nBits 28:30 - Input Sense Configuration 7\nBits 28:30 - Input Sense Configuration 7\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>CKSEL</code> reader - Clock Selection\nField <code>CKSEL</code> writer - Clock Selection\nClock Selection\n0: Clocked by GCLK\n1: Clocked by ULP32K\nControl A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 4 - Clock Selection\nBit 4 - Clock Selection\nClocked by GCLK\nClocked by ULP32K\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClocked by GCLK\nClocked by ULP32K\nBit 0 - Software Reset\nBit 0 - Software Reset\nGet enumerated values variant\nField <code>DEBOUNCEN</code> reader - Debouncer Enable\nDebouncer Enable\nField <code>DEBOUNCEN</code> writer - Debouncer Enable\nRegister <code>DEBOUNCEN</code> reader\nRegister <code>DEBOUNCEN</code> writer\nBits 0:15 - Debouncer Enable\nBits 0:15 - Debouncer Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n0: Clocked by GCLK\n1: Clocked by Low Frequency Clock\n6: EIC clock divided by 128\n6: EIC clock divided by 128\n3: EIC clock divided by 16\n3: EIC clock divided by 16\n0: EIC clock divided by 2\n0: EIC clock divided by 2\n7: EIC clock divided by 256\n7: EIC clock divided by 256\n4: EIC clock divided by 32\n4: EIC clock divided by 32\n1: EIC clock divided by 4\n1: EIC clock divided by 4\n5: EIC clock divided by 64\n5: EIC clock divided by 64\n2: EIC clock divided by 8\n2: EIC clock divided by 8\nDebouncer Prescaler\n0: 3 low frequency samples\n0: 3 low frequency samples\n1: 7 low frequency samples\n1: 7 low frequency samples\nField <code>PRESCALER0</code> reader - Debouncer Prescaler\nField <code>PRESCALER0</code> writer - Debouncer Prescaler\nDebouncer Prescaler\nField <code>PRESCALER1</code> reader - Debouncer Prescaler\nField <code>PRESCALER1</code> writer - Debouncer Prescaler\nDebouncer Prescaler\nRegister <code>DPRESCALER</code> reader\nField <code>STATES0</code> reader - Debouncer number of states\nField <code>STATES0</code> writer - Debouncer number of states\nDebouncer number of states\nField <code>STATES1</code> reader - Debouncer number of states\nField <code>STATES1</code> writer - Debouncer number of states\nDebouncer number of states\nField <code>TICKON</code> reader - Pin Sampler frequency selection\nField <code>TICKON</code> writer - Pin Sampler frequency selection\nPin Sampler frequency selection\nRegister <code>DPRESCALER</code> writer\nClocked by GCLK\nClocked by Low Frequency Clock\nEIC clock divided by 128\nEIC clock divided by 128\nEIC clock divided by 16\nEIC clock divided by 16\nEIC clock divided by 2\nEIC clock divided by 2\nEIC clock divided by 256\nEIC clock divided by 256\nEIC clock divided by 32\nEIC clock divided by 32\nEIC clock divided by 4\nEIC clock divided by 4\nEIC clock divided by 64\nEIC clock divided by 64\nEIC clock divided by 8\nEIC clock divided by 8\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClocked by GCLK\nClocked by Low Frequency Clock\nEIC clock divided by 128\nEIC clock divided by 128\nEIC clock divided by 16\nEIC clock divided by 16\nEIC clock divided by 2\nEIC clock divided by 2\nEIC clock divided by 256\nEIC clock divided by 256\nEIC clock divided by 32\nEIC clock divided by 32\nEIC clock divided by 4\nEIC clock divided by 4\nEIC clock divided by 64\nEIC clock divided by 64\nEIC clock divided by 8\nEIC clock divided by 8\n3 low frequency samples\n3 low frequency samples\n7 low frequency samples\n7 low frequency samples\n3 low frequency samples\n3 low frequency samples\n7 low frequency samples\n7 low frequency samples\nBits 0:2 - Debouncer Prescaler\nBits 0:2 - Debouncer Prescaler\nBits 4:6 - Debouncer Prescaler\nBits 4:6 - Debouncer Prescaler\nBit 3 - Debouncer number of states\nBit 3 - Debouncer number of states\nBit 7 - Debouncer number of states\nBit 7 - Debouncer number of states\nBit 16 - Pin Sampler frequency selection\nBit 16 - Pin Sampler frequency selection\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nEvent Control\nField <code>EXTINTEO</code> reader - External Interrupt Event Output …\nField <code>EXTINTEO</code> writer - External Interrupt Event Output …\nRegister <code>EVCTRL</code> reader\nRegister <code>EVCTRL</code> writer\nBits 0:15 - External Interrupt Event Output Enable\nBits 0:15 - External Interrupt Event Output Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EXTINT</code> reader - External Interrupt Enable\nField <code>EXTINT</code> writer - External Interrupt Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nBits 0:15 - External Interrupt Enable\nBits 0:15 - External Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EXTINT</code> reader - External Interrupt Enable\nField <code>EXTINT</code> writer - External Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nBits 0:15 - External Interrupt Enable\nBits 0:15 - External Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>EXTINT</code> reader - External Interrupt\nField <code>EXTINT</code> writer - External Interrupt\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nBits 0:15 - External Interrupt\nBits 0:15 - External Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n1: Edge detection is clock asynchronously operated\n3: Both-edges detection\n2: Falling-edge detection\n4: High-level detection\n5: Low-level detection\nField <code>NMIASYNCH</code> reader - Asynchronous Edge Detection Mode\nField <code>NMIASYNCH</code> writer - Asynchronous Edge Detection Mode\nAsynchronous Edge Detection Mode\nNon-Maskable Interrupt Control\nField <code>NMIFILTEN</code> reader - Non-Maskable Interrupt Filter …\nField <code>NMIFILTEN</code> writer - Non-Maskable Interrupt Filter …\nField <code>NMISENSE</code> reader - Non-Maskable Interrupt Sense …\nField <code>NMISENSE</code> writer - Non-Maskable Interrupt Sense …\nNon-Maskable Interrupt Sense Configuration\n0: No detection\nRegister <code>NMICTRL</code> reader\n1: Rising-edge detection\n0: Edge detection is clock synchronously operated\nRegister <code>NMICTRL</code> writer\nEdge detection is clock asynchronously operated\nBoth-edges detection\nFalling-edge detection\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHigh-level detection\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEdge detection is clock asynchronously operated\nBoth-edges detection\nFalling-edge detection\nHigh-level detection\nLow-level detection\nNo detection\nRising-edge detection\nEdge detection is clock synchronously operated\nLow-level detection\nBit 4 - Asynchronous Edge Detection Mode\nBit 4 - Asynchronous Edge Detection Mode\nBit 3 - Non-Maskable Interrupt Filter Enable\nBit 3 - Non-Maskable Interrupt Filter Enable\nBits 0:2 - Non-Maskable Interrupt Sense Configuration\nBits 0:2 - Non-Maskable Interrupt Sense Configuration\nNo detection\nRising-edge detection\nEdge detection is clock synchronously operated\nGet enumerated values variant\nGet enumerated values variant\nField <code>NMI</code> reader - Non-Maskable Interrupt\nField <code>NMI</code> writer - Non-Maskable Interrupt\nNon-Maskable Interrupt Flag Status and Clear\nRegister <code>NMIFLAG</code> reader\nRegister <code>NMIFLAG</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Non-Maskable Interrupt\nBit 0 - Non-Maskable Interrupt\nField <code>PINSTATE</code> reader - Pin State\nPin State\nRegister <code>PINSTATE</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:15 - Pin State\nField <code>ENABLE</code> reader - Enable Synchronization Busy Status\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchronization Busy …\nSynchronization Busy\nBit 1 - Enable Synchronization Busy Status\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset Synchronization Busy Status\nAUTHSTATUS (r) register accessor: ETM Authentication …\nCCER (r) register accessor: ETM Configuration Code …\nCCR (r) register accessor: ETM Configuration Code Register\nCIDR0 (r) register accessor: ETM Component Identification …\nCIDR1 (r) register accessor: ETM Component Identification …\nCIDR2 (r) register accessor: ETM Component Identification …\nCIDR3 (r) register accessor: ETM Component Identification …\nCLAIMCLR (rw) register accessor: ETM Claim Tag Clear …\nCLAIMSET (rw) register accessor: ETM Claim Tag Set Register\nCNTRLDVR1 (rw) register accessor: ETM Free-running Counter …\nCR (rw) register accessor: ETM Main Control Register\nDEVTYPE (r) register accessor: ETM CoreSight Device Type …\nFFLR (rw) register accessor: ETM FIFO Full Level Register\nIDR (r) register accessor: ETM ID Register\nIDR2 (r) register accessor: ETM ID Register 2\nITATBCTR0 (w) register accessor: ETM Integration Test ATB …\nITATBCTR2 (r) register accessor: ETM Integration Test ATB …\nITCTRL (rw) register accessor: ETM Integration Mode …\nITMISCIN (r) register accessor: ETM Integration Test …\nITTRIGOUT (w) register accessor: ETM Integration Test …\nLAR (w) register accessor: ETM Lock Access Register\nLSR (r) register accessor: ETM Lock Status Register\nPDSR (r) register accessor: ETM Device Power-Down Status …\nPIDR0 (r) register accessor: ETM Peripheral Identification …\nPIDR1 (r) register accessor: ETM Peripheral Identification …\nPIDR2 (r) register accessor: ETM Peripheral Identification …\nPIDR3 (r) register accessor: ETM Peripheral Identification …\nPIDR4 (r) register accessor: ETM Peripheral Identification …\nPIDR5 (r) register accessor: ETM Peripheral Identification …\nPIDR6 (r) register accessor: ETM Peripheral Identification …\nPIDR7 (r) register accessor: ETM Peripheral Identification …\nRegister block\nSCR (r) register accessor: ETM System Configuration …\nSR (rw) register accessor: ETM Status Register\nSYNCFR (r) register accessor: ETM Synchronization …\nTECR1 (rw) register accessor: ETM TraceEnable Control 1 …\nTEEVR (rw) register accessor: ETM TraceEnable Event …\nTESSEICR (rw) register accessor: ETM TraceEnable …\nTRACEIDR (rw) register accessor: ETM CoreSight Trace ID …\nTRIGGER (rw) register accessor: ETM Trigger Event Register\nTSEVT (rw) register accessor: ETM TimeStamp Event Register\nETM Authentication Status Register\n0xfb8 - ETM Authentication Status Register\nETM Configuration Code Extension Register\n0x1e8 - ETM Configuration Code Extension Register\nETM Configuration Code Register\n0x04 - ETM Configuration Code Register\nETM Component Identification Register #0\n0xff0 - ETM Component Identification Register #0\nETM Component Identification Register #1\n0xff4 - ETM Component Identification Register #1\nETM Component Identification Register #2\n0xff8 - ETM Component Identification Register #2\nETM Component Identification Register #3\n0xffc - ETM Component Identification Register #3\nETM Claim Tag Clear Register\n0xfa4 - ETM Claim Tag Clear Register\nETM Claim Tag Set Register\n0xfa0 - ETM Claim Tag Set Register\nETM Free-running Counter Reload Value\n0x140 - ETM Free-running Counter Reload Value\nETM Main Control Register\n0x00 - ETM Main Control Register\nETM CoreSight Device Type Register\n0xfcc - ETM CoreSight Device Type Register\nETM FIFO Full Level Register\n0x28 - ETM FIFO Full Level Register\nReturns the argument unchanged.\nETM ID Register\n0x1e4 - ETM ID Register\nETM ID Register 2\n0x208 - ETM ID Register 2\nCalls <code>U::from(self)</code>.\nETM Integration Test ATB Control 0\n0xef8 - ETM Integration Test ATB Control 0\nETM Integration Test ATB Control 2\n0xef0 - ETM Integration Test ATB Control 2\nETM Integration Mode Control Register\n0xf00 - ETM Integration Mode Control Register\nETM Integration Test Miscellaneous Inputs\n0xee0 - ETM Integration Test Miscellaneous Inputs\nETM Integration Test Trigger Out\n0xee8 - ETM Integration Test Trigger Out\nETM Lock Access Register\n0xfb0 - ETM Lock Access Register\nETM Lock Status Register\n0xfb4 - ETM Lock Status Register\nETM Device Power-Down Status Register\n0x314 - ETM Device Power-Down Status Register\nETM Peripheral Identification Register #0\n0xfe0 - ETM Peripheral Identification Register #0\nETM Peripheral Identification Register #1\n0xfe4 - ETM Peripheral Identification Register #1\nETM Peripheral Identification Register #2\n0xfe8 - ETM Peripheral Identification Register #2\nETM Peripheral Identification Register #3\n0xfec - ETM Peripheral Identification Register #3\nETM Peripheral Identification Register #4\n0xfd0 - ETM Peripheral Identification Register #4\nETM Peripheral Identification Register #5\n0xfd4 - ETM Peripheral Identification Register #5\nETM Peripheral Identification Register #6\n0xfd8 - ETM Peripheral Identification Register #6\nETM Peripheral Identification Register #7\n0xfdc - ETM Peripheral Identification Register #7\nETM System Configuration Register\n0x14 - ETM System Configuration Register\nETM Status Register\n0x10 - ETM Status Register\nETM Synchronization Frequency Register\n0x1e0 - ETM Synchronization Frequency Register\nETM TraceEnable Control 1 Register\n0x24 - ETM TraceEnable Control 1 Register\nETM TraceEnable Event Register\n0x20 - ETM TraceEnable Event Register\nETM TraceEnable Start/Stop EmbeddedICE Control Register\n0x1f0 - ETM TraceEnable Start/Stop EmbeddedICE Control …\nETM CoreSight Trace ID Register\n0x200 - ETM CoreSight Trace ID Register\nETM Trigger Event Register\n0x08 - ETM Trigger Event Register\nETM TimeStamp Event Register\n0x1f8 - ETM TimeStamp Event Register\nETM Authentication Status Register\nRegister <code>AUTHSTATUS</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Configuration Code Extension Register\nRegister <code>CCER</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Configuration Code Register\nRegister <code>CCR</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Component Identification Register #0\nRegister <code>CIDR0</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Component Identification Register #1\nRegister <code>CIDR1</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Component Identification Register #2\nRegister <code>CIDR2</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Component Identification Register #3\nRegister <code>CIDR3</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Claim Tag Clear Register\nRegister <code>CLAIMCLR</code> reader\nRegister <code>CLAIMCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Claim Tag Set Register\nRegister <code>CLAIMSET</code> reader\nRegister <code>CLAIMSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Free-running Counter Reload Value\nRegister <code>CNTRLDVR1</code> reader\nRegister <code>CNTRLDVR1</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BROUT</code> reader - Branch Output\nField <code>BROUT</code> writer - Branch Output\nETM Main Control Register\nField <code>DBGRQ</code> reader - Debug Request Control\nField <code>DBGRQ</code> writer - Debug Request Control\nField <code>ETMPD</code> reader - ETM Power Down\nField <code>ETMPD</code> writer - ETM Power Down\nField <code>PORTMODE2</code> reader - Port Mode bit 2\nField <code>PORTMODE2</code> writer - Port Mode bit 2\nField <code>PORTMODE</code> reader - Port Mode bits 1:0\nField <code>PORTMODE</code> writer - Port Mode bits 1:0\nField <code>PORTSEL</code> reader - ETM Port Select\nField <code>PORTSEL</code> writer - ETM Port Select\nField <code>PORTSIZE3</code> reader - Port Size bit 3\nField <code>PORTSIZE3</code> writer - Port Size bit 3\nField <code>PORTSIZE</code> reader - Port Size bits 2:0\nField <code>PORTSIZE</code> writer - Port Size bits 2:0\nField <code>PROG</code> reader - ETM Programming\nField <code>PROG</code> writer - ETM Programming\nRegister <code>CR</code> reader\nField <code>STALL</code> reader - Stall Processor\nField <code>STALL</code> writer - Stall Processor\nField <code>TSEN</code> reader - TimeStamp Enable\nField <code>TSEN</code> writer - TimeStamp Enable\nRegister <code>CR</code> writer\nBit 8 - Branch Output\nBit 8 - Branch Output\nBit 9 - Debug Request Control\nBit 9 - Debug Request Control\nBit 0 - ETM Power Down\nBit 0 - ETM Power Down\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 16:17 - Port Mode bits 1:0\nBits 16:17 - Port Mode bits 1:0\nBit 13 - Port Mode bit 2\nBit 13 - Port Mode bit 2\nBit 11 - ETM Port Select\nBit 11 - ETM Port Select\nBits 4:6 - Port Size bits 2:0\nBits 4:6 - Port Size bits 2:0\nBit 21 - Port Size bit 3\nBit 21 - Port Size bit 3\nBit 10 - ETM Programming\nBit 10 - ETM Programming\nBit 7 - Stall Processor\nBit 7 - Stall Processor\nBit 28 - TimeStamp Enable\nBit 28 - TimeStamp Enable\nETM CoreSight Device Type Register\nRegister <code>DEVTYPE</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM FIFO Full Level Register\nRegister <code>FFLR</code> reader\nRegister <code>FFLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM ID Register\nRegister <code>IDR</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM ID Register 2\nRegister <code>IDR2</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Integration Test ATB Control 0\nRegister <code>ITATBCTR0</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Integration Test ATB Control 2\nRegister <code>ITATBCTR2</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>INTEGRATION</code> reader -\nField <code>INTEGRATION</code> writer -\nETM Integration Mode Control Register\nRegister <code>ITCTRL</code> reader\nRegister <code>ITCTRL</code> writer\nReturns the argument unchanged.\nBit 0\nBit 0\nCalls <code>U::from(self)</code>.\nETM Integration Test Miscellaneous Inputs\nRegister <code>ITMISCIN</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Integration Test Trigger Out\nRegister <code>ITTRIGOUT</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Lock Access Register\nRegister <code>LAR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>Access</code> reader -\nField <code>ByteAcc</code> reader -\nETM Lock Status Register\nField <code>Present</code> reader -\nRegister <code>LSR</code> reader\nBit 1\nBit 2\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0\nETM Device Power-Down Status Register\nRegister <code>PDSR</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Peripheral Identification Register #0\nRegister <code>PIDR0</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Peripheral Identification Register #1\nRegister <code>PIDR1</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Peripheral Identification Register #2\nRegister <code>PIDR2</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Peripheral Identification Register #3\nRegister <code>PIDR3</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Peripheral Identification Register #4\nRegister <code>PIDR4</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Peripheral Identification Register #5\nRegister <code>PIDR5</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Peripheral Identification Register #6\nRegister <code>PIDR6</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nETM Peripheral Identification Register #7\nRegister <code>PIDR7</code> reader\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>SCR</code> reader\nETM System Configuration Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>SR</code> reader\nETM Status Register\nRegister <code>SR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>SYNCFR</code> reader\nETM Synchronization Frequency Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>TECR1</code> reader\nETM TraceEnable Control 1 Register\nRegister <code>TECR1</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>TEEVR</code> reader\nETM TraceEnable Event Register\nRegister <code>TEEVR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>TESSEICR</code> reader\nETM TraceEnable Start/Stop EmbeddedICE Control Register\nRegister <code>TESSEICR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>TRACEIDR</code> reader\nETM CoreSight Trace ID Register\nRegister <code>TRACEIDR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>TRIGGER</code> reader\nETM Trigger Event Register\nRegister <code>TRIGGER</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRegister <code>TSEVT</code> reader\nETM TimeStamp Event Register\nRegister <code>TSEVT</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBUSYCH (r) register accessor: Busy Channels\nCHANNELS[%s]\nCTRLA (rw) register accessor: Control\nINTPEND (rw) register accessor: Channel Pending Interrupt\nINTSTATUS (r) register accessor: Interrupt Status\nPRICTRL (rw) register accessor: Priority Control\nREADYUSR (r) register accessor: Ready Users\nRegister block\nSWEVT (w) register accessor: Software Event\nUSER (rw) register accessor: User Multiplexer n\nBusy Channels\n0x18 - Busy Channels\nCluster CHANNELS[%s]\n0x20..0x120 - CHANNELS[%s]\nIterator for array of: 0x20..0x120 - CHANNELS[%s]\nControl\n0x00 - Control\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChannel Pending Interrupt\n0x10 - Channel Pending Interrupt\nInterrupt Status\n0x14 - Interrupt Status\nPriority Control\n0x08 - Priority Control\nReady Users\n0x1c - Ready Users\nSoftware Event\n0x04 - Software Event\nUser Multiplexer n\n0x120..0x22c - User Multiplexer n\nIterator for array of: 0x120..0x22c - User Multiplexer n\nField <code>BUSYCH0</code> reader - Busy Channel 0\nField <code>BUSYCH10</code> reader - Busy Channel 10\nField <code>BUSYCH11</code> reader - Busy Channel 11\nField <code>BUSYCH1</code> reader - Busy Channel 1\nField <code>BUSYCH2</code> reader - Busy Channel 2\nField <code>BUSYCH3</code> reader - Busy Channel 3\nField <code>BUSYCH4</code> reader - Busy Channel 4\nField <code>BUSYCH5</code> reader - Busy Channel 5\nField <code>BUSYCH6</code> reader - Busy Channel 6\nField <code>BUSYCH7</code> reader - Busy Channel 7\nField <code>BUSYCH8</code> reader - Busy Channel 8\nField <code>BUSYCH9</code> reader - Busy Channel 9\nBusy Channels\nRegister <code>BUSYCH</code> reader\nBit 0 - Busy Channel 0\nBit 1 - Busy Channel 1\nBit 10 - Busy Channel 10\nBit 11 - Busy Channel 11\nBit 2 - Busy Channel 2\nBit 3 - Busy Channel 3\nBit 4 - Busy Channel 4\nBit 5 - Busy Channel 5\nBit 6 - Busy Channel 6\nBit 7 - Busy Channel 7\nBit 8 - Busy Channel 8\nBit 9 - Busy Channel 9\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCHANNEL (rw) register accessor: Channel n Control\nCHANNELS[%s]\nCHINTENCLR (rw) register accessor: Channel n Interrupt …\nCHINTENSET (rw) register accessor: Channel n Interrupt …\nCHINTFLAG (rw) register accessor: Channel n Interrupt Flag …\nCHSTATUS (r) register accessor: Channel n Status\nChannel n Control\n0x00 - Channel n Control\nChannel n Interrupt Enable Clear\n0x04 - Channel n Interrupt Enable Clear\nChannel n Interrupt Enable Set\n0x05 - Channel n Interrupt Enable Set\nChannel n Interrupt Flag Status and Clear\n0x06 - Channel n Interrupt Flag Status and Clear\nChannel n Status\n0x07 - Channel n Status\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n2: Asynchronous path\n3: Event detection on rising and falling edges of the …\nChannel n Control\nField <code>EDGSEL</code> reader - Edge Detection Selection\nField <code>EDGSEL</code> writer - Edge Detection Selection\nEdge Detection Selection\nField <code>EVGEN</code> reader - Event Generator Selection\nField <code>EVGEN</code> writer - Event Generator Selection\n2: Event detection only on the falling edge of the signal …\n0: No event output when using the resynchronized or …\nField <code>ONDEMAND</code> reader - Generic Clock On Demand\nField <code>ONDEMAND</code> writer - Generic Clock On Demand\nField <code>PATH</code> reader - Path Selection\nField <code>PATH</code> writer - Path Selection\nPath Selection\nRegister <code>CHANNEL</code> reader\n1: Resynchronized path\n1: Event detection only on the rising edge of the signal …\nField <code>RUNSTDBY</code> reader - Run in standby\nField <code>RUNSTDBY</code> writer - Run in standby\n0: Synchronous path\nRegister <code>CHANNEL</code> writer\nAsynchronous path\nEvent detection on rising and falling edges of the signal …\nBits 10:11 - Edge Detection Selection\nBits 10:11 - Edge Detection Selection\nBits 0:6 - Event Generator Selection\nBits 0:6 - Event Generator Selection\nEvent detection only on the falling edge of the signal …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAsynchronous path\nEvent detection on rising and falling edges of the signal …\nEvent detection only on the falling edge of the signal …\nNo event output when using the resynchronized or …\nResynchronized path\nEvent detection only on the rising edge of the signal from …\nSynchronous path\nNo event output when using the resynchronized or …\nBit 15 - Generic Clock On Demand\nBit 15 - Generic Clock On Demand\nBits 8:9 - Path Selection\nBits 8:9 - Path Selection\nResynchronized path\nEvent detection only on the rising edge of the signal from …\nBit 14 - Run in standby\nBit 14 - Run in standby\nSynchronous path\nGet enumerated values variant\nGet enumerated values variant\nChannel n Interrupt Enable Clear\nField <code>EVD</code> reader - Channel Event Detected Interrupt Disable\nField <code>EVD</code> writer - Channel Event Detected Interrupt Disable\nField <code>OVR</code> reader - Channel Overrun Interrupt Disable\nField <code>OVR</code> writer - Channel Overrun Interrupt Disable\nRegister <code>CHINTENCLR</code> reader\nRegister <code>CHINTENCLR</code> writer\nBit 1 - Channel Event Detected Interrupt Disable\nBit 1 - Channel Event Detected Interrupt Disable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel Overrun Interrupt Disable\nBit 0 - Channel Overrun Interrupt Disable\nChannel n Interrupt Enable Set\nField <code>EVD</code> reader - Channel Event Detected Interrupt Enable\nField <code>EVD</code> writer - Channel Event Detected Interrupt Enable\nField <code>OVR</code> reader - Channel Overrun Interrupt Enable\nField <code>OVR</code> writer - Channel Overrun Interrupt Enable\nRegister <code>CHINTENSET</code> reader\nRegister <code>CHINTENSET</code> writer\nBit 1 - Channel Event Detected Interrupt Enable\nBit 1 - Channel Event Detected Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel Overrun Interrupt Enable\nBit 0 - Channel Overrun Interrupt Enable\nChannel n Interrupt Flag Status and Clear\nField <code>EVD</code> reader - Channel Event Detected\nField <code>EVD</code> writer - Channel Event Detected\nField <code>OVR</code> reader - Channel Overrun\nField <code>OVR</code> writer - Channel Overrun\nRegister <code>CHINTFLAG</code> reader\nRegister <code>CHINTFLAG</code> writer\nBit 1 - Channel Event Detected\nBit 1 - Channel Event Detected\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Channel Overrun\nBit 0 - Channel Overrun\nField <code>BUSYCH</code> reader - Busy Channel\nChannel n Status\nRegister <code>CHSTATUS</code> reader\nField <code>RDYUSR</code> reader - Ready User\nBit 1 - Busy Channel\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Ready User\nControl\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset\nBit 0 - Software Reset\nField <code>BUSY</code> reader - Busy\nField <code>BUSY</code> writer - Busy\nField <code>EVD</code> reader - Channel Event Detected\nField <code>EVD</code> writer - Channel Event Detected\nField <code>ID</code> reader - Channel ID\nField <code>ID</code> writer - Channel ID\nChannel Pending Interrupt\nField <code>OVR</code> reader - Channel Overrun\nField <code>OVR</code> writer - Channel Overrun\nRegister <code>INTPEND</code> reader\nField <code>READY</code> reader - Ready\nField <code>READY</code> writer - Ready\nRegister <code>INTPEND</code> writer\nBit 15 - Busy\nBit 15 - Busy\nBit 9 - Channel Event Detected\nBit 9 - Channel Event Detected\nReturns the argument unchanged.\nBits 0:3 - Channel ID\nBits 0:3 - Channel ID\nCalls <code>U::from(self)</code>.\nBit 8 - Channel Overrun\nBit 8 - Channel Overrun\nBit 14 - Ready\nBit 14 - Ready\nField <code>CHINT0</code> reader - Channel 0 Pending Interrupt\nField <code>CHINT10</code> reader - Channel 10 Pending Interrupt\nField <code>CHINT11</code> reader - Channel 11 Pending Interrupt\nField <code>CHINT1</code> reader - Channel 1 Pending Interrupt\nField <code>CHINT2</code> reader - Channel 2 Pending Interrupt\nField <code>CHINT3</code> reader - Channel 3 Pending Interrupt\nField <code>CHINT4</code> reader - Channel 4 Pending Interrupt\nField <code>CHINT5</code> reader - Channel 5 Pending Interrupt\nField <code>CHINT6</code> reader - Channel 6 Pending Interrupt\nField <code>CHINT7</code> reader - Channel 7 Pending Interrupt\nField <code>CHINT8</code> reader - Channel 8 Pending Interrupt\nField <code>CHINT9</code> reader - Channel 9 Pending Interrupt\nInterrupt Status\nRegister <code>INTSTATUS</code> reader\nBit 0 - Channel 0 Pending Interrupt\nBit 1 - Channel 1 Pending Interrupt\nBit 10 - Channel 10 Pending Interrupt\nBit 11 - Channel 11 Pending Interrupt\nBit 2 - Channel 2 Pending Interrupt\nBit 3 - Channel 3 Pending Interrupt\nBit 4 - Channel 4 Pending Interrupt\nBit 5 - Channel 5 Pending Interrupt\nBit 6 - Channel 6 Pending Interrupt\nBit 7 - Channel 7 Pending Interrupt\nBit 8 - Channel 8 Pending Interrupt\nBit 9 - Channel 9 Pending Interrupt\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>PRI</code> reader - Channel Priority Number\nField <code>PRI</code> writer - Channel Priority Number\nPriority Control\nRegister <code>PRICTRL</code> reader\nField <code>RREN</code> reader - Round-Robin Scheduling Enable\nField <code>RREN</code> writer - Round-Robin Scheduling Enable\nRegister <code>PRICTRL</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:3 - Channel Priority Number\nBits 0:3 - Channel Priority Number\nBit 7 - Round-Robin Scheduling Enable\nBit 7 - Round-Robin Scheduling Enable\nRegister <code>READYUSR</code> reader\nField <code>READYUSR0</code> reader - Ready User for Channel 0\nField <code>READYUSR10</code> reader - Ready User for Channel 10\nField <code>READYUSR11</code> reader - Ready User for Channel 11\nField <code>READYUSR1</code> reader - Ready User for Channel 1\nField <code>READYUSR2</code> reader - Ready User for Channel 2\nField <code>READYUSR3</code> reader - Ready User for Channel 3\nField <code>READYUSR4</code> reader - Ready User for Channel 4\nField <code>READYUSR5</code> reader - Ready User for Channel 5\nField <code>READYUSR6</code> reader - Ready User for Channel 6\nField <code>READYUSR7</code> reader - Ready User for Channel 7\nField <code>READYUSR8</code> reader - Ready User for Channel 8\nField <code>READYUSR9</code> reader - Ready User for Channel 9\nReady Users\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Ready User for Channel 0\nBit 1 - Ready User for Channel 1\nBit 10 - Ready User for Channel 10\nBit 11 - Ready User for Channel 11\nBit 2 - Ready User for Channel 2\nBit 3 - Ready User for Channel 3\nBit 4 - Ready User for Channel 4\nBit 5 - Ready User for Channel 5\nBit 6 - Ready User for Channel 6\nBit 7 - Ready User for Channel 7\nBit 8 - Ready User for Channel 8\nBit 9 - Ready User for Channel 9\nField <code>CHANNEL0</code> writer - Channel 0 Software Selection\nField <code>CHANNEL10</code> writer - Channel 10 Software Selection\nField <code>CHANNEL11</code> writer - Channel 11 Software Selection\nField <code>CHANNEL12</code> writer - Channel 12 Software Selection\nField <code>CHANNEL13</code> writer - Channel 13 Software Selection\nField <code>CHANNEL14</code> writer - Channel 14 Software Selection\nField <code>CHANNEL15</code> writer - Channel 15 Software Selection\nField <code>CHANNEL16</code> writer - Channel 16 Software Selection\nField <code>CHANNEL17</code> writer - Channel 17 Software Selection\nField <code>CHANNEL18</code> writer - Channel 18 Software Selection\nField <code>CHANNEL19</code> writer - Channel 19 Software Selection\nField <code>CHANNEL1</code> writer - Channel 1 Software Selection\nField <code>CHANNEL20</code> writer - Channel 20 Software Selection\nField <code>CHANNEL21</code> writer - Channel 21 Software Selection\nField <code>CHANNEL22</code> writer - Channel 22 Software Selection\nField <code>CHANNEL23</code> writer - Channel 23 Software Selection\nField <code>CHANNEL24</code> writer - Channel 24 Software Selection\nField <code>CHANNEL25</code> writer - Channel 25 Software Selection\nField <code>CHANNEL26</code> writer - Channel 26 Software Selection\nField <code>CHANNEL27</code> writer - Channel 27 Software Selection\nField <code>CHANNEL28</code> writer - Channel 28 Software Selection\nField <code>CHANNEL29</code> writer - Channel 29 Software Selection\nField <code>CHANNEL2</code> writer - Channel 2 Software Selection\nField <code>CHANNEL30</code> writer - Channel 30 Software Selection\nField <code>CHANNEL31</code> writer - Channel 31 Software Selection\nField <code>CHANNEL3</code> writer - Channel 3 Software Selection\nField <code>CHANNEL4</code> writer - Channel 4 Software Selection\nField <code>CHANNEL5</code> writer - Channel 5 Software Selection\nField <code>CHANNEL6</code> writer - Channel 6 Software Selection\nField <code>CHANNEL7</code> writer - Channel 7 Software Selection\nField <code>CHANNEL8</code> writer - Channel 8 Software Selection\nField <code>CHANNEL9</code> writer - Channel 9 Software Selection\nSoftware Event\nRegister <code>SWEVT</code> writer\nBit 0 - Channel 0 Software Selection\nBit 1 - Channel 1 Software Selection\nBit 10 - Channel 10 Software Selection\nBit 11 - Channel 11 Software Selection\nBit 12 - Channel 12 Software Selection\nBit 13 - Channel 13 Software Selection\nBit 14 - Channel 14 Software Selection\nBit 15 - Channel 15 Software Selection\nBit 16 - Channel 16 Software Selection\nBit 17 - Channel 17 Software Selection\nBit 18 - Channel 18 Software Selection\nBit 19 - Channel 19 Software Selection\nBit 2 - Channel 2 Software Selection\nBit 20 - Channel 20 Software Selection\nBit 21 - Channel 21 Software Selection\nBit 22 - Channel 22 Software Selection\nBit 23 - Channel 23 Software Selection\nBit 24 - Channel 24 Software Selection\nBit 25 - Channel 25 Software Selection\nBit 26 - Channel 26 Software Selection\nBit 27 - Channel 27 Software Selection\nBit 28 - Channel 28 Software Selection\nBit 29 - Channel 29 Software Selection\nBit 3 - Channel 3 Software Selection\nBit 30 - Channel 30 Software Selection\nBit 31 - Channel 31 Software Selection\nBit 4 - Channel 4 Software Selection\nBit 5 - Channel 5 Software Selection\nBit 6 - Channel 6 Software Selection\nBit 7 - Channel 7 Software Selection\nBit 8 - Channel 8 Software Selection\nBit 9 - Channel 9 Software Selection\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CHANNEL</code> reader - Channel Event Selection\nField <code>CHANNEL</code> writer - Channel Event Selection\nRegister <code>USER[%s]</code> reader\nUser Multiplexer n\nRegister <code>USER[%s]</code> writer\nBits 0:5 - Channel Event Selection\nBits 0:5 - Channel Event Selection\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCFGA (rw) register accessor: Config A register\nCTRLA (rw) register accessor: Control A Register\nCTRLB (w) register accessor: Control B Register\nINTENCLR (rw) register accessor: Interrupt Enable Clear …\nINTENSET (rw) register accessor: Interrupt Enable Set …\nINTFLAG (rw) register accessor: Interrupt Flag Register\nRegister block\nSTATUS (rw) register accessor: Status Register\nSYNCBUSY (r) register accessor: Synchronization Busy …\nVALUE (r) register accessor: Count Value Register\nConfig A register\n0x02 - Config A register\nControl A Register\n0x00 - Control A Register\nControl B Register\n0x01 - Control B Register\nReturns the argument unchanged.\nInterrupt Enable Clear Register\n0x08 - Interrupt Enable Clear Register\nInterrupt Enable Set Register\n0x09 - Interrupt Enable Set Register\nInterrupt Flag Register\n0x0a - Interrupt Flag Register\nCalls <code>U::from(self)</code>.\nStatus Register\n0x0b - Status Register\nSynchronization Busy Register\n0x0c - Synchronization Busy Register\nCount Value Register\n0x10 - Count Value Register\nConfig A register\nRegister <code>CFGA</code> reader\nField <code>REFNUM</code> reader - Number of Reference Clock Cycles\nField <code>REFNUM</code> writer - Number of Reference Clock Cycles\nRegister <code>CFGA</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:7 - Number of Reference Clock Cycles\nBits 0:7 - Number of Reference Clock Cycles\nControl A Register\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset\nBit 0 - Software Reset\nControl B Register\nField <code>START</code> writer - Start Measurement\nRegister <code>CTRLB</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Start Measurement\nField <code>DONE</code> reader - Measurement Done Interrupt Enable\nField <code>DONE</code> writer - Measurement Done Interrupt Enable\nInterrupt Enable Clear Register\nRegister <code>INTENCLR</code> reader\nRegister <code>INTENCLR</code> writer\nBit 0 - Measurement Done Interrupt Enable\nBit 0 - Measurement Done Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DONE</code> reader - Measurement Done Interrupt Enable\nField <code>DONE</code> writer - Measurement Done Interrupt Enable\nInterrupt Enable Set Register\nRegister <code>INTENSET</code> reader\nRegister <code>INTENSET</code> writer\nBit 0 - Measurement Done Interrupt Enable\nBit 0 - Measurement Done Interrupt Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>DONE</code> reader - Measurement Done\nField <code>DONE</code> writer - Measurement Done\nInterrupt Flag Register\nRegister <code>INTFLAG</code> reader\nRegister <code>INTFLAG</code> writer\nBit 0 - Measurement Done\nBit 0 - Measurement Done\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>BUSY</code> reader - FREQM Status\nField <code>BUSY</code> writer - FREQM Status\nField <code>OVF</code> reader - Sticky Count Value Overflow\nField <code>OVF</code> writer - Sticky Count Value Overflow\nRegister <code>STATUS</code> reader\nStatus Register\nRegister <code>STATUS</code> writer\nBit 0 - FREQM Status\nBit 0 - FREQM Status\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 1 - Sticky Count Value Overflow\nBit 1 - Sticky Count Value Overflow\nField <code>ENABLE</code> reader - Enable\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset\nSynchronization Busy Register\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset\nRegister <code>VALUE</code> reader\nField <code>VALUE</code> reader - Measurement Value\nCount Value Register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBits 0:23 - Measurement Value\nCTRLA (rw) register accessor: Control\nGENCTRL (rw) register accessor: Generic Clock Generator …\nPCHCTRL (rw) register accessor: Peripheral Clock Control\nRegister block\nSYNCBUSY (r) register accessor: Synchronization Busy\nControl\n0x00 - Control\nReturns the argument unchanged.\nGeneric Clock Generator Control\n0x20..0x50 - Generic Clock Generator Control\nIterator for array of: 0x20..0x50 - Generic Clock …\nCalls <code>U::from(self)</code>.\nPeripheral Clock Control\n0x80..0x140 - Peripheral Clock Control\nIterator for array of: 0x80..0x140 - Peripheral Clock …\nSynchronization Busy\n0x04 - Synchronization Busy\nControl\nRegister <code>CTRLA</code> reader\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nRegister <code>CTRLA</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 0 - Software Reset\nBit 0 - Software Reset\n6: DFLL output\n0: Divide input directly by divider factor\n1: Divide input by 2^(divider factor+ 1)\nField <code>DIV</code> reader - Division Factor\nField <code>DIV</code> writer - Division Factor\nField <code>DIVSEL</code> reader - Divide Selection\nField <code>DIVSEL</code> writer - Divide Selection\nDivide Selection\n7: DPLL0 output\n8: DPLL1 output\n3: Generic clock generator 1 output\n2: Generator input pad\nGeneric Clock Generator Control\nField <code>GENEN</code> reader - Generic Clock Generator Enable\nField <code>GENEN</code> writer - Generic Clock Generator Enable\nField <code>IDC</code> reader - Improve Duty Cycle\nField <code>IDC</code> writer - Improve Duty Cycle\nField <code>OE</code> reader - Output Enable\nField <code>OE</code> writer - Output Enable\nField <code>OOV</code> reader - Output Off Value\nField <code>OOV</code> writer - Output Off Value\n4: OSCULP32K oscillator output\nRegister <code>GENCTRL[%s]</code> reader\nField <code>RUNSTDBY</code> reader - Run in Standby\nField <code>RUNSTDBY</code> writer - Run in Standby\nField <code>SRC</code> reader - Source Select\nField <code>SRC</code> writer - Source Select\nSource Select\nRegister <code>GENCTRL[%s]</code> writer\n0: XOSC0 oscillator output\n1: XOSC1 oscillator output\n5: XOSC32K oscillator output\nDFLL output\nBits 16:31 - Division Factor\nBits 16:31 - Division Factor\nDivide input directly by divider factor\nDivide input by 2^(divider factor+ 1)\nBit 12 - Divide Selection\nBit 12 - Divide Selection\nDPLL0 output\nDPLL1 output\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGeneric clock generator 1 output\nGenerator input pad\nBit 8 - Generic Clock Generator Enable\nBit 8 - Generic Clock Generator Enable\nBit 9 - Improve Duty Cycle\nBit 9 - Improve Duty Cycle\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDFLL output\nDivide input directly by divider factor\nDivide input by 2^(divider factor+ 1)\nDPLL0 output\nDPLL1 output\nGeneric clock generator 1 output\nGenerator input pad\nOSCULP32K oscillator output\nXOSC0 oscillator output\nXOSC1 oscillator output\nXOSC32K oscillator output\nBit 11 - Output Enable\nBit 11 - Output Enable\nBit 10 - Output Off Value\nBit 10 - Output Off Value\nOSCULP32K oscillator output\nBit 13 - Run in Standby\nBit 13 - Run in Standby\nBits 0:3 - Source Select\nBits 0:3 - Source Select\nGet enumerated values variant\nGet enumerated values variant\nXOSC0 oscillator output\nXOSC1 oscillator output\nXOSC32K oscillator output\nField <code>CHEN</code> reader - Channel Enable\nField <code>CHEN</code> writer - Channel Enable\n0: Generic clock generator 0\n1: Generic clock generator 1\n10: Generic clock generator 10\n11: Generic clock generator 11\n2: Generic clock generator 2\n3: Generic clock generator 3\n4: Generic clock generator 4\n5: Generic clock generator 5\n6: Generic clock generator 6\n7: Generic clock generator 7\n8: Generic clock generator 8\n9: Generic clock generator 9\nField <code>GEN</code> reader - Generic Clock Generator\nField <code>GEN</code> writer - Generic Clock Generator\nGeneric Clock Generator\nPeripheral Clock Control\nRegister <code>PCHCTRL[%s]</code> reader\nRegister <code>PCHCTRL[%s]</code> writer\nField <code>WRTLOCK</code> reader - Write Lock\nField <code>WRTLOCK</code> writer - Write Lock\nBit 6 - Channel Enable\nBit 6 - Channel Enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nGeneric clock generator 0\nGeneric clock generator 1\nGeneric clock generator 10\nGeneric clock generator 11\nGeneric clock generator 2\nGeneric clock generator 3\nGeneric clock generator 4\nGeneric clock generator 5\nGeneric clock generator 6\nGeneric clock generator 7\nGeneric clock generator 8\nGeneric clock generator 9\nBits 0:3 - Generic Clock Generator\nBits 0:3 - Generic Clock Generator\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneric clock generator 0\nGeneric clock generator 1\nGeneric clock generator 10\nGeneric clock generator 11\nGeneric clock generator 2\nGeneric clock generator 3\nGeneric clock generator 4\nGeneric clock generator 5\nGeneric clock generator 6\nGeneric clock generator 7\nGeneric clock generator 8\nGeneric clock generator 9\nGet enumerated values variant\nBit 7 - Write Lock\nBit 7 - Write Lock\n1: Generic clock generator 0\n2: Generic clock generator 1\n1024: Generic clock generator 10\n2048: Generic clock generator 11\n4: Generic clock generator 2\n8: Generic clock generator 3\n16: Generic clock generator 4\n32: Generic clock generator 5\n64: Generic clock generator 6\n128: Generic clock generator 7\n256: Generic clock generator 8\n512: Generic clock generator 9\nField <code>GENCTRL</code> reader - Generic Clock Generator Control n …\nGeneric Clock Generator Control n Synchronization Busy bits\nRegister <code>SYNCBUSY</code> reader\nField <code>SWRST</code> reader - Software Reset Synchroniation Busy bit\nSynchronization Busy\nReturns the argument unchanged.\nReturns the argument unchanged.\nBits 2:13 - Generic Clock Generator Control n …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGeneric clock generator 0\nGeneric clock generator 1\nGeneric clock generator 10\nGeneric clock generator 11\nGeneric clock generator 2\nGeneric clock generator 3\nGeneric clock generator 4\nGeneric clock generator 5\nGeneric clock generator 6\nGeneric clock generator 7\nGeneric clock generator 8\nGeneric clock generator 9\nBit 0 - Software Reset Synchroniation Busy bit\nGet enumerated values variant\nBit-wise field reader\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nBit-wise write field proxy\nField reader.\nRaw field type\nWrite field Proxy\nMarker for fields with fixed values\nSpecifies the register bits that are not changed if you …\nRegister reader.\nReset value of the register.\nMarker for field writers are safe to write in specified …\nMarker for field writers are safe to write in specified …\nMarker for field writers are safe to write in specified …\nRaw register type (<code>u8</code>, <code>u16</code>, <code>u32</code>, …)\nTrait implemented by readable registers to enable the <code>read</code> …\nThis structure provides volatile access to registers.\nRaw register type\nReset value of the register.\nMarker for register/field writers which can take any value …\nIs it safe to write any bits to register\nYou should check that value is allowed to pass to …\nRaw register type (<code>u8</code>, <code>u16</code>, <code>u32</code>, …).\nRaw field type (<code>u8</code>, <code>u16</code>, <code>u32</code>, …).\nRegister writer.\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nTrait implemented by writeable registers.\nSpecifies the register bits that are not changed if you …\nReturns the underlying memory address of register.\nValue of the field as raw bits.\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nWrites bit to the field\nReturns <code>true</code> if the bit is clear (0).\nReturns <code>true</code> if the bit is set (1).\nReads raw bits from register.\nWrites raw bits to the register.\nReads raw bits from field.\nWrites raw bits to the field\nClears the field bit\nClears the field bit\nClears the field bit by passing one\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMask for bits of width <code>WI</code>\nModifies the contents of the register by reading and then …\nField offset\nField offset\nField offset\nField offset\nField offset\nField offset\nField offset\nField offset\nMask for bits of width 1\nReads the contents of a <code>Readable</code> register.\nWrites the reset value to <code>Writable</code> register.\nReset value of the register.\nWrites raw bits to the register.\nWrites raw bits to the field\nWrites raw bits to the field\nWrites raw bits to the field\nWrites raw bits to the field\nSets the field bit\nSets the field bit\nSets the field bit by passing zero\nToggle the field bit by passing one\nToggle the field bit by passing zero\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nWrites <code>variant</code> to the field\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nField width\nWrites bits to a <code>Writable</code> register.\nWrites 0 to a <code>Writable</code> register.\nPRS[%s]\nRegister block\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCluster PRS[%s]\n0x80..0x100 - PRS[%s]\nIterator for array of: 0x80..0x100 - PRS[%s]\nPRAS (rw) register accessor: Priority A for Slave\nPRBS (rw) register accessor: Priority B for Slave\nPRS[%s]\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPriority A for Slave\n0x00 - Priority A for Slave\nPriority B for Slave\n0x04 - Priority B for Slave\nPriority A for Slave\nRegister <code>PRAS</code> reader\nRegister <code>PRAS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPriority B for Slave\nRegister <code>PRBS</code> reader\nRegister <code>PRBS</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCLKCTRL (rw) register accessor: Clock Unit n Control\nCTRLA (rw) register accessor: Control A\nINTENCLR (rw) register accessor: Interrupt Enable Clear\nINTENSET (rw) register accessor: Interrupt Enable Set\nINTFLAG (rw) register accessor: Interrupt Flag Status and …\nRegister block\nRXCTRL (rw) register accessor: Rx Serializer Control\nRXDATA (r) register accessor: Rx Data\nSYNCBUSY (r) register accessor: Synchronization Status\nTXCTRL (rw) register accessor: Tx Serializer Control\nTXDATA (w) register accessor: Tx Data\nClock Unit n Control\n0x04..0x0c - Clock Unit n Control\nIterator for array of: 0x04..0x0c - Clock Unit n Control\nControl A\n0x00 - Control A\nReturns the argument unchanged.\nInterrupt Enable Clear\n0x0c - Interrupt Enable Clear\nInterrupt Enable Set\n0x10 - Interrupt Enable Set\nInterrupt Flag Status and Clear\n0x14 - Interrupt Flag Status and Clear\nCalls <code>U::from(self)</code>.\nRx Serializer Control\n0x24 - Rx Serializer Control\nRx Data\n0x34 - Rx Data\nSynchronization Status\n0x18 - Synchronization Status\nTx Serializer Control\n0x20 - Tx Serializer Control\nTx Data\n0x30 - Tx Data\n2: Frame Sync Pulse is 1 Bit wide\nField <code>BITDELAY</code> reader - Data Delay from Frame Sync\nField <code>BITDELAY</code> writer - Data Delay from Frame Sync\nData Delay from Frame Sync\n3: Clock Unit n operates in Burst mode, with a 1-bit wide …\nClock Unit n Control\nField <code>FSINV</code> reader - Frame Sync Invert\nField <code>FSINV</code> writer - Frame Sync Invert\nField <code>FSOUTINV</code> reader - Frame Sync Output Invert\nField <code>FSOUTINV</code> writer - Frame Sync Output Invert\n1: FSn input pin is used as Frame Sync n source\nField <code>FSSEL</code> reader - Frame Sync Select\nField <code>FSSEL</code> writer - Frame Sync Select\nFrame Sync Select\nField <code>FSWIDTH</code> reader - Frame Sync Width\nField <code>FSWIDTH</code> writer - Frame Sync Width\nFrame Sync Width\n0: GCLK_I2S_n is used as Master Clock n source\n1: Frame Sync Pulse is half a Frame wide\n1: I2S (1 Bit Delay)\n0: Left Justified (0 Bit Delay)\n0: Divided Master Clock n is used as Serial Clock n source\nField <code>MCKDIV</code> reader - Master Clock Division Factor\nField <code>MCKDIV</code> writer - Master Clock Division Factor\nField <code>MCKEN</code> reader - Master Clock Enable\nField <code>MCKEN</code> writer - Master Clock Enable\nField <code>MCKOUTDIV</code> reader - Master Clock Output Division …\nField <code>MCKOUTDIV</code> writer - Master Clock Output Division …\nField <code>MCKOUTINV</code> reader - Master Clock Output Invert\nField <code>MCKOUTINV</code> writer - Master Clock Output Invert\n1: MCKn input pin is used as Master Clock n source\nField <code>MCKSEL</code> reader - Master Clock Select\nField <code>MCKSEL</code> writer - Master Clock Select\nMaster Clock Select\nField <code>NBSLOTS</code> reader - Number of Slots in Frame\nField <code>NBSLOTS</code> writer - Number of Slots in Frame\nRegister <code>CLKCTRL[%s]</code> reader\n0: Divided Serial Clock n is used as Frame Sync n source\nField <code>SCKOUTINV</code> reader - Serial Clock Output Invert\nField <code>SCKOUTINV</code> writer - Serial Clock Output Invert\n1: SCKn input pin is used as Serial Clock n source\nField <code>SCKSEL</code> reader - Serial Clock Select\nField <code>SCKSEL</code> writer - Serial Clock Select\nSerial Clock Select\n0: Frame Sync Pulse is 1 Slot wide (default for I2S …\nField <code>SLOTSIZE</code> reader - Slot Size\nField <code>SLOTSIZE</code> writer - Slot Size\nSlot Size\nRegister <code>CLKCTRL[%s]</code> writer\n16-bit Slot for Clock Unit n\n1: 16-bit Slot for Clock Unit n\n24-bit Slot for Clock Unit n\n2: 24-bit Slot for Clock Unit n\n32-bit Slot for Clock Unit n\n3: 32-bit Slot for Clock Unit n\n8-bit Slot for Clock Unit n\n0: 8-bit Slot for Clock Unit n\nFrame Sync Pulse is 1 Bit wide\nBit 7 - Data Delay from Frame Sync\nBit 7 - Data Delay from Frame Sync\nClock Unit n operates in Burst mode, with a 1-bit wide …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBit 9 - Frame Sync Invert\nBit 9 - Frame Sync Invert\nBit 10 - Frame Sync Output Invert\nBit 10 - Frame Sync Output Invert\nFSn input pin is used as Frame Sync n source\nBit 8 - Frame Sync Select\nBit 8 - Frame Sync Select\nBits 5:6 - Frame Sync Width\nBits 5:6 - Frame Sync Width\nGCLK_I2S_n is used as Master Clock n source\nFrame Sync Pulse is half a Frame wide\nI2S (1 Bit Delay)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n16-bit Slot for Clock Unit n\n24-bit Slot for Clock Unit n\n32-bit Slot for Clock Unit n\n8-bit Slot for Clock Unit n\nFrame Sync Pulse is 1 Bit wide\nClock Unit n operates in Burst mode, with a 1-bit wide …\nFSn input pin is used as Frame Sync n source\nGCLK_I2S_n is used as Master Clock n source\nFrame Sync Pulse is half a Frame wide\nI2S (1 Bit Delay)\nLeft Justified (0 Bit Delay)\nDivided Master Clock n is used as Serial Clock n source\nMCKn input pin is used as Master Clock n source\nDivided Serial Clock n is used as Frame Sync n source\nSCKn input pin is used as Serial Clock n source\nFrame Sync Pulse is 1 Slot wide (default for I2S protocol)\nLeft Justified (0 Bit Delay)\nBits 16:21 - Master Clock Division Factor\nBits 16:21 - Master Clock Division Factor\nDivided Master Clock n is used as Serial Clock n source\nBit 14 - Master Clock Enable\nBit 14 - Master Clock Enable\nBits 24:29 - Master Clock Output Division Factor\nBits 24:29 - Master Clock Output Division Factor\nBit 15 - Master Clock Output Invert\nBit 15 - Master Clock Output Invert\nMCKn input pin is used as Master Clock n source\nBit 13 - Master Clock Select\nBit 13 - Master Clock Select\nBits 2:4 - Number of Slots in Frame\nBits 2:4 - Number of Slots in Frame\nDivided Serial Clock n is used as Frame Sync n source\nBit 12 - Serial Clock Output Invert\nBit 12 - Serial Clock Output Invert\nSCKn input pin is used as Serial Clock n source\nBit 11 - Serial Clock Select\nBit 11 - Serial Clock Select\nFrame Sync Pulse is 1 Slot wide (default for I2S protocol)\nBits 0:1 - Slot Size\nBits 0:1 - Slot Size\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nField <code>CKEN0</code> reader - Clock Unit 0 Enable\nField <code>CKEN0</code> writer - Clock Unit 0 Enable\nField <code>CKEN1</code> reader - Clock Unit 1 Enable\nField <code>CKEN1</code> writer - Clock Unit 1 Enable\nControl A\nField <code>ENABLE</code> reader - Enable\nField <code>ENABLE</code> writer - Enable\nRegister <code>CTRLA</code> reader\nField <code>RXEN</code> reader - Rx Serializer Enable\nField <code>RXEN</code> writer - Rx Serializer Enable\nField <code>SWRST</code> reader - Software Reset\nField <code>SWRST</code> writer - Software Reset\nField <code>TXEN</code> reader - Tx Serializer Enable\nField <code>TXEN</code> writer - Tx Serializer Enable\nRegister <code>CTRLA</code> writer\nBit 2 - Clock Unit 0 Enable\nBit 2 - Clock Unit 0 Enable\nBit 3 - Clock Unit 1 Enable\nBit 3 - Clock Unit 1 Enable\nBit 1 - Enable\nBit 1 - Enable\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 5 - Rx Serializer Enable\nBit 5 - Rx Serializer Enable\nBit 0 - Software Reset\nBit 0 - Software Reset\nBit 4 - Tx Serializer Enable\nBit 4 - Tx Serializer Enable\nInterrupt Enable Clear\nRegister <code>INTENCLR</code> reader\nField <code>RXOR0</code> reader - Receive Overrun 0 Interrupt Enable\nField <code>RXOR0</code> writer - Receive Overrun 0 Interrupt Enable\nField <code>RXOR1</code> reader - Receive Overrun 1 Interrupt Enable\nField <code>RXOR1</code> writer - Receive Overrun 1 Interrupt Enable\nField <code>RXRDY0</code> reader - Receive Ready 0 Interrupt Enable\nField <code>RXRDY0</code> writer - Receive Ready 0 Interrupt Enable\nField <code>RXRDY1</code> reader - Receive Ready 1 Interrupt Enable\nField <code>RXRDY1</code> writer - Receive Ready 1 Interrupt Enable\nField <code>TXRDY0</code> reader - Transmit Ready 0 Interrupt Enable\nField <code>TXRDY0</code> writer - Transmit Ready 0 Interrupt Enable\nField <code>TXRDY1</code> reader - Transmit Ready 1 Interrupt Enable\nField <code>TXRDY1</code> writer - Transmit Ready 1 Interrupt Enable\nField <code>TXUR0</code> reader - Transmit Underrun 0 Interrupt Enable\nField <code>TXUR0</code> writer - Transmit Underrun 0 Interrupt Enable\nField <code>TXUR1</code> reader - Transmit Underrun 1 Interrupt Enable\nField <code>TXUR1</code> writer - Transmit Underrun 1 Interrupt Enable\nRegister <code>INTENCLR</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Receive Overrun 0 Interrupt Enable\nBit 4 - Receive Overrun 0 Interrupt Enable\nBit 5 - Receive Overrun 1 Interrupt Enable\nBit 5 - Receive Overrun 1 Interrupt Enable\nBit 0 - Receive Ready 0 Interrupt Enable\nBit 0 - Receive Ready 0 Interrupt Enable\nBit 1 - Receive Ready 1 Interrupt Enable\nBit 1 - Receive Ready 1 Interrupt Enable\nBit 8 - Transmit Ready 0 Interrupt Enable\nBit 8 - Transmit Ready 0 Interrupt Enable\nBit 9 - Transmit Ready 1 Interrupt Enable\nBit 9 - Transmit Ready 1 Interrupt Enable\nBit 12 - Transmit Underrun 0 Interrupt Enable\nBit 12 - Transmit Underrun 0 Interrupt Enable\nBit 13 - Transmit Underrun 1 Interrupt Enable\nBit 13 - Transmit Underrun 1 Interrupt Enable\nInterrupt Enable Set\nRegister <code>INTENSET</code> reader\nField <code>RXOR0</code> reader - Receive Overrun 0 Interrupt Enable\nField <code>RXOR0</code> writer - Receive Overrun 0 Interrupt Enable\nField <code>RXOR1</code> reader - Receive Overrun 1 Interrupt Enable\nField <code>RXOR1</code> writer - Receive Overrun 1 Interrupt Enable\nField <code>RXRDY0</code> reader - Receive Ready 0 Interrupt Enable\nField <code>RXRDY0</code> writer - Receive Ready 0 Interrupt Enable\nField <code>RXRDY1</code> reader - Receive Ready 1 Interrupt Enable\nField <code>RXRDY1</code> writer - Receive Ready 1 Interrupt Enable\nField <code>TXRDY0</code> reader - Transmit Ready 0 Interrupt Enable\nField <code>TXRDY0</code> writer - Transmit Ready 0 Interrupt Enable\nField <code>TXRDY1</code> reader - Transmit Ready 1 Interrupt Enable\nField <code>TXRDY1</code> writer - Transmit Ready 1 Interrupt Enable\nField <code>TXUR0</code> reader - Transmit Underrun 0 Interrupt Enable\nField <code>TXUR0</code> writer - Transmit Underrun 0 Interrupt Enable\nField <code>TXUR1</code> reader - Transmit Underrun 1 Interrupt Enable\nField <code>TXUR1</code> writer - Transmit Underrun 1 Interrupt Enable\nRegister <code>INTENSET</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Receive Overrun 0 Interrupt Enable\nBit 4 - Receive Overrun 0 Interrupt Enable\nBit 5 - Receive Overrun 1 Interrupt Enable\nBit 5 - Receive Overrun 1 Interrupt Enable\nBit 0 - Receive Ready 0 Interrupt Enable\nBit 0 - Receive Ready 0 Interrupt Enable\nBit 1 - Receive Ready 1 Interrupt Enable\nBit 1 - Receive Ready 1 Interrupt Enable\nBit 8 - Transmit Ready 0 Interrupt Enable\nBit 8 - Transmit Ready 0 Interrupt Enable\nBit 9 - Transmit Ready 1 Interrupt Enable\nBit 9 - Transmit Ready 1 Interrupt Enable\nBit 12 - Transmit Underrun 0 Interrupt Enable\nBit 12 - Transmit Underrun 0 Interrupt Enable\nBit 13 - Transmit Underrun 1 Interrupt Enable\nBit 13 - Transmit Underrun 1 Interrupt Enable\nInterrupt Flag Status and Clear\nRegister <code>INTFLAG</code> reader\nField <code>RXOR0</code> reader - Receive Overrun 0\nField <code>RXOR0</code> writer - Receive Overrun 0\nField <code>RXOR1</code> reader - Receive Overrun 1\nField <code>RXOR1</code> writer - Receive Overrun 1\nField <code>RXRDY0</code> reader - Receive Ready 0\nField <code>RXRDY0</code> writer - Receive Ready 0\nField <code>RXRDY1</code> reader - Receive Ready 1\nField <code>RXRDY1</code> writer - Receive Ready 1\nField <code>TXRDY0</code> reader - Transmit Ready 0\nField <code>TXRDY0</code> writer - Transmit Ready 0\nField <code>TXRDY1</code> reader - Transmit Ready 1\nField <code>TXRDY1</code> writer - Transmit Ready 1\nField <code>TXUR0</code> reader - Transmit Underrun 0\nField <code>TXUR0</code> writer - Transmit Underrun 0\nField <code>TXUR1</code> reader - Transmit Underrun 1\nField <code>TXUR1</code> writer - Transmit Underrun 1\nRegister <code>INTFLAG</code> writer\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 4 - Receive Overrun 0\nBit 4 - Receive Overrun 0\nBit 5 - Receive Overrun 1\nBit 5 - Receive Overrun 1\nBit 0 - Receive Ready 0\nBit 0 - Receive Ready 0\nBit 1 - Receive Ready 1\nBit 1 - Receive Ready 1\nBit 8 - Transmit Ready 0\nBit 8 - Transmit Ready 0\nBit 9 - Transmit Ready 1\nBit 9 - Transmit Ready 1\nBit 12 - Transmit Underrun 0\nBit 12 - Transmit Underrun 0\nBit 13 - Transmit Underrun 1\nBit 13 - Transmit Underrun 1\nField <code>BITREV</code> reader - Data Formatting Bit Reverse\nField <code>BITREV</code> writer - Data Formatting Bit Reverse\nData Formatting Bit Reverse\n0: Use Clock Unit 0\n1: Use Clock Unit 1\nField <code>CLKSEL</code> reader - Clock Unit Selection\nField <code>CLKSEL</code> writer - Clock Unit Selection\nClock Unit Selection\nField <code>DATASIZE</code> reader - Data Word Size\nField <code>DATASIZE</code> writer - Data Word Size\nData Word Size\nField <code>DMA</code> reader - Single or Multiple DMA Channels\nField <code>DMA</code> writer - Single or Multiple DMA Channels\nSingle or Multiple DMA Channels\nField <code>EXTEND</code> reader - Data Formatting Bit Extension\nField <code>EXTEND</code> writer - Data Formatting Bit Extension\nData Formatting Bit Extension\n1: Data is left adjusted in slot\n1: Data is left adjusted in word\n3: Extend with Least Significant Bit\n1: Transfer Data Least Significant Bit (LSB) first\n1: Left channel data is duplicated to right channel\nField <code>MONO</code> reader - Mono Mode\nField <code>MONO</code> writer - Mono Mode\nMono Mode\n2: Extend with Most Significant Bit\n0: Transfer Data Most Significant Bit (MSB) first (default …\n1: One DMA channel per data channel\n1: Extend with ones\n2: Receive one PDM data on each serial clock edge\nRegister <code>RXCTRL</code> reader\n0: Data is right adjusted in slot\n0: Data is right adjusted in word\n0: Receive\nRx Serializer Control\nField <code>RXLOOP</code> reader - Loop-back Test Mode\nField <code>RXLOOP</code> writer - Loop-back Test Mode\nField <code>SERMODE</code> reader - Serializer Mode\nField <code>SERMODE</code> writer - Serializer Mode\nSerializer Mode\n0: Single DMA channel\nField <code>SLOTADJ</code> reader - Data Slot Formatting Adjust\nField <code>SLOTADJ</code> writer - Data Slot Formatting Adjust\nData Slot Formatting Adjust\nField <code>SLOTDIS0</code> reader - Slot 0 Disabled for this Serializer\nField <code>SLOTDIS0</code> writer - Slot 0 Disabled for this Serializer\nField <code>SLOTDIS1</code> reader - Slot 1 Disabled for this Serializer\nField <code>SLOTDIS1</code> writer - Slot 1 Disabled for this Serializer\nField <code>SLOTDIS2</code> reader - Slot 2 Disabled for this Serializer\nField <code>SLOTDIS2</code> writer - Slot 2 Disabled for this Serializer\nField <code>SLOTDIS3</code> reader - Slot 3 Disabled for this Serializer\nField <code>SLOTDIS3</code> writer - Slot 3 Disabled for this Serializer\nField <code>SLOTDIS4</code> reader - Slot 4 Disabled for this Serializer\nField <code>SLOTDIS4</code> writer - Slot 4 Disabled for this Serializer\nField <code>SLOTDIS5</code> reader - Slot 5 Disabled for this Serializer\nField <code>SLOTDIS5</code> writer - Slot 5 Disabled for this Serializer\nField <code>SLOTDIS6</code> reader - Slot 6 Disabled for this Serializer\nField <code>SLOTDIS6</code> writer - Slot 6 Disabled for this Serializer\nField <code>SLOTDIS7</code> reader - Slot 7 Disabled for this Serializer\nField <code>SLOTDIS7</code> writer - Slot 7 Disabled for this Serializer\n0: Normal mode\nRegister <code>RXCTRL</code> writer\nField <code>WORDADJ</code> reader - Data Word Formatting Adjust\nField <code>WORDADJ</code> writer - Data Word Formatting Adjust\nData Word Formatting Adjust\n0: Extend with zeroes\n16 bits\n4: 16 bits\n16 bits compact stereo\n5: 16 bits compact stereo\n18 bits\n3: 18 bits\n20 bits\n2: 20 bits\n24 bits\n1: 24 bits\n32 bits\n0: 32 bits\n8 bits\n6: 8 bits\n8 bits compact stereo\n7: 8 bits compact stereo\nBit 15 - Data Formatting Bit Reverse\nBit 15 - Data Formatting Bit Reverse\nUse Clock Unit 0\nUse Clock Unit 1\nBit 5 - Clock Unit Selection\nBit 5 - Clock Unit Selection\nBits 8:10 - Data Word Size\nBits 8:10 - Data Word Size\nBit 25 - Single or Multiple DMA Channels\nBit 25 - Single or Multiple DMA Channels\nBits 13:14 - Data Formatting Bit Extension\nBits 13:14 - Data Formatting Bit Extension\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n16 bits\n16 bits compact stereo\n18 bits\n20 bits\n24 bits\n32 bits\n8 bits\n8 bits compact stereo\nUse Clock Unit 0\nUse Clock Unit 1\nData is left adjusted in slot\nData is left adjusted in word\nExtend with Least Significant Bit\nTransfer Data Least Significant Bit (LSB) first\nLeft channel data is duplicated to right channel\nExtend with Most Significant Bit\nTransfer Data Most Significant Bit (MSB) first (default …\nOne DMA channel per data channel\nExtend with ones\nReceive one PDM data on each serial clock edge\nData is right adjusted in slot\nData is right adjusted in word\nReceive\nSingle DMA channel\nNormal mode\nExtend with zeroes\nData is left adjusted in slot\nData is left adjusted in word\nExtend with Least Significant Bit\nTransfer Data Least Significant Bit (LSB) first\nBit 24 - Mono Mode\nBit 24 - Mono Mode\nLeft channel data is duplicated to right channel\nExtend with Most Significant Bit\nTransfer Data Most Significant Bit (MSB) first (default …\nOne DMA channel per data channel\nExtend with ones\nReceive one PDM data on each serial clock edge\nData is right adjusted in slot\nData is right adjusted in word\nReceive\nBit 26 - Loop-back Test Mode\nBit 26 - Loop-back Test Mode\nBits 0:1 - Serializer Mode\nBits 0:1 - Serializer Mode\nSingle DMA channel\nBit 7 - Data Slot Formatting Adjust\nBit 7 - Data Slot Formatting Adjust\nBit 16 - Slot 0 Disabled for this Serializer\nBit 16 - Slot 0 Disabled for this Serializer\nBit 17 - Slot 1 Disabled for this Serializer\nBit 17 - Slot 1 Disabled for this Serializer\nBit 18 - Slot 2 Disabled for this Serializer\nBit 18 - Slot 2 Disabled for this Serializer\nBit 19 - Slot 3 Disabled for this Serializer\nBit 19 - Slot 3 Disabled for this Serializer\nBit 20 - Slot 4 Disabled for this Serializer\nBit 20 - Slot 4 Disabled for this Serializer\nBit 21 - Slot 5 Disabled for this Serializer\nBit 21 - Slot 5 Disabled for this Serializer\nBit 22 - Slot 6 Disabled for this Serializer\nBit 22 - Slot 6 Disabled for this Serializer\nBit 23 - Slot 7 Disabled for this Serializer\nBit 23 - Slot 7 Disabled for this Serializer\nNormal mode\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBit 12 - Data Word Formatting Adjust\nBit 12 - Data Word Formatting Adjust\nExtend with zeroes\nField <code>DATA</code> reader - Sample Data\nRegister <code>RXDATA</code> reader\nRx Data\nBits 0:31 - Sample Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nField <code>CKEN0</code> reader - Clock Unit 0 Enable Synchronization …\nField <code>CKEN1</code> reader - Clock Unit 1 Enable Synchronization …\nField <code>ENABLE</code> reader - Enable Synchronization Status\nRegister <code>SYNCBUSY</code> reader\nField <code>RXDATA</code> reader - Rx Data Synchronization Status\nField <code>RXEN</code> reader - Rx Serializer Enable Synchronization …\nField <code>SWRST</code> reader - Software Reset Synchronization Status\nSynchronization Status\nField <code>TXDATA</code> reader - Tx Data Synchronization Status\nField <code>TXEN</code> reader - Tx Serializer Enable Synchronization …\nBit 2 - Clock Unit 0 Enable Synchronization Status\nBit 3 - Clock Unit 1 Enable Synchronization Status\nBit 1 - Enable Synchronization Status\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBit 9 - Rx Data Synchronization Status\nBit 5 - Rx Serializer Enable Synchronization Status\nBit 0 - Software Reset Synchronization Status\nBit 8 - Tx Data Synchronization Status\nBit 4 - Tx Serializer Enable Synchronization Status\nField <code>BITREV</code> reader - Data Formatting Bit Reverse\nField <code>BITREV</code> writer - Data Formatting Bit Reverse\nData Formatting Bit Reverse\nField <code>DATASIZE</code> reader - Data Word Size\nField <code>DATASIZE</code> writer - Data Word Size\nData Word Size\nField <code>DMA</code> reader - Single or Multiple DMA Channels\nField <code>DMA</code> writer - Single or Multiple DMA Channels\nSingle or Multiple DMA Channels\nField <code>EXTEND</code> reader - Data Formatting Bit Extension\nField <code>EXTEND</code> writer - Data Formatting Bit Extension\nData Formatting Bit Extension\n3: Output Default Value is high impedance\n1: Data is left adjusted in slot\n1: Data is left adjusted in word\n3: Extend with Least Significant Bit\n1: Transfer Data Least Significant Bit (LSB) first\n1: Left channel data is duplicated to right channel\nField <code>MONO</code> reader - Mono Mode\nField <code>MONO</code> writer - Mono Mode\nMono Mode\n2: Extend with Most Significant Bit\n0: Transfer Data Most Significant Bit (MSB) first (default …\n1: One DMA channel per data channel\n1: Output Default Value is 1\n1: Extend with ones\nRegister <code>TXCTRL</code> reader\n0: Data is right adjusted in slot\n0: Data is right adjusted in word\n1: Last data transmitted in case of underrun\n0: Single DMA channel\nField <code>SLOTADJ</code> reader - Data Slot Formatting Adjust\nField <code>SLOTADJ</code> writer - Data Slot Formatting Adjust\nData Slot Formatting Adjust\nField <code>SLOTDIS0</code> reader - Slot 0 Disabled for this Serializer\nField <code>SLOTDIS0</code> writer - Slot 0 Disabled for this Serializer\nField <code>SLOTDIS1</code> reader - Slot 1 Disabled for this Serializer\nField <code>SLOTDIS1</code> writer - Slot 1 Disabled for this Serializer\nField <code>SLOTDIS2</code> reader - Slot 2 Disabled for this Serializer\nField <code>SLOTDIS2</code> writer - Slot 2 Disabled for this Serializer\nField <code>SLOTDIS3</code> reader - Slot 3 Disabled for this Serializer\nField <code>SLOTDIS3</code> writer - Slot 3 Disabled for this Serializer\nField <code>SLOTDIS4</code> reader - Slot 4 Disabled for this Serializer\nField <code>SLOTDIS4</code> writer - Slot 4 Disabled for this Serializer\nField <code>SLOTDIS5</code> reader - Slot 5 Disabled for this Serializer\nField <code>SLOTDIS5</code> writer - Slot 5 Disabled for this Serializer\nField <code>SLOTDIS6</code> reader - Slot 6 Disabled for this Serializer\nField <code>SLOTDIS6</code> writer - Slot 6 Disabled for this Serializer\nField <code>SLOTDIS7</code> reader - Slot 7 Disabled for this Serializer\nField <code>SLOTDIS7</code> writer - Slot 7 Disabled for this Serializer\n0: Normal mode\nTx Serializer Control\nField <code>TXDEFAULT</code> reader - Line Default Line when Slot …\nField <code>TXDEFAULT</code> writer - Line Default Line when Slot …\nLine Default Line when Slot Disabled\nField <code>TXSAME</code> reader - Transmit Data when Underrun\nField <code>TXSAME</code> writer - Transmit Data when Underrun\nTransmit Data when Underrun\nRegister <code>TXCTRL</code> writer\nField <code>WORDADJ</code> reader - Data Word Formatting Adjust\nField <code>WORDADJ</code> writer - Data Word Formatting Adjust\nData Word Formatting Adjust\n0: Output Default Value is 0\n0: Zero data transmitted in case of underrun\n0: Extend with zeroes\n16 bits\n4: 16 bits\n16 bits compact stereo\n5: 16 bits compact stereo\n18 bits\n3: 18 bits\n20 bits\n2: 20 bits\n24 bits\n1: 24 bits\n32 bits\n0: 32 bits\n8 bits\n6: 8 bits\n8 bits compact stereo\n7: 8 bits compact stereo\nBit 15 - Data Formatting Bit Reverse\nBit 15 - Data Formatting Bit Reverse\nBits 8:10 - Data Word Size\nBits 8:10 - Data Word Size\nBit 25 - Single or Multiple DMA Channels\nBit 25 - Single or Multiple DMA Channels\nBits 13:14 - Data Formatting Bit Extension\nBits 13:14 - Data Formatting Bit Extension\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOutput Default Value is high impedance\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n16 bits\n16 bits compact stereo\n18 bits\n20 bits\n24 bits\n32 bits\n8 bits\n8 bits compact stereo\nOutput Default Value is high impedance\nData is left adjusted in slot\nData is left adjusted in word\nExtend with Least Significant Bit\nTransfer Data Least Significant Bit (LSB) first\nLeft channel data is duplicated to right channel\nExtend with Most Significant Bit\nTransfer Data Most Significant Bit (MSB) first (default …\nOne DMA channel per data channel\nOutput Default Value is 1\nExtend with ones\nData is right adjusted in slot\nData is right adjusted in word\nLast data transmitted in case of underrun\nSingle DMA channel\nNormal mode\nOutput Default Value is 0\nZero data transmitted in case of underrun\nExtend with zeroes\nData is left adjusted in slot\nData is left adjusted in word\nExtend with Least Significant Bit\nTransfer Data Least Significant Bit (LSB) first\nBit 24 - Mono Mode\nBit 24 - Mono Mode\nLeft channel data is duplicated to right channel\nExtend with Most Significant Bit\nTransfer Data Most Significant Bit (MSB) first (default …\nOne DMA channel per data channel\nOutput Default Value is 1\nExtend with ones\nData is right adjusted in slot\nData is right adjusted in word\nLast data transmitted in case of underrun\nSingle DMA channel\nBit 7 - Data Slot Formatting Adjust\nBit 7 - Data Slot Formatting Adjust\nBit 16 - Slot 0 Disabled for this Serializer\nBit 16 - Slot 0 Disabled for this Serializer\nBit 17 - Slot 1 Disabled for this Serializer\nBit 17 - Slot 1 Disabled for this Serializer\nBit 18 - Slot 2 Disabled for this Serializer\nBit 18 - Slot 2 Disabled for this Serializer\nBit 19 - Slot 3 Disabled for this Serializer\nBit 19 - Slot 3 Disabled for this Serializer\nBit 20 - Slot 4 Disabled for this Serializer\nBit 20 - Slot 4 Disabled for this Serializer\nBit 21 - Slot 5 Disabled for this Serializer\nBit 21 - Slot 5 Disabled for this Serializer\nBit 22 - Slot 6 Disabled for this Serializer\nBit 22 - Slot 6 Disabled for this Serializer\nBit 23 - Slot 7 Disabled for this Serializer\nBit 23 - Slot 7 Disabled for this Serializer\nNormal mode\nBits 2:3 - Line Default Line when Slot Disabled\nBits 2:3 - Line Default Line when Slot Disabled\nBit 4 - Transmit Data when Underrun\nBit 4 - Transmit Data when Underrun\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nGet enumerated values variant\nBit 12 - Data Word Formatting Adjust\nBit 12 - Data Word Formatting Adjust\nOutput Default Value is 0\nZero data transmitted in case of underrun\nExtend with zeroes\nField <code>DATA</code> writer - Sample Data\nTx Data\nRegister <code>TXDATA</code> writer\nBits 0:31 - Sample Data\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCFG (rw) register accessor: Configuration\nCTRL (w) register accessor: Control\nDSCR (rw) register accessor: Region Descriptor Area Start …\nHASH (rw) register accessor: Region Hash Area Start Address\nIDR (w) register accessor: Interrupt Disable\nIER (w) register accessor: Interrupt Enable\nIMR (r) register accessor: Interrupt Mask\nISR (r) register accessor: Interrupt Status\nRegister block\nSR (r) register accessor: Status\nUASR (r) register accessor: Undefined Access Status\nUIHVAL (w) register accessor: User Initial Hash Value n\nConfiguration\n0x00 - Configuration\nControl\n0x04 - Control\nRegion Descriptor Area Start Address\n0x30 - Region Descriptor Area Start Address\nReturns the argument unchanged.\nRegion Hash Area Start Address\n0x34 - Region Hash Area Start Address\nInterrupt Disable\n0x14 - Interrupt Disable\nInterrupt Enable\n0x10 - Interrupt Enable\nInterrupt Mask\n0x18 - Interrupt Mask\nCalls <code>U::from(self)</code>.\nInterrupt Status\n0x1c - Interrupt Status\nStatus\n0x08 - Status\nUndefined Access Status\n0x20 - Undefined Access Status\nUser Initial Hash Value n\n0x38..0x58 - User Initial Hash Value n\nIterator for array of: 0x38..0x58 - User Initial Hash …\nField <code>ASCD</code> reader - Automatic Switch To Compare Digest\nField <code>ASCD</code> writer - Automatic Switch To Compare Digest")