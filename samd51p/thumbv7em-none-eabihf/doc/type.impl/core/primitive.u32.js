(function() {
    var type_impls = Object.fromEntries([["atsamd_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Beat-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/dmac/transfer.rs.html#131-139\">Source</a><a href=\"#impl-Beat-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"atsamd_hal/dmac/transfer/trait.Beat.html\" title=\"trait atsamd_hal::dmac::transfer::Beat\">Beat</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u32.html\">u32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.BEATSIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/dmac/transfer.rs.html#131-139\">Source</a><a href=\"#associatedconstant.BEATSIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"atsamd_hal/dmac/transfer/trait.Beat.html#associatedconstant.BEATSIZE\" class=\"constant\">BEATSIZE</a>: <a class=\"enum\" href=\"atsamd_hal/dmac/transfer/enum.BeatSize.html\" title=\"enum atsamd_hal::dmac::transfer::BeatSize\">BeatSize</a> = BeatSize::Word</h4></section></summary><div class='docblock'>Convert to BeatSize enum</div></details></div></details>","Beat","atsamd_hal::sercom::spi::DataWidth","atsamd_hal::sercom::uart::DataReg","atsamd_hal::peripherals::pukcc::c_abi::u4","atsamd_hal::peripherals::pukcc::c_abi::pu1","atsamd_hal::peripherals::pukcc::c_abi::pfu1"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRoundRobinMask%3E-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/dmac/dma_controller.rs.html#84\">Source</a><a href=\"#impl-From%3CRoundRobinMask%3E-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"atsamd_hal/dmac/dma_controller/struct.RoundRobinMask.html\" title=\"struct atsamd_hal::dmac::dma_controller::RoundRobinMask\">RoundRobinMask</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u32.html\">u32</a><div class=\"where\">where\n    [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.array.html\">32</a>]: IsU32Compatible,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/dmac/dma_controller.rs.html#84\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(__bf_bitfield: <a class=\"struct\" href=\"atsamd_hal/dmac/dma_controller/struct.RoundRobinMask.html\" title=\"struct atsamd_hal::dmac::dma_controller::RoundRobinMask\">RoundRobinMask</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<RoundRobinMask>","atsamd_hal::sercom::spi::DataWidth","atsamd_hal::sercom::uart::DataReg","atsamd_hal::peripherals::pukcc::c_abi::u4","atsamd_hal::peripherals::pukcc::c_abi::pu1","atsamd_hal::peripherals::pukcc::c_abi::pfu1"],["<section id=\"impl-SmartEepromPointableSize-for-u32\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/peripherals/nvm/smart_eeprom.rs.html#208\">Source</a><a href=\"#impl-SmartEepromPointableSize-for-u32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"atsamd_hal/nvm/smart_eeprom/trait.SmartEepromPointableSize.html\" title=\"trait atsamd_hal::nvm::smart_eeprom::SmartEepromPointableSize\">SmartEepromPointableSize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u32.html\">u32</a></h3></section>","SmartEepromPointableSize","atsamd_hal::sercom::spi::DataWidth","atsamd_hal::sercom::uart::DataReg","atsamd_hal::peripherals::pukcc::c_abi::u4","atsamd_hal::peripherals::pukcc::c_abi::pu1","atsamd_hal::peripherals::pukcc::c_abi::pfu1"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[4291]}