(function() {
    var type_impls = Object.fromEntries([["atsamd_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CI2c%3CC,+D%3E%3E-for-I2cFuture%3CC,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#144-149\">Source</a><a href=\"#impl-AsMut%3CI2c%3CC,+D%3E%3E-for-I2cFuture%3CC,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"atsamd_hal/sercom/i2c/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::i2c::AnyConfig\">AnyConfig</a>, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2c.html\" title=\"struct atsamd_hal::sercom::i2c::I2c\">I2c</a>&lt;C, D&gt;&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2cFuture.html\" title=\"struct atsamd_hal::sercom::i2c::I2cFuture\">I2cFuture</a>&lt;C, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#146-148\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2c.html\" title=\"struct atsamd_hal::sercom::i2c::I2c\">I2c</a>&lt;C, D&gt;</h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<I2c<C, D>>","atsamd_hal::sercom::i2c::async_api::dma::I2cFutureDma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CI2c%3CC,+D%3E%3E-for-I2cFuture%3CC,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#137-142\">Source</a><a href=\"#impl-AsRef%3CI2c%3CC,+D%3E%3E-for-I2cFuture%3CC,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C: <a class=\"trait\" href=\"atsamd_hal/sercom/i2c/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::i2c::AnyConfig\">AnyConfig</a>, D&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2c.html\" title=\"struct atsamd_hal::sercom::i2c::I2c\">I2c</a>&lt;C, D&gt;&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2cFuture.html\" title=\"struct atsamd_hal::sercom::i2c::I2cFuture\">I2cFuture</a>&lt;C, D&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#139-141\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.85.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2c.html\" title=\"struct atsamd_hal::sercom::i2c::I2c\">I2c</a>&lt;C, D&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<I2c<C, D>>","atsamd_hal::sercom::i2c::async_api::dma::I2cFutureDma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ErrorType-for-I2cFuture%3CC,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#151-156\">Source</a><a href=\"#impl-ErrorType-for-I2cFuture%3CC,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D&gt; <a class=\"trait\" href=\"embedded_hal/i2c/trait.ErrorType.html\" title=\"trait embedded_hal::i2c::ErrorType\">ErrorType</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2cFuture.html\" title=\"struct atsamd_hal::sercom::i2c::I2cFuture\">I2cFuture</a>&lt;C, D&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/i2c/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::i2c::AnyConfig\">AnyConfig</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#155\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embedded_hal/i2c/trait.ErrorType.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"enum\" href=\"atsamd_hal/sercom/i2c/enum.Error.html\" title=\"enum atsamd_hal::sercom::i2c::Error\">Error</a></h4></section></summary><div class='docblock'>Error type</div></details></div></details>","ErrorType","atsamd_hal::sercom::i2c::async_api::dma::I2cFutureDma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-I2c-for-I2cFuture%3CC,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#393-542\">Source</a><a href=\"#impl-I2c-for-I2cFuture%3CC,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D&gt; <a class=\"trait\" href=\"embedded_hal_async/i2c/trait.I2c.html\" title=\"trait embedded_hal_async::i2c::I2c\">I2c</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2cFuture.html\" title=\"struct atsamd_hal::sercom::i2c::I2cFuture\">I2cFuture</a>&lt;C, D&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/i2c/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::i2c::AnyConfig\">AnyConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#399-401\">Source</a><a href=\"#method.read\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/i2c/trait.I2c.html#method.read\" class=\"fn\">read</a>(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>,\n    buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/i2c/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::i2c::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Reads enough bytes from slave with <code>address</code> to fill <code>buffer</code>. <a href=\"embedded_hal_async/i2c/trait.I2c.html#method.read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#404-406\">Source</a><a href=\"#method.write\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/i2c/trait.I2c.html#method.write\" class=\"fn\">write</a>(&amp;mut self, address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>, bytes: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/i2c/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::i2c::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes bytes to slave with address <code>address</code>. <a href=\"embedded_hal_async/i2c/trait.I2c.html#method.write\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#409-417\">Source</a><a href=\"#method.write_read\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/i2c/trait.I2c.html#method.write_read\" class=\"fn\">write_read</a>(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>,\n    wr_buffer: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>],\n    rd_buffer: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/i2c/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::i2c::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes bytes to slave with address <code>address</code> and then reads enough bytes to fill <code>read</code> <em>in a\nsingle transaction</em>. <a href=\"embedded_hal_async/i2c/trait.I2c.html#method.write_read\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.transaction\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#420-541\">Source</a><a href=\"#method.transaction\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"embedded_hal_async/i2c/trait.I2c.html#tymethod.transaction\" class=\"fn\">transaction</a>(\n    &amp;mut self,\n    address: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>,\n    operations: &amp;mut [<a class=\"enum\" href=\"embedded_hal/i2c/enum.Operation.html\" title=\"enum embedded_hal::i2c::Operation\">Operation</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, Self::<a class=\"associatedtype\" href=\"embedded_hal/i2c/trait.ErrorType.html#associatedtype.Error\" title=\"type embedded_hal::i2c::ErrorType::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Execute the provided operations on the I2C bus as a single transaction. <a href=\"embedded_hal_async/i2c/trait.I2c.html#tymethod.transaction\">Read more</a></div></details></div></details>","I2c","atsamd_hal::sercom::i2c::async_api::dma::I2cFutureDma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-I2cFuture%3CC,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#293-304\">Source</a><a href=\"#impl-I2cFuture%3CC,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, D&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2cFuture.html\" title=\"struct atsamd_hal::sercom::i2c::I2cFuture\">I2cFuture</a>&lt;C, D&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/i2c/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::i2c::AnyConfig\">AnyConfig</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_dma_channel\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#300-303\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/i2c/struct.I2cFuture.html#tymethod.take_dma_channel\" class=\"fn\">take_dma_channel</a>(self) -&gt; (<a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2cFuture.html\" title=\"struct atsamd_hal::sercom::i2c::I2cFuture\">I2cFuture</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/typelevel/struct.NoneT.html\" title=\"struct atsamd_hal::typelevel::NoneT\">NoneT</a>&gt;, D)</h4></section></summary><div class=\"docblock\"><p>Reclaim the DMA channel. Any subsequent I2C operations will no\nlonger use DMA.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::i2c::async_api::dma::I2cFutureDma"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-I2cFuture%3CC,+D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#306-391\">Source</a><a href=\"#impl-I2cFuture%3CC,+D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, S, D&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.I2cFuture.html\" title=\"struct atsamd_hal::sercom::i2c::I2cFuture\">I2cFuture</a>&lt;C, D&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/i2c/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::i2c::AnyConfig\">AnyConfig</a>&lt;Sercom = S&gt;,\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    D: <a class=\"trait\" href=\"atsamd_hal/dmac/channel/trait.AnyChannel.html\" title=\"trait atsamd_hal::dmac::channel::AnyChannel\">AnyChannel</a>&lt;Status = <a class=\"enum\" href=\"atsamd_hal/dmac/channel/enum.ReadyFuture.html\" title=\"enum atsamd_hal::dmac::channel::ReadyFuture\">ReadyFuture</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_read\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/async_api.rs.html#379-390\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"atsamd_hal/sercom/i2c/struct.I2cFuture.html#tymethod.write_read\" class=\"fn\">write_read</a>(\n    &amp;mut self,\n    addr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>,\n    write_buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>],\n    read_buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.85.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"atsamd_hal/sercom/i2c/enum.Error.html\" title=\"enum atsamd_hal::sercom::i2c::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Asynchronously write from a buffer, then read into a buffer, all\nusing DMA.</p>\n<p>This is an extremely common pattern: for example, writing a\nregister address, then read its value from the slave.</p>\n</div></details></div></details>",0,"atsamd_hal::sercom::i2c::async_api::dma::I2cFutureDma"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[16132]}