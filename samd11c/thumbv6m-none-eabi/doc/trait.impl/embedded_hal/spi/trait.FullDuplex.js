(function() {
    var implementors = Object.fromEntries([["atsamd_hal",[["impl&lt;C&gt; <a class=\"trait\" href=\"atsamd_hal/prelude/trait._embedded_hal_spi_FullDuplex.html\" title=\"trait atsamd_hal::prelude::_embedded_hal_spi_FullDuplex\">FullDuplex</a>&lt;&lt;C as <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html\" title=\"trait atsamd_hal::sercom::spi::AnyConfig\">AnyConfig</a>&gt;::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt; for <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Spi.html\" title=\"struct atsamd_hal::sercom::spi::Spi\">Spi</a>&lt;C, <a class=\"struct\" href=\"atsamd_hal/sercom/spi/struct.Duplex.html\" title=\"struct atsamd_hal::sercom::spi::Duplex\">Duplex</a>&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"atsamd_hal/sercom/spi/trait.ValidConfig.html\" title=\"trait atsamd_hal::sercom::spi::ValidConfig\">ValidConfig</a>,\n    C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>: <a class=\"trait\" href=\"num_traits/int/trait.PrimInt.html\" title=\"trait num_traits::int::PrimInt\">PrimInt</a> + <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u16.html\">u16</a>&gt;,\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.u16.html\">u16</a>: <a class=\"trait\" href=\"num_traits/cast/trait.AsPrimitive.html\" title=\"trait num_traits::cast::AsPrimitive\">AsPrimitive</a>&lt;C::<a class=\"associatedtype\" href=\"atsamd_hal/sercom/spi/trait.AnyConfig.html#associatedtype.Word\" title=\"type atsamd_hal::sercom::spi::AnyConfig::Word\">Word</a>&gt;,</div>"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[1905]}