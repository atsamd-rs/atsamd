(function() {
    var type_impls = Object.fromEntries([["atsamd_hal",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PadSet-for-Pads%3CS,+SDA,+SCL%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/pads_thumbv6m.rs.html#181-190\">Source</a><a href=\"#impl-PadSet-for-Pads%3CS,+SDA,+SCL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, SDA, SCL&gt; <a class=\"trait\" href=\"atsamd_hal/sercom/i2c/trait.PadSet.html\" title=\"trait atsamd_hal::sercom::i2c::PadSet\">PadSet</a> for <a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.Pads.html\" title=\"struct atsamd_hal::sercom::i2c::Pads\">Pads</a>&lt;S, SDA, SCL&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    SDA: <a class=\"trait\" href=\"atsamd_hal/sercom/pad/trait.IsI2cPad.html\" title=\"trait atsamd_hal::sercom::pad::IsI2cPad\">IsI2cPad</a>&lt;PadNum = <a class=\"enum\" href=\"atsamd_hal/sercom/pad/enum.Pad0.html\" title=\"enum atsamd_hal::sercom::pad::Pad0\">Pad0</a>, Sercom = S&gt;,\n    SCL: <a class=\"trait\" href=\"atsamd_hal/sercom/pad/trait.IsI2cPad.html\" title=\"trait atsamd_hal::sercom::pad::IsI2cPad\">IsI2cPad</a>&lt;PadNum = <a class=\"enum\" href=\"atsamd_hal/sercom/pad/enum.Pad1.html\" title=\"enum atsamd_hal::sercom::pad::Pad1\">Pad1</a>, Sercom = S&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Sercom\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/pads_thumbv6m.rs.html#187\">Source</a><a href=\"#associatedtype.Sercom\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/sercom/i2c/trait.PadSet.html#associatedtype.Sercom\" class=\"associatedtype\">Sercom</a> = S</h4></section><section id=\"associatedtype.Sda\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/pads_thumbv6m.rs.html#188\">Source</a><a href=\"#associatedtype.Sda\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/sercom/i2c/trait.PadSet.html#associatedtype.Sda\" class=\"associatedtype\">Sda</a> = SDA</h4></section><section id=\"associatedtype.Scl\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/pads_thumbv6m.rs.html#189\">Source</a><a href=\"#associatedtype.Scl\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"atsamd_hal/sercom/i2c/trait.PadSet.html#associatedtype.Scl\" class=\"associatedtype\">Scl</a> = SCL</h4></section></div></details>","PadSet","atsamd_hal::sercom::i2c::pads::PadsFromIds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pads%3CS,+SDA,+SCL%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/pads_thumbv6m.rs.html#68-80\">Source</a><a href=\"#impl-Pads%3CS,+SDA,+SCL%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;S, SDA, SCL&gt; <a class=\"struct\" href=\"atsamd_hal/sercom/i2c/struct.Pads.html\" title=\"struct atsamd_hal::sercom::i2c::Pads\">Pads</a>&lt;S, SDA, SCL&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"atsamd_hal/sercom/trait.Sercom.html\" title=\"trait atsamd_hal::sercom::Sercom\">Sercom</a>,\n    SDA: <a class=\"trait\" href=\"atsamd_hal/sercom/pad/trait.IsI2cPad.html\" title=\"trait atsamd_hal::sercom::pad::IsI2cPad\">IsI2cPad</a>&lt;PadNum = <a class=\"enum\" href=\"atsamd_hal/sercom/pad/enum.Pad0.html\" title=\"enum atsamd_hal::sercom::pad::Pad0\">Pad0</a>, Sercom = S&gt;,\n    SCL: <a class=\"trait\" href=\"atsamd_hal/sercom/pad/trait.IsI2cPad.html\" title=\"trait atsamd_hal::sercom::pad::IsI2cPad\">IsI2cPad</a>&lt;PadNum = <a class=\"enum\" href=\"atsamd_hal/sercom/pad/enum.Pad1.html\" title=\"enum atsamd_hal::sercom::pad::Pad1\">Pad1</a>, Sercom = S&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.free\" class=\"method\"><a class=\"src rightside\" href=\"src/atsamd_hal/sercom/i2c/pads_thumbv6m.rs.html#77-79\">Source</a><h4 class=\"code-header\">pub fn <a href=\"atsamd_hal/sercom/i2c/struct.Pads.html#tymethod.free\" class=\"fn\">free</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.tuple.html\">(SDA, SCL)</a></h4></section></summary><div class=\"docblock\"><p>Consume the <a href=\"atsamd_hal/sercom/i2c/struct.Pads.html\" title=\"struct atsamd_hal::sercom::i2c::Pads\"><code>Pads</code></a> and return each individual\n<a href=\"atsamd_hal/gpio/pin/struct.Pin.html\" title=\"struct atsamd_hal::gpio::pin::Pin\"><code>Pin</code></a></p>\n</div></details></div></details>",0,"atsamd_hal::sercom::i2c::pads::PadsFromIds"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[4769]}