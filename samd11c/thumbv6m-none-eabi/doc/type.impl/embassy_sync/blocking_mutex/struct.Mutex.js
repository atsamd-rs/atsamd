(function() {
    var type_impls = Object.fromEntries([["embassy_sync",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mutex%3CCriticalSectionRawMutex,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#97-103\">Source</a><a href=\"#impl-Mutex%3CCriticalSectionRawMutex,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"embassy_sync/blocking_mutex/struct.Mutex.html\" title=\"struct embassy_sync::blocking_mutex::Mutex\">Mutex</a>&lt;<a class=\"struct\" href=\"embassy_sync/blocking_mutex/raw/struct.CriticalSectionRawMutex.html\" title=\"struct embassy_sync::blocking_mutex::raw::CriticalSectionRawMutex\">CriticalSectionRawMutex</a>, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#99-102\">Source</a><h4 class=\"code-header\">pub fn <a href=\"embassy_sync/blocking_mutex/struct.Mutex.html#tymethod.borrow\" class=\"fn\">borrow</a>&lt;'cs&gt;(&amp;'cs self, _cs: <a class=\"struct\" href=\"critical_section/struct.CriticalSection.html\" title=\"struct critical_section::CriticalSection\">CriticalSection</a>&lt;'cs&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.reference.html\">&amp;'cs T</a></h4></section></summary><div class=\"docblock\"><p>Borrows the data for the duration of the critical section</p>\n</div></details></div></details>",0,"embassy_sync::blocking_mutex::CriticalSectionMutex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mutex%3CNoopRawMutex,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#105-112\">Source</a><a href=\"#impl-Mutex%3CNoopRawMutex,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"embassy_sync/blocking_mutex/struct.Mutex.html\" title=\"struct embassy_sync::blocking_mutex::Mutex\">Mutex</a>&lt;<a class=\"struct\" href=\"embassy_sync/blocking_mutex/raw/struct.NoopRawMutex.html\" title=\"struct embassy_sync::blocking_mutex::raw::NoopRawMutex\">NoopRawMutex</a>, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#108-111\">Source</a><h4 class=\"code-header\">pub fn <a href=\"embassy_sync/blocking_mutex/struct.Mutex.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Borrows the data</p>\n</div></details></div></details>",0,"embassy_sync::blocking_mutex::NoopMutex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mutex%3CR,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#35-53\">Source</a><a href=\"#impl-Mutex%3CR,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a>, T&gt; <a class=\"struct\" href=\"embassy_sync/blocking_mutex/struct.Mutex.html\" title=\"struct embassy_sync::blocking_mutex::Mutex\">Mutex</a>&lt;R, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#38-43\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"embassy_sync/blocking_mutex/struct.Mutex.html#tymethod.new\" class=\"fn\">new</a>(val: T) -&gt; <a class=\"struct\" href=\"embassy_sync/blocking_mutex/struct.Mutex.html\" title=\"struct embassy_sync::blocking_mutex::Mutex\">Mutex</a>&lt;R, T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new mutex in an unlocked state ready for use.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lock\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#46-52\">Source</a><h4 class=\"code-header\">pub fn <a href=\"embassy_sync/blocking_mutex/struct.Mutex.html#tymethod.lock\" class=\"fn\">lock</a>&lt;U&gt;(&amp;self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.reference.html\">&amp;T</a>) -&gt; U) -&gt; U</h4></section></summary><div class=\"docblock\"><p>Creates a critical section and grants temporary access to the protected data.</p>\n</div></details></div></details>",0,"embassy_sync::blocking_mutex::CriticalSectionMutex","embassy_sync::blocking_mutex::NoopMutex"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mutex%3CR,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#55-81\">Source</a><a href=\"#impl-Mutex%3CR,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R, T&gt; <a class=\"struct\" href=\"embassy_sync/blocking_mutex/struct.Mutex.html\" title=\"struct embassy_sync::blocking_mutex::Mutex\">Mutex</a>&lt;R, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_new\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#60-65\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"embassy_sync/blocking_mutex/struct.Mutex.html#tymethod.const_new\" class=\"fn\">const_new</a>(raw_mutex: R, val: T) -&gt; <a class=\"struct\" href=\"embassy_sync/blocking_mutex/struct.Mutex.html\" title=\"struct embassy_sync::blocking_mutex::Mutex\">Mutex</a>&lt;R, T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new mutex based on a pre-existing raw mutex.</p>\n<p>This allows creating a mutex in a constant context on stable Rust.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#69-71\">Source</a><h4 class=\"code-header\">pub fn <a href=\"embassy_sync/blocking_mutex/struct.Mutex.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Consumes this mutex, returning the underlying data.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#78-80\">Source</a><h4 class=\"code-header\">pub fn <a href=\"embassy_sync/blocking_mutex/struct.Mutex.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.85.0/core/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the underlying data.</p>\n<p>Since this call borrows the <code>Mutex</code> mutably, no actual locking needs to\ntake place—the mutable borrow statically guarantees no locks exist.</p>\n</div></details></div></details>",0,"embassy_sync::blocking_mutex::CriticalSectionMutex","embassy_sync::blocking_mutex::NoopMutex"],["<section id=\"impl-Send-for-Mutex%3CR,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#32\">Source</a><a href=\"#impl-Send-for-Mutex%3CR,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"embassy_sync/blocking_mutex/struct.Mutex.html\" title=\"struct embassy_sync::blocking_mutex::Mutex\">Mutex</a>&lt;R, T&gt;</h3></section>","Send","embassy_sync::blocking_mutex::CriticalSectionMutex","embassy_sync::blocking_mutex::NoopMutex"],["<section id=\"impl-Sync-for-Mutex%3CR,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_sync/blocking_mutex/mod.rs.html#33\">Source</a><a href=\"#impl-Sync-for-Mutex%3CR,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R: <a class=\"trait\" href=\"embassy_sync/blocking_mutex/raw/trait.RawMutex.html\" title=\"trait embassy_sync::blocking_mutex::raw::RawMutex\">RawMutex</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>, T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.85.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"embassy_sync/blocking_mutex/struct.Mutex.html\" title=\"struct embassy_sync::blocking_mutex::Mutex\">Mutex</a>&lt;R, T&gt;</h3></section>","Sync","embassy_sync::blocking_mutex::CriticalSectionMutex","embassy_sync::blocking_mutex::NoopMutex"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10122]}